[
{"content":{"body":"TabAtkins: throwing and calling reject aren't exactly the same -- particularly not in that scenario","msgtype":"m.text"},"ts":1366853151000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"the error happens at a different time","msgtype":"m.text"},"ts":1366853157000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"the difference is in whether or not the future is actually invoked (via then/done)","msgtype":"m.text"},"ts":1366853326000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"try { var future = foo(); } catch(ex) {}","msgtype":"m.text"},"ts":1366853348000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"vs.","msgtype":"m.text"},"ts":1366853349000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"try {var future = foo(); future.then(a, b);} catch(ex) {}","msgtype":"m.text"},"ts":1366853363000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"the idl test harness is looking for the future to happen when foo() is called, not when .then() is called.","msgtype":"m.text"},"ts":1366853382000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"(via the rejection callback passed to .then)","msgtype":"m.text"},"ts":1366853396000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"s/for the future/for the error","msgtype":"m.text"},"ts":1366853420000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"TabAtkins, added stub spec for registry entry for rel=discussion: http://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions","msgtype":"m.text"},"ts":1366862467000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"where do I go to find out whether or not JS's handling of Unicode is going to get better?","msgtype":"m.text"},"ts":1366864890000,"senderName":"rcombs","senderId":"rcombs@irc"},
{"content":{"body":"also, regexes","msgtype":"m.text"},"ts":1366864972000,"senderName":"rcombs","senderId":"rcombs@irc"},
{"content":{"body":"also, proper Unicode handling _in_ regexes","msgtype":"m.text"},"ts":1366864981000,"senderName":"rcombs","senderId":"rcombs@irc"},
{"content":{"body":"should specs reference CSS specs on dvcs.w3.org or dev.w3.org?","msgtype":"m.text"},"ts":1366875111000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, dev.","msgtype":"m.text"},"ts":1366880787000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ok. do you know why?","msgtype":"m.text"},"ts":1366880833000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don't remember","msgtype":"m.text"},"ts":1366880903000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Everyone loves CVS?","msgtype":"m.text"},"ts":1366880915000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"dev. just mirrors dvcs. for CSS, fwiw","msgtype":"m.text"},"ts":1366880999000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: you could just make it conditional on the URL having a path in the first place","msgtype":"m.text"},"ts":1366881695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: data URLs for instance will only have \"scheme data\"","msgtype":"m.text"},"ts":1366881713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so either the first n segments match, or they don't, or there are no segments to begin with","msgtype":"m.text"},"ts":1366881749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Hixie: also, on a more general point, URL hasn't received much review yet so I first want to know if all the concepts are correct before adding makeup and such","msgtype":"m.text"},"ts":1366881853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it seems you're no longer updating the xref database with CSSOM references?","msgtype":"m.text"},"ts":1366885885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: for some reason the links to getClientRects() and such from DOM went dead :(","msgtype":"m.text"},"ts":1366885903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: glenn forked it. i tried to switch back to xref but something didn't work right and then i gave up","msgtype":"m.text"},"ts":1366885966000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: Is http://example.com/foo//bar the same URL as http://example.com/foo/bar ?","msgtype":"m.text"},"ts":1366886427000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: no","msgtype":"m.text"},"ts":1366886442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so servers that consider them the same decide that on their own","msgtype":"m.text"},"ts":1366886486000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"if that makes sense","msgtype":"m.text"},"ts":1366886497000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Right. A server could equally decide foobar and /fo/b/a/r are the same. :)","msgtype":"m.text"},"ts":1366886522000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or foo/bar and foo/bar/ :)","msgtype":"m.text"},"ts":1366886547000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so, on my TODO list: detailed review of selectors4’s :local-link and :local-link(2)","msgtype":"m.text"},"ts":1366886586000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I think it’s doing weird normalization","msgtype":"m.text"},"ts":1366886610000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yeah, just like servers treating / and /index.html identically sometimes","msgtype":"m.text"},"ts":1366886636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"indeed, that too","msgtype":"m.text"},"ts":1366886652000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: more happenstance than actual architecture","msgtype":"m.text"},"ts":1366886659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(well, it's related to the architecture of the server, but not that of URLs)","msgtype":"m.text"},"ts":1366886685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or and /randomweirdindexpage","msgtype":"m.text"},"ts":1366886739000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":" /Overview.html ;)","msgtype":"m.text"},"ts":1366886752000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I recommend making :local-link map directly to the working of URLs","msgtype":"m.text"},"ts":1366886826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So if you’re on /foo#bar, clicking on href=\"/foo#baz\" only scrolls, but href=\"/foo/#baz\" triggers a navigation/page load, right?","msgtype":"m.text"},"ts":1366886829000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and not any kind of server architecture","msgtype":"m.text"},"ts":1366886836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: Yes.","msgtype":"m.text"},"ts":1366886845000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: agreed","msgtype":"m.text"},"ts":1366886851000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"basically you want to use a parsed URL's path array I reckon","msgtype":"m.text"},"ts":1366886872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right now :local-link(1) matches both, but I think it should only match the former","msgtype":"m.text"},"ts":1366886877000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"what does 1 mean?","msgtype":"m.text"},"ts":1366886892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"means 1 leading path segments","msgtype":"m.text"},"ts":1366886910000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"so 0 would match data URLs and such?","msgtype":"m.text"},"ts":1366886937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that’s what it does, but with additional steps like remove a trailing empty path segment, ie. a trailing slash","msgtype":"m.text"},"ts":1366886940000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1366886947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds more like :apache-local-link","msgtype":"m.text"},"ts":1366886979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I’ll send a review on www-style","msgtype":"m.text"},"ts":1366887003000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I think a functional :local-link() never matches data: and such URLs","msgtype":"m.text"},"ts":1366887020000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(that’s why Tab was asking about relative schemes)","msgtype":"m.text"},"ts":1366887035000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"well every URL will have at least one path segment","msgtype":"m.text"},"ts":1366887134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"except if it's a data URL and such","msgtype":"m.text"},"ts":1366887143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so your idea would be that :local-link(0) matches nothing?","msgtype":"m.text"},"ts":1366887161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that’s what I’m reading in the draft","msgtype":"m.text"},"ts":1366887190000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"not sure what it *should* do","msgtype":"m.text"},"ts":1366887197000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":":local-link(0) basically means \"same domain name\". (Not sure if eg. the scheme should be considered or is in the draft)","msgtype":"m.text"},"ts":1366887273000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"it says to ignore scheme / username / password / port / query string  / fragment","msgtype":"m.text"},"ts":1366887391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure it should","msgtype":"m.text"},"ts":1366887413000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"that seems kinda flawed","msgtype":"m.text"},"ts":1366887415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think we should define some kind of URL comparison API and CSS should hook into that","msgtype":"m.text"},"ts":1366887461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this kind of adhoc approach works, but is not great","msgtype":"m.text"},"ts":1366887470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should it be considered \"local\" to go from HTTP to HTTPS on the same domain?","msgtype":"m.text"},"ts":1366887471000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yes, if Selectors can just refer to URL for this that would be great","msgtype":"m.text"},"ts":1366887498000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"well you'd still need to define some kind of CSS syntax","msgtype":"m.text"},"ts":1366887510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1366887514000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"for the comparison I mean","msgtype":"m.text"},"ts":1366887523000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I think Selectors 4 is doing ad-hoc comparison because there was not enough in URL to refer to","msgtype":"m.text"},"ts":1366887544000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"given that everything on the web is origin-scoped I don't think ignoring scheme/port is a good idea","msgtype":"m.text"},"ts":1366887557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"treating origin as a single entity is a much better approach","msgtype":"m.text"},"ts":1366887567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah maybe","msgtype":"m.text"},"ts":1366887594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nobody emailed me their requirements for URL comparison though despite repeated requests :/","msgtype":"m.text"},"ts":1366887608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay, lets look around the web and see what people are doing","msgtype":"m.text"},"ts":1366887658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So far WeasyPrint only needs to tell apart local/internal links from external ones","msgtype":"m.text"},"ts":1366887773000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"with corner cases like href=\"#foo\" without a base URL (eg. parsing an HTML string from memory)","msgtype":"m.text"},"ts":1366887814000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: I emailed www-style/public-webapps with some thoughts","msgtype":"m.text"},"ts":1366889537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: DOMStringList is to be replaced with DOMString[] still, right? What about StyleSheetList, CSSRuleList, MediaList? https://www.w3.org/Bugs/Public/show_bug.cgi?id=16111","msgtype":"m.text"},"ts":1366892566000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"haven't really thought about that lately","msgtype":"m.text"},"ts":1366893698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we need some kind of generic list solution but we don't","msgtype":"m.text"},"ts":1366893710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe we should make annevk implement webidl arrays in Gecko...","msgtype":"m.text"},"ts":1366894150000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: so I'm not sure IDL arrays are the right solution here","msgtype":"m.text"},"ts":1366894326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not a big fan of IDL arrays. I think JavaScript basically needs some new Array types...","msgtype":"m.text"},"ts":1366894520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm hoping JSIDL will magically fix it","msgtype":"m.text"},"ts":1366895460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ehehehehe","msgtype":"m.text"},"ts":1366895521000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I know I know","msgtype":"m.text"},"ts":1366895561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll believe it when I see it","msgtype":"m.text"},"ts":1366895624000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-style/2013Apr/0592.html my @opera.com email is still going strong it seems","msgtype":"m.text"},"ts":1366896647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"^_^ Good times","msgtype":"m.text"},"ts":1366897052000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I reckon /dev/null always has good times","msgtype":"m.text"},"ts":1366897114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: still going strong as in you’re still getting mail addressed to it, or as in people are still using it?","msgtype":"m.text"},"ts":1366897183000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: The /dev/null comment should indicate to you where those mails go ;-)","msgtype":"m.text"},"ts":1366897213000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"So I vote for #2","msgtype":"m.text"},"ts":1366897222000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1366897225000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"http://five-gt-two.spreadshirt.com/ is still alive","msgtype":"m.text"},"ts":1366897351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I learned today that the W3C at one point considered RAND licensing: http://www.w3.org/TR/2001/WD-patent-policy-20010816/ (authors include Microsoft, HP, Philips, and Apple)","msgtype":"m.text"},"ts":1366898817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Glad that went nowehre","msgtype":"m.text"},"ts":1366898820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nowhere*","msgtype":"m.text"},"ts":1366898824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - it used to be a per WG choice (RAND vs RF)","msgtype":"m.text"},"ts":1366898935000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"as in, defined in the WG charter","msgtype":"m.text"},"ts":1366898945000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"oh wow","msgtype":"m.text"},"ts":1366898951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was quite a fight to get RF across the org","msgtype":"m.text"},"ts":1366898967000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"what are RAND and RF?","msgtype":"m.text"},"ts":1366898999000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"\"reasonable and non-discriminatory terms\" for RAND","msgtype":"m.text"},"ts":1366899034000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"royalty-free for rf","msgtype":"m.text"},"ts":1366899040000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Both licensing terms for patents","msgtype":"m.text"},"ts":1366899049000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That needs more scare quotes","msgtype":"m.text"},"ts":1366899230000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"reasonable\"","msgtype":"m.text"},"ts":1366899236000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"'reasonable' 'and' 'non-discriminatory' 'terms'\"","msgtype":"m.text"},"ts":1366899338000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"More? :)","msgtype":"m.text"},"ts":1366899348000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1366899394000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"(man, the above convo on RAND/RF licensing suddenly made me feel very, very old)","msgtype":"m.text"},"ts":1366905988000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1366906000000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"cwilso__: yeah","msgtype":"m.text"},"ts":1366906017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not trying to be obtuse on fingerprinting re: MIDI API; I don't understand how it enables reviving cookies any more than other available info","msgtype":"m.text"},"ts":1366906132000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"(Note that I was originally against having an ID, because you can't guarantee across sessions, necessarily)","msgtype":"m.text"},"ts":1366906169000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"so Gamepad only exposes the vendor string","msgtype":"m.text"},"ts":1366906203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1366906213000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"MediaStream seems to be doing something else","msgtype":"m.text"},"ts":1366906218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you guys are doing something else","msgtype":"m.text"},"ts":1366906224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"um, Gamepad has a DOMString id.","msgtype":"m.text"},"ts":1366906234000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"and nobody seems to think it's a problem","msgtype":"m.text"},"ts":1366906236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cwilso__: did you read the description?","msgtype":"m.text"},"ts":1366906243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(which is way too vague, imo)","msgtype":"m.text"},"ts":1366906254000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure - typically USB vendor and product id.","msgtype":"m.text"},"ts":1366906259000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"The point of the ID in MIDI is simply so you can find the same one next time.","msgtype":"m.text"},"ts":1366906274000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"E.g. in my prollyfill it just appends index, manufacturer and name (should really hash, left it for debugging)","msgtype":"m.text"},"ts":1366906309000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"oh you think it's not an actual string for Gamepad? hmm","msgtype":"m.text"},"ts":1366906397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I initially was against ID because I said you could look up from index, name and manufacturer.  If there's significant risk added, I'd probably just drop ID again, because an ID that gets regenerated \"randomly\" is going to be confusing (\"I cleared my cookies, so of course my sequencer forgot its config\" is not going to occur to an end user)","msgtype":"m.text"},"ts":1366906410000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"what's index?","msgtype":"m.text"},"ts":1366906480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know what Gamepad has in practice in implementations; the spec implies it's an identifier for THAT gamepad, and would persist - but you're completely right that it does not state uniqueness (e.g. if you have two of the same gamepad, are the IDs identical?)","msgtype":"m.text"},"ts":1366906497000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"index = position in the inputs or outputs list.  like position in the getGamepads() [].","msgtype":"m.text"},"ts":1366906530000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"could that not change over time?","msgtype":"m.text"},"ts":1366906556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, if we're going to hook all these devices up that's great, but we should have a somewhat consistent story for them.","msgtype":"m.text"},"ts":1366906632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, of course.  If you unplugged a device, e.g..  There's no cross-OS unique identifier that's the same.  CoreMIDI has persistent IDs, IIRC, and it turns out that the Windows MIDI HMIDI handles are persistent, but they're not the same, and I don't think there's a consistent ID coming straight from USB-MIDI.","msgtype":"m.text"},"ts":1366906668000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"cwilso__: so you wouldn't want to generate the ID based on index then","msgtype":"m.text"},"ts":1366906684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd +1 that.  Gamepad pretty much just relies on index, really.","msgtype":"m.text"},"ts":1366906692000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"My initial take on Web MIDI was that it should, too, and could additionally look up based on product name.","msgtype":"m.text"},"ts":1366906724000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"Per your configuration example. It sounds like this is something that ought to be defined in detail. So you don't lock users to a single browser.","msgtype":"m.text"},"ts":1366906889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. given some hardware, irrespective of the browser you'll get the same ID for it.","msgtype":"m.text"},"ts":1366906921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MediaStreams apparently generate a GUID; not clear how persistent it would be.","msgtype":"m.text"},"ts":1366906961000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"Well, yes - although if you move the hardware to a different machine you might not.","msgtype":"m.text"},"ts":1366906984000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"Yeah, web security seems like lalaland for most people... Push notification proposal does not even mention the word \"origin\".","msgtype":"m.text"},"ts":1366907001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think OSX and Windows both keep track of devices they've seen before.","msgtype":"m.text"},"ts":1366907020000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"E.g. if you plug in A, B and C in that order...","msgtype":"m.text"},"ts":1366907032000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"then remove B","msgtype":"m.text"},"ts":1366907035000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"Glenn Adams only came for the beer?","msgtype":"m.text"},"ts":1366907058000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Obviously you'll get [A,C].  If you plug B back in, you'll get [A,B,C].","msgtype":"m.text"},"ts":1366907065000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"If you'd never plugged B in at all, you'd get [A,C,B]","msgtype":"m.text"},"ts":1366907084000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"But is there some way to know that B is not A? Assuming neither has been plugged in and I plug in one at random?","msgtype":"m.text"},"ts":1366907144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think this system would err on the side of messing up the config sometimes, actually.  :)  Or needing to re-lookup.","msgtype":"m.text"},"ts":1366907156000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"If they're all the same type of device (I mean, they're identical devices - the same make/model of keyboard, say), no, I don't think so, not across all systems anyway.","msgtype":"m.text"},"ts":1366907215000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"It's not really even a globally unique ID, just a \"globally at this time\" ID.","msgtype":"m.text"},"ts":1366907266000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"that's not a universal statement, you realize - you can figure out how to do that, by using the handles in Windows and the identifiers under the covers in OSX.","msgtype":"m.text"},"ts":1366907301000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"Ooh, XHR/PE discussion","msgtype":"m.text"},"ts":1366907317000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I presume it's based on the USB serial number (but that's not exposed, of course, as MIDI devices can be non-usb)","msgtype":"m.text"},"ts":1366907358000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"Ms2ger: hmm?","msgtype":"m.text"},"ts":1366907380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"back in 5, need coffee","msgtype":"m.emote"},"ts":1366907386000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"WebApps F2F","msgtype":"m.text"},"ts":1366907389000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"cwilso__: anyway, it'd be good if this was coordinated across everyone introducing access to devices","msgtype":"m.text"},"ts":1366907400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cwilso__: I guess I don't really have strong opinions on the specifics, other than that privacy/fingerprinting and whether any of it needs origin-scoping or not is looked into and is called out in some way in the specification","msgtype":"m.text"},"ts":1366907433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cwilso__: well, and if use cases like persisting a configuration survive, it would be great if we could make that cross-browser","msgtype":"m.text"},"ts":1366907456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders where sicking got lost","msgtype":"m.emote"},"ts":1366907548000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Present+ Ms2ger, really? :-)","msgtype":"m.text"},"ts":1366907548000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wait http://www.w3.org/2013/04/25-webapps-minutes.html nobody from Apple or Google?","msgtype":"m.text"},"ts":1366907692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Some guy said he was from Google","msgtype":"m.text"},"ts":1366907723000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is here","msgtype":"m.emote"},"ts":1366907747000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"is here","msgtype":"m.emote"},"ts":1366907755000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is here","msgtype":"m.emote"},"ts":1366907773000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is here","msgtype":"m.emote"},"ts":1366907785000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"is back","msgtype":"m.emote"},"ts":1366907799000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"(i meant, i'm at the webapps f2f, though I'm not listed. grr)","msgtype":"m.text"},"ts":1366907799000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Is this our \"I'm Spartacus!\"?","msgtype":"m.text"},"ts":1366907808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aw, cwilso__ did a combo-breaker","msgtype":"m.text"},"ts":1366907818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hober: but you're at every standards meeting :p","msgtype":"m.text"},"ts":1366907850000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hober, good way to avoid actual work? :)","msgtype":"m.text"},"ts":1366907875000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"C-C-C-C-C-C-COMBO BREAKER!!","msgtype":"m.text"},"ts":1366907900000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"annevk: yeah.  The privacy/fingerprinting stuff is gone into in some detail in Web MIDI, but could certainly be expanded.  Keeping sync of config across engines is a goal, although hard; will help when another engine gets interested enough to discuss implementation concerns.  :)","msgtype":"m.text"},"ts":1366907968000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"Sounds like the Google-Mozilla bus arrived","msgtype":"m.text"},"ts":1366908008000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Except that I'm 697miles from the main campus (until June), yeah.  :)","msgtype":"m.text"},"ts":1366908078000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"sicking, tut tut, you should be on time","msgtype":"m.text"},"ts":1366908111000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: not at all of them, fortunately, but yeah, most of them","msgtype":"m.text"},"ts":1366908132000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"ms2ger: oh, duh, you mean at the ftf","msgtype":"m.text"},"ts":1366908203000,"senderName":"cwilso__","senderId":"cwilso__@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1366908214000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"SimonSapin: In :local-link, we only normalize by dropping the hash.  In :local-link(n), we normalize by dropping the scheme, hash, query, and userdata, and if the final path segment is empty, drop it too.","msgtype":"m.text"},"ts":1366908795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(So \"example.com\" and \"example.com/\" are the same.)","msgtype":"m.text"},"ts":1366908808000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That last one is technically not valid, but in practive it's fine, and I think if we didn't do it, it would make the feature much less useful.","msgtype":"m.text"},"ts":1366908831000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Yes, we want to make :local-link work on URLs.  It can't rely on server structure anyway. ^_^","msgtype":"m.text"},"ts":1366908870000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"example.org already has / via the parser","msgtype":"m.text"},"ts":1366908917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: :local-link(n) never matches \"opaque\" urls, like data:.  :local-link(0) matches when the domains match, :local-link(1) matches when the domains and first path segment match, etc.","msgtype":"m.text"},"ts":1366908924000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the problem is treating example.org/foo and example.org/foo/ the same","msgtype":"m.text"},"ts":1366908929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: If you defined a URL comparison API, we'd gladly hook it.","msgtype":"m.text"},"ts":1366908940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"see my email","msgtype":"m.text"},"ts":1366908960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was wondering why you were doing certain things, seems one part of it was a misunderstanding","msgtype":"m.text"},"ts":1366908992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dropping scheme/port also seems wrong","msgtype":"m.text"},"ts":1366909064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Just tell us what's right (on the list), and we'll change.  The current text is a result of fantasai or I deciding what seemed \"reasonable\".","msgtype":"m.text"},"ts":1366909112000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: k, I'd be interested in knowing whether you'd want query comparison stuff and such as well","msgtype":"m.text"},"ts":1366909155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: did you guys collect much feedback from developers?","msgtype":"m.text"},"ts":1366909162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For the unparametrized, probably want query comparison so we can tell what the \"same page\" is.  For the parametrized, definitely want queries stripped.","msgtype":"m.text"},"ts":1366909212000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Dunno what feedback we may have explicitly collected, but there's been requests for some time for more url-matching pseudoclasses.","msgtype":"m.text"},"ts":1366909236000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"People wanting \"local\" links to be selectable, for some definition of \"local\".","msgtype":"m.text"},"ts":1366909248000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The parametrized one lets you define \"local\" relative to your personal url scheme - in github's case, :local-link(1) means \"same user\", :local-link(2) means \"same repo\", etc.","msgtype":"m.text"},"ts":1366909280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: http://example.com and http://example.com/ are parsed the same, while /foo and /foo/ should be different","msgtype":"m.text"},"ts":1366909290000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: For most sites that's not true, though. :/","msgtype":"m.text"},"ts":1366909310000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, that’s an apache thing","msgtype":"m.text"},"ts":1366909325000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"clicking on the link will still navigate rather than just scroll","msgtype":"m.text"},"ts":1366909335000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: but at that point you're embedding server semantics into the comparison","msgtype":"m.text"},"ts":1366909341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, hm.","msgtype":"m.text"},"ts":1366909343000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Well, not quite server semantics.  Common de facto url semantics, perhaps.","msgtype":"m.text"},"ts":1366909359000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"… which should be the criteria for :local-link (non fonctional), I think","msgtype":"m.text"},"ts":1366909359000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: e.g. / and /Overview.html might be the same too","msgtype":"m.text"},"ts":1366909365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: Yeah, makes sense for :local-link","msgtype":"m.text"},"ts":1366909372000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Yeah, but that's impossible to tell.","msgtype":"m.text"},"ts":1366909381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"trailing slash also changes meaning of path-relative URLs","msgtype":"m.text"},"ts":1366909386000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Oh man, you're right abuot that.","msgtype":"m.text"},"ts":1366909402000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Never mind, then.","msgtype":"m.text"},"ts":1366909404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gotta go, bye","msgtype":"m.text"},"ts":1366909413000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: I think that should be an incentive for people to clean that up though","msgtype":"m.text"},"ts":1366909484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: e.g. by having the server do a redirect","msgtype":"m.text"},"ts":1366909494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not too interested in providing that sort of incentive, but I am interested in making things consistent across the platforms.","msgtype":"m.text"},"ts":1366909511000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"platform/usage","msgtype":"m.text"},"ts":1366909517000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So yeah, example.com/foo and example.com/foo/ should be different.","msgtype":"m.text"},"ts":1366909534000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well we cannot normalize e.g. /foo//bar to /foo/bar","msgtype":"m.text"},"ts":1366909537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even though Apache will treat them as identical iirc and not redirect","msgtype":"m.text"},"ts":1366909551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is the /foo/../bar == /bar thing also apache-specific?","msgtype":"m.text"},"ts":1366909572000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"W3C does appear to redirect for http://www.w3.org/2001//tag/ that's cool","msgtype":"m.text"},"ts":1366909583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: no, that's the URL parser","msgtype":"m.text"},"ts":1366909596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Cool.","msgtype":"m.text"},"ts":1366909604000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"note that you can deactivate Apache default behavior","msgtype":"m.text"},"ts":1366909616000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"→ curl -sI http://www.la-grange.net/2013","msgtype":"m.text"},"ts":1366909618000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"HTTP/1.1 403 Forbidden","msgtype":"m.text"},"ts":1366909618000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"So yeah, my preferred solution is to just lean *fully* on your spec for all the necessary parsing and terminology.","msgtype":"m.text"},"ts":1366909626000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"→ curl -sI http://www.la-grange.net/2013/","msgtype":"m.text"},"ts":1366909644000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"HTTP/1.1 200 OK","msgtype":"m.text"},"ts":1366909645000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"TabAtkins: cool, if you have feedback on the API thing I sketched out that'd be welcome","msgtype":"m.text"},"ts":1366909665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I'll about providing hooks soonish","msgtype":"m.text"},"ts":1366909691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Where did you outline this?","msgtype":"m.text"},"ts":1366909696000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-style/2013Apr/0588.html (also on webapps)","msgtype":"m.text"},"ts":1366909716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, sorry, I was only skimming for www-style-tagged threads.","msgtype":"m.text"},"ts":1366909735000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://httpd.apache.org/docs/2.2/mod/mod_dir.html#DirectorySlash","msgtype":"m.text"},"ts":1366909738000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: what about //foo ?","msgtype":"m.text"},"ts":1366909846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: good question, I haven't tried","msgtype":"m.text"},"ts":1366909878000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"http://www.la-grange.net//2013/ aaah","msgtype":"m.text"},"ts":1366909893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even karlcow is not canonical","msgtype":"m.text"},"ts":1366909907000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just found numerous bugs in my own URLs too, which were already broken","msgtype":"m.text"},"ts":1366909921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For shame!","msgtype":"m.text"},"ts":1366909923000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you meant la-grange ;)","msgtype":"m.text"},"ts":1366909924000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"(for different reasons)","msgtype":"m.text"},"ts":1366909926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"karlcow: maybe ;)","msgtype":"m.text"},"ts":1366909935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TIL sicking eats every day","msgtype":"m.text"},"ts":1366909946000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"karlcow is extremely faaaaaar to be canonical :p","msgtype":"m.text"},"ts":1366909951000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"This slash-slash on Apache is interesting","msgtype":"m.text"},"ts":1366910024000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"→ curl -sI http://www.la-grange.net///2013/","msgtype":"m.text"},"ts":1366910060000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"HTTP/1.1 200 OK","msgtype":"m.text"},"ts":1366910060000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"you can add as many as you want","msgtype":"m.text"},"ts":1366910069000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"accepts challenge","msgtype":"m.emote"},"ts":1366910148000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"414 Request-URI Too Large woohoo!","msgtype":"m.text"},"ts":1366910152000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"I wonder if the URL is too long or it simply has too many segments...","msgtype":"m.text"},"ts":1366910188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Regarding double slashes: Most Web servers silently collapse multiple slashes into a single slash early in the request processing pipeline. This is true for at least Apache, Tomcat and Jetty. \" — http://stackoverflow.com/questions/4514627/apache-rewrite-rule-leading-slash/4514696#4514696","msgtype":"m.text"},"ts":1366910238000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"gavinc: how many? :)","msgtype":"m.text"},"ts":1366910246000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"http://www.la-grange.net///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"//////////////////////////////////////////////////////////////////////////////////////////////////////http://www.la-grange.net/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gee thanks annevk :P","msgtype":"m.text"},"ts":1366910285000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","msgtype":"m.text"},"ts":1366910291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mwahahaha","msgtype":"m.text"},"ts":1366910292000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////2013/2013/ does the trick","msgtype":"m.text"},"ts":1366910293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1366910295000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks for flooding, bro.","msgtype":"m.text"},"ts":1366910296000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1366910298000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I went to get a coke, and when I came back I thought something terrible was happening to my computer.","msgtype":"m.text"},"ts":1366910314000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"seems like I even made a typo","msgtype":"m.text"},"ts":1366910318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1366910323000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1366910325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"When I slash, I do it with typos!","msgtype":"m.text"},"ts":1366910333000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"TabAtkins: I hope you didn't spit the coke all over it","msgtype":"m.text"},"ts":1366910365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Luckily no.","msgtype":"m.text"},"ts":1366910374000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it's a message. Coke is no good ;)","msgtype":"m.text"},"ts":1366910433000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: Diet Coke, even!","msgtype":"m.text"},"ts":1366910457000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"collapsing the slash in Diet Coke.","msgtype":"m.text"},"ts":1366910473000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"TabAtkins: we should alter our clients to collapse multiple tabs early in the message display pipeline","msgtype":"m.text"},"ts":1366910499000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"s/tabs/slashes/","msgtype":"m.text"},"ts":1366910509000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"About to say, there's rarely more than one of me.","msgtype":"m.text"},"ts":1366910521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And even if there was, you wouldn't want to collapse us.","msgtype":"m.text"},"ts":1366910528000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"typoes ruin the joke","msgtype":"m.text"},"ts":1366910535000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"TabAtkins: you'd scale well on parallel jobs?","msgtype":"m.text"},"ts":1366910554000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"Pretty sure I would.","msgtype":"m.text"},"ts":1366910571000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"With some message-passing latency, I think I'd do fine as a hive.","msgtype":"m.text"},"ts":1366910582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(It's one of my pre-planned genie wishes.)","msgtype":"m.text"},"ts":1366910593000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"WTF","msgtype":"m.text"},"ts":1366910607000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hahaha","msgtype":"m.text"},"ts":1366910611000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"scrolls up and sees a slash-attack","msgtype":"m.emote"},"ts":1366910618000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"\"He's just hive-curious.\"","msgtype":"m.text"},"ts":1366910649000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"Hm, trying to think of a case where I'd want to ignore query but pay attention to fragment.","msgtype":"m.text"},"ts":1366910661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rillian: It's a degenerate case of poly-amory.","msgtype":"m.text"},"ts":1366910671000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins - let me know if you find any other rel values you have problems with and I'll take care of specing/registering them.","msgtype":"m.text"},"ts":1366910682000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"We've been pretty active with that recently","msgtype":"m.text"},"ts":1366910693000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: That's the only one I see in our specs so far.","msgtype":"m.text"},"ts":1366910696000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"based on all the #indiewebcamp distributed comments scenarios / progress","msgtype":"m.text"},"ts":1366910711000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"ok cool","msgtype":"m.text"},"ts":1366910716000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"http://paste.ofcode.org/XZBCb4MUzrL2Hwtjh9pHkw ;)","msgtype":"m.text"},"ts":1366910716000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"waves from the WebApps WG f2f","msgtype":"m.emote"},"ts":1366910741000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk: There are times when the query is just used for passing random information into the page, such that different queries still represent the same \"page\".  Then, I think you'd want to just omit query, but match on everything else.","msgtype":"m.text"},"ts":1366910749000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"waves at tantek ","msgtype":"m.emote"},"ts":1366910762000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1366910767000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Like, using query to set the background-color of the page, or something equally silly.","msgtype":"m.text"},"ts":1366910784000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins - having trouble following the :read-write discussion in Bugzilla","msgtype":"m.text"},"ts":1366910870000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I think my intent there was always to reflect user-alterability of the state of the inputs","msgtype":"m.text"},"ts":1366910885000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so to that extent, I'm pretty sure I intended it to apply to checkboxes and radio buttons that the user can change the state of","msgtype":"m.text"},"ts":1366910907000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Yes, but now define that in terms of what precise HTML elements match it. ^_^","msgtype":"m.text"},"ts":1366910910000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, agree.","msgtype":"m.text"},"ts":1366910913000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, but in case of e.g. Bugzilla it's essential","msgtype":"m.text"},"ts":1366910921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins - ok, sure we can add more details","msgtype":"m.text"},"ts":1366910921000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I'm only excluding the button-typed inputs.","msgtype":"m.text"},"ts":1366910921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Yes, certainly.","msgtype":"m.text"},"ts":1366910928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wanted to see if we had highlevel / conceptual agreemtn too","msgtype":"m.text"},"ts":1366910932000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I'm sending feedback on the thread, just saying that \"upto\" as the only way to drop components probably isnt' sufficient.","msgtype":"m.text"},"ts":1366910943000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or rather first, before specifying","msgtype":"m.text"},"ts":1366910954000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins: k, will look tomorrow","msgtype":"m.text"},"ts":1366910962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or tonight, we'll see","msgtype":"m.text"},"ts":1366910974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins - where should the definition of what precise HTML elements match it go?","msgtype":"m.text"},"ts":1366910981000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"in CSS3-UI? Selectors? HTML?","msgtype":"m.text"},"ts":1366910986000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"or should I just write it up on a wiki page and we can decide later","msgtype":"m.text"},"ts":1366910997000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: HTML.","msgtype":"m.text"},"ts":1366911147000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We're deciding it in the bug right now.","msgtype":"m.text"},"ts":1366911153000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Bugzilla is not a good place for deciding things - sorry to say","msgtype":"m.text"},"ts":1366911169000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Well, \"deciding\".","msgtype":"m.text"},"ts":1366911179000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hence IRC! :)","msgtype":"m.text"},"ts":1366911217000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk - I want to add onfullscreenchange and onfullscreenerror to the Fullscreen API IDL - any objection?","msgtype":"m.text"},"ts":1366911244000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"No objection from me, though I wish we had event streams. :/","msgtype":"m.text"},"ts":1366911304000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok I'll do it then and annevk can revert it if he disagrees :)","msgtype":"m.text"},"ts":1366911325000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the event firings etc. are already in the spec","msgtype":"m.text"},"ts":1366911342000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Clearly fullscreen should use futures","msgtype":"m.text"},"ts":1366911347000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"they're just missing from the IDL","msgtype":"m.text"},"ts":1366911350000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"No, it shouldn't really.","msgtype":"m.text"},"ts":1366911354000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Repeated events, like fullscreenchange, are not a good match for futures.","msgtype":"m.text"},"ts":1366911366000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger - how can I capture that as an open issue?","msgtype":"m.text"},"ts":1366911372000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek, I jest","msgtype":"m.text"},"ts":1366911388000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger - thanks, a bit slow this morning.","msgtype":"m.text"},"ts":1366911402000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Shouldn't you be having coffee with the rest of the wg? :)","msgtype":"m.text"},"ts":1366911422000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh oops, right, maybe that would help","msgtype":"m.text"},"ts":1366911432000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"brb","msgtype":"m.text"},"ts":1366911436000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"cabanier1: yt?","msgtype":"m.text"},"ts":1366914753000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"karlcow: 8173","msgtype":"m.text"},"ts":1366915402000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Hixie: pong","msgtype":"m.text"},"ts":1366915581000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"cabanier1: so i'm finally getting around to the fillrule feedback","msgtype":"m.text"},"ts":1366917449000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"someone here with a working Anolis, could you update Overview.html in fullscreen?","msgtype":"m.text"},"ts":1366917462000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I just spent over an hour updating my Anolis (and some dependencies) and still got stuck","msgtype":"m.text"},"ts":1366917501000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: http://anolis.hoppipolla.co.uk/aquarium.py","msgtype":"m.text"},"ts":1366917510000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"logged errors and solutions until I got stuck here: http://wiki.whatwg.org/wiki/Anolis#Troubleshooting","msgtype":"m.text"},"ts":1366917526000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie, that's too old, unfortunately","msgtype":"m.text"},"ts":1366917558000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"cabanier1: am i wrong in presuming that we should also have a fillrule argument for fill() when fill() is passed just a Path object?","msgtype":"m.text"},"ts":1366917558000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: it's what HTML uses :-)","msgtype":"m.text"},"ts":1366917566000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, A problem occurred in a Python script.","msgtype":"m.text"},"ts":1366917578000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie, yeah, and you don't have cross-spec references :)","msgtype":"m.text"},"ts":1366917587000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well, i do, but anolis' version of those don't work the way i want :-)","msgtype":"m.text"},"ts":1366917614000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, interesting, it worked via URL but not upload","msgtype":"m.text"},"ts":1366917735000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"uh, by \"worked\" I should say - it gave me something that looked like a spec","msgtype":"m.text"},"ts":1366917857000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"however it is VERY different from the previous Overview.html - much more different than the edits I made should have caused","msgtype":"m.text"},"ts":1366917871000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I suppose I could check it in and just let annevk update/fix it next time he commits","msgtype":"m.text"},"ts":1366917938000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"what could possibly go wrong","msgtype":"m.text"},"ts":1366917944000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Just checkin the source and leave the generated one alone","msgtype":"m.text"},"ts":1366917959000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well it looked reasonable in the browser so I committed it","msgtype":"m.text"},"ts":1366918255000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"seemed worse to have them be out of sync","msgtype":"m.text"},"ts":1366918270000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"changes seemed minor, (un)quoted attributes, numeric entities vs. utf-8","msgtype":"m.text"},"ts":1366918290000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"whitespace","msgtype":"m.text"},"ts":1366918293000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"why can't i mark the remaining bits in https://critic.hoppipolla.co.uk/r/5 as reviewed?","msgtype":"m.text"},"ts":1366918378000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tantek: i ran make with an up-to-date (i think) anolis. diff was empty","msgtype":"m.text"},"ts":1366918640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, probably because it didn't run anolis","msgtype":"m.text"},"ts":1366918695000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan, try touch Overview.src.html && make","msgtype":"m.text"},"ts":1366918704000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ah, yeah","msgtype":"m.text"},"ts":1366918743000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: i'm gonna try putting \"blocked awaiting responses to comment 15 (please remove this when replying)\" in the status whiteboard for now","msgtype":"m.text"},"ts":1366918829000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tantek: pushed","msgtype":"m.text"},"ts":1366918913000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: works for me :)","msgtype":"m.text"},"ts":1366919072000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tantek: onfullscreenchange is listed in http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html","msgtype":"m.text"},"ts":1366919088000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tantek: also it's nice to have separate commits for normative changes and for fluffing","msgtype":"m.text"},"ts":1366919157000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(also, dunno if anne approves of pushing like this or if he prefers pull requests)","msgtype":"m.text"},"ts":1366919227000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hober: MikeSmith when is this SF plan going to happen","msgtype":"m.text"},"ts":1366919410000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"i need to add it to my calendar","msgtype":"m.text"},"ts":1366919413000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"thanks for your help zcorpan","msgtype":"m.text"},"ts":1366920886000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"pushing works","msgtype":"m.text"},"ts":1366921025000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"i wish bugzilla had a column in search results for \"last person to touch this bug\"","msgtype":"m.text"},"ts":1366921331000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, a radio button is more like part of a select","msgtype":"m.text"},"ts":1366921557000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"than it is a button","msgtype":"m.text"},"ts":1366921563000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"zcorpan: critic bug, I think","msgtype":"m.text"},"ts":1366921569000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But if you have reviewed them, I can mark them as reviewed","msgtype":"m.text"},"ts":1366921579000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"radio buttons and checkboxes should be :read-write if their state is changeable by the user","msgtype":"m.text"},"ts":1366921601000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"re: https://www.w3.org/Bugs/Public/show_bug.cgi?id=17812","msgtype":"m.text"},"ts":1366921612000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"jgraham: i haven't actually reviewed interfaces.html but i guess it's just c/p","msgtype":"m.text"},"ts":1366921689000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: i have reviewed everything else","msgtype":"m.text"},"ts":1366921713000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Actually I fixed the assignments","msgtype":"m.text"},"ts":1366921715000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You can mark everything now","msgtype":"m.text"},"ts":1366921723000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1366921734000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So not really a bug, perhaps","msgtype":"m.text"},"ts":1366921738000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tantek: this is a definition of \"write\" quite foreign to me","msgtype":"m.text"},"ts":1366921741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie - don't misinterpret the label for the meaning","msgtype":"m.text"},"ts":1366921756000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"would you have preferred :user-modifiable?","msgtype":"m.text"},"ts":1366921767000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie: You're being a weird kind of overly-literable.","msgtype":"m.text"},"ts":1366921771000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/able/al/","msgtype":"m.text"},"ts":1366921781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"literable?","msgtype":"m.text"},"ts":1366921784000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"we're about 10 years past bike-shedding these selectors","msgtype":"m.text"},"ts":1366921790000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"You could write books about him?","msgtype":"m.text"},"ts":1366921791000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is old enough to remember when \"writing\" a bit of information was perfectly normal.","msgtype":"m.emote"},"ts":1366921813000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins: the term \"readonly\" has never applied to radio buttons as far as i am aware. There's a reason, for example, that neither HTML radio buttons nor Win32 radio buttons (the ones I'm familiar with) have a \"read-only\" mode.","msgtype":"m.text"},"ts":1366921926000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: they can be disabled, but not made read-only","msgtype":"m.text"},"ts":1366921932000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ...and?","msgtype":"m.text"},"ts":1366921949000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: this is why i'm confused, because i would never have guessed that :read-write and :read-only would apply to radio buttons","msgtype":"m.text"},"ts":1366921956000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: and i'm still skeptical that they should","msgtype":"m.text"},"ts":1366921977000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Which is why it's a good thing you asked, and I told you what they should apply to.","msgtype":"m.text"},"ts":1366921982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but i think you're wrong :-)","msgtype":"m.text"},"ts":1366922002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they apply to radio buttons, as as a group, they act semantically similar to a select, which certainly has read/readwrite semantics","msgtype":"m.text"},"ts":1366922013000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Well, 2-1 support for me, with tantek.","msgtype":"m.text"},"ts":1366922015000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And yes, what tantek said.","msgtype":"m.text"},"ts":1366922022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And checkboxes act like a multiselect.)","msgtype":"m.text"},"ts":1366922034000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"list boxes and check boxes also don't have a concept of \"read-only\"","msgtype":"m.text"},"ts":1366922049000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"only disabled vs enabled","msgtype":"m.text"},"ts":1366922054000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, you're stubbornly arguing linguistic semantics from labels, rather than what the things in questions actually do / how they behave","msgtype":"m.text"},"ts":1366922059000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: i don't understand the distinction. We're talking about what labels mean here.","msgtype":"m.text"},"ts":1366922095000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We're defining what they mean.  You're claiming that the names don't match.  This is a mismatch in argument goals.","msgtype":"m.text"},"ts":1366922117000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what Tab said","msgtype":"m.text"},"ts":1366922124000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"jgraham: seems like i still can't mark quite everything as reviewed","msgtype":"m.text"},"ts":1366922140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'm having two arguments. one is about what the selectors spec should say, the other is about what it does say.","msgtype":"m.text"},"ts":1366922143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The concept which is being labeled, however (in)accurately, by :read-write, applies equally to text inputs and checkboxes.","msgtype":"m.text"},"ts":1366922148000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i think the selectors spec _should_ say that :read-only and :read-write apply to text fields only.","msgtype":"m.text"},"ts":1366922161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think the selectors spec _does_ say basically nothing about what they apply to, it being too vague to unambiguously interpret.","msgtype":"m.text"},"ts":1366922183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm fine with adding more detailed description to Selectors, CSS3-UI etc.","msgtype":"m.text"},"ts":1366922264000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I'm not fine with defining it in terms of specific HTML elements.","msgtype":"m.text"},"ts":1366922285000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"even if that means we have to resort to explicitly listing HTML elements as one example of an applicable host language","msgtype":"m.text"},"ts":1366922295000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I'm fine with pointing to HTML's definition as an example for other languages to lean on.","msgtype":"m.text"},"ts":1366922301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't think we need to list elements, just define what it is you want to match","msgtype":"m.text"},"ts":1366922321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins - not even non-normative example? like the UA style sheet?","msgtype":"m.text"},"ts":1366922324000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":":read-write = user-modifiable","msgtype":"m.text"},"ts":1366922334000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":":read-only = user-viewable but not modifiable","msgtype":"m.text"},"ts":1366922343000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: We have non-normative examples all over the place, referencing HTML quite a lot.  No problem there.","msgtype":"m.text"},"ts":1366922368000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: Oh. Which files? Can you change things in the \"manage assignments\" dialog (on the review page)","msgtype":"m.text"},"ts":1366922372000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins - ok cool","msgtype":"m.text"},"ts":1366922378000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"e.g. \"text fields whose contents can be edited when the control is focused match :read-write; text fields whose contents cannot be edited when the control is focused match :read-only. Other controls, disabled controls, and non-controls match neither.\"","msgtype":"m.text"},"ts":1366922379000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: elements-embedded.js","msgtype":"m.text"},"ts":1366922411000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I disagree with that definition, and wont' use it.  It is being overly specific to text fields, when the definition isn't intended to be limited to text.","msgtype":"m.text"},"ts":1366922419000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: i opened manage assignments, checked all the boxes, saved. no difference","msgtype":"m.text"},"ts":1366922431000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: then define what it is you do mean :-)","msgtype":"m.text"},"ts":1366922439000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"omg i did","msgtype":"m.text"},"ts":1366922445000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I gave you an explicit list over in the bug.","msgtype":"m.text"},"ts":1366922455000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right now it just says \"An element matches :read-write if it is user-alterable, as defined by the host language\"","msgtype":"m.text"},"ts":1366922467000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: OK, *this* is a critic bug :)","msgtype":"m.text"},"ts":1366922469000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I can mark that as reviewed though","msgtype":"m.text"},"ts":1366922476000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"user-alterable sounds like user-modifiable","msgtype":"m.text"},"ts":1366922481000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so that's good","msgtype":"m.text"},"ts":1366922483000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"\"user-alterable\" is one of the least specific definitions ever","msgtype":"m.text"},"ts":1366922490000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have no idea what it means","msgtype":"m.text"},"ts":1366922494000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes, becasue that is the most specific I can get without getting into a specific host language.","msgtype":"m.text"},"ts":1366922496000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's your problem, Hixie.  The rest of us seem to agree on it pretty well.","msgtype":"m.text"},"ts":1366922508000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: reflection-original.html in the first commit also says \"Pending\", might also be a bug?","msgtype":"m.text"},"ts":1366922573000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok well if the spec is remaining as \"it's up to the host language\", i really don't see anything wrong with what HTML says now","msgtype":"m.text"},"ts":1366922582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i guess the bug is WORKSFORME.","msgtype":"m.text"},"ts":1366922590000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since i think what you are describing neither matches the spec nor is sensible","msgtype":"m.text"},"ts":1366922611000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dude. For godssake.","msgtype":"m.text"},"ts":1366922615000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I will override you and put an explicit list of HTML elements and states in the Selectors spec with a note that says \"Note: this list exists because Hixie is being difficult\" if you keep doing this.","msgtype":"m.text"},"ts":1366922641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You disagree on what the word \"user-alterable\" means. I get that.  Get over it.  I'm telling you what elements HTML should associate with that word.","msgtype":"m.text"},"ts":1366922670000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm gonna override both of you in the quirks spec!!","msgtype":"m.text"},"ts":1366922700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's not what you tell me that matters dude","msgtype":"m.text"},"ts":1366922701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's not how specs work","msgtype":"m.text"},"ts":1366922704000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's what the spec says that matters","msgtype":"m.text"},"ts":1366922708000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not about HTML elements, it's about control types","msgtype":"m.text"},"ts":1366922714000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes it is.  You write something in the spec.  You asked me what should be written, I told you.","msgtype":"m.text"},"ts":1366922719000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how about principle of least surprise? I think web devs would be surprised if checkboxes, radio button groups, select elements matched :read-only when the user was able to modify them","msgtype":"m.text"},"ts":1366922720000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"HTML is not the only language to which selectors applies","msgtype":"m.text"},"ts":1366922721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In quirks mode, :read-write matches your mom.","msgtype":"m.text"},"ts":1366922733000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"HTML is the only language with UI elements to which selectors applies. XForms has been abandoned.","msgtype":"m.text"},"ts":1366922756000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I guess you could write on my mom with marker pen","msgtype":"m.text"},"ts":1366922759000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tantek: i agree that they'd be surprised if :Read-only matched those controls, but i think they'd be even more surprised if :Read-write matched them. they're not read-write controls nor read-only controls. they're not text fields.","msgtype":"m.text"},"ts":1366922760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"A <select> element is equivalent to a text input with a pattern on it.  A radio group is equivalent to a select.  A checkbox group is equivalent to a multi-select.  All of these are just UI variances for the same underlying concept.","msgtype":"m.text"},"ts":1366922764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But really why would you?","msgtype":"m.text"},"ts":1366922766000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: that is not consistent with how UI controls are conventionally described.","msgtype":"m.text"},"ts":1366922804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"An <input type=color> is equivalent to a text input, even if it's exposed only as a button that opens up a color picker.","msgtype":"m.text"},"ts":1366922812000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(FWIW I think I would expect :read-write to match selects/radio buttons)","msgtype":"m.text"},"ts":1366922815000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I think that in my head :read-write really means :mutable)","msgtype":"m.text"},"ts":1366922831000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wait, type=color should match :Read-write too?!","msgtype":"m.text"},"ts":1366922849000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The concept of \"input with text in it\" that you're harping on is just bizarrely specific, and has no connection with the actual wording of the Selectors spec.","msgtype":"m.text"},"ts":1366922850000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1366922854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes.  It's in the list of things I said should be read-write in the bug.","msgtype":"m.text"},"ts":1366922866000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Seriously, where are you getting this notion that it only applies to text?  Why?  How?","msgtype":"m.text"},"ts":1366922881000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(When? What?)","msgtype":"m.text"},"ts":1366922888000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The concept of \"input with text in it\" that I'm talking about is the about what the definition of \"Readonly\" in UI is, it's not about CSS' current text. It's abotu what CSS _Should_ say","msgtype":"m.text"},"ts":1366922894000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Don't UAs do something already here?","msgtype":"m.text"},"ts":1366922922000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie wouldn't that be something like input[type=text]:not(:empty) ?","msgtype":"m.text"},"ts":1366922934000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"Controls have several states, relevant here are \"enabled\", \"readonly\", and \"disabled\". Most controls only have the first and third of these. Text fields are the exception, they can be readonly.","msgtype":"m.text"},"ts":1366922940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"an author could use <input type=\"number\" min=\"1\" max=\"10\" step=\"1\" value=\"5\"> e.g. for a 1-10 rating input, and a UA could render that as a select list, while non-supporting UAs would fallback to having it be a text input","msgtype":"m.text"},"ts":1366922954000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"in both cases - it's read-write","msgtype":"m.text"},"ts":1366922966000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"let me put this another way","msgtype":"m.text"},"ts":1366922988000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whether the user is typing characters, or picking from a menu of options, the input is read-write","msgtype":"m.text"},"ts":1366922992000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Or it could be a range, or it could be a spinner.","msgtype":"m.text"},"ts":1366922997000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1366923001000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"what's the point of having :enabled/:disabled of :read-only/:read-write are the same?","msgtype":"m.text"},"ts":1366923001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/of/if/","msgtype":"m.text"},"ts":1366923015000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the point is, the text field presentation vs. the select list presentation DOES NOT impact the :read-write - ness","msgtype":"m.text"},"ts":1366923017000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"They're not.  :disabled only matches disabled things.","msgtype":"m.text"},"ts":1366923018000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":read-only happens to *also* match disabled things (because you can't alter their state).","msgtype":"m.text"},"ts":1366923030000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can you point me to a :read-write:disabled control?","msgtype":"m.text"},"ts":1366923037000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that's the proof of why a select can be read-write","msgtype":"m.text"},"ts":1366923040000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"No, because of what I just said.","msgtype":"m.text"},"ts":1366923047000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and since radio button groups are just another presentation of select","msgtype":"m.text"},"ts":1366923048000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"or a :read-only:enabled control that isn't a text field?","msgtype":"m.text"},"ts":1366923049000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's why radio buttons can be read-write","msgtype":"m.text"},"ts":1366923059000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"In HTML, the readonly attribute only applies to text inputs.  So, no.","msgtype":"m.text"},"ts":1366923069000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"similarly with a group of checkboxes and a multi-select","msgtype":"m.text"},"ts":1366923073000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"That's not a generic argument, Hixie.","msgtype":"m.text"},"ts":1366923083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So we're back again to you obviously arguing solely about naming.  You're attached to the name \"readonly\" referring to the specific \"readonly\" state that HTML uses, and are refusing to wrap your head around the concept possibly being more general.","msgtype":"m.text"},"ts":1366923137000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Mutable vs immutable.","msgtype":"m.text"},"ts":1366923142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"User-alterable vs Static.","msgtype":"m.text"},"ts":1366923151000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Whatever.","msgtype":"m.text"},"ts":1366923153000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The names are the least important part of this, because we're stuck with them (they're very old).  So stop hanging importance on them.","msgtype":"m.text"},"ts":1366923171000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this isn't just about HTML, e.g. Win32 has the same distinctions.","msgtype":"m.text"},"ts":1366923177000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think your definition is bad, but putting that aside, how about \"An element matches :read-write if it is enabled, and, for text fields, is not read-only; all other elements match :read-only\"? or some such?","msgtype":"m.text"},"ts":1366923179000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"where \"enabled\" and \"read-only\" can be host-language concepts","msgtype":"m.text"},"ts":1366923198000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and the \"enabled\" state matches the one used for :enabled)","msgtype":"m.text"},"ts":1366923222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That means that buttons will be :read-write, which is silly, because they're not mutable.  They're *enabled*, yes, but they've got no user-alterable state.","msgtype":"m.text"},"ts":1366923255000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"they have hte state of being pushed in or not","msgtype":"m.text"},"ts":1366923270000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's not a significant state that we wish to care about.","msgtype":"m.text"},"ts":1366923284000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And it's already covered generally by :active.)","msgtype":"m.text"},"ts":1366923298000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this is a really strange definition you're trying to have, i'm not surprised you're having trouble describing it normatively","msgtype":"m.text"},"ts":1366923318000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the use case? maybe that's a better starting point for figuring out what the definition should be","msgtype":"m.text"},"ts":1366923337000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Good lord, no. It's the intuitive definition that I, fantasai, tantek, jgraham, and I expect almost anyone I ask would have.","msgtype":"m.text"},"ts":1366923343000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You're the only one in this conversation so far who seems to be having trouble with it, and *I can't figure out why*.","msgtype":"m.text"},"ts":1366923365000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie - what's the use case in leaving them out?","msgtype":"m.text"},"ts":1366923367000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"based on principle of least surprise, writability = modifiability","msgtype":"m.text"},"ts":1366923379000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"grabs popcorn","msgtype":"m.emote"},"ts":1366923399000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"Tantek made a great argument by analogy just a few lines ago.  Just read that.","msgtype":"m.text"},"ts":1366923426000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the text field vs select list thing? That's the same one you said earlier.","msgtype":"m.text"},"ts":1366923459000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes, number vs range vs select vs text input, and how they're all *the exact same thing*, just with different displays.","msgtype":"m.text"},"ts":1366923485000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"one might even say … different *appearances* ;)","msgtype":"m.text"},"ts":1366923508000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"they're the same underlying data type, but they're no the same control","msgtype":"m.text"},"ts":1366923540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are there any non-modifiable inputs other than button?","msgtype":"m.text"},"ts":1366923576000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"Duh.  But they all have the same notion of \"user-alterability\".","msgtype":"m.text"},"ts":1366923578000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i mean by that argument a <button> that when clicked alters the value of a <span> between two values, is equivalent to a radio button and equivalent to a text field and should be :read-write","msgtype":"m.text"},"ts":1366923588000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lecuyer: All the button types: button/reset/submit/image.  Also, hidden.","msgtype":"m.text"},"ts":1366923596000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: If we could magically and reasonably tell when JS was turning a button into something that altered state in the page in that way, I would agree with you.","msgtype":"m.text"},"ts":1366923619000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We can't, so I don't, and we don't.","msgtype":"m.text"},"ts":1366923624000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and technically <input type=submit> changes state (it changes what is submitted if it has a name) and <input type=reset> is clearly \"user-alterable\" since it affects every field in the form","msgtype":"m.text"},"ts":1366923651000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: oh wow, you'd actually want that button matching :read-write if you could??","msgtype":"m.text"},"ts":1366923669000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"OH: \"Google+ is write-only, no one reads it.\"","msgtype":"m.text"},"ts":1366923676000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"i really don't understand what you expect people to use this pseudo-class for","msgtype":"m.text"},"ts":1366923687000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it only matched read-only-able elements, i could see the use case","msgtype":"m.text"},"ts":1366923698000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but having it match everything means you'd only ever be able to use it with more selectors to narrow it down","msgtype":"m.text"},"ts":1366923716000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: In the imaginary world where the halting problem was cheap to solve, and AI was just a library that you called?  Sure, knock yourself out.","msgtype":"m.text"},"ts":1366923720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Please, god, stop willfully misinterpreting me.  The list of :read-write elements is finite, and explained in the bug.","msgtype":"m.text"},"ts":1366923751000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what am i misinterpreting?","msgtype":"m.text"},"ts":1366923781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i swear it's not willful)","msgtype":"m.text"},"ts":1366923786000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"having it match everything...\"","msgtype":"m.text"},"ts":1366923793000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"clearly you guys would be having more fun in the WebApps WG f2f :)","msgtype":"m.text"},"ts":1366923808000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"It's right in the title","msgtype":"m.text"},"ts":1366923809000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"you want :read-only, :read-write { } to match everything, no?","msgtype":"m.text"},"ts":1366923818000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, why, what's the use case behind that reasoning?","msgtype":"m.text"},"ts":1366923930000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"i have no idea what the use cases are for these pseudos, that's what i'm trying to determine. In the absence of use cases, I default to assuming that they should match what their names imply they should match.","msgtype":"m.text"},"ts":1366923969000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as far as i can tell, the spec says \":read-only, :read-write { }\" should match everything.","msgtype":"m.text"},"ts":1366923994000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Text inputs have a state, .value, which the user can alter.  So do color inputs, range inputs, number inputs, etc.  Checkboxes have a state, .checked, which the user alters.  Selects have a state, .selectedIndex, which the user alters.","msgtype":"m.text"},"ts":1366924009000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(\"An element matches :read-write if it is user-alterable, as defined by the host language. Otherwise, it is :read-only.\")","msgtype":"m.text"},"ts":1366924011000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's the unifying thread which we keep repeating, over and over again, and which you keep claiming to not understand.","msgtype":"m.text"},"ts":1366924021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i understand (though i have difficulty figuring out where you draw the line, hence wanting the spec to be clearer); my question is, why would you want that definition? What use is the pseudo with that definition?","msgtype":"m.text"},"ts":1366924069000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Submit buttons are questionable (they are sometimes used instead of a radio group), but I fall on the side of not including them in the group.  They alter the state of the form, not themselves, and their effect is transient and part of the submission process, not an independent state.","msgtype":"m.text"},"ts":1366924070000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Man, I don't know the use for half of the user-input pseudos.  I'm too long out of webdev, and I never liked forms much anyway.  I'm just giving them reasonable definitions.","msgtype":"m.text"},"ts":1366924111000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":enabled and :disabled only apply to controls that _can_ be enabled and disabled, right? Why would :read-only and :read-write apply to everything?","msgtype":"m.text"},"ts":1366924125000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok. I disagree that this definition is \"reasonable\".","msgtype":"m.text"},"ts":1366924137000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"One issue at a time, please.  Whether :read-only is :not(:read-write) can be discussed later.","msgtype":"m.text"},"ts":1366924156000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i think it's the same issue, personally.","msgtype":"m.text"},"ts":1366924168000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Right now we're covering the elements which are reasonably one or the other, and talking about which category they're in.","msgtype":"m.text"},"ts":1366924171000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In all the large web projects I've worked on, I dont' think I've ever seen someone use :read-write","msgtype":"m.text"},"ts":1366924174000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"lecuyer: I wouldn't define it if I were starting from scratch.  But these are legacy pseudos.","msgtype":"m.text"},"ts":1366924214000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or :read-only for that matter.  People use :enabled","msgtype":"m.text"},"ts":1366924215000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"maybe we can drop them? I wonder how commonly used they are.","msgtype":"m.text"},"ts":1366924232000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do we have metrics on this?","msgtype":"m.text"},"ts":1366924238000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(does chrome instrumentation track individual pseudos?)","msgtype":"m.text"},"ts":1366924250000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you're at google, just 'grep :read-only -r /dev/interwebs'","msgtype":"m.text"},"ts":1366924283000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"unfortunately we don't crawl CSS as far as I know","msgtype":"m.text"},"ts":1366924305000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: It can track individual pseudos that we're interested in.","msgtype":"m.text"},"ts":1366924306000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: has nobody ever been interested in :read-only? telling?","msgtype":"m.text"},"ts":1366924351000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"lecuyer: No idea.","msgtype":"m.text"},"ts":1366924401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: we should do this for these pseudos","msgtype":"m.text"},"ts":1366924422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: since apparently none of us know what the use cases are, or how often they are used, we probably need more data to work out what to do.","msgtype":"m.text"},"ts":1366924444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"How do you guys collect data on that?  Apart from announcing that it's being EOL'd and that you need usecases for not removing","msgtype":"m.text"},"ts":1366924632000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"In Chrome, we can instrument it to count usage.","msgtype":"m.text"},"ts":1366924645000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"From what I can tell, most uses of uses of readonly is actually using the attr selector div[readonly] *not* using pseudos","msgtype":"m.text"},"ts":1366924919000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"s/most uses/the first page of search results/","msgtype":"m.text"},"ts":1366924983000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"Hixie: adding a fillrule to 'fill(path)' makes sense","msgtype":"m.text"},"ts":1366925029000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"Hixie: however, I think there should be an object that takes a path + fillrule, or a path + strokeparameters","msgtype":"m.text"},"ts":1366925067000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"Hixie: and you pass this object to fill","msgtype":"m.text"},"ts":1366925079000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"hixie: that way you can do the heavy lifting of stroking and resolving of the winding rules offline","msgtype":"m.text"},"ts":1366925114000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"hixie: that object would also accurately describe an area so you can associate it with a region","msgtype":"m.text"},"ts":1366925190000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"Has there been any discussion of aliasing/inheriting rules from another otherwise-unrelated class?","msgtype":"m.text"},"ts":1366925730000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"I have the problem of not being able to use classes in my html (lots and lots of data selectors), so it'd be really nice if we could somehow define a bunch of classes and then in an attribute selector apply a predefined class","msgtype":"m.text"},"ts":1366925830000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"If that makes any sense","msgtype":"m.text"},"ts":1366925835000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"lecuyer: I recommend using SASS and the @extend directive for now.","msgtype":"m.text"},"ts":1366927503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"lecuyer: I'm slowly pursuing putting @extend in CSS itself.","msgtype":"m.text"},"ts":1366927543000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"d'oh, cabanier left","msgtype":"m.text"},"ts":1366927720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: he just came back from a travel","msgtype":"m.text"},"ts":1366927841000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"TabAtkins SASS is nice, and also generates about 1900 LOC I was hoping there could be an actually css solution in the future","msgtype":"m.text"},"ts":1366927975000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"TabAtkins: Want help with that? :)","msgtype":"m.text"},"ts":1366927996000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"There's a reason it generates that much. ^_^","msgtype":"m.text"},"ts":1366928021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: the handlers are defined by HTML already","msgtype":"m.text"},"ts":1366928021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: also, you're destroying blame :/","msgtype":"m.text"},"ts":1366928030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nah, I'm already friends with Chris Eppstein.  Got all the help I need right now.","msgtype":"m.text"},"ts":1366928035000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: time for design.spec.whatwg.org?","msgtype":"m.text"},"ts":1366928155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i thought about picking it back up in the html wg","msgtype":"m.text"},"ts":1366928186000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"annevk: but then i realized what i was thinking","msgtype":"m.text"},"ts":1366928194000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"What's that for?","msgtype":"m.text"},"ts":1366928196000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: don't do it there :)","msgtype":"m.text"},"ts":1366928202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"design spec?","msgtype":"m.text"},"ts":1366928220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: the Living Standard of HTML Design Principles","msgtype":"m.text"},"ts":1366928222000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"probably more wiki material","msgtype":"m.text"},"ts":1366928246000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1366928251000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Ah, kk.","msgtype":"m.text"},"ts":1366928253000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: any plans to allow nesting of rlues like in regions sans-'flows-from'?","msgtype":"m.text"},"ts":1366928432000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"ie how in SASS I can just put rules inside of each other and it'll automatically do the nesting for me?","msgtype":"m.text"},"ts":1366928463000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"That's inherently ambiguous, grammatically.  Can't be done without magic or unlimited lookahead.","msgtype":"m.text"},"ts":1366928516000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SASS is okay with the latter.","msgtype":"m.text"},"ts":1366928520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(You can't tell whether, in \"foo { bar:baz ... }\", the \"bar:baz\" part is a property whose value starts with \"baz\", or the start of a selector for a \"bar\" element with a \":baz\" pseudoclass.)","msgtype":"m.text"},"ts":1366928575000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins you could simplify that by not allowing mixing of child selectors and actual rules, though couldn't you?","msgtype":"m.text"},"ts":1366928703000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"annevk - why split where the handlers are vs. where the other attributes are?","msgtype":"m.text"},"ts":1366928732000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"That's not very useful, then.  It means you have to do \"foo { color: blue; ...} foo { bar { ... } }\", repeating yourself every time.","msgtype":"m.text"},"ts":1366928735000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"e.g. fullscreenEnabled, fullscreenElement ?","msgtype":"m.text"},"ts":1366928745000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"And it's still ambiguous - how do you tell the difference between the two cases?","msgtype":"m.text"},"ts":1366928749000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: also, you didn't define the attributes","msgtype":"m.text"},"ts":1366928760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"apologies for the blame destroying","msgtype":"m.text"},"ts":1366928763000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"a ; vs a {","msgtype":"m.text"},"ts":1366928765000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"tantek: because HTML defines all the attributes on Document/Element already","msgtype":"m.text"},"ts":1366928787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That requires looking forward an arbitrary amount of tokens, and prevents us from ever using {} inside of a declaration.","msgtype":"m.text"},"ts":1366928789000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk - but it doesn't define fullscreenEnabled, fullscreenElement","msgtype":"m.text"},"ts":1366928806000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: in any event, there's some outstanding issues around the events","msgtype":"m.text"},"ts":1366928811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The CSS grammar is specially tuned to only require a single token of lookahead, because that helps performance and maintainability.","msgtype":"m.text"},"ts":1366928812000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: well those are not event handlers","msgtype":"m.text"},"ts":1366928816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - but you said \"HTML defines all the attributes on Document/Element\"","msgtype":"m.text"},"ts":1366928838000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: HTML doesn't define everything... just event handlers and HTML stuff (such as the allowfullscreen attribute)","msgtype":"m.text"},"ts":1366928842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gotcha, where is that doc'd?","msgtype":"m.text"},"ts":1366928843000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"they're attributes right?","msgtype":"m.text"},"ts":1366928844000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"lecuyer: http://dev.w3.org/csswg/css-syntax","msgtype":"m.text"},"ts":1366928851000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok I'm confused on how the split works then","msgtype":"m.text"},"ts":1366928866000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I meant event handler attributes, not the other kind","msgtype":"m.text"},"ts":1366928870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The fact that it's a 3-character lookahead tokenizer and 1-token lookahead parser isn't explicitly documented, but it's a property I tried hard to maintain while writing it.","msgtype":"m.text"},"ts":1366928876000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Awesome. now I can stop busting into a conversation with things to get shot down :)","msgtype":"m.text"},"ts":1366928878000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"anyway, I'll sort this out at some point","msgtype":"m.text"},"ts":1366928888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - sorry - that's what I get for trying to improve things ;)","msgtype":"m.text"},"ts":1366928904000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"i'm fine with wherever the definition/declarations go","msgtype":"m.text"},"ts":1366928924000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"if onfullscreenchange and onfullscreenerror are defined in HTML, then can we at least put references to those definitions in Fullscreen?","msgtype":"m.text"},"ts":1366928949000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(hyperlinks)","msgtype":"m.text"},"ts":1366928954000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so they're discoverable?","msgtype":"m.text"},"ts":1366928957000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"as a webdev I don't expect to go poking through HTML just in case it might define things that my spec might specifically need/use that's so spec-specific","msgtype":"m.text"},"ts":1366928996000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"yeah I guess, once we sort out the details","msgtype":"m.text"},"ts":1366929017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok cool","msgtype":"m.text"},"ts":1366929022000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"i generally try to avoid adding makeup until stuff is somewhat implemented","msgtype":"m.text"},"ts":1366929046000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well those eventhandlers are implemented in webkit and gecko so...","msgtype":"m.text"},"ts":1366929068000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"am i right in assuming that it's not possible to convert any path plus either the nonzero rule or the oddeven rule to an equivalent path that is the same in both evenodd and nonzero modes?","msgtype":"m.text"},"ts":1366929086000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seems like you'd have to do something that affects where dashes are drawn, at a minimum","msgtype":"m.text"},"ts":1366929123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in general that's not possible, yeah","msgtype":"m.text"},"ts":1366929130000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1366929151000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonder what cabanier wanted then","msgtype":"m.text"},"ts":1366929159000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, you can have a path that is equivalent for filling, but not the rest.","msgtype":"m.text"},"ts":1366929163000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It can't be equivalent even for solid strokes unless you convert the strokes into filled regions.","msgtype":"m.text"},"ts":1366929183000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"maybe he just wanted an object that remembered a particular state so you didn't have to keep passing that around","msgtype":"m.text"},"ts":1366929200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not a Path, but a new object","msgtype":"m.text"},"ts":1366929203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would make sense i guess","msgtype":"m.text"},"ts":1366929206000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for some future version","msgtype":"m.text"},"ts":1366929209000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cabanier: thanks","msgtype":"m.text"},"ts":1366929692000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie: I just reconnected. will read the log","msgtype":"m.text"},"ts":1366929770000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"hixie: yes, the object would remember the state. I made a proposal on whatwg a couple of months ago and wrote a blog entry: http://blogs.adobe.com/webplatform/2013/01/31/revised-canvas-paths/","msgtype":"m.text"},"ts":1366929927000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"hixie: just some ideas","msgtype":"m.text"},"ts":1366929935000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: yeah the union thing is something that would indeed be helpful","msgtype":"m.text"},"ts":1366930047000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cabanier: but defining exactly what the resulting path is seems non-trivial","msgtype":"m.text"},"ts":1366930066000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that's true. You have to calculate the intersection","msgtype":"m.text"},"ts":1366930115000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: there are libraries out there that do it","msgtype":"m.text"},"ts":1366930133000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: you have to define it in enough detail that dashed lines end up the same","msgtype":"m.text"},"ts":1366930135000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: google's skia people are working on a good one","msgtype":"m.text"},"ts":1366930152000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: yes. that should be no problem.","msgtype":"m.text"},"ts":1366930166000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"i think \"no problem\" is probably optimistic","msgtype":"m.text"},"ts":1366930184000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but ok :-)","msgtype":"m.text"},"ts":1366930188000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: are you thinking about where the path would start?","msgtype":"m.text"},"ts":1366930194000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"for instance","msgtype":"m.text"},"ts":1366930203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and what direction it's in, and everything like that","msgtype":"m.text"},"ts":1366930210000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1366930211000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1366930214000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"incidentally, i don't think we need a new object for this -- seems like you should be able to use Path for this, since the shape is basically just a path, still","msgtype":"m.text"},"ts":1366930239000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess that would be hard to define","msgtype":"m.text"},"ts":1366930240000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"it's really just another way to add a path, one that happens to be destructive to the existing data","msgtype":"m.text"},"ts":1366930267000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not really a path anymore","msgtype":"m.text"},"ts":1366930269000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"if you can stroke it, it seems very pathy","msgtype":"m.text"},"ts":1366930277000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"true. maybe you shouldn't be able to stroke it :-)","msgtype":"m.text"},"ts":1366930305000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"that's the only example you gave :-P","msgtype":"m.text"},"ts":1366930315000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i gotta go, meeting","msgtype":"m.text"},"ts":1366930324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1366930328000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"but this is definitely something we should do eventually","msgtype":"m.text"},"ts":1366930332000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if we can define it convincingly","msgtype":"m.text"},"ts":1366930338000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1366930340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh http://polyglotconf.com/","msgtype":"m.text"},"ts":1366931516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(don't worry, it's not about XHTML)","msgtype":"m.text"},"ts":1366931541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm starting to really not like positional arguments","msgtype":"m.text"},"ts":1366934037000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if only named arguments weren't so damn verbose","msgtype":"m.text"},"ts":1366934052000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I agree, but options objects make it hard to justify named arguments now. :/","msgtype":"m.text"},"ts":1366934077000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: how many API's are using option objects these days?","msgtype":"m.text"},"ts":1366934227000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"options objects are essentially named arguments","msgtype":"m.text"},"ts":1366934234000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"A decent number.","msgtype":"m.text"},"ts":1366934236000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Yeah.","msgtype":"m.text"},"ts":1366934239000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and they're really verbose :-)","msgtype":"m.text"},"ts":1366934244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is possibly even less of a fan of those","msgtype":"m.emote"},"ts":1366934260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"really? last time I checked, they were very broken in the webkit/blink preprocessor","msgtype":"m.text"},"ts":1366934291000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: JS people love them","msgtype":"m.text"},"ts":1366934312000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"my problem right now is isPointInPath()","msgtype":"m.text"},"ts":1366934313000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1366934325000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"which up to now has had the syntax (x, y) or (path, x, y)","msgtype":"m.text"},"ts":1366934332000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"everything else that optionally takes a path becomes (), (path), (fillRule), (path, fillRule)","msgtype":"m.text"},"ts":1366934357000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so where the heck do i put the fillRule on isPointInPath?","msgtype":"m.text"},"ts":1366934378000,"senderName":"Hixie","senderId":"Hixie@irc"}
]