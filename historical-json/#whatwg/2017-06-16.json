[
{"content":{"body":"Domenic: Hey, did jsdom/whatwg-url pass all those new tests?","msgtype":"m.text"},"ts":1497572891000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: yep","msgtype":"m.text"},"ts":1497572951000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1497572956000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"https://github.com/jsdom/whatwg-url/commit/e6c485ee0f516ca2467fc87e0d240d8363a2cb8a","msgtype":"m.text"},"ts":1497572970000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh, very nice","msgtype":"m.text"},"ts":1497573065000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Domenic: I assume you are aware of this but are not using it because of the commit hash thing? http://w3c-test.org/url/urltestdata.json","msgtype":"m.text"},"ts":1497573133000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: yeah","msgtype":"m.text"},"ts":1497573142000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1497573147000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I was doing it the same way you were, link-wise, and then I found that","msgtype":"m.text"},"ts":1497573159000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Yeah, seems important to check in a last-known-passing revision if I want new contributors to get a passing `npm test` on checkout","msgtype":"m.text"},"ts":1497573739000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks. for Web workloads, encoding_rs decodes faster than ICU","msgtype":"m.text"},"ts":1497612234000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Domenic: I haven't had the time to extract the non-ICU UTF-8 and windows-1252 decoders from Blink or WebKit to test those in isolation","msgtype":"m.text"},"ts":1497612284000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Domenic: however, with TextDecoder, the overhead in Firefox and Chrome is pretty bad","msgtype":"m.text"},"ts":1497612319000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Domenic: in Firefox can be larger than the time spent in the decoder","msgtype":"m.text"},"ts":1497612341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Domenic: I'd estimate that to be the case for Chrome, too","msgtype":"m.text"},"ts":1497612363000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: Is it possible to *not* have the TPAC service worker meeting on Monday?","msgtype":"m.text"},"ts":1497622249000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you mean only have it one day?","msgtype":"m.text"},"ts":1497624234000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Was the current plan to have it on Monday & Tuesday?","msgtype":"m.text"},"ts":1497624257000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"it is now, because the W3C meeting planners have been trying to fit everything together, and that it where it ended up","msgtype":"m.text"},"ts":1497624316000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"partly because the shadow DOM and custom elements meetings are now scheduled for Thursday and Friday","msgtype":"m.text"},"ts":1497624360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and that seemed like the main thing we did not want to conflict with","msgtype":"m.text"},"ts":1497624392000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ok, I'll check to see if we need both days & get back to you","msgtype":"m.text"},"ts":1497624416000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Our usual meetings are two days, but we only had one day at the last TPAC","msgtype":"m.text"},"ts":1497624446000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1497624458000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yeah, let's just do the Tuesday","msgtype":"m.text"},"ts":1497628103000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"We'll ad-hoc more if we need to","msgtype":"m.text"},"ts":1497628113000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So according to the fetch spec here, for \"To append:\" https://fetch.spec.whatwg.org/#terminology-headers - it would seem that if header 'x-foo' already exists, and I want to append 'X-Foo': 'bar', my `header list` would end up with both, ala: { 'x-foo': 'bar', 'X-Foo': 'bar' } ... can that possibly be the spec here or am I misunderstanding?","msgtype":"m.text"},"ts":1497630280000,"senderName":"zsoc","senderId":"zsoc@irc"},
{"content":{"body":"Nope, I realized I misread the moment after I typed that out heh... my bad, ty","msgtype":"m.text"},"ts":1497630325000,"senderName":"zsoc","senderId":"zsoc@irc"},
{"content":{"body":"JakeA: OK","msgtype":"m.text"},"ts":1497634511000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm is whatwg.org down right now?","msgtype":"m.text"},"ts":1497638010000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: its down for me :(","msgtype":"m.text"},"ts":1497639072000,"senderName":"cgbrewster","senderId":"cgbrewster@irc"},
{"content":{"body":"blehhhhhh","msgtype":"m.text"},"ts":1497641509000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"crack team of sysadmins alerted","msgtype":"m.text"},"ts":1497641531000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: is what.org down or something ?","msgtype":"m.text"},"ts":1497642822000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Apparently, see above...","msgtype":"m.text"},"ts":1497642831000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"looks at the logs","msgtype":"m.emote"},"ts":1497642847000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Server is sshable, probably a Dreamhost problem :-/","msgtype":"m.text"},"ts":1497643018000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Back","msgtype":"m.text"},"ts":1497643284000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1497643466000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: quite happy I'm actually implementing tests for [Default] toJSON() in idlharness. Helped uncover some corner cases around supplemental interfaces I wasn't aware of.","msgtype":"m.text"},"ts":1497652637000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: in you add an interface J to https://s3.amazonaws.com/pr-preview/tobie/webidl/tojson.html#example-tojson-default-inheritance-and-mixins, and have `H implements J`, then that also gets accounted for with the current algorithm.","msgtype":"m.text"},"ts":1497652713000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I'm not too sure if that's a feature, a bug, or something we shouldn't care about until we add mixins","msgtype":"m.text"},"ts":1497652782000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: (I'm tempted to wait for mixins)","msgtype":"m.text"},"ts":1497652918000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Heh, yeah... a feature I guess, but not something to worry about","msgtype":"m.text"},"ts":1497653253000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Think I'll be tackling mixins next, actually.","msgtype":"m.text"},"ts":1497653642000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Does WebIDL support comparing dictionaries for equivalence?","msgtype":"m.text"},"ts":1497656318000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I don't see anything to that effect in https://heycam.github.io/webidl/#idl-dictionaries , but it may be defined elsewhere","msgtype":"m.text"},"ts":1497656389000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I guess that's not hard to express in English, though. Maybe I can just write \"If the value of each member of dictionary A is the same as the value of the corresponding member of dictionary B [...]\"","msgtype":"m.text"},"ts":1497656556000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: dictionaries aren't distinguishable, see https://heycam.github.io/webidl/#dfn-distinguishable","msgtype":"m.text"},"ts":1497656564000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jugglinmike: so what's your use case?","msgtype":"m.text"},"ts":1497656589000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'm working on a spec (Permissions) that supports \"pending\" operations, each associated with a dictionary. I would like to target that operation from another algorithm","msgtype":"m.text"},"ts":1497656703000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"oh, you can use infra notation to help with this","msgtype":"m.text"},"ts":1497656773000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Happy to educate myself. Could you point me in the right direction?","msgtype":"m.text"},"ts":1497656820000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: https://infra.spec.whatwg.org/#maps (as described just below https://heycam.github.io/webidl/#ref-for-dfn-dictionary-member-default-value-2)","msgtype":"m.text"},"ts":1497656977000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(was looking for the links)","msgtype":"m.text"},"ts":1497656986000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jugglinmike: but you'll have to resort to prose","msgtype":"m.text"},"ts":1497657009000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"got it","msgtype":"m.text"},"ts":1497657145000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1497657146000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"}
]