[
{"content":{"body":"hah :)","msgtype":"m.text"},"ts":1470876287000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"caitp: jochen__ hayato any insight on https://bugs.chromium.org/p/chromium/issues/detail?id=636112","msgtype":"m.text"},"ts":1470879365000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"test failures in blink of the form, class string of PaymentRequest.prototype expected \"[object PaymentRequestPrototype]\" but got \"[object PaymentRequest]\"","msgtype":"m.text"},"ts":1470879392000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for various types","msgtype":"m.text"},"ts":1470879406000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or see https://bugs.chromium.org/p/chromium/issues/detail?id=635694 because I think my issue there is probably just a duplicate of the (general) problem described tehre","msgtype":"m.text"},"ts":1470879472000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bugs yukishiino over on #chromium","msgtype":"m.emote"},"ts":1470879793000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: this is an intentional change","msgtype":"m.text"},"ts":1470882110000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith: there is a Web IDL spec bug open on it","msgtype":"m.text"},"ts":1470882117000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: hi","msgtype":"m.text"},"ts":1470882199000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: so it looks like Chrome doesn't throw when calling customElements.define('a-b', HTMLElement)","msgtype":"m.text"},"ts":1470882215000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: but the indent is to throw in that case, right?","msgtype":"m.text"},"ts":1470882219000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(per step 2 of https://html.spec.whatwg.org/#dom-customelementsregistry-define)","msgtype":"m.text"},"ts":1470882247000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yeah definitely. I thought that was being worked on very recently, maybe it hasn't landed...","msgtype":"m.text"},"ts":1470882258000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: okay, it fails as of 54.0.2825.0","msgtype":"m.text"},"ts":1470882292000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I'll file the bug if there's not one open already. Thanks.","msgtype":"m.text"},"ts":1470882312000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it would be really useful for all of us to get gather and make sure our implementation of shadow DOM & custom elements are consistent","msgtype":"m.text"},"ts":1470882316000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: there have been enough moving parts in the spec that I'm afraid one of us is going to miss something","msgtype":"m.text"},"ts":1470882335000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yeah I know dominiccooney is intending to upstream the tests to WPT format; he's been writing a lot in testharness.js style","msgtype":"m.text"},"ts":1470882344000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: cool","msgtype":"m.text"},"ts":1470882350000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: we also have a dozen or so tests that I'm intending to upstream","msgtype":"m.text"},"ts":1470882365000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: so this step 2 is somewhat problematic & ambiguous","msgtype":"m.text"},"ts":1470882538000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1470882541000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: how are we supposed to be checking the inheritance?","msgtype":"m.text"},"ts":1470882556000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: via the inherited interfaces concept defined in Web IDL?","msgtype":"m.text"},"ts":1470882576000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: because it's totally possible for author to override prototype/__proto__ of HTMLInputElement","msgtype":"m.text"},"ts":1470882579000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: and make it a getter, right?","msgtype":"m.text"},"ts":1470882586000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Right it's a static relationship","msgtype":"m.text"},"ts":1470882593000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah, okay","msgtype":"m.text"},"ts":1470882602000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Not instanceof","msgtype":"m.text"},"ts":1470882602000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so that poses a different challenge that I don't think we have any mechanism to check something like that in our engine","msgtype":"m.text"},"ts":1470883631000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: right now, this isn't an issue because none of subclasses of HTMLElement is constructible but","msgtype":"m.text"},"ts":1470883649000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: right, when I was adding that I tried to ask if it was something implementable. I'm open to other strategies as long as we maintain the invariant that you can't have a HTMLButtonElement with a local name that is not button.","msgtype":"m.text"},"ts":1470883701000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: It seems a bit strange to specifically throw an exception on HTMLElement and its subclasses","msgtype":"m.text"},"ts":1470883801000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: when we don't throw on SVGElement, Text, Range, etc...","msgtype":"m.text"},"ts":1470883813000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: trying to page this back in... I believe the problem is that the others will fail later, whereas HTMLElement and its subclasses will not.","msgtype":"m.text"},"ts":1470883868000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: right, the others will fail at https://dom.spec.whatwg.org/#concept-create-element step 6.1.3","msgtype":"m.text"},"ts":1470883902000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it can certainly fail if we checked new.target","msgtype":"m.text"},"ts":1470883902000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1470883929000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it's fairly easy for us to check that something inherits from HTMLElement and then it's not one of DOM classes","msgtype":"m.text"},"ts":1470883996000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: so we can just do that to throw an exception in that case","msgtype":"m.text"},"ts":1470884009000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: since new.target can't be getter, etc... this is basically unobservable from scripts","msgtype":"m.text"},"ts":1470884028000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: can you open an issue if you think we should change this? I want to be sure I have time to go through all the implications and I'm heading to bed soon. I imagine changing it will be possible but I remember investigating this a few weeks ago and thinking that the current spec was the alternative I liked the most, but not strongly.","msgtype":"m.text"},"ts":1470884030000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: sure","msgtype":"m.text"},"ts":1470884043000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: I'm gonna do that on webcomponents issue tracker for now","msgtype":"m.text"},"ts":1470884059000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sounds good","msgtype":"m.text"},"ts":1470884069000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"mkwst: I think https://mikewest.github.io/origin-policy/ is pretty clearly already sufficiently viable enough to merit being moved into https://github.com/wicg if you wanted to","msgtype":"m.text"},"ts":1470884924000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst: though I donâ€™t really know what the WICG criteria are for accepting new repos","msgtype":"m.text"},"ts":1470884964000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst: nor am I saying it would be necessarily a win to move it","msgtype":"m.text"},"ts":1470884998000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst is relaxing, try again next week","msgtype":"m.text"},"ts":1470890625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah OK","msgtype":"m.text"},"ts":1470891953000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tobie: for WebIDL please consider prioritizing https://www.w3.org/Bugs/Public/show_bug.cgi?id=28244 for resolution","msgtype":"m.text"},"ts":1470892009000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Opera hasn't hired a new foolip thus far, email address bounces","msgtype":"m.text"},"ts":1470899364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"did a reply-all to an old Blink thread","msgtype":"m.emote"},"ts":1470899380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: did you see https://twitter.com/jasnell/status/763479355196596224 btw?","msgtype":"m.text"},"ts":1470900182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if Sam Ruby has been involved with that since they're both at IBM or if that organization is so large it just sorta happened","msgtype":"m.text"},"ts":1470900260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, https://bugzilla.mozilla.org/show_bug.cgi?id=1294100","msgtype":"m.text"},"ts":1470901461000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: sigh","msgtype":"m.text"},"ts":1470901654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I guess we can overload if it gets bad","msgtype":"m.text"},"ts":1470901673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: not the end of the world and certainly not the ugliest API, but why do we always try?","msgtype":"m.text"},"ts":1470901698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: left a comment","msgtype":"m.text"},"ts":1470901778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1470901803000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"One more stupid extension gone: https://hg.mozilla.org/mozilla-central/rev/0ca0282fe48b","msgtype":"m.text"},"ts":1470902726000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Whoa, Thomas is all over the map","msgtype":"m.text"},"ts":1470902758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: :) If you have philipjâŠ™oc in bugs or email threads, please do replace with something not so bouncy","msgtype":"m.text"},"ts":1470903954000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"MikeSmith: mmm.","msgtype":"m.text"},"ts":1470904079000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"MikeSmith: I'm new to this. What's the strategy here? Toss a coin and beat whomever doesn't accept that resolution until they do?","msgtype":"m.text"},"ts":1470904581000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: dunno, really. Maybe Domenic has some good suggestion","msgtype":"m.text"},"ts":1470906172000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tobie: if you actually change the spec maybe bz would reconsider","msgtype":"m.text"},"ts":1470906223000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"would be good to get more details from him or others at mozilla about the compat problems he alludes to","msgtype":"m.text"},"ts":1470906256000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"foolip might also have some insight on https://www.w3.org/Bugs/Public/show_bug.cgi?id=28244","msgtype":"m.text"},"ts":1470906374000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ugh, not sure what to make of that","msgtype":"m.text"},"ts":1470907020000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"JakeA: https://twitter.com/jaffathecake/status/763662818277265408 is a great sketch","msgtype":"m.text"},"ts":1470907206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not a fair comparison though ðŸ˜Š","msgtype":"m.text"},"ts":1470907218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It pops into my head loads","msgtype":"m.text"},"ts":1470907243000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Just read an article where the UK divers offered their \"reckons\" about the green water in Rio. \"we think maybe a load of ink has run into the pool\"","msgtype":"m.text"},"ts":1470907360000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"foolip: yeah me neither I just want to know what expectations to write into the IDL test harness","msgtype":"m.text"},"ts":1470907480000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: asked for clarification","msgtype":"m.text"},"ts":1470907735000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"thanks will try to find a test for an interface that all browsers actually implement","msgtype":"m.text"},"ts":1470907999000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah. The only reasonable thing to spec is that this behavior is implementation specific. :p","msgtype":"m.text"},"ts":1470908250000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"MikeSmith: you're working on idlharness? That's awesome!","msgtype":"m.text"},"ts":1470908285000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: for now you can look at the results of http://w3c-test.org/webstorage/idlharness.html though that obscures what exactly is being called","msgtype":"m.text"},"ts":1470908347000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmmmm. old apple docs still has <menuitem><menu>. chromium with experimental web platform features enabled now parses like firefox. i suppose i should give up and spec reality :-|","msgtype":"m.text"},"ts":1470908365000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: I will try to pull out what actual call will cause it","msgtype":"m.text"},"ts":1470908371000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"s/tobie/foolip/","msgtype":"m.text"},"ts":1470908389000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tobie: not working on it actively but instead just planning to update it to align with any spec changes or any places where it might not conform to the current spec","msgtype":"m.text"},"ts":1470908438000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wait, do we have any reason do thing that the current non-interoperable state is required for compat? I thought it was just a case of nobody quite being motivated to care in any engine.","msgtype":"m.text"},"ts":1470908548000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Hmm, Polymer apparently though it was fine to encourage everyone to use document.createElement(string, string)","msgtype":"m.text"},"ts":1470908828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Per the bug Ms2ger referenced earlier, so I guess we'll have to support that","msgtype":"m.text"},"ts":1470908851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"uh, this toString() handling","msgtype":"m.text"},"ts":1470909291000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I wish I understood why blink wants the behavior they have","msgtype":"m.text"},"ts":1470909314000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: v0 of custom elements didn't use a dictionary","msgtype":"m.text"},"ts":1470909357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: and v0 appears to be leaking","msgtype":"m.text"},"ts":1470909392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: despite the promise from Google that changes would be possible due to usage of libraries and such","msgtype":"m.text"},"ts":1470909414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: actually as far as the test I guess I am just overcomplicating this","msgtype":"m.text"},"ts":1470909417000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"foolip: you just do, e.g., (new Object()).toString.call(StorageEvent.prototype)","msgtype":"m.text"},"ts":1470909431000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and from Gecko you will see \"[object StorageEventPrototype]\" but from Blink you will see \"[object StorageEvent]\"","msgtype":"m.text"},"ts":1470909469000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: isn't that typeExtension extra argument in some spec?","msgtype":"m.text"},"ts":1470909493000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: that is unrelated to my toString() complains","msgtype":"m.text"},"ts":1470909501000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: oh sorry","msgtype":"m.text"},"ts":1470909530000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: you're talking about the IDL thing","msgtype":"m.text"},"ts":1470909538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but yes, we had to fix something in Gecko recently because someone was passing 2nd param to createElement","msgtype":"m.text"},"ts":1470909543000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1470909544000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"was just reading bugmail","msgtype":"m.text"},"ts":1470909550000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and testing blink","msgtype":"m.text"},"ts":1470909559000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it makes really no sense","msgtype":"m.text"},"ts":1470909562000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"foolip: it's a dictionary these days","msgtype":"m.text"},"ts":1470909564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't care too much, but the behavior what blink has now makes no sense","msgtype":"m.text"},"ts":1470909583000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: oh. I wonder if anyone considered whether changing that in Blink is actually web compatible","msgtype":"m.text"},"ts":1470909592000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"smaug____: for toStringTag you mean?","msgtype":"m.text"},"ts":1470909598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and I don't understand the reasoning","msgtype":"m.text"},"ts":1470909599000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"well, toString()","msgtype":"m.text"},"ts":1470909609000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I think the reason is that TC39 introduced @@toStringTag or whatever it's called, exposing toString() in some way","msgtype":"m.text"},"ts":1470909648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: so then the question was how that should work for IDL","msgtype":"m.text"},"ts":1470909678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, I don't really care strongly about it either way","msgtype":"m.text"},"ts":1470909688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and that other thing... where is Polymer encouraging everyone to use createElement(string, string) ?","msgtype":"m.text"},"ts":1470909772000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, I don't even know what happens when string is passed as a param which expects dictionary","msgtype":"m.text"},"ts":1470909862000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"exception","msgtype":"m.text"},"ts":1470909878000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: see the link to the polymer documentation","msgtype":"m.text"},"ts":1470909969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: if you scroll down a bit it's there","msgtype":"m.text"},"ts":1470909977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, I need to look at the log","msgtype":"m.text"},"ts":1470909994000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: ok, so spec should possibly allow string as param, and do nothing with it?","msgtype":"m.text"},"ts":1470910281000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1470912369000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"foolip: MikeSmith: Blink cares and would prefer to follow the JavaScript pattern of [object Foo] instead of divergent [object Foo] + [object FooPrototype]","msgtype":"m.text"},"ts":1470917315000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Blink wanna ship it?","msgtype":"m.text"},"ts":1470917351000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"We already have for like 5 releases","msgtype":"m.text"},"ts":1470917357000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Even better","msgtype":"m.text"},"ts":1470917433000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: yes, saw it live even. Apparently they're not sure how to handle spec updates wrt semver yet, so this is going to be very interesting","msgtype":"m.text"},"ts":1470921118000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"oh fascinating","msgtype":"m.text"},"ts":1470921498000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Personally I hope they follow properly, I wouldn't want to keep the slower lib maintained if it's not necessary","msgtype":"m.text"},"ts":1470921537000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"But then browsers don't follow it quite either, so it'd be necessary for shims anyways :(","msgtype":"m.text"},"ts":1470921578000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Yeah, Gecko is slowly getting there","msgtype":"m.text"},"ts":1470921606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's hard to get anyone from Blink engaged","msgtype":"m.text"},"ts":1470921618000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WebKit might a few minor tweaks, but nothing major","msgtype":"m.text"},"ts":1470921629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And I suspect Edge will be the last","msgtype":"m.text"},"ts":1470921640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g., someone has been implementing IPv4 parsing and canonicalizing in Gecko, which is nice","msgtype":"m.text"},"ts":1470921671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is this about the @@toStringTag thing, or is there another thing where you can't get any Blink reaction","msgtype":"m.text"},"ts":1470921680000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: this was about URL parsing","msgtype":"m.text"},"ts":1470921704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: there's also something about the Origin header I've been waiting 9 months on or so now","msgtype":"m.text"},"ts":1470921722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: it's not a continuous effort on my part though and the Blink side may have forgotten about it","msgtype":"m.text"},"ts":1470921758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh. I guess URL is hard because you need to figure out how to actually transition.","msgtype":"m.text"},"ts":1470921759000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Also because the code itself doesn't live in Blink I suppose.","msgtype":"m.text"},"ts":1470921795000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: (and others going to tpac), interested in sharing airbnb?","msgtype":"m.text"},"ts":1470924626000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Do the fetch() web platform tests all live in service-workers/?","msgtype":"m.text"},"ts":1470927312000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nope, I'm just blind","msgtype":"m.text"},"ts":1470927322000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: any ideas on how to test a Response's HTTPS state?","msgtype":"m.text"},"ts":1470928360000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: hmm not really","msgtype":"m.text"},"ts":1470928579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What is it used for anyway?","msgtype":"m.text"},"ts":1470928595000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I just know you and mkwst are very conscious to propagate it everywhere :)","msgtype":"m.text"},"ts":1470928618000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it's used to determine whether you get powerful API access","msgtype":"m.text"},"ts":1470928723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: secure contexts, basically","msgtype":"m.text"},"ts":1470928735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1470928738000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah not sure how that could be tested... I imagine it would only matter for Responses served from a service worker, which will always have a HTTPS settings object","msgtype":"m.text"},"ts":1470928781000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh maybe I could importScripts from an insecure origin","msgtype":"m.text"},"ts":1470928795000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, think so","msgtype":"m.text"},"ts":1470928796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No wait that doesn't work, still the same global","msgtype":"m.text"},"ts":1470928804000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: https://github.com/w3c/web-platform-tests/pull/3452 FYI","msgtype":"m.text"},"ts":1470928884000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if I am reading https://url.spec.whatwg.org/ right `new URL('file://../..') should not normalize away the 2 `..` segments? https://url.spec.whatwg.org/#path-state 2. (noop due to https://url.spec.whatwg.org/#pop-a-urls-path file exception)","msgtype":"m.text"},"ts":1470931113000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"is that correct?","msgtype":"m.text"},"ts":1470931118000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"seems right, let's test the reference implementation...","msgtype":"m.text"},"ts":1470931234000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/wgD0KlaR/","msgtype":"m.text"},"ts":1470931271000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That's not promising...","msgtype":"m.text"},"ts":1470931275000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(whatwg-url might have a bug, or the spec might be crazy, but that doesn't seem good in any case)","msgtype":"m.text"},"ts":1470931315000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bradleymeck: are you sure the predicate at the top of path state step 1 is true?","msgtype":"m.text"},"ts":1470931411000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'd debug through the whatwg-url implementation to see what's going on","msgtype":"m.text"},"ts":1470931448000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i think `c is EOF code point or \"/\"` should be true since it consumes a `/`","msgtype":"m.text"},"ts":1470931498000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1470931536000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I thought c would be . here","msgtype":"m.text"},"ts":1470931546000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But yeah I can't really trust myself to get this right at a glance, and don't have time to dig into it in detail, so I dunno. It does seem possible the result is wrong. But as for what's going on I'd debug through whatwg-url to confirm.","msgtype":"m.text"},"ts":1470931597000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i can take a look because trying to figure out what import of a url would look like for node, thanks","msgtype":"m.text"},"ts":1470931642000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Hmm I thought you'd do `new URL(importSpecifier, \"file://\" + __filename)` for that","msgtype":"m.text"},"ts":1470931746000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"node modules are not directly mapped to files though","msgtype":"m.text"},"ts":1470932174000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"importSpecifier for \"module\" and \"@scope/module\" don't work I think","msgtype":"m.text"},"ts":1470932204000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Yeah true","msgtype":"m.text"},"ts":1470932265000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Anything that doesn't start with ./, ../, or / would be handled specially I think","msgtype":"m.text"},"ts":1470932281000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"trying to figure out the exact mechanics of that but yea","msgtype":"m.text"},"ts":1470932453000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the idea in #node-dev was to resolve using a `new URL(new URL(importSpecifier, \"node://\"), \"file://\" + __filename)` basically","msgtype":"m.text"},"ts":1470932538000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but saw that importSpecifier was auto-normalizing without any way to turn it off","msgtype":"m.text"},"ts":1470932573000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I did not know about https://news.ycombinator.com/item?id=11175258","msgtype":"m.text"},"ts":1470933088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems very exciting if it works out","msgtype":"m.text"},"ts":1470933101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hundreds of FPS is what VR needs","msgtype":"m.text"},"ts":1470933134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bradleymeck: I think in HTML the model is that you first do syntax checks on the identifier","msgtype":"m.text"},"ts":1470933340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bradleymeck: afterwards you hand it to the parser","msgtype":"m.text"},"ts":1470933354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they do prefix checking, which we will need to do","msgtype":"m.text"},"ts":1470933388000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but after that we are in new territory","msgtype":"m.text"},"ts":1470933396000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"prefix of ./ ../ or / will definitely need to resolve against current script, modules need to use node_modules (suggested node:// scheme)","msgtype":"m.text"},"ts":1470933466000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but noticed that any non-file url in spec should auto-normalize which is a pretty no-go, so reading spec and saw this maybe bug?","msgtype":"m.text"},"ts":1470933508000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"annevk: any reason sendBeacon spec does not use Fetch's keep-alive flag?","msgtype":"m.text"},"ts":1470934613000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: prolly bug","msgtype":"m.text"},"ts":1470934834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bradleymeck: I don't really follow","msgtype":"m.text"},"ts":1470934870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://github.com/jsdom/whatwg-url/pull/58 looked like a bug in whatwg-url, but unsure about that test that it makes fail, just gonna hand off here","msgtype":"m.text"},"ts":1470934998000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: wow nice find... the definition of \"pop\" is different than normal, that's awesome :-/","msgtype":"m.text"},"ts":1470935097000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah, I guess I can replace pop with shorten","msgtype":"m.text"},"ts":1470935223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it used to match, but then I had to add a special case, but I kept the term","msgtype":"m.text"},"ts":1470935239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that would be nice","msgtype":"m.text"},"ts":1470935265000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://github.com/whatwg/url/issues/140","msgtype":"m.text"},"ts":1470935288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://aturon.github.io/blog/2016/08/11/futures/ might be of interest","msgtype":"m.text"},"ts":1470935374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: with streams they don't talk about backpressure at all, I wonder if that's a problem","msgtype":"m.text"},"ts":1470935410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Pffff https://github.com/Polymer/docs/issues/1705","msgtype":"m.text"},"ts":1470935749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://stackoverflow.com/questions/38907385/should-non-2xx-status-code-responses-include-cors-specific-headers","msgtype":"m.text"},"ts":1470957397000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]