[
{"content":{"body":"MikeSmith: plinss says the issue is fixed","msgtype":"m.text"},"ts":1492560181000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh cool","msgtype":"m.text"},"ts":1492560196000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"takes a look","msgtype":"m.emote"},"ts":1492560203000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: curl https://api.csswg.org/bikeshed/ -F url=https://raw.githubusercontent.com/w3c/ServiceWorker/246340fce702bab2cce35b046f090606389b279a/docs/index.bs -F output=err","msgtype":"m.text"},"ts":1492560405000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"still gives the error:","msgtype":"m.text"},"ts":1492560441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"LINK ERROR: No 'attr-value' refs found for 'serviceworker' with for='link/rel'.","msgtype":"m.text"},"ts":1492560442000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<a data-link-type=\"attr-value\" data-lt=\"serviceworker\" data-link-for=\"link/rel\">serviceworker</a>","msgtype":"m.text"},"ts":1492560442000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess there’s some latency in updating?","msgtype":"m.text"},"ts":1492560463000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Should have been fixed yesterday. :/","msgtype":"m.text"},"ts":1492560519000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"debugging now","msgtype":"m.text"},"ts":1492560642000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1492560702000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: btw another question: When I ref that was not failing before is failing now, is there same way I can debug that to know what it *used* to resolve to?","msgtype":"m.text"},"ts":1492561408000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: Seems lists.whatwg.org isn't working, forced HTTPS in my browser, but only responds to HTTP. This means confirmation links for moderation, subscribe and unsubscribe don't work.","msgtype":"m.text"},"ts":1492561409000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Tricked clicking the link by curl'ing the url instead.","msgtype":"m.text"},"ts":1492561424000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"MikeSmith: Not really; you need a historical version of the linking database, basically.","msgtype":"m.text"},"ts":1492561437000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"OK yeah I figured but wanted to confirm","msgtype":"m.text"},"ts":1492561461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(I don't know how maintains this, feel free anyone else to reply :) )","msgtype":"m.text"},"ts":1492561467000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"TabAtkins: the specific failure is this:","msgtype":"m.text"},"ts":1492561473000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"LINK ERROR: No 'dfn' refs found for 'the worker's documents'.","msgtype":"m.text"},"ts":1492561475000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<a data-link-type=\"dfn\" data-lt=\"the worker’s Documents\">the worker’s Documents</a>","msgtype":"m.text"},"ts":1492561476000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: pretty sure that used to resolve to something in HTML, but in looking through the HTML changelog I find nothing that has changed it","msgtype":"m.text"},"ts":1492561516000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, will look some more","msgtype":"m.text"},"ts":1492561521000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Krinkle: known issue","msgtype":"m.text"},"ts":1492561537000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Krinkle: cannot remember the details of the cause, but lists.whatwg.org has not worked since we moved to HTTPS, ever","msgtype":"m.text"},"ts":1492561578000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so links to all the old indexed e-mail messages from those archives are broken","msgtype":"m.text"},"ts":1492561600000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but we have a mirror at https://lists.w3.org/Archives/Public/public-whatwg-archive/","msgtype":"m.text"},"ts":1492561626000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah you’re asking about just the Web-based subscribe  UI","msgtype":"m.text"},"ts":1492561673000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I have not tried to used that. I wonder if others have been able to, but I would think not, given the underlying issue","msgtype":"m.text"},"ts":1492561710000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yeah, the problem is people can't unsubscribe anymore.","msgtype":"m.text"},"ts":1492562610000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"hehehe","msgtype":"m.text"},"ts":1492562627000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Krinkle: There’s no fix that I’m aware of. Well other than moving the hosting. I think it’s been year or maybe even two since Dreamhost told Ian they would be fixing it soon or something like that","msgtype":"m.text"},"ts":1492562793000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or however long it’s been it was moved to HTTPS","msgtype":"m.text"},"ts":1492562826000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I mean, you can at least remove them manually from the DB?","msgtype":"m.text"},"ts":1492563055000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"subcribers?","msgtype":"m.text"},"ts":1492563127000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe Ian can","msgtype":"m.text"},"ts":1492563143000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe annevk has admin access to it now, I dunno","msgtype":"m.text"},"ts":1492563160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Krinkle: so yeah I’m told the only way to unsubscribe from the list is by e-mail to the unsubscribe-whatwg⊙wo (or whatever) address, which I think is shown in the footer of every messsage","msgtype":"m.text"},"ts":1492566768000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: \"whatwg-unsubscribe⊙wo\" actually, and not in the footer anymore for some time (config setting in Mailman).","msgtype":"m.text"},"ts":1492566843000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"MikeSmith: And then you get a confirmation mail with a link that doesn't work :)","msgtype":"m.text"},"ts":1492566854000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"unless you know how to bypass HSTS","msgtype":"m.text"},"ts":1492566865000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"(e.g. via curl)","msgtype":"m.text"},"ts":1492566874000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"oh :(","msgtype":"m.text"},"ts":1492566875000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://whatwg.org/mailing-list#specs","msgtype":"m.text"},"ts":1492566890000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"the link is HTTP but Chrome enforces it to HTTPS because whatwg.org has HTSTS with *. subdomains enforced","msgtype":"m.text"},"ts":1492566923000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: what happens if you just reply to the confirmation e-mail?","msgtype":"m.text"},"ts":1492566956000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is what those instructions say to do","msgtype":"m.text"},"ts":1492566977000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1492566994000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> Please disregard the suggestion that you follow links to a Web site; due to a limitation of our hosting provider, that site is currently unavailable.)","msgtype":"m.text"},"ts":1492566997000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so the instructions explicitly say to not follow links to the Web site","msgtype":"m.text"},"ts":1492567026000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://gist.github.com/Krinkle/ce71cff47fcf2a7fb6b923518c185347","msgtype":"m.text"},"ts":1492567050000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I don't see that instruction.","msgtype":"m.text"},"ts":1492567072000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Ah, on the website for subscribing","msgtype":"m.text"},"ts":1492567098000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"yeah good point","msgtype":"m.text"},"ts":1492567101000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1492567102000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I didn't see that","msgtype":"m.text"},"ts":1492567103000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"yeah we should put it in bold I guess","msgtype":"m.text"},"ts":1492567115000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Mailmail also has a config option to change the tetx phrasing in these e-mail so we could omit the link in general and say something else there","msgtype":"m.text"},"ts":1492567126000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I did not notice it either at first","msgtype":"m.text"},"ts":1492567126000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Configurable for each individual email list even","msgtype":"m.text"},"ts":1492567142000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"maybe e-mail Ian about that","msgtype":"m.text"},"ts":1492567168000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if you can tell him exactly where it can be changed I reckon he would be happy to change it","msgtype":"m.text"},"ts":1492567201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and provide some suggested text","msgtype":"m.text"},"ts":1492567215000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"k, I'll try to do that later today or tomorrow. Thanks","msgtype":"m.text"},"ts":1492567516000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1492567598000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"foolip: how does https://html.spec.whatwg.org/#dom-texttrack-inbandmetadatatrackdispatchtype relate to the new <audio> metadata proposal?","msgtype":"m.text"},"ts":1492581601000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: I see the xref thing got fixed","msgtype":"m.text"},"ts":1492582432000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://rawgit.com/w3c/ServiceWorker/fcf2835093c4e4caf213d56e1d28f3c5c06c7aaa/docs/index.html#link-type-serviceworker","msgtype":"m.text"},"ts":1492582439000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1492582447000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"plinss's fix wasn't spread to all of his parsers. ^_^","msgtype":"m.text"},"ts":1492582457000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the link at contains the keyword \"_serviceworker_\"","msgtype":"m.text"},"ts":1492582458000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah cool","msgtype":"m.text"},"ts":1492582464000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks much","msgtype":"m.text"},"ts":1492582469000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and thanks to plinss too","msgtype":"m.text"},"ts":1492582479000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: btw I wonder if I can attend the CSS WG f2f tomorrow?","msgtype":"m.text"},"ts":1492582496000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is the room big enough?","msgtype":"m.text"},"ts":1492582508000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ask Rossen/astearns.  (They'll say yes.)","msgtype":"m.text"},"ts":1492582511000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1492582515000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yes, it is (as an observer)","msgtype":"m.text"},"ts":1492582516000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"which building y’all in?","msgtype":"m.text"},"ts":1492582526000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"East? North?","msgtype":"m.text"},"ts":1492582544000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Old building? Or newer one?","msgtype":"m.text"},"ts":1492582569000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"astearns: OK if I attend tomorrow?","msgtype":"m.text"},"ts":1492582587000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1492582598000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"yay","msgtype":"m.text"},"ts":1492582616000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"damn, proved tab right","msgtype":"m.emote"},"ts":1492582616000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1492582617000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Today is East (6 on the website map), but I know we'll be in a different building at some point; dunno if it's tomorrow or Friday.","msgtype":"m.text"},"ts":1492582618000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1492582621000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: ok, thanks","msgtype":"m.text"},"ts":1492582645000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: tomorrow we're in \"Faculty Research Building A and B room\"","msgtype":"m.text"},"ts":1492583569000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: ah OK thanks yeah that building’s close by","msgtype":"m.text"},"ts":1492583640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though I can’t remember that we ever had a meeting in that building before","msgtype":"m.text"},"ts":1492583667000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"how stable https://html.spec.whatwg.org/multipage/forms.html#attr-fe-autocomplete-section might be?","msgtype":"m.text"},"ts":1492589492000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: Chrome implemented it at some point I think","msgtype":"m.text"},"ts":1492589598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: we haven't touched it since Ian maintained it","msgtype":"m.text"},"ts":1492589612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1492589621000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"section-* feels a bit odd, but ok fine, if it has been implemented","msgtype":"m.text"},"ts":1492589643000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: oh, I thought you meant autocomplete in general, I don't know for sure about section-, though I suspect it's the same","msgtype":"m.text"},"ts":1492589698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"misread the URL","msgtype":"m.emote"},"ts":1492589724000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: be sure to not use CSSString for things that need to be USVString, such as URLs","msgtype":"m.text"},"ts":1492590091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think the only URLs in CSSOM are inside url(\"…\") inside CSS syntax","msgtype":"m.text"},"ts":1492590132000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: there's no API for those?","msgtype":"m.text"},"ts":1492590148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: and I'd imagine there's CSSImportRule and some things around CSSStyleSheet that would be affected","msgtype":"m.text"},"ts":1492590179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh right, forgot about that one. CSSImportRule currently has: readonly attribute DOMString href;","msgtype":"m.text"},"ts":1492590228000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Stylesheet also has href","msgtype":"m.text"},"ts":1492590263000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"We can change that I think.","msgtype":"m.text"},"ts":1492590264000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's sorta fine since it's readonly, but better to be specific","msgtype":"m.text"},"ts":1492590272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"USVString for href?","msgtype":"m.text"},"ts":1492590277000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(That is to say, you can use any for readonly attribute and it would still be the same.)","msgtype":"m.text"},"ts":1492590295000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: yes","msgtype":"m.text"},"ts":1492590313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"stylesheet.insertRule(\"@import url('\\uD800');\", 0) can sneak surrogates in there","msgtype":"m.text"},"ts":1492590361000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"same as document.write(\"<a href='\\uD800'>\") though","msgtype":"m.text"},"ts":1492590378000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: annevk: are DOMString and USVString https://heycam.github.io/webidl/#dfn-distinguishable ? (or can they be?)","msgtype":"m.text"},"ts":1492591726000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ah, interesting point, I guess you can't typedef them after all","msgtype":"m.text"},"ts":1492591751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess webidl should have a string-like category there","msgtype":"m.text"},"ts":1492591787000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"can typedef to DOMString and say in prose that USVString instead is also conforming","msgtype":"m.text"},"ts":1492591853000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin: *Can* you smuggle that in? Per Syntax, you have to do a \"decode\"; that'll get rid of the surrogate, no?","msgtype":"m.text"},"ts":1492591867000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: only in https://drafts.csswg.org/css-syntax/#input-byte-stream when starting with bytes, so not in CSSOM","msgtype":"m.text"},"ts":1492591926000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: syntax parse entry points can be called with a string (for cssom)","msgtype":"m.text"},"ts":1492591948000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The URL parser expects scalar values so you better remove lone surrogates before you invoke that","msgtype":"m.text"},"ts":1492591980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://drafts.csswg.org/css-syntax/#tokenization says its input is code points","msgtype":"m.text"},"ts":1492591982000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Yeah, per spec you totes can't call any of the parsing algos with a bytestream.","msgtype":"m.text"},"ts":1492592081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: looks like https://drafts.csswg.org/css-values/#urls doesn’t have an imperative algorithm that explicitly invokes the URL parser","msgtype":"m.text"},"ts":1492592109000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(Yeah, it doesn't yet; I have a 2-year-old issue on me to do that.)","msgtype":"m.text"},"ts":1492592123000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: so I can’t typedef CSSOMString?","msgtype":"m.text"},"ts":1492592551000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: nope, I was wrong","msgtype":"m.text"},"ts":1492592623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: you can typedef it to DOMString and add some text that implementations can also use USVString","msgtype":"m.text"},"ts":1492592645000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Or vice versa - plan for the future.)","msgtype":"m.text"},"ts":1492592668000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: but you cannot do (DOMString or USVString)","msgtype":"m.text"},"ts":1492592672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: yeah, I'm all on board with this UTF-8 Rust train, but it seems like it would be a hit everywhere else unless specifically optimized","msgtype":"m.text"},"ts":1492592717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm still a little worried about that with the encoder/decoder/URL standards, whether I made the right choice to enforce input to be scalar values, but sufficiently smart implementations can optimize, as hsivonen demonstrated","msgtype":"m.text"},"ts":1492592762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: when I use file upload on https://checker.html5.org/ without a file extension it seems to default to XML, though a) it doesn't tell me it's doing this and b) there's no way to override it","msgtype":"m.text"},"ts":1492597837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WHATWG's working mode, finally in HTML: https://github.com/whatwg/whatwg.org/pull/25","msgtype":"m.text"},"ts":1492598115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: try the checker again now","msgtype":"m.text"},"ts":1492602697000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"foolip: I addressed your agent feedback, I hope","msgtype":"m.text"},"ts":1492602736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: cool","msgtype":"m.text"},"ts":1492602781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: the other thing I needed but that's rather esoteric I guess is overriding the charset","msgtype":"m.text"},"ts":1492602800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for that there’s a query param","msgtype":"m.text"},"ts":1492602826000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gimme a second to find the name","msgtype":"m.text"},"ts":1492602832000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: nah it's fine, I don't need it anymore I think","msgtype":"m.text"},"ts":1492602848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1492602864000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: In case you wonder,","msgtype":"m.text"},"ts":1492606752000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: Is the intent for <script type=\"module\"> to omit credentials for same-origin scripts?","msgtype":"m.text"},"ts":1492606754000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"that ticket on the URL standard about # in userinfo and whatnot stemmed from https://github.com/servo/rust-url/pull/293#issuecomment-295035947.","msgtype":"m.text"},"ts":1492606766000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah I saw","msgtype":"m.text"},"ts":1492606862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I wonder what SimonSapin thought the ambiguity was","msgtype":"m.text"},"ts":1492606903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I hope he didn't just try to make it somebody else their problem","msgtype":"m.text"},"ts":1492606918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"says nothing.","msgtype":"m.emote"},"ts":1492606941000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: seems a bit weird to have to set crossorigin to cause modules to send cookies to my own origin","msgtype":"m.text"},"ts":1492607532000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: Looks like this change happened in https://github.com/whatwg/html/pull/607, but the comment suggests it was a non-normative change","msgtype":"m.text"},"ts":1492609351000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"fwiw Safari appears to implement this as spec'd","msgtype":"m.text"},"ts":1492609380000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm pretty sure it's not changed there and was always like this","msgtype":"m.text"},"ts":1492609497000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: Domenic and I did discuss that maybe it should change and I believe dherman still wants crossorigin=use-credentials to not be supported at all, though not sure how strongly he feels about that","msgtype":"m.text"},"ts":1492609535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that's also how fetch() works by default","msgtype":"m.text"},"ts":1492609555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: You're right, the CORS setting was converted into a credentials mode before that PR","msgtype":"m.text"},"ts":1492609675000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I'm ok with the fetch default (although it catches people out a lot), but it feels weird that crossorigin implies sending cookies to the same origin","msgtype":"m.text"},"ts":1492609775000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Maybe we should do away with \"omit\" and just use \"same-origin\" for credentials all the time","msgtype":"m.text"},"ts":1492609815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Unless folks optin to \"include\" obv","msgtype":"m.text"},"ts":1492609828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<script type=\"module\" src=\"blah.js\"> - no credentials","msgtype":"m.text"},"ts":1492609839000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"<script type=\"module\" src=\"blah.js\" crossorigin> - with credentials","msgtype":"m.text"},"ts":1492609849000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: hmm yeah","msgtype":"m.text"},"ts":1492609898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I don't want to rock the boat too much. I'd rather have modules than not :D","msgtype":"m.text"},"ts":1492609904000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: file an issue? This seems like a fix that can be made post-shipping too","msgtype":"m.text"},"ts":1492609921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Shall do","msgtype":"m.text"},"ts":1492609933000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: removing credentials is hard, but adding is okay (opposite of exceptions)","msgtype":"m.text"},"ts":1492609969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Domenic: https://github.com/whatwg/html/issues/2557","msgtype":"m.text"},"ts":1492610838000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that module behavior is unlike other tags that have a crossorigin attribute, right?  they all use same-origin credentials mode by default, right?","msgtype":"m.text"},"ts":1492611582000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"mostly because they existed before fetch spec I guess","msgtype":"m.text"},"ts":1492611596000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"^mostly^maybe","msgtype":"m.text"},"ts":1492611602000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: most APIs are no-cors with credentials, and crossorigin makes it CORS same-origin credentials, and crossorigin=use-credentials makes it CORS with credentials","msgtype":"m.text"},"ts":1492611773000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ah, ok","msgtype":"m.text"},"ts":1492611783000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: thanks, sorry for my confusions","msgtype":"m.text"},"ts":1492611790000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"confusion","msgtype":"m.text"},"ts":1492611793000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it is pretty confusing :D","msgtype":"m.text"},"ts":1492611804000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess modules are just \"different\"","msgtype":"m.text"},"ts":1492611811000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think it's mostly my fault","msgtype":"m.text"},"ts":1492612307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Arguably \"omit\" is a better default and we had this idea that by default fetch() would be minimal, but we have changed quite a bit of that since then, but not revisited that","msgtype":"m.text"},"ts":1492612361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We should probably still expose \"omit\" for the extra-paranoid, but it shouldn't be the default I think","msgtype":"m.text"},"ts":1492612399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if it would help or hurt if you could just encode the RequestInit values into attributes on tags","msgtype":"m.text"},"ts":1492612399000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"then people could just be explicit","msgtype":"m.text"},"ts":1492612412000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: there's been proposals for that, main question was how that would work in detail and what all the interactions with existing attributes would be","msgtype":"m.text"},"ts":1492612445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<script type=\"module\" requestinit=\"{ mode=same-origin credentials=same-origin }\">","msgtype":"m.text"},"ts":1492612460000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or something","msgtype":"m.text"},"ts":1492612469000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I dunno... could also be an admission of \"we can't make good defaults, punt it to the web devs to figure out\"","msgtype":"m.text"},"ts":1492612497000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or interpreted as that","msgtype":"m.text"},"ts":1492612506000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Hah, they've already got plenty of data for that","msgtype":"m.text"},"ts":1492612562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: type crossorigin=anonymous, not crossorigin=\"\", and maybe it's clearer","msgtype":"m.text"},"ts":1492613663000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: is the latter really non-conforming? Seems like a bug","msgtype":"m.text"},"ts":1492618384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm yeah I might be confused, \"The empty string is also a valid keyword\"","msgtype":"m.text"},"ts":1492618579000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: set theory grmlb","msgtype":"m.text"},"ts":1492623859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: do you know about H/2 header compression?","msgtype":"m.text"},"ts":1492626579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if the cookie is the same for each request, does it become smaller?","msgtype":"m.text"},"ts":1492626595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, I don't know. I didn't realise the compression was across requests, but it makes sense","msgtype":"m.text"},"ts":1492626879000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm not a 100% sure on this","msgtype":"m.text"},"ts":1492626897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I haven't studied H/2 as much as I probably should","msgtype":"m.text"},"ts":1492626915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it should only be transmitted once, iirc","msgtype":"m.text"},"ts":1492626990000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: thoughts on https://github.com/whatwg/html/pull/2521#discussion_r112269700?","msgtype":"m.text"},"ts":1492629564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: speaking of CORS and modules...I'm looking at https://github.com/w3c/web-platform-tests/blob/master/html/semantics/scripting-1/the-script-element/module/crossorigin.html and it doesn't look quite right to me","msgtype":"m.text"},"ts":1492630600000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Domenic: in particular the \"NoCORS\"/\"WithCORS\" bits seem backwards at first glance","msgtype":"m.text"},"ts":1492630637000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"since \"NoCORS\" is paired with \"different\", while \"WithCORS\" is paired with \"same\"","msgtype":"m.text"},"ts":1492630658000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"I would have expected it to be the other way around, that NoCORS would only work with \"same\" origin","msgtype":"m.text"},"ts":1492630683000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"annevk: Thanks for merging my wpt. I'd be interested in your thoughts on https://bugzilla.mozilla.org/show_bug.cgi?id=1340477#c8 regarding whether browsers should pretend to do something useful with autocomplete tokens that they don't actually do anything with.","msgtype":"m.text"},"ts":1492631344000,"senderName":"mmn","senderId":"mmn@irc"},
{"content":{"body":"Supporting feature detection is usually The Right Way™ but my use cases aren't particularly strong","msgtype":"m.text"},"ts":1492631435000,"senderName":"mmn","senderId":"mmn@irc"},
{"content":{"body":"mmn: you mean not reflect tokens we do not support? Sounds reasonable","msgtype":"m.text"},"ts":1492631663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mmn: if something else, needinfo me and I'll get to it tomorrow","msgtype":"m.text"},"ts":1492631692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that's what I mean","msgtype":"m.text"},"ts":1492631703000,"senderName":"mmn","senderId":"mmn@irc"},
{"content":{"body":"return the default \"on\" or \"off\" in those cases (depending on the form's @autocomplete)","msgtype":"m.text"},"ts":1492631740000,"senderName":"mmn","senderId":"mmn@irc"},
{"content":{"body":"aklein: will look at the test in a bit, but in general the terminology is a bit confusing. \"No CORS\" means \"don't respect CORS restrictions\".","msgtype":"m.text"},"ts":1492631787000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"aklein: the tests seem OK to me from this perspective","msgtype":"m.text"},"ts":1492632814000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"although confusingly named","msgtype":"m.text"},"ts":1492632823000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah, interesting","msgtype":"m.text"},"ts":1492633433000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Domenic: what do \"different\" and \"same\" mean?","msgtype":"m.text"},"ts":1492633455000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: also not great... I guess, \"CORS-same-origin\" and \"CORS-different-origin\"?","msgtype":"m.text"},"ts":1492633492000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and actually I didn't understand your first thing. the test description says \"Error in CORS-different-origin script\"","msgtype":"m.text"},"ts":1492633499000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"https://html.spec.whatwg.org/#cors-same-origin","msgtype":"m.text"},"ts":1492633525000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"also confusing about this test is that \"Error\" means \"we ran the script\"","msgtype":"m.text"},"ts":1492633526000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"\"different\" == \"cross\" here?","msgtype":"m.text"},"ts":1492633600000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Although I think that response's type should be \"error\", not \"opaque\", so CORS-cross-origin isn't accurate (much less CORS-different-origin)","msgtype":"m.text"},"ts":1492633601000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I would support editing the test for clarity so that NoCORS/CORS-different-origin -> \"missing CORS headers\" and WithCORS/CORS-same-origin -> \"has correct CORS headers\"","msgtype":"m.text"},"ts":1492633677000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but for the \"different\" case, shouldn't these be \"Blocked script download\"?","msgtype":"m.text"},"ts":1492633701000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Hmm then what is the difference between \"NoCORS\" vs. \"BlockedMissingHeader\" yeah","msgtype":"m.text"},"ts":1492633709000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that is, tests 1 and 5","msgtype":"m.text"},"ts":1492633717000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: yes, these tests seem wrong, OK.","msgtype":"m.text"},"ts":1492633818000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"From the spec's point of view https://github.com/w3c/web-platform-tests/blob/master/html/semantics/scripting-1/the-script-element/module/crossorigin-root-missingheader.sub.html and https://github.com/w3c/web-platform-tests/blob/master/html/semantics/scripting-1/the-script-element/module/crossorigin-root-different.sub.html should be identical","msgtype":"m.text"},"ts":1492633842000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"confusing _and_ wrong, good","msgtype":"m.text"},"ts":1492633845000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"yeah, that looks right to me","msgtype":"m.text"},"ts":1492633855000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Domenic: happy to make a PR, do you think we should just remove those cases for now? I'm sorta curious if Edge \"passes\" this test, though","msgtype":"m.text"},"ts":1492634426000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: I think we should change them to fail","msgtype":"m.text"},"ts":1492634466000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I am also curious","msgtype":"m.text"},"ts":1492634472000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sad that the output of location.hash doesn't work as input to decodeURIComponent","msgtype":"m.text"},"ts":1492634489000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"decodeURIComponent is known to be pretty broken","msgtype":"m.text"},"ts":1492635417000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess the URL API is the answer in theory","msgtype":"m.text"},"ts":1492635436000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: An HTTP2 stream can choose whether to cache or not-cache a header value for future use within that stream. Not-caching is designed to protect against CRIME-like attacks (http://httpwg.org/specs/rfc7541.html#rfc.section.7.1), and cookies in particular might be something we'd want to not-cache because of that. However, I haven't checked whether Chrome","msgtype":"m.text"},"ts":1492638570000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"stores cookies into the HPACK dynamic table.","msgtype":"m.text"},"ts":1492638571000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]