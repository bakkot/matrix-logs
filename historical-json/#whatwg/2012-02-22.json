[
{"content":{"body":"is it that there's 'no DRM' or that they're not 'adding to the HTML5 spec'? I think their claim is that they're only adding data to the element","msgtype":"m.text"},"ts":1329869280000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"They're adding mechanisms whose sole purpose is enabling DRM within the browser to operate.","msgtype":"m.text"},"ts":1329869340000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"yes, but I think they're trying to convince (us? themselves?) that they're isolating DRM from HTML and the user agent","msgtype":"m.text"},"ts":1329869460000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"I don't understand the distinction you're claiming they're trying to draw.","msgtype":"m.text"},"ts":1329869461000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"so far my plans for sleeping earlier","msgtype":"m.text"},"ts":1329869462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is trying to get to bed before 4 am","msgtype":"m.emote"},"ts":1329869640000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"trying","msgtype":"m.text"},"ts":1329869641000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"mine is sleeping by 12AM","msgtype":"m.text"},"ts":1329869642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you're somewhat behind :-)","msgtype":"m.text"},"ts":1329869643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unless you're not in CET anymore","msgtype":"m.text"},"ts":1329869700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"still am :(","msgtype":"m.text"},"ts":1329869701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1329869702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"going now, read then sleep :) nn","msgtype":"m.text"},"ts":1329869703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1329869760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks around for Ms2ger","msgtype":"m.emote"},"ts":1329870300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"huh, I love http://gavinsharp.com/irc/whatwg.html","msgtype":"m.text"},"ts":1329873000000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"kennyluck: Hey! I gotta lot of responses to CSS3 Images stuff you need to accept or reject!","msgtype":"m.text"},"ts":1329873120000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_, I accept them all.","msgtype":"m.text"},"ts":1329873121000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Cool, I'll add a minutes link to the issues list once it shows up.","msgtype":"m.text"},"ts":1329873180000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"(Honestly I have no idea what the process is. Perhaps I shouldn't have played Last Call games.)","msgtype":"m.text"},"ts":1329873360000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"It's easy.  I just need to get an explicit \"accept\" or \"reject\" to every response I make to an LC issue.","msgtype":"m.text"},"ts":1329873420000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"(Or note that I couldn't get one.)","msgtype":"m.text"},"ts":1329873421000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Then TimBL reviews the ones where the commenter didn't agree with me, and either accepts my resolutions or sends it back.","msgtype":"m.text"},"ts":1329873480000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins, is there a process that allows me to flag automatic \"accept\"?","msgtype":"m.text"},"ts":1329873481000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"flag myself as accepting anything, I mean.","msgtype":"m.text"},"ts":1329873540000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"I suppose you could just say that you accept any resolution (you just wanted to make a comment) in the initial email.","msgtype":"m.text"},"ts":1329873541000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"But it's not a big deal.","msgtype":"m.text"},"ts":1329873542000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"annevk, plh fixed the domcore->dom4 refs in the requestAnimationFrame spec","msgtype":"m.text"},"ts":1329873960000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"annevk, he also 'fixed' all the html references to point to w3.org/TR/html5/","msgtype":"m.text"},"ts":1329874020000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"so Ms2ger pinged me a few hours back to say \"seems like the automatic reporting went into an infinite loop\" about the following http://w3c-test.org/framework/details/dom4-Ms2ger-submissions/Document-getElementById.html/engine/gecko/","msgtype":"m.text"},"ts":1329874380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I must be missing something","msgtype":"m.text"},"ts":1329874381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because I don't see anything there that indicates any infinite loop is occurring","msgtype":"m.text"},"ts":1329874440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe it was some transient problem that happened while I was jacking around with the backend and he just noticed it then but it's gone now","msgtype":"m.text"},"ts":1329874500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"AryehGregor: you working on CSS some these days?","msgtype":"m.text"},"ts":1329874740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah, Transforms","msgtype":"m.text"},"ts":1329874800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1329874801000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1329884040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just now got websockets support working on w3c-test.org","msgtype":"m.text"},"ts":1329884041000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i need a less charged name that \"specially focusable\"","msgtype":"m.text"},"ts":1329887460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"something that doesn't imply that the element is focusable","msgtype":"m.text"},"ts":1329887461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but which makes sense to use in the definition of \"focusable\"","msgtype":"m.text"},"ts":1329887520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a \"focus candidate\" maybe","msgtype":"m.text"},"ts":1329887521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"has its tabindex focus flag set\" it is.","msgtype":"m.text"},"ts":1329887760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do I completely unset a particular apache directive?","msgtype":"m.text"},"ts":1329893400000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or set it back to the default?","msgtype":"m.text"},"ts":1329893460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: depends on the directive","msgtype":"m.text"},"ts":1329894240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: OK","msgtype":"m.text"},"ts":1329894241000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I was hoping there was just an \"Unset\" or whatever","msgtype":"m.text"},"ts":1329894242000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I can see there's not","msgtype":"m.text"},"ts":1329894243000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i'm not aware of one","msgtype":"m.text"},"ts":1329894244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for some it wouldn't make sense","msgtype":"m.text"},"ts":1329894245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1329894246000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"think of apache configs as an imperative language","msgtype":"m.text"},"ts":1329894247000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1329894248000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1329894249000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, the one in particular I want to change is RequestReadTimeout","msgtype":"m.text"},"ts":1329894300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for WebSocket testing","msgtype":"m.text"},"ts":1329894301000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no idea","msgtype":"m.text"},"ts":1329894302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because the Debian defaults for that at least are too low","msgtype":"m.text"},"ts":1329894303000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1329894304000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, pong","msgtype":"m.text"},"ts":1329899460000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: hey","msgtype":"m.text"},"ts":1329899520000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"are you still seeing that problem you reported yesterday?","msgtype":"m.text"},"ts":1329899521000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Let's try","msgtype":"m.text"},"ts":1329899580000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Buddy of mine who works on web frameworks: What break is that Chrome tries to find the /favicon.ico for the debugger which in Flask's case will invalidate the preserved local context.","msgtype":"m.text"},"ts":1329901800000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"jamesr__: \"fixed\" indeed","msgtype":"m.text"},"ts":1329903480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: Is pywebsocket considered safe to put on public-facing servers these days? Last time I heard, it wasn't","msgtype":"m.text"},"ts":1329903720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://code.google.com/p/pywebsocket/source/browse/trunk/src/mod_pywebsocket/standalone.py#87","msgtype":"m.text"},"ts":1329903900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jamesr__: draft looks good though, didn't really spot any obvious mistakes, although more globals is too bad","msgtype":"m.text"},"ts":1329903901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure if that applies when using pywebsocket as an apache module rather than using standalone","msgtype":"m.text"},"ts":1329903960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jamesr__: any reason it doesn't just use partial Window btw?","msgtype":"m.text"},"ts":1329904020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr__: in the IDL?","msgtype":"m.text"},"ts":1329904021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(this is about http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/RequestAnimationFrame/Overview.html fwiw)","msgtype":"m.text"},"ts":1329904022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"links to the June 2010 draft of HTML","msgtype":"m.text"},"ts":1329904380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh yes, dated references are some much better","msgtype":"m.text"},"ts":1329904381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1329904382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh wow","msgtype":"m.text"},"ts":1329904560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm using out through the Apache module","msgtype":"m.text"},"ts":1329906480000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"using it","msgtype":"m.text"},"ts":1329906481000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"installed frm Debian package","msgtype":"m.text"},"ts":1329906540000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"Does that make it impossible to inject code?","msgtype":"m.text"},"ts":1329906600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i didn't see any security bugs against the Debian package but will check when i get back","msgtype":"m.text"},"ts":1329906601000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"Hi all. Is there any way to monitor changes inside DOM node, or change of some elements property (height for example)? In ie7+ and normal browsers.","msgtype":"m.text"},"ts":1329906660000,"senderName":"silentimp","senderId":"silentimp@irc"},
{"content":{"body":"jgraham: i am happy to install whatever better alternatives there might be","msgtype":"m.text"},"ts":1329906780000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"[tm]: I am not aware of what alternatives exist that meet all the requirements","msgtype":"m.text"},"ts":1329906900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"silentimp: \"ie7+ and normal browsers\"? i think the answer to that is \"no\". if you change that to a different set of browsers, the answer is \"mutation listeners\", but those are going away and are being replaced by \"mutation observers\" (which isn't implemented yet, i think)","msgtype":"m.text"},"ts":1329907140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that's just for dom changes, not style changes","msgtype":"m.text"},"ts":1329907141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'm not aware of style mutation observers or anything like that","msgtype":"m.text"},"ts":1329907200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"although some browsers might have events for when reflow or repaint happens","msgtype":"m.text"},"ts":1329907260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: http://www.tavendo.de/autobahn/ maybe","msgtype":"m.text"},"ts":1329907261000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"https://github.com/oberstet/Autobahn","msgtype":"m.text"},"ts":1329907320000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"mutation listeners implemented in ff,chrome and opera as far as i know. Not sure about safari. Is there any way but timers to emulate this events in IE?","msgtype":"m.text"},"ts":1329907380000,"senderName":"silentimp","senderId":"silentimp@irc"},
{"content":{"body":"reflow and repaint is happen much more often then changes in specific node. so timer is better, am i right?","msgtype":"m.text"},"ts":1329907500000,"senderName":"silentimp","senderId":"silentimp@irc"},
{"content":{"body":"mutation events are implemented, but are going away","msgtype":"m.text"},"ts":1329907501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mutation observers is only implemented in Chrome","msgtype":"m.text"},"ts":1329907502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and only in a dev/beta build","msgtype":"m.text"},"ts":1329907503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://en.m.wikipedia.org/wiki/Comparison_of_WebSocket_implementations","msgtype":"m.text"},"ts":1329907560000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"MikeSmith, yeah, can't reproduce the infinite loop either","msgtype":"m.text"},"ts":1329907620000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh. so I think timer is best decision for the moment any way","msgtype":"m.text"},"ts":1329907621000,"senderName":"silentimp","senderId":"silentimp@irc"},
{"content":{"body":"[tm]: The hardest requirement is \"allows arbitary bits on the wire\"","msgtype":"m.text"},"ts":1329907622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We have to be able to create invalid responses","msgtype":"m.text"},"ts":1329907623000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But there's no good reason a server should let you do that","msgtype":"m.text"},"ts":1329907624000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So it might be hard to find an existing project that meets our needs","msgtype":"m.text"},"ts":1329907625000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(pywebsocket does do that, but seems to be insecure-by-design and not just to people writing tests)","msgtype":"m.text"},"ts":1329907680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I kind of assume we will need custom code","msgtype":"m.text"},"ts":1329907681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I believe Mozilla uses pywebsocket as well","msgtype":"m.text"},"ts":1329907740000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think everyone uses it internally","msgtype":"m.text"},"ts":1329907860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which means it would be really nice to use it directly","msgtype":"m.text"},"ts":1329907920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it would also be really nice if people can't run arbitary commands on w3c-test.org","msgtype":"m.text"},"ts":1329907921000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Require review, like with php files?","msgtype":"m.text"},"ts":1329907980000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well given the comment it's not clear that's safe enough","msgtype":"m.text"},"ts":1329908100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I can't find the rationale for the comment htough","msgtype":"m.text"},"ts":1329908280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith, hsivonen: in v.nu, when the image report is shown, you could check for width=\"\" and height=\"\" constraints because you know the intrinsic dimensions","msgtype":"m.text"},"ts":1329908460000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"would only work with js, though","msgtype":"m.text"},"ts":1329908520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and would probably take focus away from alt=\"\"","msgtype":"m.text"},"ts":1329908521000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe would be better to check this in a conformance checker that's integrated with devtools in a browser","msgtype":"m.text"},"ts":1329908580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Crap, where is this ff memleak coming from","msgtype":"m.text"},"ts":1329910260000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"zcorpan: I suppose that would be doable","msgtype":"m.text"},"ts":1329910261000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"asmodai: extensions are the usual suspects these days","msgtype":"m.text"},"ts":1329910262000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Ghostery maybe?","msgtype":"m.text"},"ts":1329910320000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"it's the only one I added in recent days","msgtype":"m.text"},"ts":1329910321000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"Got to be it, as I was quite stable before that, mmm","msgtype":"m.text"},"ts":1329910322000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"asmodai: sounds believable","msgtype":"m.text"},"ts":1329910500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"asmodai: this maybe? https://bugzilla.mozilla.org/show_bug.cgi?id=718375","msgtype":"m.text"},"ts":1329910560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh hey","msgtype":"m.text"},"ts":1329910561000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"~50% in memory because of JavaScript  XD","msgtype":"m.text"},"ts":1329910800000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"on my ff instance","msgtype":"m.text"},"ts":1329910801000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"hsivonen: could very well be that that is what I am running into.","msgtype":"m.text"},"ts":1329910920000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"I argued https://www.w3.org/Bugs/Public/show_bug.cgi?id=16074 for a while","msgtype":"m.text"},"ts":1329911100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"did not really get anywhere","msgtype":"m.text"},"ts":1329911101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: seen https://svn.tools.ietf.org/svn/wg/appsawg/draft-ietf-appsawg-mime-default-charset/latest/draft-ietf-appsawg-mime-default-charset.html ?","msgtype":"m.text"},"ts":1329911460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I heard something was going on","msgtype":"m.text"},"ts":1329911580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks wrong","msgtype":"m.text"},"ts":1329911581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"'pecify that the \"charset\" parameter is not used for the defined subtype, because the charset information is transported inside the payload (as in \"text/xml\")'","msgtype":"m.text"},"ts":1329911582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"text/xml definitely uses the charset parameter","msgtype":"m.text"},"ts":1329911583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and it continues","msgtype":"m.text"},"ts":1329911700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"' specifically including \"text/html\" and \"text/xml\", SHOULD NOT specify the use of a \"charset\" parameter, nor any default value, in order to avoid conflicting interpretations should the charset parameter value and the value specified in the payload disagree'","msgtype":"m.text"},"ts":1329911701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, it sure looks wrong","msgtype":"m.text"},"ts":1329911702000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also \"The default charset parameter value for text/plain is unchanged from [RFC2046] and remains as \"US-ASCII\".\"","msgtype":"m.text"},"ts":1329911703000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"mwaha ' The default charset parameter value for text/plain is unchanged from [RFC2046] and remains as \"US-ASCII\".'","msgtype":"m.text"},"ts":1329911704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1329911705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"now I need to figure out where to send feedback to","msgtype":"m.text"},"ts":1329911760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"apps-discuss","msgtype":"m.text"},"ts":1329911761000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"another list to subscribe to","msgtype":"m.text"},"ts":1329911762000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thanks, I don't want to subscribe to another list really","msgtype":"m.text"},"ts":1329911820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: you really prefer the interface callback stuff?","msgtype":"m.text"},"ts":1329912600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I prefer interoperability, and we're not getting that with callbacks","msgtype":"m.text"},"ts":1329912601000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sure we are","msgtype":"m.text"},"ts":1329912660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sometimes Microsoft does not play ball short term, but long term it works out","msgtype":"m.text"},"ts":1329912661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if some people at Mozilla do the same, it won't really work out any different","msgtype":"m.text"},"ts":1329912662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, there is no good reason to make the platform less consistent here","msgtype":"m.text"},"ts":1329912720000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"the platform is already inconsistent","msgtype":"m.text"},"ts":1329912721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"here","msgtype":"m.text"},"ts":1329912780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and there are good reasons","msgtype":"m.text"},"ts":1329912781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see the long public-script-coord thread","msgtype":"m.text"},"ts":1329912782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is there a summary that explains what problem is solved by changing JS strings to be indexed by UTF-32 code unit?","msgtype":"m.text"},"ts":1329913200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think it's basically about better dealing with all the new code points","msgtype":"m.text"},"ts":1329913320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"without libraries having to take special care","msgtype":"m.text"},"ts":1329913321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe I should read that thread and reply","msgtype":"m.text"},"ts":1329913322000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"a lot of the thread is terminology confusion","msgtype":"m.text"},"ts":1329913380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"indexing by UTF-32 code unit is generally a false goal","msgtype":"m.text"},"ts":1329913381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and a few interesting questions about what to do with surrogate code points and such","msgtype":"m.text"},"ts":1329913382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I sure hope it's not going to get stored as utf-32","msgtype":"m.text"},"ts":1329913383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"since you still have to consider runs of more than one code unit to split strings on grapheme cluster boundaries","msgtype":"m.text"},"ts":1329913384000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and people care about grapheme clusters","msgtype":"m.text"},"ts":1329913385000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah yeah, combining code points...","msgtype":"m.text"},"ts":1329913440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Does any programming language have a widely-agreed-to-be-good approach to strings yet?","msgtype":"m.text"},"ts":1329913441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: probably not. I think UTF-8 plus standards library that doesn't suck for manipulating UTF-8 would be good.","msgtype":"m.text"},"ts":1329913500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"remembers seeing a preference towards forbidding random access of Unicode strings, and only allowing iteration (which means you can easily store as UTF-8 and can provide iteration over grapheme clusters or whatever)","msgtype":"m.emote"},"ts":1329913560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think people generally choose either speed of certain operations or correctness in all cases, and the people who need one always see the other as broken","msgtype":"m.text"},"ts":1329913561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(and adding a separate type for byte/character arrays with random access)","msgtype":"m.text"},"ts":1329913620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So it's hard to construct a system that has uoniversal agreement","msgtype":"m.text"},"ts":1329913621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*universal","msgtype":"m.text"},"ts":1329913622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`: yeah, it's generally a non-goal to be able to index into strings","msgtype":"m.text"},"ts":1329913623000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: I think there's a tendency towards what superficially looks like correctness, but real correctness is always harder","msgtype":"m.text"},"ts":1329913680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Harder and slower","msgtype":"m.text"},"ts":1329913681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: e.g. indexing by Unicode character superficially looks like correctness but doesn't buy you much of interest","msgtype":"m.text"},"ts":1329913682000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"you can handle emoji better","msgtype":"m.text"},"ts":1329913740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Basically I think most languages strike a balance between speed and correctness that make them look broken to everyone","msgtype":"m.text"},"ts":1329913741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Android seems to be trying to force C++ code to stop using wchar_t strings (presumably in favour of UTF-8 encoded char strings), by providing minimal broken support for wchar_t","msgtype":"m.text"},"ts":1329913800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"all-ascii identifiers are easy in any UTF and prose is hard in any UTF","msgtype":"m.text"},"ts":1329913801000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(which is a bit annoying when you have lots of code that uses lots of wchar_t strings)","msgtype":"m.text"},"ts":1329913802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but yeah sometimes I do have the feeling TC39 is just trying to design the perfect language","msgtype":"m.text"},"ts":1329913803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wchar_t is full of FAIL","msgtype":"m.text"},"ts":1329913804000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wchar_t gives you the problems of UTF-32, and the problems of UTF-16, and the additional problem of not knowing whether you're using UTF-32 or UTF-16","msgtype":"m.text"},"ts":1329913860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sounds like html's definition of \"unicode code point\"","msgtype":"m.text"},"ts":1329913980000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"What should I use between <br> and <br/> for HTML documents?","msgtype":"m.text"},"ts":1329914040000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"either is fine","msgtype":"m.text"},"ts":1329914100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"crocket: Whichever you find most aesthetically pleasing","msgtype":"m.text"},"ts":1329914101000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what's the term for MIME payload that I should use so that the IETF folk see I have the right shibboleth and don't laugh at me? \"entity body\"?","msgtype":"m.text"},"ts":1329914160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1329914220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Do HTML parsers convert <br/> to <br>?","msgtype":"m.text"},"ts":1329914221000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"headers + entity body is what goes in a request/response","msgtype":"m.text"},"ts":1329914222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"crocket: they just ignore the /","msgtype":"m.text"},"ts":1329914223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for HTTP. but RFC 2046 talks about message body.","msgtype":"m.text"},"ts":1329914224000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"crocket: so <br> is slightly better as there's less cruft","msgtype":"m.text"},"ts":1329914225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: there's some conversion between the two, hmm","msgtype":"m.text"},"ts":1329914280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but I guess I prefer HTTP terminology over email terminology as a political statement","msgtype":"m.text"},"ts":1329914281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: do the bjoern approach, use several terms and put them in square quotes","msgtype":"m.text"},"ts":1329914282000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: Yet the instant you want JS you need to index into code-units, and if you're moving stuff between JS and the DOM, then you don't want to convert all the time.","msgtype":"m.text"},"ts":1329914283000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: s/square/scare/ ?","msgtype":"m.text"},"ts":1329914284000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: http://tools.ietf.org/html/rfc2616#section-4.3","msgtype":"m.text"},"ts":1329914285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"square? dunno how i managed to type that","msgtype":"m.text"},"ts":1329914340000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: ok. so I mean entity-body","msgtype":"m.text"},"ts":1329914341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1329914342000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: entity body is raw octets, message body is raw bytes decoded per transfer-encoding","msgtype":"m.text"},"ts":1329914343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1329914344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"… Speaking of vendor prefixes: http://googlewebmastercentral.blogspot.com/2012/01/making-form-filling-faster-easier-and.html","msgtype":"m.text"},"ts":1329914640000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Does HTML5 parsers remove / from <br/>, too?","msgtype":"m.text"},"ts":1329914760000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"Does -> Do","msgtype":"m.text"},"ts":1329914761000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"crocket: Yes (effectively) - they act exactly the same with or without the \"/\"","msgtype":"m.text"},"ts":1329914820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I wish HTML was a subset of XML.","msgtype":"m.text"},"ts":1329914880000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"wilhelm: at least x- is less harmful that engine-specific prefixes","msgtype":"m.text"},"ts":1329914881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"crocket: Unfortunately that battle was lost before XML even existed","msgtype":"m.text"},"ts":1329914940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"How do I use libxml with HTML documents, then?","msgtype":"m.text"},"ts":1329914941000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"or lxml","msgtype":"m.text"},"ts":1329914942000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"In Python, if you want to correctly parse random web pages (not ones where you can carefully control them to be non-erroneous or XML-compatible), I think the only option is html5lib","msgtype":"m.text"},"ts":1329915060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"crocket: html5lib or lxml.html, depending on your preference for correctness vs speed","msgtype":"m.text"},"ts":1329915061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(html5lib can give an lxml-compatible tree object)","msgtype":"m.text"},"ts":1329915062000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"html5lib.","msgtype":"m.text"},"ts":1329915120000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"(...if I'm not getting confused)","msgtype":"m.text"},"ts":1329915121000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(you're not)","msgtype":"m.text"},"ts":1329915180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(unless you are confused about something else)","msgtype":"m.text"},"ts":1329915181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I am confused about many other things)","msgtype":"m.text"},"ts":1329915182000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What do C/C++ have instead of html5lib?","msgtype":"m.text"},"ts":1329915183000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"Web browsers","msgtype":"m.text"},"ts":1329915240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I need a library.","msgtype":"m.text"},"ts":1329915241000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"isn't sure there is a general purpose spec-complaint HTML parsing library written in C(++)","msgtype":"m.emote"},"ts":1329915242000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What happened with Hubbub?","msgtype":"m.text"},"ts":1329915243000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That is not deeply tied to a browser","msgtype":"m.text"},"ts":1329915244000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't need a browser.","msgtype":"m.text"},"ts":1329915300000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"hsivonen: True.","msgtype":"m.text"},"ts":1329915301000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"I think hubbub is unmaintained, but I am not sure","msgtype":"m.text"},"ts":1329915302000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The last commit was 13 months ago, so it's unmaintained.","msgtype":"m.text"},"ts":1329915360000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"crocket: Could you use an external tool that parses as HTML5 and outputs in a more easily parseable format (like XML) that you can then read into C/C++?","msgtype":"m.text"},"ts":1329915361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: That's a weird way to do things.","msgtype":"m.text"},"ts":1329915362000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"If so, the validator.nu parser (in Java) is probably best, since it's both correct and fast (unlike anything available to Python or easily available to C/C++)","msgtype":"m.text"},"ts":1329915363000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"validator.nu?","msgtype":"m.text"},"ts":1329915420000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"crocket: Depending on how much you need it you could eiterh pick up maintainance of hubbub, make the validator.nu C++ convertor emit non-gecko-specific code, or rip the parser out of WebKit.","msgtype":"m.text"},"ts":1329915421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's a shame.","msgtype":"m.text"},"ts":1329915480000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"http://about.validator.nu/htmlparser/","msgtype":"m.text"},"ts":1329915481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"C/C++ doesn't have a portable library.","msgtype":"m.text"},"ts":1329915482000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"It is a shame","msgtype":"m.text"},"ts":1329915483000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think java has a built-in HTML library.","msgtype":"m.text"},"ts":1329915540000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"If it does, it won't be correct","msgtype":"m.text"},"ts":1329915541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think python is the best nowadays.","msgtype":"m.text"},"ts":1329915660000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"For processing documents, python is pretty good.","msgtype":"m.text"},"ts":1329915661000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"Is html5lib as good as validator.nu parser?","msgtype":"m.text"},"ts":1329915662000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"html5lib is probably something like 100x slower than the validator.nu parser, but on the plus side it doesn't involve Java","msgtype":"m.text"},"ts":1329915720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I know how to code java programs.","msgtype":"m.text"},"ts":1329915721000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"They're both almost entirely correct HTML5 parser implementations","msgtype":"m.text"},"ts":1329915722000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Did you test both?","msgtype":"m.text"},"ts":1329915723000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"I think hsivonen or someone had ideas to have libxml2 like API for validator.nu's parser","msgtype":"m.text"},"ts":1329915780000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"crocket: They both use the same fairly-extensive test suite","msgtype":"m.text"},"ts":1329915781000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"How come is validator.nu parser a lot faster?","msgtype":"m.text"},"ts":1329915782000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"Because Python is a lot slower than Java","msgtype":"m.text"},"ts":1329915840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"How about C?","msgtype":"m.text"},"ts":1329915841000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"Java is a lot slower than C.","msgtype":"m.text"},"ts":1329915842000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"C should be about as fast as Java","msgtype":"m.text"},"ts":1329915843000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Java programs are usually heavy.","msgtype":"m.text"},"ts":1329915844000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"Think of playing \"mass effect 2\" written in java.","msgtype":"m.text"},"ts":1329915900000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"I don't think there's much difference for this kind of algorithm - Java JITs work well, and the bottlenecks are probably mostly in memory allocation (where Java could be faster) and string manipulation","msgtype":"m.text"},"ts":1329915960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"where's the concept of an origin considered to be defined these days?","msgtype":"m.text"},"ts":1329915961000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah. http://tools.ietf.org/html/rfc6454","msgtype":"m.text"},"ts":1329916020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yep. it's the rfc that precedes the websocket protocol","msgtype":"m.text"},"ts":1329916140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Philip`: Why do you prefer python to java, then?","msgtype":"m.text"},"ts":1329916200000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"crocket: Usually I don't care about execution speed that much (html5lib still only takes a few seconds per megabyte, if I remember correctly), and Python takes less effort to write and to run","msgtype":"m.text"},"ts":1329916320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: There are java 3D games for your information.","msgtype":"m.text"},"ts":1329916440000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"With java, you can make a true platform-independent games.","msgtype":"m.text"},"ts":1329916500000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"I don't think I've ever disputed that :-)","msgtype":"m.text"},"ts":1329916680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: how come step 8 under http://www.whatwg.org/specs/web-apps/current-work/#determining-the-character-encoding says UTF-8 for some locales? did you verify that that makes sense or did you just copy whatever Mozilla localizers did?","msgtype":"m.text"},"ts":1329916740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok. email to apps-discuss sent. not in their Web archive yet.","msgtype":"m.text"},"ts":1329917100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"aargh. If my From and Sender don't match, apps-discuss wants Sender to be subscribed","msgtype":"m.text"},"ts":1329917220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"At least interesting enough zh-TW FF uses UTF-8 as default but the spec matches IE.","msgtype":"m.text"},"ts":1329917221000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"hsivonen, an interesting example of the problem that changing to UTF-32 would solve is, for example, WebKit doesn't display a text run if it starts with a surrogate code point. This could happen if authors use a naive algorithm to do, say, ellipsis in the middle of a text run.","msgtype":"m.text"},"ts":1329917520000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Having said that, this is a WebKit bug so I am not too convinced...","msgtype":"m.text"},"ts":1329917521000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"kennyluck: they they'd get an ellipsis in the middle of a base character and diacritics the next time","msgtype":"m.text"},"ts":1329917580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sigh. did ietf blackhole my email. still not in the archive after replying to the confirmation","msgtype":"m.text"},"ts":1329917581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, that is at least better than the whole text run disappearing.","msgtype":"m.text"},"ts":1329917700000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"I think.","msgtype":"m.text"},"ts":1329917701000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"In any case the internal storage of a JS string probably wouldn't be affected much by this. For example, Python3.3 does provide a UTF-32 string API but whether the string is stored as 1, 2 or 4 bytes per code point depends on the maximum code value appearing in that string, which is quite clever.","msgtype":"m.text"},"ts":1329918000000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"kennyluck: Gecko does the 1 vs. 2 vs. 4 thing for DOM text nodes","msgtype":"m.text"},"ts":1329918120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: nice email!","msgtype":"m.text"},"ts":1329918121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, I thought it only does 1 vs. 2?","msgtype":"m.text"},"ts":1329918122000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"should really write a new RFC 2046","msgtype":"m.text"},"ts":1329918123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kennyluck: so when you've got a huge text node in a script element and the author puts his/her non-ASCII name in a comment, the memory footprint of the node doubles","msgtype":"m.text"},"ts":1329918180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"kennyluck: well, a surrogate pair takes 4 bytes :-)","msgtype":"m.text"},"ts":1329918181000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: thanks. if it only reached the IETF folks","msgtype":"m.text"},"ts":1329918182000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, oh, but in Python3.3, that's a real 4 bytes for each code point.","msgtype":"m.text"},"ts":1329918183000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"if there's any non-BMP in that string.","msgtype":"m.text"},"ts":1329918184000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"s/non-ASCII/non-ISO-8859-1/ above","msgtype":"m.text"},"ts":1329918240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: resend it to www-archive","msgtype":"m.text"},"ts":1329918480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: now it's on apps-discuss! http://www.ietf.org/mail-archive/web/apps-discuss/current/msg04347.html","msgtype":"m.text"},"ts":1329918600000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders why https://lists.w3.org/Archives/Member/w3c-css-wg/2012JanMar/0150.html isn't on www-style","msgtype":"m.emote"},"ts":1329921240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Does anyone know why WebIDL allows float/double to have values like NaN, Infinity, etc.?  That seems undesirable.","msgtype":"m.text"},"ts":1329921300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"will file a bug if no one answers in the time it takes him to file it","msgtype":"m.emote"},"ts":1329921360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Why not? ECMAScript allows those values","msgtype":"m.text"},"ts":1329921361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The WebIDL uses of float/double I can think of don't want them.","msgtype":"m.text"},"ts":1329921420000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like currentTime, or CSSMatrix.","msgtype":"m.text"},"ts":1329921421000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But that seems very interface-specific","msgtype":"m.text"},"ts":1329921422000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If existing users don't want them, they shouldn't be allowed, or should only be allowed if you opt in with an extended attribute.","msgtype":"m.text"},"ts":1329921480000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It seems bad to disallow those values in any interface just because they don't make sense in some","msgtype":"m.text"},"ts":1329921481000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If some interfaces want them and some don't, there should be different types, or extended attributes.","msgtype":"m.text"},"ts":1329921482000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham: i think it's the other way around though","msgtype":"m.text"},"ts":1329921483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: they only make sense in some","msgtype":"m.text"},"ts":1329921484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or it could just say in prose","msgtype":"m.text"},"ts":1329921485000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and often it's just attributes that return a number and therefore never need them either","msgtype":"m.text"},"ts":1329921540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It seems bizzare to me taht if you pass in a variable that happens to be NaN, it would change e.g. overload resolution","msgtype":"m.text"},"ts":1329921541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wasn't overload going to be dropped?","msgtype":"m.text"},"ts":1329921600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yes it was","msgtype":"m.text"},"ts":1329921660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or is","msgtype":"m.text"},"ts":1329921661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, so how is that going to work? There are interfaces that depend on it, surely?","msgtype":"m.text"},"ts":1329921780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"apparently not","msgtype":"m.text"},"ts":1329921781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am obviously behind. Stuff like CanvasRenderingContext2D::createPattern","msgtype":"m.text"},"ts":1329921960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it'd make sense for NaN/INF to be \"converted\" to 0 (in the same sense as a type conversion) unless some flag is present (akin to nullable) ... but that's not what actually happens in many places, at least in the HTML spec","msgtype":"m.text"},"ts":1329921961000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"AFAICT, the HTML spec mostly just doesn't define what to do.","msgtype":"m.text"},"ts":1329922020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I wonder how Opera developers feel about Pepper","msgtype":"m.text"},"ts":1329922021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Except where otherwise specified, for the 2D context interface, any method call with a numeric argument whose value is infinite or a NaN value must be ignored.","msgtype":"m.text"},"ts":1329922022000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Oh, that uses \"or\"","msgtype":"m.text"},"ts":1329922023000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, they use union types now.","msgtype":"m.text"},"ts":1329922024000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Opera even joined the Open Screen Project and this is what they get","msgtype":"m.text"},"ts":1329922025000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"converting to 0 seems more in line with how other functions work when you pass a \"wrong\" type; just convert it and keep going","msgtype":"m.text"},"ts":1329922080000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1329922081000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"open screen project ? maybe internet knows what that is","msgtype":"m.text"},"ts":1329922082000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anyway, off to work","msgtype":"m.text"},"ts":1329922083000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"smaug____: It's Adobe's Flash Player porting and bundling program","msgtype":"m.text"},"ts":1329922140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1329922141000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"open\"","msgtype":"m.text"},"ts":1329922142000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zewt, setting a float/double attribute to something will already throw in any case where ToNumber() throws, which includes at least the case where you pass an object and ToPrimitive() throws.  E.g., video.currentTime = {} already throws TypeError per spec.","msgtype":"m.text"},"ts":1329922500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: oh, long / long long / octet cannot be Infinity and such?","msgtype":"m.text"},"ts":1329922501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, no.","msgtype":"m.text"},"ts":1329922502000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"looks what happens","msgtype":"m.emote"},"ts":1329922503000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"annevk, it seems like in that case it gets set to +0.","msgtype":"m.text"},"ts":1329922560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"2","msgtype":"m.text"},"ts":1329922680000,"senderName":"tomasf","senderId":"tomasf@irc"},
{"content":{"body":"How can I declare a valid XHTML5 document with a doctype tag?","msgtype":"m.text"},"ts":1329923160000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"Can an XHTML5 document conform to \"XHTML 1.0 Strict DTD\"?","msgtype":"m.text"},"ts":1329923161000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"crocket: why do you care about DTD at all?","msgtype":"m.text"},"ts":1329923220000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"DTD is important.","msgtype":"m.text"},"ts":1329923221000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"DTD isn't important","msgtype":"m.text"},"ts":1329923222000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(HTML5's XML serialisation allows you to use any doctype, or none, as you wish)","msgtype":"m.text"},"ts":1329923340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"crocket: http://about.validator.nu/#faq (\"What’s wrong with DTDs?\")","msgtype":"m.text"},"ts":1329923341000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: would be nice if all the headings had ids ^","msgtype":"m.text"},"ts":1329923342000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(though if you're transmitting it as text/html then it's not really the XML serialisation, and you need to use one of http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#obsolete-permitted-doctype-string )","msgtype":"m.text"},"ts":1329923400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(which does allow 1.0 Strict)","msgtype":"m.text"},"ts":1329923401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen: or at least the dtd heading, since i wanted to link to it now :-)","msgtype":"m.text"},"ts":1329923460000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Philip`: I guess <!DOCTYPE html> would do.","msgtype":"m.text"},"ts":1329923760000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"is not a fan of using the html5 doctype before standardization","msgtype":"m.emote"},"ts":1329923761000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"REC != \"standardization\"","msgtype":"m.text"},"ts":1329923820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1329924000000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"those recommendations are called standards","msgtype":"m.text"},"ts":1329924001000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"eg the html4 standard","msgtype":"m.text"},"ts":1329924002000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"no?","msgtype":"m.text"},"ts":1329924003000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1329924004000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh.","msgtype":"m.text"},"ts":1329924005000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"The W3C doesn't publish standards","msgtype":"m.text"},"ts":1329924006000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is that just inappropriate common slang?","msgtype":"m.text"},"ts":1329924007000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"It doesn't use the term \"standard\" officially, it uses \"Recommendation\".","msgtype":"m.text"},"ts":1329924120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1329924121000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"Anyway, HTML5 is more mature than HTML4","msgtype":"m.text"},"ts":1329924180000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"most of its modules are still being haggled about","msgtype":"m.text"},"ts":1329924181000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"even sorta-straightforward stuff","msgtype":"m.text"},"ts":1329924182000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"although, the recommendation piece that (i think annevk?) showed me yesterday, which is basically what other languages call inheritance for css (think LESS,) makes me *super* happy","msgtype":"m.text"},"ts":1329924240000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"That's better than the situation with HTML4, where it was blatantly wrong and people were just resigned to it never being fixed","msgtype":"m.text"},"ts":1329924241000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that's a valid point","msgtype":"m.text"},"ts":1329924300000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"i guess what i am reacting poorly to is the possibility - in a few cases, the likelihood - that the recommendation i'm writing towards will change","msgtype":"m.text"},"ts":1329924301000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"Aww, I missed an XML conversation","msgtype":"m.text"},"ts":1329924360000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"09:22 < Ms2ger> The W3C doesn't publish standards\" - in that case they probably shouldn't have a heading \"standards\" at the top of their homepage","msgtype":"m.text"},"ts":1329924361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You go tell them that","msgtype":"m.text"},"ts":1329924362000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I am no longer surprised by hypocrisy at the W3C","msgtype":"m.text"},"ts":1329924363000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I thought the \"we don't publish standards\" thing was a vauge fear of being sued by ISO or someone","msgtype":"m.text"},"ts":1329924420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"StoneCypher: It doesn't really matter what stan... uh, recommendation you're writing towards - it just matters what web browsers are implementing, and whether they're backward-compatible with the content you've already published","msgtype":"m.text"},"ts":1329924421000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"StoneCypher: (assuming your goal is for your sites to not break in future browsers)","msgtype":"m.text"},"ts":1329924422000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"AryehGregor, HTML requires throwing for non-finite doubles somewhere up front","msgtype":"m.text"},"ts":1329924540000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Except for canvas2d, which silently ignores","msgtype":"m.text"},"ts":1329924541000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, really?","msgtype":"m.text"},"ts":1329924542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1329924543000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, we can apparently disambiguate on argument count only","msgtype":"m.text"},"ts":1329924544000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"AryehGregor, 2.2.2 Dependencies under WebIDL","msgtype":"m.text"},"ts":1329924600000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1329924601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"How confusing.","msgtype":"m.text"},"ts":1329924602000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"These hidden sentences that have arbitrary influences on arbitrary parts of the rest of the spec are almost as intuitive as COME FROM","msgtype":"m.text"},"ts":1329924780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"iirc the spec required throwing before for everything, but some browsers did ignore instead for canvas, and then some pages depended on not throwing for canvas, so the spec changed for canvas","msgtype":"m.text"},"ts":1329924781000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Gecko used to throw for most of canvas IIRC","msgtype":"m.text"},"ts":1329924900000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Blame Philip` for getting that changed :)","msgtype":"m.text"},"ts":1329924901000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I blame Hixie for accepting my suggestions","msgtype":"m.text"},"ts":1329924902000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(throwing was the sane behavior, but I didn't care enough to file spec bugs)","msgtype":"m.text"},"ts":1329924903000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Since when is the web platform supposed to be sane?","msgtype":"m.text"},"ts":1329924960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"there can be some corner cases when it is sane","msgtype":"m.text"},"ts":1329924961000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think it was an attempt to handle edge cases (like scaling by 1/x for small x) relatively gracefully, where throwing an exception is considered non-graceful because it usually clobbers the entire script","msgtype":"m.text"},"ts":1329925020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: if you fasttrack https://www.w3.org/Bugs/Public/show_bug.cgi?id=14929 i'll give you a cookie. :-)","msgtype":"m.text"},"ts":1329925080000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Scaling by 1/x for small x will have discontinuous behavior near 0 no matter what you do.","msgtype":"m.text"},"ts":1329925081000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"zcorpan, fwiw, I've found that attaching a patch + reminder by private email works quite well :)","msgtype":"m.text"},"ts":1329925200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"If the unprefixed property is used widely enough that changing its syntax would be a problem, then ipso facto we should be very reluctant to change its syntax.\"","msgtype":"m.text"},"ts":1329925260000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ha. Ha. Ha.","msgtype":"m.text"},"ts":1329925261000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: seems like a reasonable statement. (the one you quoted)","msgtype":"m.text"},"ts":1329926160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1329926161000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm a little cynical about the CSSWG","msgtype":"m.text"},"ts":1329926162000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Philip`: nah, i'm a c++ programmer.  I need standards compliance, even if it's moot.  It's who I am.","msgtype":"m.text"},"ts":1329927180000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"doesn't see C++ as a great place for caring hugely about standards compliance, given how much is left undefined or implementation-defined or is defined wrongly or is too hard for any human to comprehend, and how most real programs rely on non-standard features","msgtype":"m.emote"},"ts":1329927780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: kay","msgtype":"m.text"},"ts":1329927960000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"Philip`: very little is actually undefined, though","msgtype":"m.text"},"ts":1329927961000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"Philip`: it's just that what's undefined is well defined, which is not usually the case in weaker languages","msgtype":"m.text"},"ts":1329928020000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"Has casting to smaller-width integers been defined yet?","msgtype":"m.text"},"ts":1329928080000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Some fairly critical stuff is(/was until very recently) undefined, like the memory model when you have multiple threads","msgtype":"m.text"},"ts":1329928081000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ms2ger: I think that's always been defined for unsigned ints, but not for signed if the result overflows","msgtype":"m.text"},"ts":1329928140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hmm, I thought the opposite","msgtype":"m.text"},"ts":1329928200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"They don't want to require something that's infeasible on ones' complement architectures","msgtype":"m.text"},"ts":1329928201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/ones'/one's/ (I got distracted by Wikipedia's needlessly pedantic linguistic choice)","msgtype":"m.text"},"ts":1329928380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's defined for unsigned ints last I check.","msgtype":"m.text"},"ts":1329928381000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"zcorpan, if you can raise a bugzilla.validator.nu bug for that, that'd be great","msgtype":"m.text"},"ts":1329928860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(about the image report)","msgtype":"m.text"},"ts":1329928861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"At least with C++, differences between compilers are only relevant once, when you compile.  Once you compile in a given compiler and test it, it will work the same forevermore regardless of C++.","msgtype":"m.text"},"ts":1329929460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"With web stuff, you can test your web page in all major browsers at the time you write it, and it might work just fine, and then it still might not work in future browsers if behavior changes.","msgtype":"m.text"},"ts":1329929520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which is why undefined behavior is more acceptable for C++ than the web.","msgtype":"m.text"},"ts":1329929521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger: downcasting has been well defined since BCPL","msgtype":"m.text"},"ts":1329929522000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"jgraham, are you planning on ever accepting my pull request?","msgtype":"m.text"},"ts":1329929523000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger: any downcast which is correctly masked succeeds","msgtype":"m.text"},"ts":1329929524000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"Okay, let me rephrase that more politely:","msgtype":"m.text"},"ts":1329929525000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, do you have a timeline in mind for accepting my pull request?","msgtype":"m.text"},"ts":1329929526000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"always try to be more polite than he is","msgtype":"m.emote"},"ts":1329929580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which pull request? If it's to testharness.js, just push to dvcs.w3.org/hg/resources/","msgtype":"m.text"},"ts":1329929581000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, he asked me to submit a pull request on github instead of just pushing it.","msgtype":"m.text"},"ts":1329929582000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Except if you're dynamically linking with libstdc++, which might change in the future","msgtype":"m.text"},"ts":1329929583000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If he doesn't respond for long enough, I guess I'll just push the updates myself.","msgtype":"m.text"},"ts":1329929640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Please do what Ms2ger says","msgtype":"m.text"},"ts":1329929641000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, okay.  So should I not submit pull requests in the future, or what?","msgtype":"m.text"},"ts":1329929642000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(I added a second commit to the pull request, in case you didn't notice.)","msgtype":"m.text"},"ts":1329929643000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I haven't got the sync between git and hg worked out properly yet","msgtype":"m.text"},"ts":1329929644000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Should I push that too?)","msgtype":"m.text"},"ts":1329929645000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Yes, that change looks fine","msgtype":"m.text"},"ts":1329929760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: Dunno why I didn't get mail about it","msgtype":"m.text"},"ts":1329929761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If I set up the necessary bits to sync github and hg I think pull requests are still the best way to work, because a crappy code review system is better than no code review system","msgtype":"m.text"},"ts":1329929820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"github's code review doesn't seem too bad at first glance.","msgtype":"m.text"},"ts":1329929880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Got to be better than Bugzilla.","msgtype":"m.text"},"ts":1329929881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well yeah, but so is amputating your own leg with a rusty spoon.","msgtype":"m.text"},"ts":1329929940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Mozilla still uses it.  :(","msgtype":"m.text"},"ts":1329929941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Splinter isn't too bad","msgtype":"m.text"},"ts":1329929942000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I seriously have no idea how Mozilla manage it","msgtype":"m.text"},"ts":1329929943000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But maybe everyone is using the tools that present a UI on top of the broken model","msgtype":"m.text"},"ts":1329930000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That makes it suck less","msgtype":"m.text"},"ts":1329930001000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Pretty much.","msgtype":"m.text"},"ts":1329930120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"What broken model?","msgtype":"m.text"},"ts":1329930540000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Posting diff output to bug reports","msgtype":"m.text"},"ts":1329930600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That makes a lot of sense","msgtype":"m.text"},"ts":1329930601000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not to me","msgtype":"m.text"},"ts":1329930602000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Why not? You're writing patches to a repository, so that's your output","msgtype":"m.text"},"ts":1329930660000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"No, commits in a repository are your output. Why not work with those, and all the advanced tools you have for managing them?","msgtype":"m.text"},"ts":1329930780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor, congratulations, I guess :)","msgtype":"m.text"},"ts":1329931560000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, . . . on what?","msgtype":"m.text"},"ts":1329931561000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The CSSWG likes you","msgtype":"m.text"},"ts":1329931620000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It does?  I didn't notice.","msgtype":"m.text"},"ts":1329931680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://krijnhoetmer.nl/irc-logs/css/20120222#l-375","msgtype":"m.text"},"ts":1329931681000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hurrah.","msgtype":"m.text"},"ts":1329931682000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It only took, what, upwards of a month?","msgtype":"m.text"},"ts":1329931683000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"oh neat","msgtype":"m.text"},"ts":1329931740000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"we're now talking about transform-origin and perspective-origin","msgtype":"m.text"},"ts":1329931741000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"But the bureacrazy needs that time!","msgtype":"m.text"},"ts":1329931742000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, you're going to talk about using hg for specs.","msgtype":"m.text"},"ts":1329931800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yay.","msgtype":"m.text"},"ts":1329931801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"One repo for all specs, apparently","msgtype":"m.text"},"ts":1329931802000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That's okay with me.","msgtype":"m.text"},"ts":1329931803000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I wish it were easier to merge and split repos.","msgtype":"m.text"},"ts":1329931860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"No VCS seems to have managed that yet.","msgtype":"m.text"},"ts":1329931861000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Seems like a natural extension of the concept of a DVCS.","msgtype":"m.text"},"ts":1329931862000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You should be able to merge two repositories, where the merge commit puts one of them in a subdirectory of the other.","msgtype":"m.text"},"ts":1329931863000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think you can do that somehow in hg","msgtype":"m.text"},"ts":1329931920000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Splitting is naturally handled anyway, I guess, by just deleting the irrelevant files in two different copies.","msgtype":"m.text"},"ts":1329931921000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although re-merging won't be nice in that case.","msgtype":"m.text"},"ts":1329931922000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Presumably moving them into a subdirectory that wouldn't preserve the commit IDs (because changing the paths will change the commit content)","msgtype":"m.text"},"ts":1329931923000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"You would move all the files into a subdir in one of the repos before merging","msgtype":"m.text"},"ts":1329931980000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, I suppose that might work","msgtype":"m.text"},"ts":1329932040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Can you simply pull from an unrelated repository into a second one, and then do a merge of the heads?","msgtype":"m.text"},"ts":1329932100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1329932101000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Though you have to say so loudly","msgtype":"m.text"},"ts":1329932102000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"hg PULL\"?","msgtype":"m.text"},"ts":1329932103000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hg pull -f, IIRC","msgtype":"m.text"},"ts":1329932104000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Interesting.","msgtype":"m.text"},"ts":1329933000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"smaug____: validator.nu/mozilla HTML parser code does expose an API","msgtype":"m.text"},"ts":1329936660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"a la libxml2 or whatever","msgtype":"m.text"},"ts":1329936661000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for java apps at least","msgtype":"m.text"},"ts":1329936662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I was thinking API for C/C++","msgtype":"m.text"},"ts":1329936663000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk, partial didn't exist when i wrote the IDL","msgtype":"m.text"},"ts":1329936780000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"annevk, i'll update the references to the most recent thing i can find on w3, but i'll have to leave those as links to w3 and w3c staff might go in and make them more retarded later on","msgtype":"m.text"},"ts":1329936781000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"smaug____: ah OK, yeah, that would be nice to have","msgtype":"m.text"},"ts":1329936782000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm a bit confused with some wording, halp?","msgtype":"m.text"},"ts":1329937500000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"sees http://blogs.adobe.com/flashplayer/2012/02/adobe-and-google-partnering-for-flash-player-on-linux.html and now understands hsivonen's earlier reference to Pepper","msgtype":"m.emote"},"ts":1329937501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"When content whose URL has the same origin as the iframe element's Document fails to load (e.g. […]), then the user agent must queue a task to fire a simple event named error at the element instead.","msgtype":"m.text"},"ts":1329937502000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"what exactly are the origins involved in the same origin check there?","msgtype":"m.text"},"ts":1329937503000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"Who is \"content\" referring to?","msgtype":"m.text"},"ts":1329937560000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"iframe src=foo","msgtype":"m.text"},"ts":1329937561000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"content refers to foo","msgtype":"m.text"},"ts":1329937562000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: i see, thanks!","msgtype":"m.text"},"ts":1329937680000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"Philip`, gtk3 transition is another factor w.r.t. flash linux (gtk3's an ABI change, npapi flash depends on gtk2)","msgtype":"m.text"},"ts":1329938220000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"wow, that is really antisocial","msgtype":"m.text"},"ts":1329938940000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: ?","msgtype":"m.text"},"ts":1329939060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tying Linux Flash > 11.2 to a huge pile of Chrome-only APIs","msgtype":"m.text"},"ts":1329939061000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Fortunately, Flash is progressively less relevant anyway.","msgtype":"m.text"},"ts":1329939180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Still, though . . .","msgtype":"m.text"},"ts":1329939181000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"indeed, maybe support for Flash > 11.2 will never become important to users","msgtype":"m.text"},"ts":1329939300000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"So the CSSWG has finally decided to move from CVS to hg, but it probably won't happen for months.  Oh well.","msgtype":"m.text"},"ts":1329939360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess I have to learn how to use CVS after all.","msgtype":"m.text"},"ts":1329939361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"you have led a protected existence","msgtype":"m.text"},"ts":1329939362000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1329939363000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hmm, my first read through the Adobe announcement missed the just-as-important fact that Adobe won't offer a Flash download other than bundled with Chrome","msgtype":"m.text"},"ts":1329939540000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: oh, I must have missed that","msgtype":"m.text"},"ts":1329939541000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Google must be paying quite a bit to Adobe","msgtype":"m.text"},"ts":1329939542000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so presumably as well as Firefox and Opera getting shafted, so do all other open-source browsers, including Chromium!","msgtype":"m.text"},"ts":1329939600000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"where do i point someone who wants to work on test suites for html?","msgtype":"m.text"},"ts":1329940200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr__: FWIW I don't see any issues with supporting GTK3-based plugins in NPAPI. There might be a little work around the edges but the API dependencies on GTK2 are minimal","msgtype":"m.text"},"ts":1329940320000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Hixie, dvcs.w3.org/hg/html","msgtype":"m.text"},"ts":1329940321000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: public-html-testsuite","msgtype":"m.text"},"ts":1329940380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And","msgtype":"m.text"},"ts":1329940381000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://www.w3.org/html/wg/wiki/Testing/Submission/","msgtype":"m.text"},"ts":1329940382000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or here ofc :)","msgtype":"m.text"},"ts":1329940383000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"k, thanks guys","msgtype":"m.text"},"ts":1329940384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Depends what \"wants to work\" means, really :)","msgtype":"m.text"},"ts":1329940385000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"At this time we are creating tests based on HTML5 'Features'. \"","msgtype":"m.text"},"ts":1329940440000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wonders what that means","msgtype":"m.emote"},"ts":1329940441000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The scare quoutes?","msgtype":"m.text"},"ts":1329940442000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Probably if you s/'Features'/bugs/ it will all make sense","msgtype":"m.text"},"ts":1329940443000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"roc, npapi flash today has dependencies on the ABI of gtk2, so it won't do anything on gtk3 systems. i imagine this could be fixed by some amount of work on the plugin author's side","msgtype":"m.text"},"ts":1329940680000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"i don't know how much work it is","msgtype":"m.text"},"ts":1329940681000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"porting from GTK2 to GTK3 isn't that hard, judging by the patches that port Firefox ... especially since Flash isn't even affected by theming-related changes ... but OK","msgtype":"m.text"},"ts":1329940860000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"ok i did the bug zcorpan wanted","msgtype":"m.text"},"ts":1329941460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: now make zcorpan buy you a cookie... and make sure it isn't a flash cookie :P","msgtype":"m.text"},"ts":1329942240000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"I have to stop reading about pepper, it is just too unpleasant","msgtype":"m.text"},"ts":1329944940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: heh","msgtype":"m.text"},"ts":1329945000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"among the many lessons we have learned over the last 15 years: plugins in whatever form are ultimately  a very bad idea","msgtype":"m.text"},"ts":1329945060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Multipage dead?","msgtype":"m.text"},"ts":1329945061000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#the-canvas-element","msgtype":"m.text"},"ts":1329945062000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not my fault","msgtype":"m.text"},"ts":1329945120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ms2ger: http://dev.w3.org/html5/spec/the-canvas-element.html#the-canvas-element  is working afaict","msgtype":"m.text"},"ts":1329945180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Bah, w3","msgtype":"m.text"},"ts":1329945181000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: indeed, which is why it is surprising that one browser vendor is actively developing a plugin API.","msgtype":"m.text"},"ts":1329945240000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1329945360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dunno what to say about that","msgtype":"m.text"},"ts":1329945420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jamesr: cool","msgtype":"m.text"},"ts":1329945960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: it's only one API","msgtype":"m.text"},"ts":1329946080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: no big deal","msgtype":"m.text"},"ts":1329946081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is very sad that even with 16G of RAM, Gecko source code doesn't stay in the OS page cache for long","msgtype":"m.emote"},"ts":1329946140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"shakes fist at Linux kernel","msgtype":"m.emote"},"ts":1329946141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Pretty sure there will be a setting you can tweak to change that behaviour. And if you do, in three years, you might have figured out how to boot your system again!","msgtype":"m.text"},"ts":1329946920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"has considered just running cat on it all every once in a while from a cron job, with ionice set to idle","msgtype":"m.emote"},"ts":1329946921000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"my brain is having a slow day today, trying again, in [[ When content whose URL has the same origin as the iframe element's Document fails to load (e.g. […]), then the user agent must queue a task to fire a simple event named error at the element instead.]], i'm still not sure i understand which origins are involved.","msgtype":"m.text"},"ts":1329948840000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"is it the iframe.src and iframe.contentDocument.URL, so to speak? or is it the iframe and the parent document?","msgtype":"m.text"},"ts":1329948841000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1329948960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's iframe and it's owner Document","msgtype":"m.text"},"ts":1329948961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that could be a little clearer","msgtype":"m.text"},"ts":1329949020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though that suggests that if content fails to load in cross-origin scenarios nothing is dispatched at all","msgtype":"m.text"},"ts":1329949021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure that's what it is intended","msgtype":"m.text"},"ts":1329949022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what follies is it trying to prevent?","msgtype":"m.text"},"ts":1329949260000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"presumably detecting intranets","msgtype":"m.text"},"ts":1329949320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but you could do the same with XHR so I'm not sure it's preventing anything","msgtype":"m.text"},"ts":1329949321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how so? xhr throws different errors if there's a problem loading vs. security?","msgtype":"m.text"},"ts":1329949740000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"aaaaaaanneeeeeeeeeeeeeeeeeeee","msgtype":"m.text"},"ts":1329950640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(annevk: ping)","msgtype":"m.text"},"ts":1329950641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"might need to turn this one on, http://i.imgur.com/LGawg.jpg","msgtype":"m.text"},"ts":1329950760000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"Hixie: que?","msgtype":"m.text"},"ts":1329950940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: your server sent me an incomplete zip","msgtype":"m.text"},"ts":1329951000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: aside from the obvious thing, namely making it so that the zip is always complete, it would be good to either not notify my side if the zip somehow is incomplete, or at least, to give me a way to determine if it is complete","msgtype":"m.text"},"ts":1329951060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: so i can skip it if it's not","msgtype":"m.text"},"ts":1329951061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh","msgtype":"m.text"},"ts":1329951180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"file too big?","msgtype":"m.text"},"ts":1329951181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's happened before","msgtype":"m.text"},"ts":1329951182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doesn't always happen","msgtype":"m.text"},"ts":1329951183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1329951240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I run zip and then wget","msgtype":"m.text"},"ts":1329951300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you some advice for other commands I can run inbetween","msgtype":"m.text"},"ts":1329951301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm guessing the problem is before zip","msgtype":"m.text"},"ts":1329951302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"probably anolis being killed by the kernel or something","msgtype":"m.text"},"ts":1329951303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"before zip there's the spec-splitter","msgtype":"m.text"},"ts":1329951304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which I currently run twice","msgtype":"m.text"},"ts":1329951305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or spec splitter yeah","msgtype":"m.text"},"ts":1329951306000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe you could make the spec splitter output a checkpoint file at the end, and then verify that it's there","msgtype":"m.text"},"ts":1329951360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but maybe I can drop the first copy","msgtype":"m.text"},"ts":1329951361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why twice?","msgtype":"m.text"},"ts":1329951362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it looks like the a11y people think we should somehow expose text drawn into canvas so that it can be selected and cursored-through","msgtype":"m.text"},"ts":1329951363000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have absolutely no idea how we could do that","msgtype":"m.text"},"ts":1329951420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(short of using svg)","msgtype":"m.text"},"ts":1329951421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"by reimplementing everything!","msgtype":"m.text"},"ts":1329951422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: my guess is that however many copies you have, the one that is used for whatwg.org is sometimes getting killed early by the kernel","msgtype":"m.text"},"ts":1329951480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: i would recommend the checkpoint file idea so you could at least detect that case easily","msgtype":"m.text"},"ts":1329951481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"something else that might be going on is that i might be calling you again while you're running","msgtype":"m.text"},"ts":1329951540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe detect that somehow and abort if tere's already a running instance?","msgtype":"m.text"},"ts":1329951541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't know nearly enough shell script to take care of that","msgtype":"m.text"},"ts":1329951600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"btw","msgtype":"m.text"},"ts":1329951601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the fragment-links.js file is generated by the spec-splitter script","msgtype":"m.text"},"ts":1329951602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I should probably start including it again...","msgtype":"m.text"},"ts":1329951660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's link-fixup.js that you're not including","msgtype":"m.text"},"ts":1329951661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it uses fragment-links.js","msgtype":"m.text"},"ts":1329951662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which i thought you _were_ including","msgtype":"m.text"},"ts":1329951663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(does it output that file last? if it does, i can use that as the checkpoint file and you don't need to do anything)","msgtype":"m.text"},"ts":1329951720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I am including it","msgtype":"m.text"},"ts":1329951780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it outputs that file last","msgtype":"m.text"},"ts":1329951781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1329951782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I made spec-splitter generate a single copy now","msgtype":"m.text"},"ts":1329951840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not spec-splitter, the shell script","msgtype":"m.text"},"ts":1329951841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"commented the other out","msgtype":"m.text"},"ts":1329951842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1329951843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we'll see how it goes","msgtype":"m.text"},"ts":1329951844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i made my side check for that file and not replace the online copy if it's absent","msgtype":"m.text"},"ts":1329951845000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i thought imagemaps might in fashion again for the canvas thing, no? :P","msgtype":"m.text"},"ts":1329952140000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"*might be","msgtype":"m.text"},"ts":1329952141000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"oh god","msgtype":"m.text"},"ts":1329952260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pablof: xhr will just give an error event","msgtype":"m.text"},"ts":1329952320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pablof: including for cross-origin requests","msgtype":"m.text"},"ts":1329952321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so basically one of the a11y requests for canvas boils down to \"make find in page work for text drawn to canvas\"","msgtype":"m.text"},"ts":1329952980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: back to the iframe.onerror thing, \"it's iframe and it's owner Document\", i'm still confused...","msgtype":"m.text"},"ts":1329953220000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"confused about what?","msgtype":"m.text"},"ts":1329953340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"might be better to ask Hixie about it","msgtype":"m.text"},"ts":1329953341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm planning to sleep","msgtype":"m.text"},"ts":1329953342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"about what origins are supposed to be the same","msgtype":"m.text"},"ts":1329953520000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"pablof: what's the question?","msgtype":"m.text"},"ts":1329953521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: [[ When content whose URL has the same origin as the iframe element's Document fails to load (e.g. […]), then the user agent must queue a task to fire a simple event named error at the element instead.]]","msgtype":"m.text"},"ts":1329953580000,"senderName":"pablof","senderId":"pablof@irc"},
{"content":{"body":"yes?","msgtype":"m.text"},"ts":1329953640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"pablof: it's the origin of the URL of the iframe and the origin of its owner Document afaict","msgtype":"m.text"},"ts":1329953641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i really can't see any sane way that we could make \"find in page\" work for text drawn to canvas...","msgtype":"m.text"},"ts":1329953700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmmmmmm","msgtype":"m.text"},"ts":1329953701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one of the design concepts for canvas is the idea that it has no backing DOM, and that if you need a backing DOM you should be using SVG","msgtype":"m.text"},"ts":1329953760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.paulgraham.com/hundred.html","msgtype":"m.text"},"ts":1329953761000,"senderName":"bga","senderId":"bga@irc"},
{"content":{"body":"we could have the fillText()/strokeText() methods somehow keep track of which pixels they drew to, and remember the text at those pixels, until such time as the canvas is blown away by a clearRect()...","msgtype":"m.text"},"ts":1329954540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that seems like it would be shockingly expensive and wouldn't even work if you were drawImage()ing stuff with text","msgtype":"m.text"},"ts":1329954600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. canvas to canvas","msgtype":"m.text"},"ts":1329954601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unless you somehow propagated the information along...","msgtype":"m.text"},"ts":1329954602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://simonsarris.com/blog/322-canvas-drawtext-considered-harmful - \"Instead of calling drawText() to redraw my text objects each frame, I would instead create a new canvas (one never added to the DOM) for every single text object, and call drawText() on each object only once, drawing the text to its personal canvas.  Then, every time I wanted to (re)draw that text object, I would call drawImage() on my real canvas, passing in the object’s ...","msgtype":"m.text"},"ts":1329954780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"... personal canvas, instead of using drawText().\"","msgtype":"m.text"},"ts":1329954781000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Sounds like copying text between canvases won't be especially rare, so a solution that doesn't work in that case is not a very good solution","msgtype":"m.text"},"ts":1329954782000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(A solution that does work in that case is likely to be far worse for many other reasons, of course)","msgtype":"m.text"},"ts":1329954840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'd have thought a better way to approach a11y is to consider that the canvas is a presentation of some internal application-specific data structure (i.e. whatever data the JS uses to decide what to render), and so there should be a decent way to expose that application-specific data to external a11y tools without the significant complexity of converting it all into a DOM","msgtype":"m.text"},"ts":1329955140000,"senderName":"Philip`","senderId":"Philip`@irc"}
]