[
{"content":{"body":"Hixie_, TabAtkins: So I'm kicking about San Jose with nothing to do Sep 3/4. Am wondering about popping up in the middle of your domain and sitting around in the caf√© all day and trying to see as many of you Google people as possible.","msgtype":"m.text"},"ts":1377048462000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"if you want to maximise your seeing people, your best bet is to sit on the shoreline/101 bridge and watch the freeway and shoreline during rush hour","msgtype":"m.text"},"ts":1377048523000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"happy to do lunch or something though either of those days","msgtype":"m.text"},"ts":1377048546000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Pedant. :)","msgtype":"m.text"},"ts":1377048597000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Also, while you're here, I seem to have agreed to do a bachelor's thesis on model checking the HTML parser. At least initially aiming for stuff like \"(fragment case.)\" genuinely only being fragment case.","msgtype":"m.text"},"ts":1377048666000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"May try, if it goes well, and prove termination.","msgtype":"m.text"},"ts":1377048693000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"if you manage to prove that in a script-capable browser, you'll have earnt a nobel prize. or would have, if they did math ones.","msgtype":"m.text"},"ts":1377048945000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Well, yes. But it's trivial to prove that in the script-enabled case it may never terminate.","msgtype":"m.text"},"ts":1377048977000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"note that i may drop the \"fragment case\" stuff, due to it being so inconsistently done","msgtype":"m.text"},"ts":1377048986000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Eh, at least what's currently in the spec is a starting point.","msgtype":"m.text"},"ts":1377049300000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie_: Equally, if there's anything you think that'd be useful, say!","msgtype":"m.text"},"ts":1377050322000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Basic plan is fragment case, no popping from an empty stack, that foreign content/not insertion modes are only used when appropriate, and that there are no unhandled tokens.","msgtype":"m.text"},"ts":1377050645000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"In no particular order.","msgtype":"m.text"},"ts":1377050651000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: not really sure what would be useful, but we can talk about it at lunch :-)","msgtype":"m.text"},"ts":1377051381000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: \"anticlockwise\" is not en-US","msgtype":"m.text"},"ts":1377051959000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"witness my horror","msgtype":"m.text"},"ts":1377051984000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"easy now","msgtype":"m.text"},"ts":1377052006000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"don't overexert yourself","msgtype":"m.text"},"ts":1377052013000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1377052023000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"FTR, the en-US equivalent is \"counterclockwise\"","msgtype":"m.text"},"ts":1377052084000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"yeah, i know","msgtype":"m.text"},"ts":1377052136000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"not sure if it was my fault or not that the spec uses anticlockwise","msgtype":"m.text"},"ts":1377052146000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"could be apple's fault though","msgtype":"m.text"},"ts":1377052150000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"since i think arc() dates back to their canvas doc","msgtype":"m.text"},"ts":1377052163000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ah, ok","msgtype":"m.text"},"ts":1377052176000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I'd much prefer to blame Apple ;)","msgtype":"m.text"},"ts":1377052187000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"either way, i'm happy to ignore it :-)","msgtype":"m.text"},"ts":1377052193000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"though I suppose that means you can't change it","msgtype":"m.text"},"ts":1377052194000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"it's an argument, i don't think it has any normative value actually","msgtype":"m.text"},"ts":1377052207000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1377052210000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(argument name, that is)","msgtype":"m.text"},"ts":1377052229000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"just doing my job as the en-US police ;)","msgtype":"m.text"},"ts":1377052235000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"i miss the days where the spec was en-GB","msgtype":"m.text"},"ts":1377052325000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"before the w3c got involved","msgtype":"m.text"},"ts":1377052328000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it strikes me i could change it back...","msgtype":"m.text"},"ts":1377052336000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1377052436000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"how should we represent the margin at-rules in @page in CSSOM? a common interface for all of them and a property that exposes the name? or one interface each?","msgtype":"m.text"},"ts":1377068197000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://dev.w3.org/csswg/css-page/#margin-boxes - there are 16 of them","msgtype":"m.text"},"ts":1377068247000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'm tempted to go with a common interface but i don't know what to call the property that exposes the name. hmm, maybe just \"name\" might work","msgtype":"m.text"},"ts":1377069186000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"selectorText seems wrong","msgtype":"m.text"},"ts":1377069203000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe i should have \"name\" on all rules","msgtype":"m.text"},"ts":1377069230000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or all at-rules","msgtype":"m.text"},"ts":1377069322000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie_: I think http://www.w3.org/TR/charmod-norm/ makes sense, but the group that wrote the doc has disowned it","msgtype":"m.text"},"ts":1377069896000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the validator implements it anyway","msgtype":"m.text"},"ts":1377069912000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so in that sense \"we\" \"require\" NFC","msgtype":"m.text"},"ts":1377069936000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie_: the ban on combining character as the first character of a text node comes from http://www.w3.org/TR/charmod-norm/#sec-FullyNormalized","msgtype":"m.text"},"ts":1377070063000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: maybe we should put the necessary requirements in the html spec?","msgtype":"m.text"},"ts":1377070104000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: perhaps it would be good to find out what the i18n group thinks is wrong with charmod-norm first","msgtype":"m.text"},"ts":1377070165000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"anyway, as a pratical matter, stuff breaks in some UAs if you don't have each text node in NFC and not starting with a combining char","msgtype":"m.text"},"ts":1377070205000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"isn't it better long-term to fix the UAs to not break?","msgtype":"m.text"},"ts":1377070309000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: considering effort vs. use case payoff, maybe not","msgtype":"m.text"},"ts":1377070429000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"dunno. roc or jfkthame would be better positioned to say","msgtype":"m.text"},"ts":1377070457000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"finds http://annevankesteren.nl/2003/07/updates-follow interesting","msgtype":"m.emote"},"ts":1377070489000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I used to believe in XML, too, but not in XML Schema","msgtype":"m.text"},"ts":1377070510000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: http://lists.w3.org/Archives/Public/www-style/2013May/0777.html","msgtype":"m.text"},"ts":1377071399000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"re page-margin rules","msgtype":"m.text"},"ts":1377071417000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: thanks","msgtype":"m.text"},"ts":1377071434000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin: any opinion on whether we should expose .name on all at-rules?","msgtype":"m.text"},"ts":1377071475000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: but I was just thinking it could also work to *not* make it a grouping rules and just have 16 accessors on CSSPageRule","msgtype":"m.text"},"ts":1377071499000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"zcorpan: .name would be redundant with .type, except in special cases like this one","msgtype":"m.text"},"ts":1377071572000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"with .type you have to have your own mapping if you actually want the name","msgtype":"m.text"},"ts":1377071605000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"16 accessors would expose a partial result of the cascade rather than really the structure of the stylesheet, but we already do that for CSSStyleDeclaration anyway‚Ä¶","msgtype":"m.text"},"ts":1377071630000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"well, do you want the name?","msgtype":"m.text"},"ts":1377071648000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"dunno :-)","msgtype":"m.text"},"ts":1377071664000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"let‚Äôs not add it before anyone asks for it","msgtype":"m.text"},"ts":1377071709000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i'm not sure i like the accessors thing. it might get ugly if it gets extended with a bazillion new things","msgtype":"m.text"},"ts":1377071719000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"like we considered accessors for @page but then realized there were lots of properties that apply now","msgtype":"m.text"},"ts":1377071744000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so i think using .cssRules and .style is better even if there are currently just a \"few\" things","msgtype":"m.text"},"ts":1377071789000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, declarations in @page are really more like a style rule, I agree with using .style","msgtype":"m.text"},"ts":1377071807000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"it also means developers don't have to look it up each time if the stuff is exposed as accessors or cssRules/style if we're consistent","msgtype":"m.text"},"ts":1377071854000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but I don‚Äôt see css-page being extended to have 128 pre-defined margin boxes, that‚Äôs just not a good design","msgtype":"m.text"},"ts":1377071870000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"rather, I expect css-page-4 to take a new direction","msgtype":"m.text"},"ts":1377071886000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"might not be margin boxes","msgtype":"m.text"},"ts":1377071887000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"might be other at-rules for something we haven't thought of yet","msgtype":"m.text"},"ts":1377071917000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1377071918000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh you‚Äôre right, you‚Äôd still have at-rules in @page, then .cssRules makes sense","msgtype":"m.text"},"ts":1377071927000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"ok i'm just exposing .name on margin rules","msgtype":"m.text"},"ts":1377071993000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'll also use the constant 9","msgtype":"m.text"},"ts":1377072030000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don‚Äôt know what \"reserved constant\" really means","msgtype":"m.text"},"ts":1377072138000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i think it just means it's not allocated yet and it's not allowed to be used for vendor-specific stuff","msgtype":"m.text"},"ts":1377072368000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1377072389000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I‚Äôs say mention it on www-style, but it should be fine","msgtype":"m.text"},"ts":1377072402000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1377072418000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so, next thing to consider is whether we should update CSSFontFaceRule to use this approach also","msgtype":"m.text"},"ts":1377074134000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess i'll send an email about that","msgtype":"m.text"},"ts":1377074171000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or maybe i should wait a bit","msgtype":"m.text"},"ts":1377074192000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"which approach?","msgtype":"m.text"},"ts":1377074210000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-style/2013Jun/0668.html","msgtype":"m.text"},"ts":1377074258000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I‚Äôm less sure about that","msgtype":"m.text"},"ts":1377074316000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"@page really contains properties, but not @font-face","msgtype":"m.text"},"ts":1377074343000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and CSSFontFaceRule might be harder to change if it‚Äôs already shipped","msgtype":"m.text"},"ts":1377074610000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"@font-face contains descriptors. pretty similar. the CSSDeclaration machinery makes sense for descriptors also afaict","msgtype":"m.text"},"ts":1377074623000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's not shipped","msgtype":"m.text"},"ts":1377074626000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or .style with CSSStyleDeclaration is shipped, i.e. the old definition, which doesn't make sense for @font-face","msgtype":"m.text"},"ts":1377074656000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but .style with CSSFontFaceDescriptors (or Declaration) would make sense","msgtype":"m.text"},"ts":1377074681000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but i'll wait for feedback on the @page thing before opening the @font-face can on the list, i think","msgtype":"m.text"},"ts":1377074781000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don‚Äôt think CSSStyleDeclaration is a good model that we should reproduce","msgtype":"m.text"},"ts":1377074899000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"It‚Äôs halfway between an AST (which would be an ordered list with duplicates) and the results of the cascade (an unordered map)","msgtype":"m.text"},"ts":1377075002000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"well if you think we should use a third approach instead, please propose it on the list :-)","msgtype":"m.text"},"ts":1377075065000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: so this week I learned that the ARIA spec permits the value of the role attribute to be a space-separated list of tokens, and that role=\"foo dialog\" is supposed to be handled as valid, as far as document conformance -- if at least one token in the list is the name of a non-abstract role defined in the ARIA 1.0 spec (and as far as HTML validation goes, if that role value is actually allowed for the element the role attribute is used with)","msgtype":"m.text"},"ts":1377075829000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the requirement seems to be that the first valid abstract role name found in the list is the role value that should be used, and the rest of the tokens are ignored","msgtype":"m.text"},"ts":1377075887000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so anyway, the only practical way I can think of to implement support for this in the validator is to add a filter that examines the role values and changes them into single role names before the document is checked against any schema by jing","msgtype":"m.text"},"ts":1377076039000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"similar to the way that data-* attributes are handled","msgtype":"m.text"},"ts":1377076077000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so that's what I'm implementing right now","msgtype":"m.text"},"ts":1377076097000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if you think that's a  bad idea, let me know","msgtype":"m.text"},"ts":1377076120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I already sent a comment to the PFWG saying that what they should do instead is not have the multiple-token-role-value mechanism at all, and require that the value contain only a single role name, but I would guess that they're not likely to ever actually agree to that","msgtype":"m.text"},"ts":1377076354000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sup","msgtype":"m.text"},"ts":1377076999000,"senderName":"smartgloves","senderId":"smartgloves@irc"},
{"content":{"body":"MikeSmith: iirc hsivonen commented on the document conformance rules when they were made up that it doesn't make sense to allow in for document conformance until the ARIA 2.0 bridge is crossed","msgtype":"m.text"},"ts":1377078591000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: which i tend to agree with","msgtype":"m.text"},"ts":1377078621000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: i made up the rules back in 2006 to convince the group to go with that extensibility model instead of something more insane that was in place before it (don't remember what it was)","msgtype":"m.text"},"ts":1377078667000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or 2007 or whenever","msgtype":"m.text"},"ts":1377078698000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: Well .flatMap is still quite ugly ‚Äî although I grant that .bind isn't much better ‚Äî and, unless I have totally failed to follow something is very confusing for promises since it does less flattening than the .then method. That seems like a road to confusion.","msgtype":"m.text"},"ts":1377078793000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: the UA processing makes sense and allows for future extensions","msgtype":"m.text"},"ts":1377078812000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah I can understand how it makes sense for UA processing","msgtype":"m.text"},"ts":1377079323000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: but wait you're saying you're the one who originally proposed this design?","msgtype":"m.text"},"ts":1377079361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yes","msgtype":"m.text"},"ts":1377079372000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1377079379000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well that makes it seem slightly less bad to me","msgtype":"m.text"},"ts":1377079396000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://simon.html5.org/specs/aria-proposal","msgtype":"m.text"},"ts":1377079409000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"by itself it's not really a design that's bad for validation purposes","msgtype":"m.text"},"ts":1377079441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ignoring unknown tokens makes sense for UA processing model but not for validation, IMO","msgtype":"m.text"},"ts":1377079442000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"reads","msgtype":"m.emote"},"ts":1377079443000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: if it made sense for validation, we'd make all unknown attribute names valid, too","msgtype":"m.text"},"ts":1377079480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I can have the filter emit an error for each unknown token","msgtype":"m.text"},"ts":1377079493000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: OK","msgtype":"m.text"},"ts":1377079503000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"reads zcorpan proposal","msgtype":"m.emote"},"ts":1377079513000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the real problem for ARIA validation is the massive baroqueness of the requirements for which aria-* states and properties can be used with which roles, and then which roles can be used with which HTML elements","msgtype":"m.text"},"ts":1377079619000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: giving errors for unknown tokens is basically a more complicated way to just check the whole value as one token, since it makes little sense to provide several known tokens","msgtype":"m.text"},"ts":1377079641000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sees \"CURIE\" in zcorpan's doc","msgtype":"m.emote"},"ts":1377079673000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: yeah I suppose that's true","msgtype":"m.text"},"ts":1377079698000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: yeah, i guess i had to bend over backwards to please the XML-drinking accessibility guys :-)","msgtype":"m.text"},"ts":1377079744000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1377079777000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I thought XML was smoked rather than drunk","msgtype":"m.text"},"ts":1377079787000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"maybe so. what's being drunk?","msgtype":"m.text"},"ts":1377079872000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"kool aid","msgtype":"m.text"},"ts":1377079885000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so I suppose XML can be both smoked and drunk","msgtype":"m.text"},"ts":1377079898000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's a floor wax and a dessert topping","msgtype":"m.text"},"ts":1377079926000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Oh, I thought XML kool aid was administered in an enema","msgtype":"m.text"},"ts":1377080023000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it goes in from all directions, and goes out through the ears?","msgtype":"m.text"},"ts":1377080124000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: my proposal has an issue \"What authors are allowed to do should probably be constrained\"","msgtype":"m.text"},"ts":1377080335000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: about checking the whole value as one token, I suppose so, except that if the value has at least one token that's a known role name, then I can pass on that value to the rest of the validation pipeline for further checking, while dropping all the rest","msgtype":"m.text"},"ts":1377080372000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe the error message should explicitly say, \"Dropping invalid token \"foo\" from role value.\"","msgtype":"m.text"},"ts":1377080421000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: true","msgtype":"m.text"},"ts":1377080422000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1377080478000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok, I can implement it that way for now and tweak it later if needed","msgtype":"m.text"},"ts":1377080524000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: did you look on the filelist review issue?","msgtype":"m.text"},"ts":1377080549000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: No, but I can do it now (or in a few minutes)","msgtype":"m.text"},"ts":1377080622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you have the review open can you paste the link?","msgtype":"m.text"},"ts":1377080633000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://critic.hoppipolla.co.uk/r/238","msgtype":"m.text"},"ts":1377080643000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: OK, tracking is restored","msgtype":"m.text"},"ts":1377082146000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Unfortunately it seems all the changes ended up in a merge commit from critic's point of view","msgtype":"m.text"},"ts":1377082168000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: thanks!","msgtype":"m.text"},"ts":1377082178000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"good enough","msgtype":"m.text"},"ts":1377082188000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sigh htmlwg has a gazillion components","msgtype":"m.text"},"ts":1377084826000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe i should just pick one at random","msgtype":"m.text"},"ts":1377084858000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"File in WHATWG instead? :)","msgtype":"m.text"},"ts":1377085109000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: https://www.w3.org/Bugs/Public/show_bug.cgi?id=23002#c7","msgtype":"m.text"},"ts":1377085348000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: do you have an opinion on the above bug?","msgtype":"m.text"},"ts":1377085407000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I don't care much either way, but it's weird not to be consistent with <script>. might be good to check with wchen.","msgtype":"m.text"},"ts":1377085581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"seems unlikely anyone will have a strong opinion on this :-P","msgtype":"m.text"},"ts":1377085694000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think \"just do it\" is the right approach. It doesn't seem like it should need explicit buy in from lots of people since it's such a small thing","msgtype":"m.text"},"ts":1377085744000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1377085755000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"commented","msgtype":"m.text"},"ts":1377085858000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OH MY. I really hate hate hate that NodeList and all the other stupid *List's don't have Array in their prototype chain! GRRR.","msgtype":"m.text"},"ts":1377088439000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"It makes programming so frustrating. Those small cuts. I can't do   document.querySelectorAll('bla').forEach(function() { this.bla })","msgtype":"m.text"},"ts":1377088498000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Push for Chromium to ship it again? :)","msgtype":"m.text"},"ts":1377088557000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<3","msgtype":"m.text"},"ts":1377088611000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Yes, please.","msgtype":"m.text"},"ts":1377088825000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"needed that.. yesterday.","msgtype":"m.emote"},"ts":1377088834000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"zcorpan: You also need to mark the \"conflicts\" part in that review","msgtype":"m.text"},"ts":1377095036000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah i noticed","msgtype":"m.text"},"ts":1377095051000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think it is the same as the diff against parent 1, so should just be mechanical (in this case)","msgtype":"m.text"},"ts":1377095070000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Nice!","msgtype":"m.text"},"ts":1377095118000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok should i close and merge also?","msgtype":"m.text"},"ts":1377095139000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I beat you to it","msgtype":"m.text"},"ts":1377095176000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah, thanks","msgtype":"m.text"},"ts":1377095188000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Although I am not happy","msgtype":"m.text"},"ts":1377095225000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think I need to fix things up","msgtype":"m.text"},"ts":1377095238000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is media fragments implemented? How does it work with XMLHttpRequest and drawImage()?","msgtype":"m.text"},"ts":1377095702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK, I don't know how to fix things up","msgtype":"m.text"},"ts":1377095724000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: :-( what's the problem?","msgtype":"m.text"},"ts":1377096173000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Well nothing serious enough to actually worry about, I think","msgtype":"m.text"},"ts":1377096374000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The author did something like merged their branch with some other non-master branch, or rebased master on top of their branch, or something, that had the net effect of adding commits that were already in master but with different SHA1s","msgtype":"m.text"},"ts":1377096453000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: please point out to belem that he messed up and say what he should do instead in the future","msgtype":"m.text"},"ts":1377097236000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Already on it :)","msgtype":"m.text"},"ts":1377097255000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"k :-)","msgtype":"m.text"},"ts":1377097265000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://www.w3.org/TR/media-frags/#processing-media-fragment-uri :/","msgtype":"m.text"},"ts":1377098655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is that implemented?","msgtype":"m.text"},"ts":1377098658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"If either name or value are not valid UTF-8 strings, then remove the name-value pair from the list.\" ...","msgtype":"m.text"},"ts":1377098668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<!DOCTYPE html><img src=image#xywh=0,0,40,40>","msgtype":"m.text"},"ts":1377098869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Should that work?","msgtype":"m.text"},"ts":1377098872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because it doesn't","msgtype":"m.text"},"ts":1377098877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"asks in https://bugzilla.mozilla.org/show_bug.cgi?id=790640","msgtype":"m.emote"},"ts":1377099143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: would you mind enabling the issue tracker on https://bitbucket.org/validator/validator/src since http://bugzilla.validator.nu/ has been down for a few weeks now?","msgtype":"m.text"},"ts":1377099444000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"annevk, http://mxr.mozilla.org/mozilla-central/source/netwerk/base/src/nsMediaFragmentURIParser.h#15","msgtype":"m.text"},"ts":1377100057000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: how does the temporal stuff work?","msgtype":"m.text"},"ts":1377100119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No idea","msgtype":"m.text"},"ts":1377100124000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"matjas, seems up","msgtype":"m.text"},"ts":1377100132000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: that sounds good - I'm free that week.","msgtype":"m.text"},"ts":1377100148000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Seems the specification doesn't detail much at all. Man...","msgtype":"m.text"},"ts":1377100241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How can you write that much text with a group of people and not consider the basic processing model?","msgtype":"m.text"},"ts":1377100270000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: While I support adding a property to rules that contains their name, I currently have CSSCounterRule specced to have a name attribute.","msgtype":"m.text"},"ts":1377100300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: Though, I suppose we're switching to a consistent .style for that.","msgtype":"m.text"},"ts":1377100312000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: I just get timeouts, like 90% of the time","msgtype":"m.text"},"ts":1377100504000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas, mm, I loaded once and it seemed to appear","msgtype":"m.text"},"ts":1377100548000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: AFAIK it's only really implemented for video/audio","msgtype":"m.text"},"ts":1377101597000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Thinking about it some more, https://gist.github.com/annevk/6295844 could probably make use of the same syntax as media resources. We'd just claim \"path=\"...","msgtype":"m.text"},"ts":1377101902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, I think we need to spec that \"foo=...\" in the hash is reserved.","msgtype":"m.text"},"ts":1377105637000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, I want Bikeshed to automatically add ids to issues in the spec (and a permalink icon, like headings now get), so they're easy to link to.  But I also want the ids to be stable across modifications elsewhere in the draft.","msgtype":"m.text"},"ts":1377105785000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm thinking of just hashing the textContent of the issue and using that in the id.  Thoughts?","msgtype":"m.text"},"ts":1377105803000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hashing works great if you are a machine and/or misathropist","msgtype":"m.text"},"ts":1377105902000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"+n","msgtype":"m.text"},"ts":1377105916000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"No one's trying to guess the ids, just link to them.","msgtype":"m.text"},"ts":1377105926000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, but it makes them impossible to understand or remember","msgtype":"m.text"},"ts":1377105948000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also: anyone got a suggestion for a hash algo that's (a) standard in Python, and (b) generates a short output string?","msgtype":"m.text"},"ts":1377105949000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: Yeah, but the understandable auto-genned ones aren't stable.","msgtype":"m.text"},"ts":1377105966000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can always add an id yourself.","msgtype":"m.text"},"ts":1377105972000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hashlib.sha1(text).hexdigest()[:8]","msgtype":"m.text"},"ts":1377106016000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sure.  And I already have dedup functionality, so I dont' need to worry about collisions.","msgtype":"m.text"},"ts":1377106042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so the id changes as soon as you reword / change anything in the issue?","msgtype":"m.text"},"ts":1377106189000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Yes.  They're stable against changes *elsewhere* in the doc, but not to changes within the issue.  Better suggestions are welcome.","msgtype":"m.text"},"ts":1377106211000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yell at editors that don‚Äôt specify IDs? ;)","msgtype":"m.text"},"ts":1377106255000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I'm already adding a warning when you don't specify an id for the heading.","msgtype":"m.text"},"ts":1377106290000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe I could autogen the id, but also warn?","msgtype":"m.text"},"ts":1377106304000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But coming up with issue ids is annoying. :/","msgtype":"m.text"},"ts":1377106316000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: parsed declarations in a stylesheet have cascaded values, which are intial, inherit, unset or a specified value. Does that sound right?","msgtype":"m.text"},"ts":1377106522000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: you don't happen to know if there are any tests for the DOM spec Promises stuff do you?","msgtype":"m.text"},"ts":1377106550000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"weinig: Ask annevk","msgtype":"m.text"},"ts":1377106571000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"he no here :(","msgtype":"m.text"},"ts":1377106580000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"TabAtkins: I'll give him an email","msgtype":"m.text"},"ts":1377106589000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"SimonSapin: No, they have declared value.  Cascaded values are the result of the cascade, and belong to element/property combos.","msgtype":"m.text"},"ts":1377106603000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://dev.w3.org/csswg/css-cascade/#value-stages","msgtype":"m.text"},"ts":1377106619000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so how do I call a declared value that is not a CSS-wide keyword?","msgtype":"m.text"},"ts":1377106676000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"What's your need?","msgtype":"m.text"},"ts":1377106694000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"in Servo‚Äôs style system, the value of each CSS property is represented by a different data type","msgtype":"m.text"},"ts":1377106730000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I don‚Äôt want to deal with initial/inherit/unset in each of them, but make it generic","msgtype":"m.text"},"ts":1377106747000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1377106755000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So I have a type like this: enum DeclaredValue<T> { Initial, Inherit, Unset, XXXValue(T) }","msgtype":"m.text"},"ts":1377106782000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Rust enums are what C calls tagged unions","msgtype":"m.text"},"ts":1377106799000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I‚Äôm looking for a name for XXXValue","msgtype":"m.text"},"ts":1377106818000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"When we need to distinguish in specs, we just say \"not a global keyword\" or something and link to the section in Values or Cascade. :/","msgtype":"m.text"},"ts":1377106855000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"isn‚Äôt that \"specified value\"?","msgtype":"m.text"},"ts":1377106883000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Nope, specified value is the cascaded value after resolving the global keywords away.","msgtype":"m.text"},"ts":1377106904000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"in terms of what the possible, well, values, are.","msgtype":"m.text"},"ts":1377106911000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"It's not a name for a class of values, but rather a part of the value computation stage.","msgtype":"m.text"},"ts":1377106917000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But sure, you could use it for that.","msgtype":"m.text"},"ts":1377106928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It wouldn't be ambiguous.","msgtype":"m.text"},"ts":1377106933000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And, hm, I guess we do use the words like that in specs.  So yes.","msgtype":"m.text"},"ts":1377106943000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1377106951000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"weinig: If there are any I haven't seen them","msgtype":"m.text"},"ts":1377106954000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that stage of the cascade will also use the same type","msgtype":"m.text"},"ts":1377106963000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"weinig: But it is possible that someone didn't get the memo and wrote implentation-specific tests","msgtype":"m.text"},"ts":1377107001000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"close enough I guess","msgtype":"m.text"},"ts":1377107009000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Yeah, now that I think about it, we do use the term to mean the set of values that exist in that stage.","msgtype":"m.text"},"ts":1377107134000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So it's valid to use SpecifiedValue(T) in that enum.","msgtype":"m.text"},"ts":1377107144000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"weinig: http://dxr.mozilla.org/mozilla-central/source/dom/promise/tests","msgtype":"m.text"},"ts":1377107168000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: thanks!","msgtype":"m.text"},"ts":1377107431000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"Hixie_: switching the spec to en-GB seems like it would give the html wg editors more grief :-P","msgtype":"m.text"},"ts":1377113388000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"had been wondering if that was part of the motivation","msgtype":"m.emote"},"ts":1377113503000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"no, the motivation would be my sanity. i go crazy trying to remember what's american and what's british and keep getting it wrong.","msgtype":"m.text"},"ts":1377113633000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"to be honest i don't pay much attention to downstream use by the htmlwg, since the _entire point_ of my not editing that spec any more was that editing that spec was too much work","msgtype":"m.text"},"ts":1377113682000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"because of exactly this kind of thing","msgtype":"m.text"},"ts":1377113697000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so if i thought it was worth my time to worry abotu that, i wouldn't have stopped editing that spec :-)","msgtype":"m.text"},"ts":1377113725000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok i think i'm done with https://bugzilla.mozilla.org/show_bug.cgi?id=725646 now","msgtype":"m.text"},"ts":1377116743000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: was there a bug about dropping it from the spec?","msgtype":"m.text"},"ts":1377116853000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie_: when should an autofocus element become focused wrt the onload event firing?","msgtype":"m.text"},"ts":1377116866000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"zcorpan, I don't recall","msgtype":"m.text"},"ts":1377116877000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan, does the spec have it?","msgtype":"m.text"},"ts":1377116883000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1377116889000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'll file one","msgtype":"m.text"},"ts":1377116891000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Okay, thanks","msgtype":"m.text"},"ts":1377116904000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: the spec says to \"Queue a task that checks to see if the element is focusable,\" when the element is inserted, but I don't see any ordering requirement for onload","msgtype":"m.text"},"ts":1377116920000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"TabAtkins: Counter Styles -- my brain first read that as Counter Strike","msgtype":"m.text"},"ts":1377118682000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: That's basically what it is.","msgtype":"m.text"},"ts":1377118864000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it would be a fun easter egg to embed the game in the spec","msgtype":"m.text"},"ts":1377118942000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Probably detectable in the load time.","msgtype":"m.text"},"ts":1377118951000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you can delay loading it until some gesture is made","msgtype":"m.text"},"ts":1377119009000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I presume it's already been enscriptened?","msgtype":"m.text"},"ts":1377119539000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no idea","msgtype":"m.text"},"ts":1377120016000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"haven't seen it in a browser","msgtype":"m.text"},"ts":1377120033000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: I've enabled the gh issue tracker for https://bitbucket.org/validator/validator/src so feel free to use it if that works better for you but if http://bugzilla.validator.nu/ availability contintues to be a problem I'd personaly prefer you use https://www.w3.org/Bugs/Public/enter_bug.cgi?product=Validator%20(Nu) as an alternative instead of the gh issue tracker","msgtype":"m.text"},"ts":1377121577000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"s/gh/bitbucket/","msgtype":"m.text"},"ts":1377121634000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, among other reasons why I'd suggest https://www.w3.org/Bugs/Public/enter_bug.cgi?product=Validator%20(Nu) as a better alternative is that the since the validator sources are in 7 different bitbucket repos, using bitbucket for issue tracking would mean enabling the issue-tracking feature in multiple other repos there","msgtype":"m.text"},"ts":1377121812000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., https://bitbucket.org/validator/syntax/src","msgtype":"m.text"},"ts":1377121824000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie_: I am a little behind on scrollback ;-) but in the very unlikely chance you never found a better possibility, \"is informed by\" or (with less control/authority connotation) \"is aware of\" might work for the A-B non-symmetric relationship phrase you were looking for","msgtype":"m.text"},"ts":1377122037000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"zcorpan: On more thought, I'm not sure I'm comfortable with the @page OM change.  I'm fine with the idea of it, but we really need a model that reflects the relative ordering of at-rules and declarations.  It's not relevant for @page, but it will be in the future for style rules if we do @mixin or something.","msgtype":"m.text"},"ts":1377122098000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: So it may be worthwhile to actually innovate here, and design something that can be copied over to style rules later.","msgtype":"m.text"},"ts":1377122141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: why do we need the order for @mixin?","msgtype":"m.text"},"ts":1377122996000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Because @mixin is basically a variable holding declarations, so it matters whether *other* declarations appeared before or after it.","msgtype":"m.text"},"ts":1377123021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Woah. What's happened to Bugzilla!?","msgtype":"m.text"},"ts":1377123074000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: ok. sleep time now. take it on the list :-)","msgtype":"m.text"},"ts":1377123265000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"esprehn: is it the same task source as the load event?","msgtype":"m.text"},"ts":1377128044000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jwalden: wow, that _is_ behind on scrollback. :-P We went with \"is familiar with\" for now.","msgtype":"m.text"},"ts":1377128059000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1377128185000,"senderName":"jwalden","senderId":"jwalden@irc"}
]