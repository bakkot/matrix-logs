[
{"content":{"body":"well bummer","msgtype":"m.text"},"ts":1202948940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ends up speccing an event that fires on garbage collection","msgtype":"m.emote"},"ts":1202948941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's clearly not a good plan","msgtype":"m.text"},"ts":1202948942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Very interoperable, no doubt :)","msgtype":"m.text"},"ts":1202949120000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Would it be non-conforming to just leak memory and not do GC?","msgtype":"m.text"},"ts":1202949240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so here's the problem","msgtype":"m.text"},"ts":1202949241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You'd still be firing it every time you did GC, so it should be conforming","msgtype":"m.text"},"ts":1202949242000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"this is for http://www.hixie.ch/specs/dom/messages/0.9","msgtype":"m.text"},"ts":1202949300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what should happen if i create an end point, set its message handler, and then forget about my end of it, having passed the other end to another browsing context?","msgtype":"m.text"},"ts":1202949301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"clearly it shouldn't be garbage collected","msgtype":"m.text"},"ts":1202949302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as it can still receive messages and respond usefully","msgtype":"m.text"},"ts":1202949360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but then what happens if my Window is closed?","msgtype":"m.text"},"ts":1202949361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or navigated?","msgtype":"m.text"},"ts":1202949362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is the strong entangling really needed?","msgtype":"m.text"},"ts":1202949420000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"should the other side get an unload event for the endpoint?","msgtype":"m.text"},"ts":1202949421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do you mean?","msgtype":"m.text"},"ts":1202949422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Instead of just having each endpoint have an \"other end\" property referring to the other endpoint","msgtype":"m.text"},"ts":1202949423000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"i don't understand","msgtype":"m.text"},"ts":1202949480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Um. Well, could you treat it the same way any old DOM reference in a different window?","msgtype":"m.text"},"ts":1202949540000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"With window references you have .closed, could something similar work for endpoints?","msgtype":"m.text"},"ts":1202949600000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"i can set .active to false","msgtype":"m.text"},"ts":1202949601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The problematic event was something like \"other endpoint is gone\"?","msgtype":"m.text"},"ts":1202949840000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"i think i've worked out how to spec it for now","msgtype":"m.text"},"ts":1202949841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we'll see if it handles Workers too in a second","msgtype":"m.text"},"ts":1202949842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What's the reason for cloning endpoints sent via postMessage, by the way?","msgtype":"m.text"},"ts":1202949900000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"cross-origin concerns","msgtype":"m.text"},"ts":1202949901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for example, it would be bad if you could do foreignEndPoint.prototype.prototype.toString = function () { my evil function }","msgtype":"m.text"},"ts":1202950020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or whatever","msgtype":"m.text"},"ts":1202950021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So the create function is usually making one just to throw it away later","msgtype":"m.text"},"ts":1202950080000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1202950081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I feel like it should be possible to do it the other way around, creating just one endpoint and having the semantics of send be \"The endpoint received should be a new one entangled with this here local endpoint I have\"","msgtype":"m.text"},"ts":1202950140000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"what if you do it twice?","msgtype":"m.text"},"ts":1202950141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also, you might want to pass the same end point down several pipes","msgtype":"m.text"},"ts":1202950200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which you couldn't do the way you describe it","msgtype":"m.text"},"ts":1202950201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Aren't those two things mutually exclusive?","msgtype":"m.text"},"ts":1202950260000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"hm?","msgtype":"m.text"},"ts":1202950261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If you want to pass it down several pipes, you are doing it twice (or more)","msgtype":"m.text"},"ts":1202950262000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"say you have established pipes A1<->A2 and B1<->B2, and a newly created pipe C1<->C2.","msgtype":"m.text"},"ts":1202950320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right now you can pass C2 down from A1 to A2, and then from there it can go from B1 to B2","msgtype":"m.text"},"ts":1202950321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but your proposal can't do that, as i understand it","msgtype":"m.text"},"ts":1202950322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"however, your proposal would allow sending \"C1's other point\" down A1 to A2 creating C2, and then sending \"C1's other point\" again down A1 to A2, creating C2'?","msgtype":"m.text"},"ts":1202950380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so now you have two C2s","msgtype":"m.text"},"ts":1202950381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is confusing","msgtype":"m.text"},"ts":1202950440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and causes all kinds of problems","msgtype":"m.text"},"ts":1202950441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Let me work this out. So you pass C2 from A1 to A2, which gives A2 a C3 connected to C1. Then you pass C3 from B1 to B2, giving B2 a C4 which is connected to C1. In the process you've invalidated C2 and C3.","msgtype":"m.text"},"ts":1202950442000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"yah","msgtype":"m.text"},"ts":1202950500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i'd prefer the notation C2, C2', C2'', C2''', but sure :-) )","msgtype":"m.text"},"ts":1202950501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, I see my idea wouldn't support chaining","msgtype":"m.text"},"ts":1202950560000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"(Unless the endpoint included a pointer to its twin)","msgtype":"m.text"},"ts":1202950620000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"And that's what the cloning was supposed to stop","msgtype":"m.text"},"ts":1202950621000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"yeha","msgtype":"m.text"},"ts":1202950680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, even","msgtype":"m.text"},"ts":1202950681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So I suppose I'd be writing function setupLink(w) { p = new Pair(); w.postMessage(\"New pair\",p.two); return p.one; } or somesuch then","msgtype":"m.text"},"ts":1202950740000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"hmmmmm","msgtype":"m.text"},"ts":1202951940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"workers have to die if no browsing contexts refer to them","msgtype":"m.text"},"ts":1202951941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not just if nobody refers to them","msgtype":"m.text"},"ts":1202951942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"otherwise you could have a worker refer to another and vice versa","msgtype":"m.text"},"ts":1202951943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and they'd keep each other alive","msgtype":"m.text"},"ts":1202951944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't know how to address this comment for selectors api http://lists.w3.org/Archives/Public/public-webapi/2008Feb/0000.html","msgtype":"m.text"},"ts":1202952780000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hm, i wrote that text","msgtype":"m.text"},"ts":1202952840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or suggested it originally","msgtype":"m.text"},"ts":1202952841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let's see","msgtype":"m.text"},"ts":1202952842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I can't figure out how to rephrase it to make it clearer","msgtype":"m.text"},"ts":1202952843000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202952844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"User agents should ensure that they do not crash or behave erratically when facing...","msgtype":"m.text"},"ts":1202952845000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that might work","msgtype":"m.text"},"ts":1202952900000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"... For example, a user agent could apply a timeout to the NSResolver callback.","msgtype":"m.text"},"ts":1202952901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but then I'm not totally convinced of the value of having that in there at all, since the same applies to all scripts","msgtype":"m.text"},"ts":1202952902000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"well, the difference here is that the script is driving a UA algorithm","msgtype":"m.text"},"ts":1202952960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i could easily imagine implementations of the algorithm where returning inconsistent results would cause a crash","msgtype":"m.text"},"ts":1202952961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is just saying, \"beware\"","msgtype":"m.text"},"ts":1202952962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is all security sections ever say, really","msgtype":"m.text"},"ts":1202952963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1202952964000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"but i can easily imagine someone not thinking about the fact that the resolver might hang, and accidentally not putting the usual scripting timeout constraints around that api","msgtype":"m.text"},"ts":1202953020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"same with changing the dom","msgtype":"m.text"},"ts":1202953021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.w3.org/2001/tag/doc/passwordsInTheClear-52","msgtype":"m.text"},"ts":1202953440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"User agents SHOULD use password masking when passwords are displayed in an HTML form\"","msgtype":"m.text"},"ts":1202953500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm so glad the TAG is addressing critical unsolved problems","msgtype":"m.text"},"ts":1202953501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and not, say, problems from 1993","msgtype":"m.text"},"ts":1202953502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.hixie.ch/specs/dom/workers/0.9 is finally ready for broader review","msgtype":"m.text"},"ts":1202953980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the recursive definition of \"acceptable\" is a bit dogy","msgtype":"m.text"},"ts":1202955480000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"a cycle of WorkerWindows talking to each other but disconnected from all real Windows could be deemed \"acceptable\", and could also be deemed \"not acceptable\"","msgtype":"m.text"},"ts":1202955540000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"you also need to say something about what's in scope for these worker threads","msgtype":"m.text"},"ts":1202955660000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"oh I see you've got a one-line comment covering that :-)","msgtype":"m.text"},"ts":1202955720000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"is createWorker*() designed to make it possible to run JS as a separate thread in the background?","msgtype":"m.text"},"ts":1202956020000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1202956021000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1202956022000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"a la Gears","msgtype":"m.text"},"ts":1202956023000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: yeah, i thought of that when i defined it (the 'acceptable' thing). i was hoping it would go unnoticed.","msgtype":"m.text"},"ts":1202958480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fat chance of that, apparently :-)","msgtype":"m.text"},"ts":1202958481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: any idea how to better phrase it?","msgtype":"m.text"},"ts":1202958482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"something like","msgtype":"m.text"},"ts":1202958540000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"\"Acceptability is defined inductively by the following rules:\"","msgtype":"m.text"},"ts":1202958541000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"(these two proposals are very much early early drafts, by the way, hey'll obviously be defined more rigorously if they ever make a real spec)","msgtype":"m.text"},"ts":1202958542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: is that magic phrasing that makes it better? awesome","msgtype":"m.text"},"ts":1202958600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"edits","msgtype":"m.emote"},"ts":1202958601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1202958602000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"\"1. <a thread with an endpoint whose other end is a real Window, is acceptable>\"","msgtype":"m.text"},"ts":1202958603000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"oh, there's more, ok","msgtype":"m.text"},"ts":1202958604000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"waits","msgtype":"m.emote"},"ts":1202958605000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"2. <a thread with an endpoint whose other end is an acceptable thread, is acceptable>\"","msgtype":"m.text"},"ts":1202958606000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"but yeah, \"induction\" is actually a magic word here :-)","msgtype":"m.text"},"ts":1202958607000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"you might find it useful to take a class or read a book on methods for formal specification","msgtype":"m.text"},"ts":1202958660000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"a lot of it's less useful than its practitioners wish","msgtype":"m.text"},"ts":1202958720000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"but you might pick up some useful stuff anyway","msgtype":"m.text"},"ts":1202958721000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yeah, i try to read up on stuff like that occasionally","msgtype":"m.text"},"ts":1202958722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you have any suggestions?","msgtype":"m.text"},"ts":1202958723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's a lot of... less than readable material","msgtype":"m.text"},"ts":1202958724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202958725000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that's either way over my head, or bogus","msgtype":"m.text"},"ts":1202958726000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i can't tell","msgtype":"m.text"},"ts":1202958727000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'll ask my old PhD advisor(s), they're into this sort of thing","msgtype":"m.text"},"ts":1202958840000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1202958900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would be awesome","msgtype":"m.text"},"ts":1202958901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"BTW another way of phrasing those acceptability constraints would be to specify that you want the least solution to the constraints, i.e. the solution that makes the minimum number of workers acceptable","msgtype":"m.text"},"ts":1202958960000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1202959020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, i've tried taking your structure and applied it to the draft","msgtype":"m.text"},"ts":1202959021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://hixie.ch/specs/dom/workers/0.9","msgtype":"m.text"},"ts":1202959022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's quite a popular approach, although sometimes defining \"minimal\" is itself quite tricky","msgtype":"m.text"},"ts":1202959023000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"looks good","msgtype":"m.text"},"ts":1202959080000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1202959081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1202959082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: weren't you originally an English major? How much mathematics have you done?","msgtype":"m.text"},"ts":1202959680000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"physics","msgtype":"m.text"},"ts":1202959681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah ok cool","msgtype":"m.text"},"ts":1202959682000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so you probably learned lots of calculus and geometry, which is useless :-)","msgtype":"m.text"},"ts":1202959740000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"pretty much","msgtype":"m.text"},"ts":1202959741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and all the stats i learnt, which would have been useful, i forgot","msgtype":"m.text"},"ts":1202959742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the scientific method is the main thing i got from my degree which i've applied to the spec work","msgtype":"m.text"},"ts":1202959800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"passwordsInTheClear-52 lol","msgtype":"m.text"},"ts":1202987040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if I should point out a small mistake or not","msgtype":"m.text"},"ts":1202987160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, what's the mistake?","msgtype":"m.text"},"ts":1202987520000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Is this mail basically asking what string can be used for hasFeature() to test for selectors api? http://lists.w3.org/Archives/Public/public-webapi/2008Feb/0035.html","msgtype":"m.text"},"ts":1202987580000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I think so","msgtype":"m.text"},"ts":1202987581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't see a compelling reason to define one","msgtype":"m.text"},"ts":1202987582000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Me neither","msgtype":"m.text"},"ts":1202987640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if(document.whateverthenamewas)","msgtype":"m.text"},"ts":1202987641000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1202987642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"since hasFeature virtually never gets used int he wild and that alternative already works","msgtype":"m.text"},"ts":1202987643000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and since hasFeature must die","msgtype":"m.text"},"ts":1202987644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1202987700000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"stabs hasFeature","msgtype":"m.emote"},"ts":1202987760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Lachy, as for -52, the second example they give in the HTML section is something the UA can't know and the Web author does and therefore the Web author doesn't use a password field at all and therefore the example is wrong","msgtype":"m.text"},"ts":1202987940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders how something like target=\"_blank-but-with-more-security-separation\" would work, since JS code will have to determine whether the UA has that feature before deciding to use it (rather than falling back to window.open tricks) and that seems impossible to determine unless there's some API call that returns true when that feature is supported","msgtype":"m.emote"},"ts":1202988060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the same is true for rel=noreferrer","msgtype":"m.text"},"ts":1202988120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, maybe rel=noreferrer is the solution?","msgtype":"m.text"},"ts":1202988121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"forgot","msgtype":"m.emote"},"ts":1202988180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I only see 1 HTML example, which appears to be missing the name attribute","msgtype":"m.text"},"ts":1202988240000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"in section 3","msgtype":"m.text"},"ts":1202988241000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I guess in practice people would just use 'if (navigator.userAgent.indexOf('Firefox/4.0.) == -1) { /* use slow ugly fallback mechanism */ }' if they're not given any better way of determining supportedness","msgtype":"m.text"},"ts":1202988242000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Lachy, the text that provides exceptions in terms of examples to the SHOULD-level requirement is what I was talking about","msgtype":"m.text"},"ts":1202988300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, yeah, transition periods are awkward now and then","msgtype":"m.text"},"ts":1202988301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We're always in a transition period - nothing is going to settle down and stabilise until it's dead","msgtype":"m.text"},"ts":1202988420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"individual features have shorter transition periods than that though","msgtype":"m.text"},"ts":1202988600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I agree that the Web as a whole has a slightly different model :)","msgtype":"m.text"},"ts":1202988601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if by 2010 he'll be able to use transparent PNGs without style=\"-filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(...)\"","msgtype":"m.emote"},"ts":1202989020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"has used transparent PNGs without that kind of stuff since circa 2000","msgtype":"m.emote"},"ts":1202989200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also needs the transparency to actually be transparent, and needs to work for a sufficiently large proportion of users","msgtype":"m.emote"},"ts":1202989260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I just have 3 more issues to resolve in selectors api, and I'm done.","msgtype":"m.text"},"ts":1202994240000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"did you make a simple plain text issues list already?","msgtype":"m.text"},"ts":1202994300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure how to deal with these 2 regarding the IDL (see points 2 and 3 in this mail) http://lists.w3.org/Archives/Public/public-webapi/2007Dec/0072.html","msgtype":"m.text"},"ts":1202994301000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"point to DOM Bindings and say that we're going to use that","msgtype":"m.text"},"ts":1202994302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not yet, I've just been tagging the mails in my mail archive.  I will write out a list of issues from that later","msgtype":"m.text"},"ts":1202994360000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1202994361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in due course the Web API WG will use http://www.w3.org/TR/DOM-Bindings/ for its deliverables once that reaches a slightly more stable state","msgtype":"m.text"},"ts":1202994362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so currently the IDL syntax is more of an informative nature, really","msgtype":"m.text"},"ts":1202994420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the 3rd issue is the one about using XHTML syntax instead of HTML syntax in examples http://lists.w3.org/Archives/Public/public-webapi/2008Jan/0004.html","msgtype":"m.text"},"ts":1202994421000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and we do plan to fix that before going to PR","msgtype":"m.text"},"ts":1202994422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"changing examples always introduces bugs is my experience","msgtype":"m.text"},"ts":1202994423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought about using DOM Bindings, but wasn't sure, since it's not finished yet","msgtype":"m.text"},"ts":1202994480000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'll check in my current revision now","msgtype":"m.text"},"ts":1202994481000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"we'll do DOM Bindings before CR or PR, whenever DOM Bindings itself is in PR/REC","msgtype":"m.text"},"ts":1202994482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(well, that's my idea anyway)","msgtype":"m.text"},"ts":1202994540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"When I buy postage stamps, I want them to have the Queen's head on them, not the word \"LOVE\" in large pink letters :-(","msgtype":"m.text"},"ts":1202994780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I wonder why they have LOVE in large pink letters","msgtype":"m.text"},"ts":1202995020000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"ann latest version checked in http://dev.w3.org/2006/webapi/selectors-api/","msgtype":"m.text"},"ts":1202995200000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"s/ann/annevk/","msgtype":"m.text"},"ts":1202995201000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"sends off all responses to the last call comments for selectors api to public-webapi","msgtype":"m.emote"},"ts":1202995800000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'm not really convinced with the exceptions story, still","msgtype":"m.text"},"ts":1202996100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even thoug I added them","msgtype":"m.text"},"ts":1202996101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"using querySelector to test selector support seems wrong","msgtype":"m.text"},"ts":1202996102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, send mail about it to public-webapi and see what others think about the idea of removing exceptions","msgtype":"m.text"},"ts":1202996280000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"i remember having done that before","msgtype":"m.text"},"ts":1202996281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you only sent me mail privately","msgtype":"m.text"},"ts":1202996520000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I don't recall seeing any discussion about removing exceptions on the mailing list","msgtype":"m.text"},"ts":1202996521000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"here's that feedback I got from mjs about exceptions http://krijnhoetmer.nl/irc-logs/whatwg/20080208#l-17","msgtype":"m.text"},"ts":1202996580000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"i'm pretty sure it was on the list too and bjoern didn't like it for similar reasons as maciej or something","msgtype":"m.text"},"ts":1202996880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you did, I can't find it in pubilc-webapi","msgtype":"m.text"},"ts":1202997120000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hmm, Firefox doesn't like setAttribute(':', ...)","msgtype":"m.text"},"ts":1203002760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think jwalden might have a patch for that?","msgtype":"m.text"},"ts":1203002820000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"oh, no, I was thinking of bug 411103","msgtype":"m.text"},"ts":1203002821000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"tries filing https://bugzilla.mozilla.org/show_bug.cgi?id=417491","msgtype":"m.emote"},"ts":1203002940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"data:text/html,%3Cbody%20:=\"\"%20onload=%22try%20{%20document.body.setAttribute(':',%20'');%20alert('OK')%20}%20catch(e)%20{%20alert(e)%20}%22%3E works, though","msgtype":"m.text"},"ts":1203003180000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"there's a bug on this already, I think","msgtype":"m.text"},"ts":1203003181000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=390816","msgtype":"m.text"},"ts":1203003240000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"gavin_: That looks different - ';' should be rejected because it's not a valid XML Name","msgtype":"m.text"},"ts":1203003300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: \":\" is not a proper XMLNS name, though","msgtype":"m.text"},"ts":1203003360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(although Gecko has a dual XML 1.0 / XMLNS 1.0 nature in some things, IIRC)","msgtype":"m.text"},"ts":1203003420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: DOM just says it should be an XML name - the namespace things only affect setAttributeNS etc","msgtype":"m.text"},"ts":1203003421000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1203003540000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"gives up trying to work out what DOMs can be safely constructed, and just wraps stuff in exception handlers","msgtype":"m.emote"},"ts":1203003541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i think it makes sense to require XMLNS Name","msgtype":"m.text"},"ts":1203003542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so createElement can just become a shorthand for createElementNS(htmlns, name)","msgtype":"m.text"},"ts":1203003600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"agrees with annevk","msgtype":"m.emote"},"ts":1203003660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"tries to understand MOZ_XMLCheckQName","msgtype":"m.emote"},"ts":1203003661000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"on a second though, that won't work for XHR","msgtype":"m.text"},"ts":1203003662000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so, no","msgtype":"m.text"},"ts":1203003663000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"since IE XHR is DOM Level 1, stuff like the Flickr API have to be XML 1.0 without XMLNS","msgtype":"m.text"},"ts":1203003720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yay for XMLNS","msgtype":"m.text"},"ts":1203003721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i don't understand","msgtype":"m.text"},"ts":1203003780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"xhr requires a conforming xmlns parser","msgtype":"m.text"},"ts":1203003781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IE6 doesn't expose a namespace-aware API for XHR-loaded docs, IIRC","msgtype":"m.text"},"ts":1203003840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and Safari as shipped with Panther missealized namespaced XML","msgtype":"m.text"},"ts":1203003900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so RESTful XML APIs that want to be XHR-compatible have to live in the namespaceless XML 1.0 (< 5th ed.) world","msgtype":"m.text"},"ts":1203003901000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gives up trying to understand, uses a debugger instead","msgtype":"m.emote"},"ts":1203003902000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"isserialized","msgtype":"m.text"},"ts":1203003960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"misserialized","msgtype":"m.text"},"ts":1203003961000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"typo++","msgtype":"m.text"},"ts":1203003962000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well namespaceless is fine","msgtype":"m.text"},"ts":1203003963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm just saying that they have to compatible with XMLNS for things to work","msgtype":"m.text"},"ts":1203004020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1203004080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://philip.html5.org/tools/parser/?%3C!DOCTYPE%20HTML%3E%0A%3Cx%3Ax%20x%3Ax%3E%3Cx%3A%3Ax%20x%3A%3Ax%3E%3Cx'x%20x'x%3E%3Cfoo%20%3Ax%3E","msgtype":"m.text"},"ts":1203004081000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Opera, Firefox and Safari all give different output :-(","msgtype":"m.text"},"ts":1203004082000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but at least Opera 9.2 and 9.5 are the same, and Firefox 2 and 3 are the same","msgtype":"m.text"},"ts":1203004083000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, heh, cool stuff","msgtype":"m.text"},"ts":1203005520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"weinig, jwalden (if you read this), any feedback on adding reply() ?","msgtype":"m.text"},"ts":1203005820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"webben: Aaron's reply is interesting","msgtype":"m.text"},"ts":1203006480000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"annevk: ^^^","msgtype":"m.text"},"ts":1203006540000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"webben: sorry, misdirected that message","msgtype":"m.text"},"ts":1203006541000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"yeah, though then you want a callback for reply() too for longer conversations...","msgtype":"m.text"},"ts":1203006600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1203006660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: true","msgtype":"m.text"},"ts":1203006780000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"annevk: you could end up with some very long callback chains on either end","msgtype":"m.text"},"ts":1203006781000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"annevk: (well, I guess both ends, since the chains would have to be within one callback of each other in length)","msgtype":"m.text"},"ts":1203006782000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"yeah, seems icky","msgtype":"m.text"},"ts":1203006840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe postMessage should return a uuid and that uuid is exposed on the event","msgtype":"m.text"},"ts":1203006900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and when you invoke reply it automatically uses the same uuid","msgtype":"m.text"},"ts":1203006901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess that would be a little easier than what Gears does","msgtype":"m.text"},"ts":1203006960000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"annevk: since with Gears you have to embed the ID into your message string","msgtype":"m.text"},"ts":1203006961000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"yeah, with postMessage() you'd have to do that too now","msgtype":"m.text"},"ts":1203006962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1203007020000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"ok, posted that idea","msgtype":"m.text"},"ts":1203007680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i have a feeling that hixie's endpoints stuff does similar tricks, we'll see","msgtype":"m.text"},"ts":1203007681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but this proposal is not that more complex than what we have now, so it should be easier to have browsers updated in time with everyone's nearing release dates","msgtype":"m.text"},"ts":1203007740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"endpoints\"?","msgtype":"m.text"},"ts":1203007741000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"http://hixie.ch/specs/dom/messages/0.9","msgtype":"m.text"},"ts":1203007800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i haven't carefully checked it yet after asking hixie for more rationale","msgtype":"m.text"},"ts":1203007801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"reads","msgtype":"m.emote"},"ts":1203007802000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"hm, I think there's a typo in the example on that page","msgtype":"m.text"},"ts":1203008580000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"       gadgetWindow.endPoint.postMessage('get list-of-names', event.endPoint);","msgtype":"m.text"},"ts":1203008581000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"seems like it should just be","msgtype":"m.text"},"ts":1203008582000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"       gadgetWindow.postMessage('get list-of-names', event.endPoint);","msgtype":"m.text"},"ts":1203008640000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"Hixie: ^^^","msgtype":"m.text"},"ts":1203008700000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"oops. fixed.","msgtype":"m.text"},"ts":1203012240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ooh, a tokeniser change - how exciting","msgtype":"m.text"},"ts":1203014160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"updates his four tokeniser implementations","msgtype":"m.emote"},"ts":1203014340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1203014400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the graph of time-from-message-being-sent against probability of message being replied that day has a spike at t = 0 days","msgtype":"m.text"},"ts":1203014460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: do you have the graph online?","msgtype":"m.text"},"ts":1203014580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"P|","msgtype":"m.text"},"ts":1203014760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" |","msgtype":"m.text"},"ts":1203014761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" |_","msgtype":"m.text"},"ts":1203014762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" | |","msgtype":"m.text"},"ts":1203014763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" | |            ____  ?","msgtype":"m.text"},"ts":1203014764000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" | |___...---'''","msgtype":"m.text"},"ts":1203014765000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" |     ","msgtype":"m.text"},"ts":1203014766000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"-+-------------------->t","msgtype":"m.text"},"ts":1203014767000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the start of it -- a few months -- looks like that","msgtype":"m.text"},"ts":1203014820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dunno what the whole thing looks like","msgtype":"m.text"},"ts":1203014821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: thanks","msgtype":"m.text"},"ts":1203014822000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It's kind of odd how the Ruby html5lib claims to pass all the tokeniser tests, despite it not actually passing","msgtype":"m.text"},"ts":1203015120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Aha, it does \"return expected == received\" instead of \"assert_equal expected, received\"","msgtype":"m.text"},"ts":1203015180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmm. I wonder what the perf implications of query strings are with the new Access-Control-Policy-Path thing","msgtype":"m.text"},"ts":1203015181000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"rereads the spec","msgtype":"m.emote"},"ts":1203015182000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. looks good","msgtype":"m.text"},"ts":1203015240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"now awaiting for an access-control-enabled browser, then","msgtype":"m.text"},"ts":1203015300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for validation mashups","msgtype":"m.text"},"ts":1203015301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"So, I think the Python and Ruby and OCaml and C++ and JS and Perl tokenisers now match the spec again","msgtype":"m.text"},"ts":1203016020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://philip.html5.org/tools/parser/?%3C!DOCTYPE%20HTML%20%225%3E2%22%3E%0A...","msgtype":"m.text"},"ts":1203016140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hmm, that totally doesn't work right in Opera 9.2","msgtype":"m.text"},"ts":1203016141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: you want http://philip.html5.org/tools/parser/?%3C!doctype%20html%20public%20%22%3E%20X","msgtype":"m.text"},"ts":1203016620000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"heh, I love how things are only bugs if one actually claims conformance :-) http://lists.w3.org/Archives/Public/public-webapi/2008Feb/0071.html","msgtype":"m.text"},"ts":1203016680000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Is RIM a browser vendor these days?","msgtype":"m.text"},"ts":1203016681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan_: Argh, good point","msgtype":"m.text"},"ts":1203016682000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Lachy: I assume that means \"claim\" in the \"returns true from hasFeature\" sense, not in the \"marketing material has it as a bullet pointed feature\"; i.e. it would be alright for someone to have an incomplete/buggy implementation if hasFeature says it's not properly supported and shouldn't be used","msgtype":"m.text"},"ts":1203016860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which seems more reasonable than how I initially read it :-)","msgtype":"m.text"},"ts":1203016861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so if hasFeature returns false for everything, the UA is bug-free?","msgtype":"m.text"},"ts":1203016920000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_, yes.","msgtype":"m.text"},"ts":1203016921000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"awsome","msgtype":"m.text"},"ts":1203016922000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"goes to file a bug for opera about hasFeature returning true for somethings","msgtype":"m.emote"},"ts":1203016923000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"wonders whether there is a feature for hasFeature working...","msgtype":"m.emote"},"ts":1203016980000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Core 2.0 or something?","msgtype":"m.text"},"ts":1203016981000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"So if hasFeature for that returns false, doens't that mean that other return values are irrelevant? :-)","msgtype":"m.text"},"ts":1203016982000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle, I think it would be covered under the \"DOM 2.0\" features string (or whatever it is)","msgtype":"m.text"},"ts":1203016983000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hasFeature(\"hasFeature\", \"1.0\")","msgtype":"m.text"},"ts":1203017040000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"false","msgtype":"m.text"},"ts":1203017041000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1203017042000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"If you return false for hasFeature then you will get the sort-of-gracefully degraded fallback path that authors have conscientiously provided for user agents that don't have the feature, and your users will hate you because they get a degraded experience, and so market forces will compel you to implement the feature perfectly so you can return true from hasFeature","msgtype":"m.text"},"ts":1203017100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"everything should just be implemented perfectly in every browser on the first attempt, and then hasFeature can be changed from a method to a single property that just equals true.","msgtype":"m.text"},"ts":1203017280000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Philip`: might be interesting to see how many websites actually use hasFeature","msgtype":"m.text"},"ts":1203017400000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"http://google.com/codesearch?q=show:mUNqRgxPl_s:oKMDwuYvdP4:CNlRzrngUHA&cs_p=http://www.devlib.org/apache/struts/source/struts-2.0.6-src.zip&cs_f=struts-2.0.6/src/core/src/main/resources/org/apache/struts2/static/dojo/dojo.js.uncompressed.js#l1157","msgtype":"m.text"},"ts":1203017520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"There's one","msgtype":"m.text"},"ts":1203017521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://google.com/codesearch?q=show:BNeIttp5oHc:5g2Z17w4TXQ:BXCuyDas2KE&cs_p=http://openrico.org/svn/openrico/trunk&cs_f=openrico/public/dist/1.1.2/rico.js#l1337","msgtype":"m.text"},"ts":1203017580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://google.com/codesearch?q=show:UWuK4cTDdZc:A3Gk8FzZWSM:L1InoVp7Omk&cs_p=http://gentoo.osuosl.org/distfiles/Plone-2.1.4.tar.gz&cs_f=Plone-2.1.4/kupu/common/sarissa_ieemu_xpath.js#l26","msgtype":"m.text"},"ts":1203017640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It seems easy to find quite a few","msgtype":"m.text"},"ts":1203017641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heh, #1 follows it up with a UA sniff.  #2 uses IE-specific path as a fallback, and will fail in konqueror, since it tests for \"CSS\", \"2.0\" --- odd thing to test if you want -events- support. #3 actually looks right :-)","msgtype":"m.text"},"ts":1203017760000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"\"Making an implementation bug-free is outside the scope of the specification.\" -- http://www.w3.org/mid/24BE9C481C439C48831EB9E52639B9B60A8D4842⊙Xrn","msgtype":"m.text"},"ts":1203021120000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hmm, perhaps i have misunderstood the purpose of having specs","msgtype":"m.text"},"ts":1203021121000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"it's to say what 'bug-free' means :-)","msgtype":"m.text"},"ts":1203021240000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"i think its time for me to finetune my ignore flag again","msgtype":"m.text"},"ts":1203021300000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I'm bug free.","msgtype":"m.text"},"ts":1203021360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan_, technically that statement is correct, depending on how you read it. It's the implementor's responsibility to actually write the bug free code, not the specification. But it is the specification's responsibilty to ensure that things are defined well enough to be implemented in bug free ways","msgtype":"m.text"},"ts":1203022380000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"RFC3986 doesn't reference RFC2119!","msgtype":"m.text"},"ts":1203025320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is amazed","msgtype":"m.emote"},"ts":1203025321000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"they don't capitalize SHOULD/MAY/etc.","msgtype":"m.text"},"ts":1203025500000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-webapi/2008Feb/0076.html","msgtype":"m.text"},"ts":1203025501000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"what on earth","msgtype":"m.text"},"ts":1203025502000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Sent from Yahoo! Mail - a smarter inbox","msgtype":"m.text"},"ts":1203025560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lachy, one other thing to consider btw is to call StaticNodeList NodeList again and mention specifically that DOM Level 3 Core (and maybe previous versions) contains a bug as it calls it a live list where it just defines an interface","msgtype":"m.text"},"ts":1203025860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"isn't that what i said at the time :-P","msgtype":"m.text"},"ts":1203025920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i was convinced, but some other people were not","msgtype":"m.text"},"ts":1203025980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably easier to get it through now, especially with webkit already doing it that way!","msgtype":"m.text"},"ts":1203025981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"man, these SMIL people are pushy","msgtype":"m.text"},"ts":1203026040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm?","msgtype":"m.text"},"ts":1203026100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not really","msgtype":"m.text"},"ts":1203026160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just getting quite a bit of e-mail about this timesheets draft","msgtype":"m.text"},"ts":1203026161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"timesheets?","msgtype":"m.text"},"ts":1203026220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wtf is that","msgtype":"m.text"},"ts":1203026221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That widely implemented draft, obviously.","msgtype":"m.text"},"ts":1203026222000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That would be easier","msgtype":"m.text"},"ts":1203026280000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I had assumed that window.DocumentSelector and window.ElementSelector would be exposed, since the interfaces for other DOM2 APIs are exposed","msgtype":"m.text"},"ts":1203026281000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"assumes timesheets is for doing things that were common on 90s era CD-ROMS","msgtype":"m.emote"},"ts":1203026282000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"aargh! What is wrong with Sergey's email client? Why is it putting one word per line?!","msgtype":"m.text"},"ts":1203026400000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"one of the spec editors demoed me timesheets","msgtype":"m.text"},"ts":1203026401000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think DocumentSelector and ElementSelector should not be exposed on Window","msgtype":"m.text"},"ts":1203026402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the demoed use case was doing S5 without the JS","msgtype":"m.text"},"ts":1203026403000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"bravely presses send","msgtype":"m.emote"},"ts":1203026404000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"they are redundant","msgtype":"m.text"},"ts":1203026405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hopefully DOM Bindings provides a way to say that","msgtype":"m.text"},"ts":1203026406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I quite liked the Apple CSS animation stuff for transitions and the like","msgtype":"m.text"},"ts":1203026460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah, we need that","msgtype":"m.text"},"ts":1203026461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lachy: are DocumentTraversal, DocumentViews, ElementTarget, DocumentStyle, etc. exposed?","msgtype":"m.text"},"ts":1203026462000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"fits what already is there much better than SMIL","msgtype":"m.text"},"ts":1203026463000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but the $%# CSS WG declared it out of charter","msgtype":"m.text"},"ts":1203026464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't claim my assumptions about the purpose of timesheets are at all accurate","msgtype":"m.text"},"ts":1203026520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"SadEagle, Firefox exposes DocumentTraversal and DocumentStyle","msgtype":"m.text"},"ts":1203026521000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Odd. But then the entire thing  is a mozillaism everyone else had to emulate, making it a defacto standard :-)","msgtype":"m.text"},"ts":1203026580000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle, EventTarget should be exposed, not sure what ElementTarget is","msgtype":"m.text"},"ts":1203026581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's a very problematic thing to do, though.","msgtype":"m.text"},"ts":1203026582000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"I agree that exposing DocumentStyle and such makes no sense","msgtype":"m.text"},"ts":1203026583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's what I meant... And I guess EventTarget makes sense, since it can be used as a base class.","msgtype":"m.text"},"ts":1203026584000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Well, what should DocumentStyle.prototype point to?","msgtype":"m.text"},"ts":1203026585000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"FF exposes EventTarget too. WebKit doesn't seem to expose any of them","msgtype":"m.text"},"ts":1203026640000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"probably maps to Document.prototype","msgtype":"m.text"},"ts":1203026641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really like what Firefox does with interfaces at all","msgtype":"m.text"},"ts":1203026642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1203026643000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"there's now some Web content that relies on XMLDocument and HTMLSpanElement, HTMLUnknownElement and crap like that","msgtype":"m.text"},"ts":1203026700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It makes sense for the ones that define constants, like Node.ELEMENT_NODE","msgtype":"m.text"},"ts":1203026701000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"well, that stuff makes sense","msgtype":"m.text"},"ts":1203026702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that stuff is also far more interoperable than what we're discussing here","msgtype":"m.text"},"ts":1203026703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good lord, the html wg is considering even more mailing lists","msgtype":"m.text"},"ts":1203026760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, what more mailing lists are being considered?","msgtype":"m.text"},"ts":1203026820000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"see #html-wg","msgtype":"m.text"},"ts":1203026821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: those are the interfaces they have aren't in the DOM, right?","msgtype":"m.text"},"ts":1203026822000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1203027000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ponders the idea of adding a hasFeature string to selectors api that implementors are not required to support :-)","msgtype":"m.emote"},"ts":1203027420000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hasFeature('Selectors.hasFeature')","msgtype":"m.text"},"ts":1203027480000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"good to know that the chair of the html working group doesn't read all the mail to the html working group","msgtype":"m.text"},"ts":1203027540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doesn't find that too encouraging","msgtype":"m.emote"},"ts":1203027720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders how many do","msgtype":"m.emote"},"ts":1203027780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Chairs of the WG or participants in general?","msgtype":"m.text"},"ts":1203027781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"everyone in the WG","msgtype":"m.text"},"ts":1203027782000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I skim each e-mail, though I delete some right away based on subject/sender","msgtype":"m.text"},"ts":1203027783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(that's not specific to the HTML WG though)","msgtype":"m.text"},"ts":1203027840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i read everything, and save anything that looks useful to the folders for further study later","msgtype":"m.text"},"ts":1203027841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i read public-html (and whatwg, and public-appformats and -webapi) before reading anything from the groups i'm not as actively in, like css or tag or http","msgtype":"m.text"},"ts":1203027900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I ignore anything to do with <abbr> vs <acronym> as a matter of course. And occasionally I never get round to reading some messages.","msgtype":"m.text"},"ts":1203027901000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I skim most things, though there are some things which I know so little about I just ignore from the subject","msgtype":"m.text"},"ts":1203027902000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I tend to look at all the words in everything, but I'm not sure if it counts as reading","msgtype":"m.text"},"ts":1203027960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Mostly it's just a way of getting rid of the 'unread messages' marker","msgtype":"m.text"},"ts":1203027961000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah well some e-mails certainly don't get a very thorough reading","msgtype":"m.text"},"ts":1203028020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"especially those written in reply to e-mails that themselves didn't seem to get a thorough reading","msgtype":"m.text"},"ts":1203028021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i rarely spend more time reading an e-mail than the other person spent writing it","msgtype":"m.text"},"ts":1203028022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(or thinking about it)","msgtype":"m.text"},"ts":1203028080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I guess that means 10 seconds for most of my emails :)","msgtype":"m.text"},"ts":1203028081000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(sadly)","msgtype":"m.text"},"ts":1203028082000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1203028200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://weblogs.mozillazine.org/doron/archives/2008/02/exe_tld_coming_soon.html :o","msgtype":"m.text"},"ts":1203028380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"squints","msgtype":"m.emote"},"ts":1203028381000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that's not a new issue, though, see .pl :-)","msgtype":"m.text"},"ts":1203028382000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"silly Poland, thinking they deserve a TLD!","msgtype":"m.text"},"ts":1203028383000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or perhaps: Why's that relevant? I mean, who uses perl nowadays?","msgtype":"m.text"},"ts":1203028440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SadEagle, heh, true","msgtype":"m.text"},"ts":1203028500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is too tired to be truly witty","msgtype":"m.emote"},"ts":1203028501000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SadEagle, well, actually, .pl is not handled by the browser","msgtype":"m.text"},"ts":1203028502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm mildly amused at how the w3c staff (except for mike) aren't actually an active part of the html5 community, despite them making process decision on the htmlwg","msgtype":"m.text"},"ts":1203028503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't really like it","msgtype":"m.text"},"ts":1203028560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it could be though, viewed as text... I am not sure where this distinction matters in mozilla, though (it showed up in KDE, but that was outside a web browser)","msgtype":"m.text"},"ts":1203028620000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"i wonder where browsers do extension sniffing though","msgtype":"m.text"},"ts":1203028680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTML5 contains no such thing!","msgtype":"m.text"},"ts":1203028681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's also .au","msgtype":"m.text"},"ts":1203028682000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"browsers do extension sniffing in the places where html5 explicitly says not to do extension sniffing","msgtype":"m.text"},"ts":1203028683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there was a famous Gecko bug that only happened on files downloaded from Australia","msgtype":"m.text"},"ts":1203028740000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that took a while to figure out","msgtype":"m.text"},"ts":1203028741000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1203028742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"waves g'nite","msgtype":"m.emote"},"ts":1203028920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"'course if .com is no problem, why would .exe be a problem","msgtype":"m.text"},"ts":1203029040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://eicar.com/download/eicar.com","msgtype":"m.text"},"ts":1203029160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Dashiva, you registered?","msgtype":"m.text"},"ts":1203029280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Where?","msgtype":"m.text"},"ts":1203030540000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"freenode, nm though, you're on w3.org too :)","msgtype":"m.text"},"ts":1203030660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`: the reason one is a list and one is as stack (despite neither being either) is exactly because it makes them easier to distinguish","msgtype":"m.text"},"ts":1203032340000,"senderName":"Hixie","senderId":"Hixie@irc"}
]