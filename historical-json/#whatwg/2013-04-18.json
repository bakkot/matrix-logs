[
{"content":{"body":"gavinc: So, seems to be totally incompatible with what WHATWG DOM Futures are doing (at least, the interface doesn't match at all) *sobs*","msgtype":"m.text"},"ts":1366243761000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"gavinc: Does WebIDL support the ability to define futures to iron out these sorts of incompatibilities between languages?","msgtype":"m.text"},"ts":1366243787000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: Interface doesn't, but I assure you the spirit does","msgtype":"m.text"},"ts":1366243788000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: Too bad API specs are about interfaces and not spirits. :)","msgtype":"m.text"},"ts":1366243805000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"The idea that one API can serve many languages is non-sense anyway :P","msgtype":"m.text"},"ts":1366243819000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: Also note: http://www.python.org/dev/peps/pep-3156/#callback-style","msgtype":"m.text"},"ts":1366243871000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"that isn't talking about how to write callback APIs that's talking about the problems with them ;)","msgtype":"m.text"},"ts":1366243934000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: Creating an API that can just serve Javascript is starting to sound like non-sense.... even JS folks can't agree on the proper flow control style.","msgtype":"m.text"},"ts":1366243936000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Right, so serve Javascript in Browsers ;)","msgtype":"m.text"},"ts":1366243953000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"err, JSON-LD on servers is just as important, if not more important.","msgtype":"m.text"},"ts":1366243996000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"and having an interface that is similar between both is really important.","msgtype":"m.text"},"ts":1366244010000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"The API will NOT be the same.","msgtype":"m.text"},"ts":1366244014000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"(so developers aren't confused)","msgtype":"m.text"},"ts":1366244016000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"gavinc: The API between node.js server side, and Javascript browser-side /is exactly the same/ right now.","msgtype":"m.text"},"ts":1366244042000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"that's one of the reasons we picked the callback control-flow style.","msgtype":"m.text"},"ts":1366244135000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"so that developers didn't have to do Futures on the browser-side and callbacks on the server-side.","msgtype":"m.text"},"ts":1366244152000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"(in JavaScript)","msgtype":"m.text"},"ts":1366244156000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"(and Python, and Ruby, and PHP)","msgtype":"m.text"},"ts":1366244173000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"(not that PHP is used on the client-side that often... but you get the idea)","msgtype":"m.text"},"ts":1366244189000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"I note you happily ignore the other language WITH WebIDL bindings ;)","msgtype":"m.text"},"ts":1366244197000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Since it totally sucks at Callback style, Java :P","msgtype":"m.text"},"ts":1366244206000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"what, like Java - screw Java - Java is awful :)","msgtype":"m.text"},"ts":1366244220000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"The API WILL NOT be the same in all languages","msgtype":"m.text"},"ts":1366244252000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"clearly","msgtype":"m.text"},"ts":1366244254000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"besides, there is nothing that says that you /have/ to follow the JSON-LD API spec, we made it that way so that people can do things that make sense in their language of choice.","msgtype":"m.text"},"ts":1366244264000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"going to make finding 3 implementations fun ;)","msgtype":"m.text"},"ts":1366244297000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"we already have 3 :)","msgtype":"m.text"},"ts":1366244314000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"in fact, we have 5","msgtype":"m.text"},"ts":1366244320000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"No, cause the Python one at least doesn't use the same API","msgtype":"m.text"},"ts":1366244339000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"like I said, nobody complained about this until the WHATWG DOM Futures folks jumped in.","msgtype":"m.text"},"ts":1366244366000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"besides, only 2 implementations are necessary for REC :)","msgtype":"m.text"},"ts":1366244395000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"nobody complained until the people who have been dealing with large callback based API non sense for years chimed in?","msgtype":"m.text"},"ts":1366244405000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"that's uh... an odd argument ;)","msgtype":"m.text"},"ts":1366244411000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"you act as if the people in this channel are the only people dealing with large callback based APIs...","msgtype":"m.text"},"ts":1366244442000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"no.","msgtype":"m.text"},"ts":1366244448000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"the node.js community seems to be dealing with it just fine.","msgtype":"m.text"},"ts":1366244449000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"and honestly, it's really not that big of an issue with the libraries that we use either on the server-side or client-side.","msgtype":"m.text"},"ts":1366244481000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"I realize that there are people that feel that Futures are the future... but those folks haven't gotten the state of the art to the point that we can shift over to it.","msgtype":"m.text"},"ts":1366244509000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"\"callback hell\" is an oddly common term for Node.js if they are handling it well","msgtype":"m.text"},"ts":1366244543000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"once they do, and it's clear that futures are going to make things better, people will naturally switch over because it's a no-brainer.","msgtype":"m.text"},"ts":1366244549000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"gavinc: Do you do a great deal of node.js programming?","msgtype":"m.text"},"ts":1366244570000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"No, twisted ;)","msgtype":"m.text"},"ts":1366244578000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"I hate callbacks that much ;)","msgtype":"m.text"},"ts":1366244601000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"twisted is awful... we've used it before.","msgtype":"m.text"},"ts":1366244613000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"but unfortunately, people tend to conflate the awfulness of twisted with all other callback-based mechanisms.","msgtype":"m.text"},"ts":1366244636000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"node.js did callbacks right - twisted got it horribly wrong (I say this having spent years developing in both)","msgtype":"m.text"},"ts":1366244660000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"the whole \"callback hell\" argument is usually thrown about by people that are not managing their code correctly... at least, 99% of the examples I've seen of callback hell fall into the category where the person complaining doesn't know what they're doing.","msgtype":"m.text"},"ts":1366244706000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"That said, if we can get novices doing async programming in a way that's better then I'm all for it... I'm just not convinced that monads / futures are that solution.","msgtype":"m.text"},"ts":1366244737000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"They abstract away things to the point where it starts to confuse novice developers...","msgtype":"m.text"},"ts":1366244755000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"callbacks do the same sort of thing, but not as badly.","msgtype":"m.text"},"ts":1366244763000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Futures in DOM4, latest Twisted API, the new Python API, are all starting to look very much the same in their semantics","msgtype":"m.text"},"ts":1366244772000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"the syntax and naming is wildly different (well, they all use the word Futures) but otherwise...","msgtype":"m.text"},"ts":1366244794000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"sure, and once everything converges, we'll release a JSON-LD API that is based on futures...","msgtype":"m.text"},"ts":1366244814000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"but doing so at this point seems to be trying to nail jello to a galloping horse. The best we can hope for is to be kicked in the face for our efforts.","msgtype":"m.text"},"ts":1366244849000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"(or something)","msgtype":"m.text"},"ts":1366244859000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"\"In the DOM world and other closely-related APIs, we're not going to stop using futures\"","msgtype":"m.text"},"ts":1366244969000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"that's a reasonably strong statement that you won't get kicked in the face","msgtype":"m.text"},"ts":1366244981000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Unless you'd like to argue that DOM ISN'T the widest use API in Javascript?","msgtype":"m.text"},"ts":1366245016000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"link to who said that?","msgtype":"m.text"},"ts":1366245257000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"also, that statement ignores one side of the equation - server-side.","msgtype":"m.text"},"ts":1366245287000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"gavinc: really? somebody's declaring that no logical arguments will convince them because they've made up their mind?","msgtype":"m.text"},"ts":1366245305000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i'm not sure i want to know who's being that foolish","msgtype":"m.text"},"ts":1366245320000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"learns exactly who has read TabAtkins blog post on Futures ;)","msgtype":"m.emote"},"ts":1366245349000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"http://www.xanthir.com/b4PY0","msgtype":"m.text"},"ts":1366245353000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"I read it in detail, I don't tend to memorize everything I read in blog posts - also, that's Tab saying it - who else is saying that?","msgtype":"m.text"},"ts":1366245387000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Is it the position of the Web Apps WG? Is it the position of the WHAT WG? Is it the position of the majority of browser manufacturers? Answers of \"Yes\" to any of those would be more convincing than one person saying it.","msgtype":"m.text"},"ts":1366245429000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"err, three including annevk, TabAtkins, and Boris.","msgtype":"m.text"},"ts":1366245460000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu-db: CSS norm-refs Unicode at least in CSS Text, possibly in Text Decor, and possibly in Fonts.","msgtype":"m.text"},"ts":1366246995000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu-db: We norm-ref two non-W3C docs in the Colors spec.","msgtype":"m.text"},"ts":1366247026000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu-db: Hey, between me, annevk, and Boris, you've basically got a majority of spec writers. ^_^","msgtype":"m.text"},"ts":1366247080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu1: I'd appreciate if you stopped referencing Node's callbacks as if it had any relevance whatsoever to web APIs.  We can't get Node's \"async\" module, or any reasonable equivalent, on the web, because the web doesnt' have a consistent callback pattern like Node does.","msgtype":"m.text"},"ts":1366247198000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Moving APIs to futures is *far* more likely than moving them to a different callback pattern, given that future-based APIs are easily distinguishable from callback-based ones, while different styles of callback APIs are hard to distinguish.","msgtype":"m.text"},"ts":1366247239000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you can use async in the browser today?","msgtype":"m.text"},"ts":1366247240000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"I mean, statement of fact - you can do that.","msgtype":"m.text"},"ts":1366247247000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: Only if you're using node-style callback APIs.","msgtype":"m.text"},"ts":1366247252000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which dont' exist in any web spec.","msgtype":"m.text"},"ts":1366247259000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(or practically any - some might exist, I dunno)","msgtype":"m.text"},"ts":1366247267000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I outline five different callback styles in my blog post that are attested by major APIs *today*.","msgtype":"m.text"},"ts":1366247289000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes, but there are many libraries that wrap the web specs to provide a callback-style interface... most of the libraries we use do that.","msgtype":"m.text"},"ts":1366247294000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"(None of which are node-like APIs.","msgtype":"m.text"},"ts":1366247297000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu1: If you're allowing wrappers, then we can wrap anything callback-based in a future, too.","msgtype":"m.text"},"ts":1366247321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, that's kinda my point - I don't think developers are really going to be impacted that greatly one way or another.","msgtype":"m.text"},"ts":1366247341000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Right, so consistency arguments with Node don't stand.  We're back to proposals on their merits.","msgtype":"m.text"},"ts":1366247367000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"because lots of the web specs are wrapped in libraries to make them fit a particular model (jquery, AngularJS, etc.)","msgtype":"m.text"},"ts":1366247369000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Adding a sixth callback style to web APIs doesn't help anyone, while jumping on the Futures train *does*.","msgtype":"m.text"},"ts":1366247383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: consistency arguments do matter for Node because we don't want to have developers pick two different call styles between browser-based JSON-LD API and server-side JSON-LD API.","msgtype":"m.text"},"ts":1366247408000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"(Network effects are important for the success of Futures - the more stuff uses it, the more valuable it is.)","msgtype":"m.text"},"ts":1366247410000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I presume they already do so for APIs that are analogs of browser APIs?","msgtype":"m.text"},"ts":1366247438000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Providing a node-like callback system for node, and a Future-based system for the web, sounds fine.","msgtype":"m.text"},"ts":1366247456000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or both, whatever.","msgtype":"m.text"},"ts":1366247459000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bleh","msgtype":"m.text"},"ts":1366247464000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"(If you can reasonably distinguish between them.)","msgtype":"m.text"},"ts":1366247468000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You have to provide a different API for Python/Java/et al anyway.","msgtype":"m.text"},"ts":1366247481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"as developers, we typically can't stand working with libraries like that.","msgtype":"m.text"},"ts":1366247482000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: I'm currently asking W3C what their position on ref'ing the WHATWG DOM API from JSON-LD API is...","msgtype":"m.text"},"ts":1366247502000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Like I said, I think we as developers already do that?  (Not much of a noder, sorry.)","msgtype":"m.text"},"ts":1366247503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: which then brings into question if it really matters what is spec'd... because the opposite will be provided by some developer somewhere.","msgtype":"m.text"},"ts":1366247533000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: You'll either get the right answer (\"it's totally fine to ref things not from the W3C\", because everyone does it and it's never stopped a spec from hitting Rec), or you'll get a kneejerk \"eww, WHATWG\" response.","msgtype":"m.text"},"ts":1366247545000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: which gets back to my first proposal - we'll just spec an API for both - callback-style and futures-style.","msgtype":"m.text"},"ts":1366247548000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: If you have a reasonable naming proposal for the two, sure, whatever.","msgtype":"m.text"},"ts":1366247566000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I was thinking - JSON-LD Callback API and JSON-LD TAB_ATKINS_LOVES_FUTURES API","msgtype":"m.text"},"ts":1366247615000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"I mean for the functions.  I'm cool with you using my name in the spec title.","msgtype":"m.text"},"ts":1366247633000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"noted.","msgtype":"m.text"},"ts":1366247643000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: I'm asking a W3Cer that likes WHAT WG in an attempt to see if I can get the same answer out of them that I got out of you.","msgtype":"m.text"},"ts":1366247667000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: also, for APIs providing both, is there a function naming scheme that is currently used?","msgtype":"m.text"},"ts":1366247710000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"It's cool, I already know the right answer.  If you get another answer, I can just point to the objective evidence that proves me right (multiple specs doing exactly what I say is OK).","msgtype":"m.text"},"ts":1366247711000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Are they RECs?","msgtype":"m.text"},"ts":1366247724000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: No, not yet.  Current attempts are either fresh APIs, or have a completely different name (like XHR might get something along the lines of getJSON() or whatever).","msgtype":"m.text"},"ts":1366247746000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: and if you could just give me the links, I can forward them on to the group so I at least have that at my disposal as a set of arguments.","msgtype":"m.text"},"ts":1366247747000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: Yup, Colors 3 is Rec.","msgtype":"m.text"},"ts":1366247751000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://www.w3.org/TR/css3-color/","msgtype":"m.text"},"ts":1366247768000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"With two normative refs to non-W3C or IETF docs.","msgtype":"m.text"},"ts":1366247779000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Specifically, Colorimetry, published by CIE, and SRGB, published by IEC I think?  It's hard to read these biblios.","msgtype":"m.text"},"ts":1366247827000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: blerg - that totally doesn't count. I thought you had refs to WHATWG specs... ref'ing books is fine because the print of the book isn't going to change.","msgtype":"m.text"},"ts":1366247892000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: The question is, what W3C REC spec references a WHATWG spec?","msgtype":"m.text"},"ts":1366247910000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: I don't see how that question is relevant.","msgtype":"m.text"},"ts":1366247934000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I know that we can ref specs at W3C that are not REC as long as the features are stable - we do that for HTML5+RDFa 1.1","msgtype":"m.text"},"ts":1366247963000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"pops back in and sees REC/politics discussion have flared up again. ;)","msgtype":"m.emote"},"ts":1366247985000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"flared up? It never stopped tantek - Tab and I have been talking constantly since the moment you left IRC ;)","msgtype":"m.text"},"ts":1366248032000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"sorry to hear that","msgtype":"m.text"},"ts":1366248043000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"as am I :)","msgtype":"m.text"},"ts":1366248050000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"so why do you continue to participate then?","msgtype":"m.text"},"ts":1366248058000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"if you're sorry?","msgtype":"m.text"},"ts":1366248061000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(it was a joke)","msgtype":"m.text"},"ts":1366248101000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"oh so you're not sorry. ok.","msgtype":"m.text"},"ts":1366248120000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins: It's relevant because the whole purpose of that normative ref'ing rule at W3C is to make sure the doc doesn't change.","msgtype":"m.text"},"ts":1366248130000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"That doesn't happen, though.  Even Recs change.","msgtype":"m.text"},"ts":1366248160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right, because fiat always works to make docs not change","msgtype":"m.text"},"ts":1366248162000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins: again, not that I care - but you made it sound like W3C had published a spec that normatively ref'd a WHAT WG spec... and that sounded like something that could help this situation.","msgtype":"m.text"},"ts":1366248166000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Importantly, Recs can depend on CRs, which *definitely* change.","msgtype":"m.text"},"ts":1366248184000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"specs should just make the best references they practically can, and assume ALL references are subject to change. don't pretend otherwise.","msgtype":"m.text"},"ts":1366248214000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins: Yes, and I'm pushing a spec through that currently does that... but it's not a WHATWG spec and you made it seem as if that's happened before (which is what surprised me)","msgtype":"m.text"},"ts":1366248246000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"reflect the reality of an evolving platform, rather than clinging to a pipedream of statically lockstepped imaginary platform that never really existed (on the web)","msgtype":"m.text"},"ts":1366248266000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Yes, no argument from me on that one...","msgtype":"m.text"},"ts":1366248290000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"I never stated that Recs with WHATWG norm refs have already happened.  I never even mentioned Recs until this afternoon.  I've been fighting against the weird reluctance to ref things that aren't W3C.","msgtype":"m.text"},"ts":1366248294000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: but you do realize that it's not \"ref things that aren't W3C\" that's the issue here... it's ref'ing things that don't have any implementations and aren't even close to being on any standards track (and could change at any point based on the whim of an editor)","msgtype":"m.text"},"ts":1366248369000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: That's the issue - I'll happy ref specs that are IETF or TC-39 or whatever that have some semblance of stability to them...","msgtype":"m.text"},"ts":1366248410000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: but the WHATWG DOM spec doesn't seem to be there yet.","msgtype":"m.text"},"ts":1366248424000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: That is, if there were at least 2 browser implementations of it, that would be very convincing.","msgtype":"m.text"},"ts":1366248453000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: from my understanding, there are currently 0 implementations of it, and the JSON-LD API would be the first, right?","msgtype":"m.text"},"ts":1366248482000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"You realize that reffing a CR from a Rec (which is allowed) has much less stability than you're requiring?  CRs can be published (and often are) with zero implementations.","msgtype":"m.text"},"ts":1366248505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And they commonly change.","msgtype":"m.text"},"ts":1366248509000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu1: JSON-LD is one of the APIs in flight to take advantage.  I'm working through the Font Load API.","msgtype":"m.text"},"ts":1366248531000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is curious if this kind of discussion happens often enough to merit a subspecies of bureaucracy/process troll - the reference citations troll.","msgtype":"m.emote"},"ts":1366248617000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"There was the \"but what's the canonical reference to ASCII\" troll that occurred in HTMLWG a while ago (and sucked up a lot of mailing / telcon time).","msgtype":"m.text"},"ts":1366248627000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"The right answer being, obviously, Wikipedia. ^_^","msgtype":"m.text"},"ts":1366248647000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right, and that's my concern - you're asking the JSON-LD API to switch to Futures when it's not apparent that developers are going to flock to them en masse. My prediction is that we're going to continue to have the same control-flow mess on our hands in the Web platform for a while and that developers are just going to take web specs and match them up with whatever control flow they're...","msgtype":"m.text"},"ts":1366248745000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"...using for their application.","msgtype":"m.text"},"ts":1366248747000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Contributing to the control flow mess with a sixth callback pattern isn't helping matters.","msgtype":"m.text"},"ts":1366248802000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: The discussion doesn't have to do w/ reference citations, it has to do w/ the stability of WHATWG DOM, which I'm finding out isn't very stable (in that there are no implementations of it)","msgtype":"m.text"},"ts":1366248813000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: So, what would be the lesser evil?","msgtype":"m.text"},"ts":1366248820000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: No futures, no callback control flow - what would be the best approach w/o taking those two into consideration?","msgtype":"m.text"},"ts":1366248843000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: Note that WHATWG stability policy is \"things can change (hopefully for the better) until sufficient mass of people depend on it\".  This is the *actual* stability policy of the W3C as well (at least in healthy groups), we just pretend there's something called Process that works differently.","msgtype":"m.text"},"ts":1366248872000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu1: The lesser evil is to contribute to the actual fixing of callback messes by adopting Futures.","msgtype":"m.text"},"ts":1366248885000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"because, if I'm understanding correctly, both of those have roughly the same number of APIs using the style.","msgtype":"m.text"},"ts":1366248886000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Right, but one helps the future, and the other doesn't. ^_^","msgtype":"m.text"},"ts":1366248899000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if futures are the future - which you've failed to convince multiple people of at this point.","msgtype":"m.text"},"ts":1366248919000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"if they're not, futures are no better than callback control flow.","msgtype":"m.text"},"ts":1366248931000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"and seeing as how futures have been in node.js for a long time now and they're not popular is concerning.","msgtype":"m.text"},"ts":1366248957000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"has to go, will respond later.","msgtype":"m.emote"},"ts":1366248978000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Oh good lord, I already addressed the node thing.","msgtype":"m.text"},"ts":1366248997000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Node's original promises were shit.  After that, it grew a consistent callback pattern (which is itself a negative force against innovation like Futures), and then grew callback-handling libraries that depended on that central callback pattern.","msgtype":"m.text"},"ts":1366249042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It is *not* a model of the web that you can rely on for anything.","msgtype":"m.text"},"ts":1366249049000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu1: Do whatever you want.  It's obvious that's what you're going to do anyway.  Match node, even though that means inventing a brand new callback pattern for the web, and doesn't have a transition story to the glorious future that Node offers.","msgtype":"m.text"},"ts":1366249107000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JSON-LD will just be yet another shitty legacy API that has to be back-converted into Futures later.","msgtype":"m.text"},"ts":1366249139000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: If I was going to do whatever I wanted, I wouldn't have spent the last 48 hours trying to figure out if we can/should do futures for the JSON-LD API. Don't get cranky, I want the right solution, it's just nobody else seems to be beating the Futures drum as hard as you are and I'm trying to figure out why.","msgtype":"m.text"},"ts":1366249264000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"I appreciate the time you've put into explaining all this and writing that blog post on futures.","msgtype":"m.text"},"ts":1366249328000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"afks.","msgtype":"m.emote"},"ts":1366249330000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Because it's new, and people are slow to embrace new things, particularly new abstractions that are different from what they're familiar with.","msgtype":"m.text"},"ts":1366249341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm just frustrated you keep bringing up Node like it's relevant to the API design, when it's *not*.  Nothing you do in the web api can benefit from anything that the node community has, because Node's async control flow abstractions can't make sense of web apis without manual wrapping.  And if you're doing that, adding one more API to manually wrap is a non-issue.","msgtype":"m.text"},"ts":1366249408000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ignoring node, if you want callbacks, at least follow jQuery legacy or something, and just take 'success' and 'error' callbacks in your options object.","msgtype":"m.text"},"ts":1366249464000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or take the two callbacks as final arguments, with 'success' coming first.","msgtype":"m.text"},"ts":1366249490000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The Node convention of a single callback which accepts the error reason as its first argument and any values as its other arguments is completely foreign to the web.","msgtype":"m.text"},"ts":1366249514000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It'll still interoperate badly with Future-based things, but at least it'll be consistent with *some* existing APIs, and people's expectations.","msgtype":"m.text"},"ts":1366249546000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: Have you read my blog post from last night, about Futures?  It was partially aimed at you, too. ^_^","msgtype":"m.text"},"ts":1366250060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I need some clarification on the rule for <option> elements without a defined value. I find the spec to be ambiguous.","msgtype":"m.text"},"ts":1366250259000,"senderName":"Wardrop","senderId":"Wardrop@irc"},
{"content":{"body":"The spec states that for option elements without a value, the text content of the element should become the value. What does that mean for a option elements like this...","msgtype":"m.text"},"ts":1366250303000,"senderName":"Wardrop","senderId":"Wardrop@irc"},
{"content":{"body":"<option value>Pizza</option>","msgtype":"m.text"},"ts":1366250311000,"senderName":"Wardrop","senderId":"Wardrop@irc"},
{"content":{"body":"<option value=\"\">Pizza</option>","msgtype":"m.text"},"ts":1366250328000,"senderName":"Wardrop","senderId":"Wardrop@irc"},
{"content":{"body":"That has a value attribute.  The value of the value attribute is the empty string.","msgtype":"m.text"},"ts":1366250329000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Both of those are equivalent.","msgtype":"m.text"},"ts":1366250336000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ok, so if 'value' is present at all, it is respected.","msgtype":"m.text"},"ts":1366250344000,"senderName":"Wardrop","senderId":"Wardrop@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1366250346000,"senderName":"Wardrop","senderId":"Wardrop@irc"},
{"content":{"body":"Yep.","msgtype":"m.text"},"ts":1366250349000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Spec should probably be clarified as it currently reads \"The value of an option element is the value of the value content attribute, if there is one\" which could mean either","msgtype":"m.text"},"ts":1366250408000,"senderName":"Wardrop","senderId":"Wardrop@irc"},
{"content":{"body":"\"If there is one\" means \"if there is a value content attribute\".  That's unambiguous (though in practical, non-spec terminology, it might be ambiguous).","msgtype":"m.text"},"ts":1366250447000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It isn't made clear whether \"if there is one\" is referring to the presence of the attribute, or the presence of actual value, unless there's something in the spec's pre-amble that clarifies this.","msgtype":"m.text"},"ts":1366250619000,"senderName":"Wardrop","senderId":"Wardrop@irc"},
{"content":{"body":"An attribute never doesn't have a value, so it's unambiguous in practice when you're already familiar with the spec terms. ^_^","msgtype":"m.text"},"ts":1366250669000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(If the attribute exists, it has a value by definition.)","msgtype":"m.text"},"ts":1366250681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Yeah ok, that probably is something clarified earlier in the spec. Thanks TabAtkins.","msgtype":"m.text"},"ts":1366250717000,"senderName":"Wardrop","senderId":"Wardrop@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1366250723000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu1: the idea that depending on a CR or REC is safer than depending on a living standard is trivially disprovable","msgtype":"m.text"},"ts":1366259693000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"manu1: HTML provides a great example of this","msgtype":"m.text"},"ts":1366259702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"manu1: HTML4 is a REC, but if you were to refer to it you would have no interop","msgtype":"m.text"},"ts":1366259738000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"manu1: HTML5 is a CR, but it has numerous errors that are likely never going to get fixed","msgtype":"m.text"},"ts":1366259762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"manu1: meanwhile, the WHATWG HTML standard is actually the most up to date and least incorrect version of HTML available, so if you refer to that you are the most likely to get interop","msgtype":"m.text"},"ts":1366259805000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"manu1: the usual question of \"what happens if the spec changes\" is answerable in very clear terms with HTML -- if the spec changes, the living standard ends up being more useful, while the REC and CR end up just being wrong","msgtype":"m.text"},"ts":1366259841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"manu1:  the html 5.1 nightly http://www.w3.org/html/wg/drafts/html/master/ is actually the most up to date and least incorrect version of HTML available","msgtype":"m.text"},"ts":1366266671000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"Bwahahahaha","msgtype":"m.text"},"ts":1366266693000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hahaha","msgtype":"m.text"},"ts":1366266698000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thought that would go down well","msgtype":"m.text"},"ts":1366267039000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"You're a funny man, SteveF","msgtype":"m.text"},"ts":1366267155000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah so I have been told outside of the whatwg echo chamber as well","msgtype":"m.text"},"ts":1366267216000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"If you think there are cases where your spec is better, file a bug","msgtype":"m.text"},"ts":1366267354000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But I doubt you will","msgtype":"m.text"},"ts":1366267361000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: they don't even know how their spec differs from the whatwg one","msgtype":"m.text"},"ts":1366267395000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: there's literally no list anywhere of what differences there are between the whatwg one and their version, nor a list of what intentional differences there are","msgtype":"m.text"},"ts":1366267418000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: having seen some of the differences (e.g. the way that ping=\"\" was half in and half out), it's pretty obvious theirs hasn't even been proofread.","msgtype":"m.text"},"ts":1366267457000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: likewise","msgtype":"m.text"},"ts":1366267541000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"SteveF: the difference is that the htmlwg starts from the whatwg spec and changes it, but doesn't report the changes back, whereas the whatwg spec is not written by copying the htmlwg spec.","msgtype":"m.text"},"ts":1366267602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's considered poor open source etiquette to not report problems back upstream","msgtype":"m.text"},"ts":1366267652000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sSteveF: take the politics up with management","msgtype":"m.text"},"ts":1366267808000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"you're an editor now","msgtype":"m.text"},"ts":1366267835000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you are management","msgtype":"m.text"},"ts":1366267838000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's your responsibility","msgtype":"m.text"},"ts":1366267841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's what being an editor _is_","msgtype":"m.text"},"ts":1366267845000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie: such topics are on the agenda for discussion monday http://www.w3.org/wiki/HTML/EditorsAgenda will add specific item about etiquette","msgtype":"m.text"},"ts":1366268313000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"lordy, meetings","msgtype":"m.text"},"ts":1366268383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes that will fix the problem","msgtype":"m.text"},"ts":1366268386000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry, that was too cynical","msgtype":"m.text"},"ts":1366268421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"good luck with your meeting","msgtype":"m.text"},"ts":1366268426000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i hope it improves matters","msgtype":"m.text"},"ts":1366268431000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks for the constructive comments :-)","msgtype":"m.text"},"ts":1366268447000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"hixie: how exactly would you like changes made to the HTML spec communicated to you?","msgtype":"m.text"},"ts":1366269093000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"hixie: if you can tell me your requirements I will do my best to accommodate","msgtype":"m.text"},"ts":1366269643000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"hixie: have you raised this publicly \"it's considered poor open source etiquette to not report problems back upstream\" with robin or silvia or ted? As you know I have only recently joined the editors team. I would have thought that issues such as this would have been worked out already.","msgtype":"m.text"},"ts":1366272237000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"Hixie: (asking again as it was kindly pointed out that I was using the wrong nick) how exactly would you like changes made to the HTML spec communicated to you?  if you can tell me your requirements I will do my best to accommodate. Have you raised this publicly \"it's considered poor open source etiquette to not report problems back upstream\" with robin or silvia or ted? As you know I have...","msgtype":"m.text"},"ts":1366272728000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"...only recently joined the editors team. I would have thought that issues such as this would have been worked out already.","msgtype":"m.text"},"ts":1366272729000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"pretty sure he's asleep","msgtype":"m.text"},"ts":1366272958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK at least he should be aware of the questions if he reads scrollback","msgtype":"m.text"},"ts":1366273184000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"speaking of open source etiquette, I was looking for the repo with the WHATWG tools used to publish the HTML spec but I couldn't find it — any pointers?","msgtype":"m.text"},"ts":1366273331000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: I pointed you to the changed stuff the other day as in hixie is no longer listed as 'previous editor' but as 'whatwg editor' is that an improvement?","msgtype":"m.text"},"ts":1366273404000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"darobin: pretty sure no up-to-date version exists","msgtype":"m.text"},"ts":1366273436000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: file a bug?","msgtype":"m.text"},"ts":1366273439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if not what should it say?","msgtype":"m.text"},"ts":1366273474000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"SteveF: dunno","msgtype":"m.text"},"ts":1366273481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the whole thing is kinda fucked up imo","msgtype":"m.text"},"ts":1366273495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true dat","msgtype":"m.text"},"ts":1366273503000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: OK so its fucked up but there is no path to unfucking","msgtype":"m.text"},"ts":1366273547000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"So the protocol with webcomponents is that you keep using the same mailing thread until dglazkov xomes up with a new pun?","msgtype":"m.text"},"ts":1366273556000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/x/c/","msgtype":"m.text"},"ts":1366273566000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"not true, we can unfuck the things, it just takes time to put out all the fires and plug all the leaks","msgtype":"m.text"},"ts":1366273603000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"UNFUCK ALL THE THINGS!","msgtype":"m.text"},"ts":1366273607000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: I thought the whole point of WebApps was to provide an avenue for dglazkov puns","msgtype":"m.text"},"ts":1366273629000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"twasn't meant to be statement just left off the ?","msgtype":"m.text"},"ts":1366273630000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"annevk: is there a not-up-to-date version to reference?","msgtype":"m.text"},"ts":1366273682000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it's not a big deal, maybe the bug is just \"Robin can't find stuff using Google\" :)","msgtype":"m.text"},"ts":1366273704000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"The toolchain isn't all avaliable afaik.","msgtype":"m.text"},"ts":1366273736000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's a bunch of environemnt-specific scripts on Hixie's machine gluing together various services","msgtype":"m.text"},"ts":1366273763000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(not saying that more of it couldn't be made avaliable, just that it isn't)","msgtype":"m.text"},"ts":1366273789000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"WebApps is really becoming a strange place with all the Benadryl and stuff","msgtype":"m.text"},"ts":1366274225000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"becoming?","msgtype":"m.text"},"ts":1366274378000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it used to be differently weird","msgtype":"m.text"},"ts":1366274420000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I liked it better when it was Web APIs, too :)","msgtype":"m.text"},"ts":1366274435000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"and every discussion would be interrupted by annevk screaming \"WHAAAAAT???!!!1\"","msgtype":"m.text"},"ts":1366274474000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1366274476000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: I think at some point manu-db might have made a copy of the tools plus instructions somewhere","msgtype":"m.text"},"ts":1366276220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: can try to dig that up later if you want, but filing a bug on Hixie might be good nonetheless","msgtype":"m.text"},"ts":1366276266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure how to reply to https://mail.mozilla.org/pipermail/es-discuss/2013-April/029880.html","msgtype":"m.text"},"ts":1366276391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Enormous amounts of work with lots of room for error is somehow easy? I don't even","msgtype":"m.text"},"ts":1366276432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am guenuinely sitting in front of my computer mouth open like a fish","msgtype":"m.text"},"ts":1366276466000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's just…","msgtype":"m.text"},"ts":1366276475000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*genuinely","msgtype":"m.text"},"ts":1366276482000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hahaha","msgtype":"m.text"},"ts":1366276805000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"well yeah","msgtype":"m.text"},"ts":1366276807000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"work's easy when you're not the one doing it","msgtype":"m.text"},"ts":1366276817000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: darobin: unfucking involves reasonable communication and compromises by all parties, lets see how we can achieve that","msgtype":"m.text"},"ts":1366278659000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"Lol, I had to reboot and now every page I visit in Chrome quits the browser","msgtype":"m.text"},"ts":1366279295000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SteveF: yeah, personally I don't have much beef with the W3C, apart from parts of its Process (mostly around the concept of Living Standards and everything that derives from that) and copyright","msgtype":"m.text"},"ts":1366279698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SteveF: I mostly focus on showing that the alternative to the W3C's proposition of doing standards has no damaging effects, but I do communicate quite regularly about the subject with members of the W3C Staff","msgtype":"m.text"},"ts":1366279802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if Chrome will still update or if I need to do something special","msgtype":"m.text"},"ts":1366279885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right,  I am talking more on the level of what I can change in role as editor of the w3c html spec, I have little or no influence the wider issues though do believe that others are working on those","msgtype":"m.text"},"ts":1366280039000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"SteveF: I suspect you should communicate about those with Hixie, but timezones make that difficult; maybe it's easier later this month if you go to the HTML WG meeting? At least you'll be in the same timezone","msgtype":"m.text"},"ts":1366280103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I will be there form sunday -thursday and will be discussing such stuff with fellow editors and will try again to speak with hixie if i don't get any response from him on q's asked today","msgtype":"m.text"},"ts":1366280221000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"tobie: about \"Next step will be figuring out how to migrate the content of the CSS WG test repo to the web-platform-tests\", is the CSS WG on board with that?","msgtype":"m.text"},"ts":1366282248000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so far it seems like as far as test infrastructure and systems, they have been going their own way","msgtype":"m.text"},"ts":1366282304000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yes, the CSS WG is seriously considering migrating to the common repository.","msgtype":"m.text"},"ts":1366287615000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: great","msgtype":"m.text"},"ts":1366287634000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah.","msgtype":"m.text"},"ts":1366287643000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I imagine that if you top post a new proposal for Promises/Futures, you are going to have a bad time.","msgtype":"m.text"},"ts":1366287886000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"(public-script-coord)","msgtype":"m.text"},"ts":1366287904000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc?","msgtype":"m.text"},"ts":1366288298000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0162.html","msgtype":"m.text"},"ts":1366288367000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"there is some cute stuff in the proposal","msgtype":"m.text"},"ts":1366288512000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"https://gist.github.com/rbuckton/5406451","msgtype":"m.text"},"ts":1366288516000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc: I think there's enough fury as it is not to go add my $.02","msgtype":"m.text"},"ts":1366288641000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"... if you don't need those .02c, can I have 'em? Pay you back later, promise :)","msgtype":"m.text"},"ts":1366288719000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"is it a good idea or a bad idea to pull from upstream master in a topic branch? i want to move the files in https://github.com/w3c/web-platform-tests/pull/46 to the WebMessaging folder but it didn't exist yet at the time","msgtype":"m.text"},"ts":1366288827000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nothing wrong with that message, except that probably the quotes should have just been removed, since it's not really a reply to it at all","msgtype":"m.text"},"ts":1366288932000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: true","msgtype":"m.text"},"ts":1366289186000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"hahahaha","msgtype":"m.text"},"ts":1366290045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0164.html","msgtype":"m.text"},"ts":1366290056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"directed at me \"You guys ought to be deeply embarrassed because HTML5 is *not* your child.\"","msgtype":"m.text"},"ts":1366290073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't even","msgtype":"m.text"},"ts":1366290087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ReferenceError: Jorge is not defined","msgtype":"m.text"},"ts":1366290543000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":">> uncaught exception","msgtype":"m.text"},"ts":1366290646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, wasn't that directed at TabAtkins?","msgtype":"m.text"},"ts":1366290685000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: he quoted us separately and then used plural","msgtype":"m.text"},"ts":1366290741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, es-discuss does not seem like a great list :/","msgtype":"m.text"},"ts":1366290764000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I read \"you guys\" as referring to W3C","msgtype":"m.text"},"ts":1366290766000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I read it that way too","msgtype":"m.text"},"ts":1366290815000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Who is \"Stop pretending\" referring to then?","msgtype":"m.text"},"ts":1366290877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems weird to read it the way you read it.","msgtype":"m.text"},"ts":1366290900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh wait","msgtype":"m.text"},"ts":1366290912000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You suggested moving to the W3C too?","msgtype":"m.text"},"ts":1366290920000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: I don't disagree with you in principle about a living standard being more up to date than a REC'd one. We plan to keep \"living standard\" copies of JSON-LD alive in the JSON-LD Community Group. I'm just trying to freeze a copy of JSON-LD at W3C as a REC so that the people who that sort of thing is important to (and there are those people) have something to work from.","msgtype":"m.text"},"ts":1366291226000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"... and in order to freeze a copy of the JSON-LD API w/ Futures, I'd like to have a futures spec at the W3C, which seems do-able, except for the fact that annevk and TabAtkins seem to be against taking the futures spec to W3C. I could just fork it and do it anyway, but that seems like bad form and I'm deferring to annevk and TabAtkins about how they want to proceed w/ the Futures stuff.","msgtype":"m.text"},"ts":1366291366000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"... or, we'll just go to REC with a minor change to the JSON-LD API, and put the Futures stuff in a living standard and call it a day. That's what I'm leaning towards doing right now.","msgtype":"m.text"},"ts":1366291407000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"I'm trying to decide how to organize http://fetch.spec.whatwg.org/","msgtype":"m.text"},"ts":1366292261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It needs an Introduction at some point I suppose.","msgtype":"m.text"},"ts":1366292277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Should I group Requests and Responses under Terminology?","msgtype":"m.text"},"ts":1366292286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It needs a section \"CORS protocol\" that explains how to implement CORS on the server.","msgtype":"m.text"},"ts":1366292310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe it should have a section named \"Origin\" if we decide to obsolete more of the Origin RFC...","msgtype":"m.text"},"ts":1366292383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There have been some API ideas as well but maybe those should be left to separate specifications?","msgtype":"m.text"},"ts":1366292418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whoa, Widget Signatures are a Rec! Congrats marcosc :)","msgtype":"m.text"},"ts":1366292895000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I don't even want to know how that made it past the 2 implementations requirement","msgtype":"m.text"},"ts":1366292909000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: I thought you were going to take over everything to do with Origin in Fetch?","msgtype":"m.text"},"ts":1366292955000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: I've been contemplating it, need to run it by abarth and sort of want to do the bits that are actually defined nowhere first","msgtype":"m.text"},"ts":1366293028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"other than that, I'd put Request/Response under Terminology, yes","msgtype":"m.text"},"ts":1366293061000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Also, it seems kind of weird for URL to depend on Fetch. If we want modular Origin as a concept should be separate from where its header is defined...","msgtype":"m.text"},"ts":1366293073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Could actually put the other Origin stuff in URL. That's not too bad.","msgtype":"m.text"},"ts":1366293117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And just have the header here.","msgtype":"m.text"},"ts":1366293128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know, at this point it doesn't seem that weird to me","msgtype":"m.text"},"ts":1366293162000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"in fact I'm not sure someone could come up with something in this platform that I'd find qualifying as weird","msgtype":"m.text"},"ts":1366293216000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1366293240000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"and thanks darobin","msgtype":"m.text"},"ts":1366293245000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"darobin: dude that's not the W3C party line","msgtype":"m.text"},"ts":1366293297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ain't even mad","msgtype":"m.emote"},"ts":1366293308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"epic: https://twitter.com/horse_js/status/324883020450512896","msgtype":"m.text"},"ts":1366293343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wait, W3C has a party line?","msgtype":"m.text"},"ts":1366293440000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Horse_JS is awesome","msgtype":"m.text"},"ts":1366293471000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: you don't call the W3C party line? It's awesome!","msgtype":"m.text"},"ts":1366293504000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"You call it up and they tell you jokes about the WHATWG","msgtype":"m.text"},"ts":1366293522000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"\"Annevk, jgraham, and SimonSapin walk into a bar...\"","msgtype":"m.text"},"ts":1366293558000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1366293578000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"1-800-W3CPARTY","msgtype":"m.text"},"ts":1366293588000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"exactly... it's another revenue stream set up by the previous W3C CEO.","msgtype":"m.text"},"ts":1366293623000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Most profitable part of the W3C, AFAIK.","msgtype":"m.text"},"ts":1366293644000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1366293646000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"w3c-test:mirror","msgtype":"m.text"},"ts":1366293962000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ?","msgtype":"m.text"},"ts":1366293973000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham has been saying that all over my inbox","msgtype":"m.text"},"ts":1366294004000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think Ms2ger is fed up of me spamming him :)","msgtype":"m.text"},"ts":1366294007000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But now it works!","msgtype":"m.text"},"ts":1366294023000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think","msgtype":"m.text"},"ts":1366294030000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also, shouldn't the upload.php thing be on the submission/Opera/XHR branch?","msgtype":"m.text"},"ts":1366294039000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Possibly","msgtype":"m.text"},"ts":1366294061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"can we change the topic to: \"You guys ought to be deeply embarrassed because HTML5 is *not* your child.\"","msgtype":"m.text"},"ts":1366295923000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1366295925000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Still trying to parse that sentence.","msgtype":"m.text"},"ts":1366295950000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0164.html","msgtype":"m.text"},"ts":1366295969000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"I know the source.","msgtype":"m.text"},"ts":1366295980000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"oh, that was for others :)","msgtype":"m.text"},"ts":1366295991000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"I suspect a race condition during the delivery of the email.","msgtype":"m.text"},"ts":1366295993000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'm waiting for darobin to fly in and save the day with witty words","msgtype":"m.text"},"ts":1366296015000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"\"you are all my children\" or something like that","msgtype":"m.text"},"ts":1366296037000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"I thought HTML was TIMBL's child it was then rebirthed by whatwg and then adopted back by the w3c","msgtype":"m.text"},"ts":1366296533000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"marcosc: hehehe","msgtype":"m.text"},"ts":1366296749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gives HTML some candy... it's had a very difficult upbringing. ","msgtype":"m.emote"},"ts":1366297614000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"hopes that we taught HTML not to accept candy from strange people","msgtype":"m.emote"},"ts":1366297698000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"HTML is turning 24 this year, I pretty much hope that it has the required self-defence to handle marcosc","msgtype":"m.text"},"ts":1366298456000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"24... argh... I'm getting old.","msgtype":"m.text"},"ts":1366298548000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"24?","msgtype":"m.text"},"ts":1366298581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finds http://www.w3.org/MarkUp/draft-ietf-iiir-html-01.txt","msgtype":"m.emote"},"ts":1366298628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm http://www.w3.org/Proposal.html","msgtype":"m.text"},"ts":1366298659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://info.cern.ch/Proposal.html ah","msgtype":"m.text"},"ts":1366298671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it was 1989, right?","msgtype":"m.text"},"ts":1366298689000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Apparently","msgtype":"m.text"},"ts":1366298703000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1366298708000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but no HTML there","msgtype":"m.text"},"ts":1366298718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think HTML is late 1989","msgtype":"m.text"},"ts":1366298743000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"or later at least","msgtype":"m.text"},"ts":1366298748000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it's in Weaving the Web somewhere, but I forget the details","msgtype":"m.text"},"ts":1366298760000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"phh! what a stupid idea. No wonder it was rejected","msgtype":"m.text"},"ts":1366298950000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"annevk: is there any reason why in the Futures spec you sometimes use a <var>word</var> but then use <var>f</var> to refer to a future. Why not just say Let <var>future</var> ben a new future?","msgtype":"m.text"},"ts":1366300641000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Same with <var>r</var> for resolvers","msgtype":"m.text"},"ts":1366300659000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"I'm concerned that it sets a bad precedence for other specs","msgtype":"m.text"},"ts":1366300709000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"don't want to end up reading: The if q's f is has an r that ...","msgtype":"m.text"},"ts":1366300733000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc: seemed weird to make it read let future be a future","msgtype":"m.text"},"ts":1366300809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"don't care really, file a bug","msgtype":"m.text"},"ts":1366300818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1366301269000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Ms2ger: I wonder if Lachy is still going to work on that. Lachy?","msgtype":"m.text"},"ts":1366301585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lachy: That is, if you're still working on that DOM patch","msgtype":"m.text"},"ts":1366301597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yes, I will. I've just been busy searching for a new job","msgtype":"m.text"},"ts":1366301629000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and a new apartment.","msgtype":"m.text"},"ts":1366301651000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: cool, good luck with that!","msgtype":"m.text"},"ts":1366303418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lachy: still in Oslo?","msgtype":"m.text"},"ts":1366303422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1366303447000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"we just got accepted into a new apartment yesterday and we'll sign the contract next week, and I have some good potential jobs that I might get offers for soon.","msgtype":"m.text"},"ts":1366303517000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"manu-db: The fact that you keep insisting on getting a Future spec in the W3C (rather than just gettinga stable Futures spec, anywhere) shows the error in your thinking.  STOP THINKING THAT.  ^_^","msgtype":"m.text"},"ts":1366303665000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A Futures spec \"in the W3C\" will be exactly as stable as one outside the W3C - that is, it'll change as people come up with better ideas, unless such a change would break too many existing authors/users.","msgtype":"m.text"},"ts":1366303710000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Fwiw, I'm fine with terminology like \"let future be a future\", particularly when it's accompanied by appropriate markup/styling to distinguish between the term and the variable.","msgtype":"m.text"},"ts":1366303805000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: A Futures spec \"in the W3C\" would solve a problem that people other than you have while allowing it to continue to evolve outside of the W3C. You need to realize that you have people that have said that they're willing to help and your hard-line stance on how you want to see Futures developed is keeping you from making practical gains in getting the technology integrated into...","msgtype":"m.text"},"ts":1366304260000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"...other specifications. :)","msgtype":"m.text"},"ts":1366304262000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"I'm trying to figure out how to be a proponent of Futures, but you're making it very difficult to do.","msgtype":"m.text"},"ts":1366304264000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"So, you can keep your thinking the way it is, but it's hurting Futures more than it's helping (wrt. this particular 3 day long conversation) :)","msgtype":"m.text"},"ts":1366304306000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"s/it is/you are/","msgtype":"m.text"},"ts":1366304320000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"manu-db: Once again, the \"problem that other people have\" is a non-existent problem that they are making up.  There is, as I and others have stated, absolutely no problem with referring to non-W3C documents, even in Rec.  There is also no implied stability guarantees from a document *in* the W3C.","msgtype":"m.text"},"ts":1366304389000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Pretending that a W3C Futures document would be different in *any* aspect from a WHATWG Futures document is a fantasy.","msgtype":"m.text"},"ts":1366304432000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Rather, different in any aspect that affects your ability to ref things.)","msgtype":"m.text"},"ts":1366304459000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"HTTP auth is so weird: http://wiki.whatwg.org/wiki/HTTP_Authentication","msgtype":"m.text"},"ts":1366304462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"The Future Is Unevenly Distributed\"","msgtype":"m.text"},"ts":1366304514000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"speaking of which - we released Web Keys HTTP Signatures yesterday to an immediate security exploit (which is fixed now): http://lists.w3.org/Archives/Public/ietf-http-wg/2013AprJun/0113.html","msgtype":"m.text"},"ts":1366304576000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"(HTTP Auth via signatures)","msgtype":"m.text"},"ts":1366304590000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"I'd recommend against HTTP auth. Anyway, if someone has details on other implementations that'd be most welcome: http://wiki.whatwg.org/wiki/HTTP_Authentication","msgtype":"m.text"},"ts":1366304635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Details will influence basically every API that does fetching...","msgtype":"m.text"},"ts":1366304653000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<TabAtkins> Pretending that a W3C Futures document would be different in *any* aspect from a WHATWG Futures document is a fantasy.","msgtype":"m.text"},"ts":1366304769000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Just like W3C HTML5 is the same in every aspect as WHATWG HTML?","msgtype":"m.text"},"ts":1366304788000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Dude, I clarified *in the very next line*.","msgtype":"m.text"},"ts":1366304809000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Just verifying, but does XHR always send progress events for the end of the load?  It kinda looks like it does.","msgtype":"m.text"},"ts":1366305033000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you mean \"progress\"? yes","msgtype":"m.text"},"ts":1366305057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I... I said \"progress\".","msgtype":"m.text"},"ts":1366305080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah but progress events is a concept too :/","msgtype":"m.text"},"ts":1366305095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, XHR seems to explicitly fire \"progress events\".","msgtype":"m.text"},"ts":1366305159000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, I'm confused about what the distinction is.","msgtype":"m.text"},"ts":1366305165000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Are we talking about ProgressEvent.type == \"progress\" or are we talking about events implementing ProgressEvent?","msgtype":"m.text"},"ts":1366305209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In any event, talking about event types, it's typically \"progress\", one of \"load\", \"error\", \"abort\", and \"timeout\", \"loadend\"","msgtype":"m.text"},"ts":1366305298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"iirc","msgtype":"m.text"},"ts":1366305300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, just found the nice table in the Progress Events spec.","msgtype":"m.text"},"ts":1366305315000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, I was wondering about convention with regards to firing both a \"result\" event and a progress event marking that things are done.","msgtype":"m.text"},"ts":1366305353000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It looks like the \"result\" event is usually one of load/error/abort, and separately, a \"loadend\" progress indicator is usually also sent.","msgtype":"m.text"},"ts":1366305379000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Context was Mounir suggesting that progress futures call the progress callback when the future successfully completes, too, with the same value.","msgtype":"m.text"},"ts":1366305408000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"with the completion value?","msgtype":"m.text"},"ts":1366305426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1366305427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd have assumed the progress callback would get some kind of Progress object","msgtype":"m.text"},"ts":1366305444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wondering if instead we shoudl just make a convention (recorded in the spec) that if you're using the progress aspect of futures, you should send a \"start\" and \"end\" progress at appropriate times, in addition to meaningful intermediate values.","msgtype":"m.text"},"ts":1366305451000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1366305455000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"don't think you want to change that suddenly in the end","msgtype":"m.text"},"ts":1366305455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well that all depends on when stuff is registered","msgtype":"m.text"},"ts":1366305478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the operation could be midway or have finished already","msgtype":"m.text"},"ts":1366305488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, sending doesn't depend on when it's registered.  I'm just saying, independent of listeners.","msgtype":"m.text"},"ts":1366305499000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1366305514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think just before you invoke resolve/accept makes sense","msgtype":"m.text"},"ts":1366305525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"prolly on the same task","msgtype":"m.text"},"ts":1366305537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1366305541000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"before that doesn't matter much I think","msgtype":"m.text"},"ts":1366305548000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but not in the same task as creation","msgtype":"m.text"},"ts":1366305567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, I think there should be a convention that you should send a \"start\" progress update immediately (if you're using progresses at all).","msgtype":"m.text"},"ts":1366305572000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"immediately means?","msgtype":"m.text"},"ts":1366305593000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In the initial resolver-callback code?","msgtype":"m.text"},"ts":1366305609000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the last progress event doesn't have to be a convention, that could be made by the UA","msgtype":"m.text"},"ts":1366305610000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"(It'll still be actually responded to in the next tick.)","msgtype":"m.text"},"ts":1366305621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mounir: Hm, that could work too.","msgtype":"m.text"},"ts":1366305626000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, accept/reject could report latest progress value at that point","msgtype":"m.text"},"ts":1366305666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"via the progress algorithm","msgtype":"m.text"},"ts":1366305675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, with a specified, known Progress value (if we use some progress object, I guess).","msgtype":"m.text"},"ts":1366305750000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"progress could be stored alongside result or some such","msgtype":"m.text"},"ts":1366305846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and you queue a task whenever it's updated","msgtype":"m.text"},"ts":1366305861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or some such","msgtype":"m.text"},"ts":1366305866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and queue a task on creation","msgtype":"m.text"},"ts":1366305875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm working through getting the semantics right for EventStream, and an event stream \"completing\" is similar to a Future making progress - not everything will do so, and there's no natural way for chained streams to complete.","msgtype":"m.text"},"ts":1366306119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: I'm still tweaking things, but right now I make completion automatically \"bubble\" across chained streams - if the input stream completes, the output stream completes too.","msgtype":"m.text"},"ts":1366306169000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Wonder if you want to do something similar with progress and chained futures - if the input future sends a progress update, the output future passes it along.","msgtype":"m.text"},"ts":1366306201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That would make f.then().progress() identical to f.progress().then().","msgtype":"m.text"},"ts":1366306217000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1366306523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.w3.org/2001/tag/doc/mime-respect-20130405.html got approved just now","msgtype":"m.text"},"ts":1366307743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"together with figuring out HTTP auth, it's been a nice day","msgtype":"m.text"},"ts":1366307762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"notes the date in the filename doesn't match the date in the document.","msgtype":"m.emote"},"ts":1366308117000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"jgraham: http://krijnhoetmer.nl/irc-logs/whatwg/20130418#l-788","msgtype":"m.text"},"ts":1366308118000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"notices hallvors did the same mistake as him: r/hallvors/master","msgtype":"m.emote"},"ts":1366309223000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: You probably don't want to rebase your pull request onto a newer master (and certainly don't want to merge it); I don't think that github supports that","msgtype":"m.text"},"ts":1366309766000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I actually don't know what the github flow is when you have a long-lived review branch that needs to be rebased","msgtype":"m.text"},"ts":1366310087000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ok. undid merge with git reset --hard ORIG_HEAD","msgtype":"m.text"},"ts":1366310100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess we can wait with moving the tests until the review is accepted","msgtype":"m.text"},"ts":1366310131000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or does it work to move the tests to the new directory?","msgtype":"m.text"},"ts":1366310176000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hi all. i'm currently one of the people implementing WEBVTT for firefox","msgtype":"m.text"},"ts":1366310182000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"reyre__: hi!","msgtype":"m.text"},"ts":1366310193000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hi reyre__! :)","msgtype":"m.text"},"ts":1366310218000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"just wanted to clarify a point -- are classes that are attached cue text tags supposed to be accessible via css externally? like on webpages?","msgtype":"m.text"},"ts":1366310222000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"Ms2ger: oh hay! fancy seeing you here :)","msgtype":"m.text"},"ts":1366310232000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"zcorpan: hey :)","msgtype":"m.text"},"ts":1366310238000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"reyre__: yes, with e.g. video::cue(c.classname)","msgtype":"m.text"},"ts":1366310310000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"But not by i.classname?","msgtype":"m.text"},"ts":1366310390000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Correct, because they're in a subdocument.","msgtype":"m.text"},"ts":1366310428000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(effectively)","msgtype":"m.text"},"ts":1366310431000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it would be video::cue(i.classname) than ?","msgtype":"m.text"},"ts":1366310441000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"reyre__: but *not* with video::cue(c[class=classname]) since the spec only exposes it as a class for Selectors, not as an attribute","msgtype":"m.text"},"ts":1366310446000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"reyre__: right","msgtype":"m.text"},"ts":1366310456000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Interesting","msgtype":"m.text"},"ts":1366310473000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: okay, awesome. thanks for the clarification :)","msgtype":"m.text"},"ts":1366310479000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"reyre__: i think there are reftests for this that opera submitted","msgtype":"m.text"},"ts":1366310504000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that's useful :) i'll check them out","msgtype":"m.text"},"ts":1366310580000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"Sounds like I'd better land my importing patches, then","msgtype":"m.text"},"ts":1366310596000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"reyre__: http://w3c-test.org/web-platform-tests/master/old-tests/submission/Opera/media/ or https://github.com/w3c/web-platform-tests/tree/master/old-tests/submission/Opera/media","msgtype":"m.text"},"ts":1366311022000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks :) i'll definitely take a look at them. reftesting is hard","msgtype":"m.text"},"ts":1366311170000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"reyre__: iirc some of the tests assume Ahem is installed and this file might need tweaking to fit the reftest runner you use at mozilla... https://github.com/w3c/web-platform-tests/blob/master/old-tests/submission/Opera/media/track/webvtt/rendering/reftest/support/refTestWait.js","msgtype":"m.text"},"ts":1366311288000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"reyre__: to set/unset some attribute on the root element instead","msgtype":"m.text"},"ts":1366311319000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(or as well)","msgtype":"m.text"},"ts":1366311343000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"okay, cool. i'll take write it down so i don't forget. :)","msgtype":"m.text"},"ts":1366311372000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"reyre__: if you make that change, you could make a pull request so it's part of the official testsuite","msgtype":"m.text"},"ts":1366311424000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: there is an official test suite for WEBVTT?","msgtype":"m.text"},"ts":1366311491000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"well, i meant our submission that i pointed to above (as opposed to your own fork)","msgtype":"m.text"},"ts":1366311531000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah, okay i see","msgtype":"m.text"},"ts":1366311576000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"another reservation with the tests is that some might be outdated already, so double-check with the spec :-)","msgtype":"m.text"},"ts":1366311636000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah that seems to be  changing everyday... i barely even recognize it anymore from when we started trying to implement it","msgtype":"m.text"},"ts":1366311833000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1366311867000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"reyre__: not until we submit ours, no :)","msgtype":"m.text"},"ts":1366312089000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"rillian, I sure hope we're not duplicating Opera's ;)","msgtype":"m.text"},"ts":1366312245000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm sure we have to some extent","msgtype":"m.text"},"ts":1366312262000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"Boo","msgtype":"m.text"},"ts":1366312286000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: I think moving the tests should work. Although I haven't looked much at the oull request","msgtype":"m.text"},"ts":1366312322000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"can we import the opera tests in the mozilla tree?","msgtype":"m.text"},"ts":1366312352000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"I don't see a license","msgtype":"m.text"},"ts":1366312355000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"Sure thing","msgtype":"m.text"},"ts":1366312359000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Look at dom/imptests some day","msgtype":"m.text"},"ts":1366312366000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It's full of Opera's tests","msgtype":"m.text"},"ts":1366312376000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hooray","msgtype":"m.text"},"ts":1366312387000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1366312391000,"senderName":"reyre__","senderId":"reyre__@irc"},
{"content":{"body":"This is as good a time as any to get reftest importing done...","msgtype":"m.text"},"ts":1366312438000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Speaking of your tree being full of our tests, we should release more. :P","msgtype":"m.text"},"ts":1366313880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Please :)","msgtype":"m.text"},"ts":1366313893000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hey guys","msgtype":"m.text"},"ts":1366316085000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Who understands stable state stuff?","msgtype":"m.text"},"ts":1366316093000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan?","msgtype":"m.text"},"ts":1366316097000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1366316114000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: what's your question?","msgtype":"m.text"},"ts":1366316289000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<bz> I guess my question is whether a \"stable state\" would be a script runner or an nsIRunnable","msgtype":"m.text"},"ts":1366316317000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Which means that asking here was probably premature :)","msgtype":"m.text"},"ts":1366316342000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1366316391000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so http://w3c-test.org/web-platform-tests/master/old-tests/submission/Opera/media/track/track-element/cloneNode.html doesn't work at least in part because it assumes <track> will do something without being a child of a media element","msgtype":"m.text"},"ts":1366317674000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"which the spec now gives us on out on trying to make work","msgtype":"m.text"},"ts":1366317688000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"TabAtkins: (I presume the \"canvas text is illegal\" is an accessibility argument)","msgtype":"m.text"},"ts":1366319097000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That would make sense.  It woudl also be nonsense, but whatever.","msgtype":"m.text"},"ts":1366319143000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or both","msgtype":"m.text"},"ts":1366319621000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"hi, I'm trying to create an html scrapper using html5lib in python. After parsing the page, I often get broken html. Here is a minimal example: http://dpaste.com/1064087/ is there anything wrong with it?","msgtype":"m.text"},"ts":1366328155000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"why are you scrapping poor innocent htmls","msgtype":"m.text"},"ts":1366328442000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, the big picture is tu create a script that can \"freeze\" webpages by applying external css inline.","msgtype":"m.text"},"ts":1366328504000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"and \"cut\" fragments using xpath","msgtype":"m.text"},"ts":1366328524000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"anyway I need to parse arbitrary html","msgtype":"m.text"},"ts":1366328577000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"the nytimes is a good exemple of complex page","msgtype":"m.text"},"ts":1366328594000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"it works on simple pages but easily breaks on more complex pages","msgtype":"m.text"},"ts":1366328736000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"how is http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0165.html not a meme yet","msgtype":"m.text"},"ts":1366329092000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Get on it, dude.","msgtype":"m.text"},"ts":1366329106000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i tried to come up with a billie jean / mj one, but failed","msgtype":"m.text"},"ts":1366329121000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I'm just, just... NOT FUNNY ENOUGH! *sob*","msgtype":"m.text"},"ts":1366329145000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"sure, picture MJ moonwalking, top caption \"HTML5\", bottom caption \"is not your child\"","msgtype":"m.text"},"ts":1366329184000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or same captions, but this image http://theyuppiedilemma.files.wordpress.com/2010/06/creepy-white-van.jpg","msgtype":"m.text"},"ts":1366329252000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"zewt, other, no idea?","msgtype":"m.text"},"ts":1366329267000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"it works well in my browser so why is html5lib not digesting malformed html?","msgtype":"m.text"},"ts":1366329304000,"senderName":"aleray","senderId":"aleray@irc"}
]