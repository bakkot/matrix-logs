[
{"content":{"body":"I guess all the webperf stuff is not exposed in workers?","msgtype":"m.text"},"ts":1405331218000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Should one expose MouseEvent in workers?","msgtype":"m.text"},"ts":1405335524000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hey guys","msgtype":"m.text"},"ts":1405338363000,"senderName":"satazor","senderId":"satazor@irc"},
{"content":{"body":"I'm having an issue with fs.utimes because it is messing with ctime","msgtype":"m.text"},"ts":1405338401000,"senderName":"satazor","senderId":"satazor@irc"},
{"content":{"body":"is it expected? Or was it expected to change only the mtime & atime as the documentation says?","msgtype":"m.text"},"ts":1405338420000,"senderName":"satazor","senderId":"satazor@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1405338609000,"senderName":"satazor","senderId":"satazor@irc"},
{"content":{"body":"wrong channel","msgtype":"m.text"},"ts":1405338611000,"senderName":"satazor","senderId":"satazor@irc"},
{"content":{"body":"ahahz","msgtype":"m.text"},"ts":1405338613000,"senderName":"satazor","senderId":"satazor@irc"},
{"content":{"body":"If the browser receives \"<body>Hello w\" is there any way to tell that's an incomplete response vs the server intending to send that?","msgtype":"m.text"},"ts":1405343444000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Assuming Content-Length is not to be trusted","msgtype":"m.text"},"ts":1405343456000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Content-Length has to be trusted","msgtype":"m.text"},"ts":1405343488000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"At least in HTTP 1.1","msgtype":"m.text"},"ts":1405343522000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In 1.0 you could theoretically rely on the server to close the connection I think","msgtype":"m.text"},"ts":1405343540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So if we get a response longer/shorter than Content-Length, what happens?","msgtype":"m.text"},"ts":1405343555000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"shorter you just hang until you timeout","msgtype":"m.text"},"ts":1405343598000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"longer is more complex :P","msgtype":"m.text"},"ts":1405343657000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Then I shall build a test. Quick, to the local server! *nodejs logo zooms into the screen & back out again*","msgtype":"m.text"},"ts":1405343833000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"You could build a test that you could submit to web-platform-test, you know","msgtype":"m.text"},"ts":1405343861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Like http://w3c-test.org/http/","msgtype":"m.text"},"ts":1405343876000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The test there is a simple \"too long\" test","msgtype":"m.text"},"ts":1405343968000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"From when annevk was asking about the same things","msgtype":"m.text"},"ts":1405343984000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: longer depends on things like whether pipelining support is enabled, IIRC","msgtype":"m.text"},"ts":1405344270000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Is that documented somewhere, like how to get a local version running for development","msgtype":"m.text"},"ts":1405344414000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests has basic documentation","msgtype":"m.text"},"ts":1405344490000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://wptserve.readthedocs.org/en/latest/ has more detailed server documentation","msgtype":"m.text"},"ts":1405344531000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It should all end up on testthewebforward.org, but unfortunately I* need to do quite a bit of infrastructure work on the site to make that happen","msgtype":"m.text"},"ts":1405344568000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*Or someone else of course","msgtype":"m.text"},"ts":1405344574000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"why do we need Fetch API?","msgtype":"m.text"},"ts":1405347421000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I think it's fair to say we don't *need* it. We might want it though.","msgtype":"m.text"},"ts":1405348449000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok, why do we want it","msgtype":"m.text"},"ts":1405348483000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"XHR isn't too good, sure","msgtype":"m.text"},"ts":1405348488000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but so aren't many other APIs","msgtype":"m.text"},"ts":1405348507000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I believe \"we have lots of crappy APIs therefore having crappy APIs is OK\" isn't universially considered to be a winning argument","msgtype":"m.text"},"ts":1405348741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"SimonSapin: sounds like those IPv4 tests are broken","msgtype":"m.text"},"ts":1405349169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: IPv4 is basically no different from a domain per the specification in terms of parsing","msgtype":"m.text"},"ts":1405349188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: resolving any other numeric sequence as IPv4 is bad for security","msgtype":"m.text"},"ts":1405349203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looks like at least Firefox and Chrome do it","msgtype":"m.text"},"ts":1405349251000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: I know, Safari doesn't","msgtype":"m.text"},"ts":1405349274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: ServiceWorker needs Request/Response. Also opaque responses for corss-origin no-cors requests","msgtype":"m.text"},"ts":1405349379000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: In principle you could add Request/Response to XHR, so it doesn't fully justify Fetch","msgtype":"m.text"},"ts":1405349422000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And certainly not Fetch-in-document","msgtype":"m.text"},"ts":1405349435000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I suppose you could hack it on, but ugh","msgtype":"m.text"},"ts":1405349536000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Speaking of Service Worker, is there a mechanism for communicating from the main thread to a service worker when it is launched? e.g. could you use the document fragment?","msgtype":"m.text"},"ts":1405349537000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/document/URL/","msgtype":"m.text"},"ts":1405349547000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: So Safary tries to resolves these addresses from DNS?","msgtype":"m.text"},"ts":1405349571000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Safari","msgtype":"m.text"},"ts":1405349577000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: not sure exactly how the network layer deals with the address given","msgtype":"m.text"},"ts":1405349603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: file a bug if it's still unclear, I got some tea and chocolate to take care of","msgtype":"m.text"},"ts":1405349650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: you could use fragment, but that can only be set at registration time","msgtype":"m.text"},"ts":1405349679000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I filed https://github.com/w3c/web-platform-tests/issues/1104 , should it be in the specâ€™s bugzilla instead?","msgtype":"m.text"},"ts":1405349689000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"JakeA: I think that might be OK here?","msgtype":"m.text"},"ts":1405349719000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: What's the use-case?","msgtype":"m.text"},"ts":1405349744000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"SimonSapin: maybe, let's talk about it two weeks from now","msgtype":"m.text"},"ts":1405349777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The context is a mechanism to pass harness configuration parameters in to testcases. In particular the timeout. For normal tests this is set in a meta element in the HTML document so that it can be read by the manifest generation stuff","msgtype":"m.text"},"ts":1405349788000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So only being able to specify it in JS isn't very helpful","msgtype":"m.text"},"ts":1405349807000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: who two weeks, are you gonna be in London?","msgtype":"m.text"},"ts":1405349812000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"In the worst case, I guess I could use specially formatted comments or similar","msgtype":"m.text"},"ts":1405349837000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"SimonSapin: no, but I won't be on vacation","msgtype":"m.text"},"ts":1405349840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"eh, ok :)","msgtype":"m.text"},"ts":1405349847000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"jgraham: Yeah, fragment or querystring would work then.","msgtype":"m.text"},"ts":1405350347000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: why does serviceworker even need Request/Response ? (but yes, those could be hacked into XHR)","msgtype":"m.text"},"ts":1405350722000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is just trying to understand the reasoning behind Fetch API","msgtype":"m.emote"},"ts":1405350732000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"doesn't have any opinion whether the API is a good or bad thing","msgtype":"m.emote"},"ts":1405350751000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: the fetch event of the serviceworker allows developers to hijack a request and respond differently. Request lets them get information about the intended request, Response lets them construct their own.","msgtype":"m.text"},"ts":1405350826000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: why do both Request and Response have a .body?","msgtype":"m.text"},"ts":1405352039000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: If I'm posting formdata to a server, that request has a body","msgtype":"m.text"},"ts":1405352075000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: if the server responds with \"yay everything's great\", that response has a body","msgtype":"m.text"},"ts":1405352095000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: OK, but why would you readAsJSON() the request body?","msgtype":"m.text"},"ts":1405352104000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: If the content type of the body is json & you want to read it","msgtype":"m.text"},"ts":1405352161000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but you put the data there, so you shouldn't need to read it...","msgtype":"m.text"},"ts":1405352176000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: and in fact having the ability to read it means that you must buffer it all in memory in case someone does read it","msgtype":"m.text"},"ts":1405352192000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: The page may have put it there, but you still may want to read it, or pipe it into another request with a transform in the middle","msgtype":"m.text"},"ts":1405352247000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Eg, convert formdata into JSON for another endpoint","msgtype":"m.text"},"ts":1405352260000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: then you should do that before writing it to the request","msgtype":"m.text"},"ts":1405352269000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: forcing buffering of all the data in memory that you write to the request is quite bad","msgtype":"m.text"},"ts":1405352282000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Where is that being forced?","msgtype":"m.text"},"ts":1405352311000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the fact that you can call readAsJSON() at any time on the request body stream forces that","msgtype":"m.text"},"ts":1405352323000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: it means you can't fire-and-forget bytes over the wire","msgtype":"m.text"},"ts":1405352332000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if you call asJSON you're consuming the stream & yes you'll have to read it into memory. If you don't call that, you don't.","msgtype":"m.text"},"ts":1405352408000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: Same with responses","msgtype":"m.text"},"ts":1405352421000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that doesn't make sense. The fact that someone *could* call readAsJSON() means that the socket can never consume data from the request body directly. You need to copy all the buffers that are written to the request body somewhere temporary in case someone calls requestBody.readAsJSON() later, even after the HTTP connection is closed, as long as","msgtype":"m.text"},"ts":1405352471000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"requestBody is not GCed","msgtype":"m.text"},"ts":1405352471000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That's true, but is it a problem?","msgtype":"m.text"},"ts":1405352517000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It *might* be","msgtype":"m.text"},"ts":1405352526000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic: once the request is given to something like fetch(), its body stream is consumed","msgtype":"m.text"},"ts":1405352532000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so calling readAsJSON() errors?","msgtype":"m.text"},"ts":1405352551000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yes","msgtype":"m.text"},"ts":1405352564000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so that means FetchBodyStream is a readable stream. So how do you write to it?","msgtype":"m.text"},"ts":1405352580000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: new Request(url, {body: stream})","msgtype":"m.text"},"ts":1405352625000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: how do you write to stream? Since it is readable, not writable","msgtype":"m.text"},"ts":1405352635000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'm not up-to-date on the plans for the streaming API. If I wanted to create my own readable stream, how would I do that?","msgtype":"m.text"},"ts":1405352778000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: https://whatwg.github.io/streams/#rs-intro","msgtype":"m.text"},"ts":1405352802000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: start(enqueue, close, error) { - is that creating a \"start\" property on that object?","msgtype":"m.text"},"ts":1405352914000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: Assuming yes, you could create a readable stream like that & use it when constructing a Request object","msgtype":"m.text"},"ts":1405353039000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: You should be able to pipe a response body into a new request","msgtype":"m.text"},"ts":1405353099000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that's the thing though. You pipe to writable streams, not to readable streams","msgtype":"m.text"},"ts":1405353146000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: see my latest email to whatwg@","msgtype":"m.text"},"ts":1405353154000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"you are proposing option 2 in my email, I guess. Which is kinda annoying and unidiomatic, from a streams point of view.","msgtype":"m.text"},"ts":1405353180000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: you're not piping to a readable stream, you're passing a stream into the constructor (which will also take a blob, arraybuffer etc)","msgtype":"m.text"},"ts":1405353215000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes, that is the problem, you can no longer pipe or write directly, you have to wrap things into readable streams","msgtype":"m.text"},"ts":1405353271000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: ideally things you can write to are represented as writable streams, not as functions accepting readable streams","msgtype":"m.text"},"ts":1405353321000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ahh ok, understanding better now","msgtype":"m.text"},"ts":1405353394000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"reading that threadâ€¦","msgtype":"m.text"},"ts":1405353428000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: If a request comes into a serviceworker, you don't want that to have a writable stream. Its data is already being provided by something else.","msgtype":"m.text"},"ts":1405354633000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah, the old client-request vs. server-request thing...","msgtype":"m.text"},"ts":1405354678000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"fetch(request) should take a client-request","msgtype":"m.text"},"ts":1405354688000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"service workers should get a server-request","msgtype":"m.text"},"ts":1405354696000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm, I should be able to do fetch(event.request)","msgtype":"m.text"},"ts":1405354711000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"you should?","msgtype":"m.text"},"ts":1405354812000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"from a server's point of view, a request contains data to read","msgtype":"m.text"},"ts":1405354840000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"from a client's point of view, a request is something you write to","msgtype":"m.text"},"ts":1405354847000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i am not sure how you would reconcile that","msgtype":"m.text"},"ts":1405354856000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"one is mutable, the other is immutable","msgtype":"m.text"},"ts":1405354864000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Say I get a fetch event, which gives me a request object, how should I then fetch it so I can look at headers before doing something with the response?","msgtype":"m.text"},"ts":1405354949000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, yeah, I see the use case. My only answer is a bad one... essentially copying over the relevant info (URL, headers, body, ...) from the request-to-the-service-worker into a new request-to-the-remote-server","msgtype":"m.text"},"ts":1405355067000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Let me see if I can recall how/if Node does this... it might be just copying though, which is bad, in which case we'll have to think of something else","msgtype":"m.text"},"ts":1405355121000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: yeah, it is pretty much just copying, meh... http://stackoverflow.com/a/20354642/3191","msgtype":"m.text"},"ts":1405355259000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: ends up looking like https://gist.github.com/domenic/1bbec0f341ae3cfb3a8f in service-worker land...","msgtype":"m.text"},"ts":1405355460000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: now I am thinking making it a writable stream is not worth the trouble...","msgtype":"m.text"},"ts":1405355523000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: or maybe we should make it a duplex stream","msgtype":"m.text"},"ts":1405355540000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(i.e. { input, output } pair, possibly { input, output, readAsJSON, ... }, or maybe put readAsJSON on output, at the cost of more typing...)","msgtype":"m.text"},"ts":1405355575000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Would that be a different type to the request I get on the fetch event?","msgtype":"m.text"},"ts":1405355632000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: in the gist? yeah it should say ClientRequest; ev.request is a ServerRequest","msgtype":"m.text"},"ts":1405355660000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: the difference being that req.body is writable for ClientRequest, readable for ServerRequest","msgtype":"m.text"},"ts":1405355679000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I mean your duplex idea","msgtype":"m.text"},"ts":1405355681000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the duplex idea would be that both client and servers re-use the same Request class, but req.body = { WritableStream input, ReadableStream output }","msgtype":"m.text"},"ts":1405355714000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: conceptually, a client will start with an \"empty\" stream, and write things into input","msgtype":"m.text"},"ts":1405355754000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: whereas a server will start with a \"full\" stream and read things from output","msgtype":"m.text"},"ts":1405355767000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: for a client, once they write things into input, the computer then reads from output to consume the data. (Or, they could muck things up by consuming from output themselves, ensuring the network never sees that data.)","msgtype":"m.text"},"ts":1405355796000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: similarly for a server, the computer is writing things into input---or they could do so themselves, creating some chaos by mixing up computer-generated stream data with their own","msgtype":"m.text"},"ts":1405355834000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'm trying to get my head around why var req = new Request(url, {method: \"POST\"}); stream.pipeTo(req.body); is better than var req = new Request(url, {method: \"POST\", body: stream});","msgtype":"m.text"},"ts":1405355926000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: in the simplest case, it is not any better. But if you want to allow the full flexibility of a writable stream---it's own buffer, potentially combining input from multiple sources, setting up a pipe chain through several transforms, ... then having a writable destination is nice.","msgtype":"m.text"},"ts":1405356035000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: the duplex idea was designed to avoid such shenanigans","msgtype":"m.text"},"ts":1405356174000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: since you could just pass the duplex stream from ev.request into fetch(), since fetch() reads from the output side","msgtype":"m.text"},"ts":1405356200000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: still want to support setting the body as a blob, but I guess you'd still have an input, it'd just mess things up in new & interesting ways if you tried to use it","msgtype":"m.text"},"ts":1405356957000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so what do people think cross-spec references should look like?","msgtype":"m.text"},"ts":1405360714000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should every link to \"URL\" in the URL spec have a [URL] reference?","msgtype":"m.text"},"ts":1405360728000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should i not bother with [FOO] references except where there's no direct link to the spec?","msgtype":"m.text"},"ts":1405360752000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should i drop [FOO]-style refs entirely?","msgtype":"m.text"},"ts":1405360757000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cross-spec references should: not require you to scroll to the end of the (likely very, very long document) to find links to the specs","msgtype":"m.text"},"ts":1405360803000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah that's a given","msgtype":"m.text"},"ts":1405360822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"assume that the links are now real cross-spec links","msgtype":"m.text"},"ts":1405360844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: What do you mean by \"[FOO]\" references? i.e. what's the distinguishing feature that you have in mind?","msgtype":"m.text"},"ts":1405364360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: so right now the spec says things like \"The foobar is a blooberry. [FOO]\"","msgtype":"m.text"},"ts":1405364603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: which then links to the References section and describes the Foo spec","msgtype":"m.text"},"ts":1405364618000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i'd like \"foobar\" here to link directly to the definition of \"foobar\" in the Foo spec","msgtype":"m.text"},"ts":1405364631000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but what about the next paragraph, which also has a \"foobar\" in it? Should it also say [FOO]? Should neither say [FOO]?","msgtype":"m.text"},"ts":1405364652000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the [FOO] right now is just included where i made an editorial decision to include it","msgtype":"m.text"},"ts":1405364662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's somewhat arbitrary","msgtype":"m.text"},"ts":1405364668000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also, what about cases where there's no specific term, but still a reference to another spec, e.g.: \"Implementations that support the XHTML syntax must support some version of XML, as well as its corresponding namespaces specification, because that syntax uses an XML serialisation with namespaces. [XML] [XMLNS]\"","msgtype":"m.text"},"ts":1405364706000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"basically i'm asking what you think cross-spec references should look like if we forget our legacy","msgtype":"m.text"},"ts":1405364750000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well arguably in that case \"XML\" and \"namespaces\" should be linked","msgtype":"m.text"},"ts":1405364755000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"to just the specs?","msgtype":"m.text"},"ts":1405364764000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1405364769000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: from my perspective, in a single paragraph, you shouldn't have multiple links to the same section of a referenced spec","msgtype":"m.text"},"ts":1405364778000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"maybe in the same group of paragraphs","msgtype":"m.text"},"ts":1405364785000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: well i want every reference to a term to link to the same place","msgtype":"m.text"},"ts":1405364808000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ink consistently linking terms defined elsewhere like you would terms defined in the spec makes much more sense","msgtype":"m.text"},"ts":1405364813000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*I think","msgtype":"m.text"},"ts":1405364820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so drop the whole [FOO]-style refernece thing and the references section?","msgtype":"m.text"},"ts":1405364838000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what I mean is, `The foobar is a blooberry. The foobar makes a delicious pie.` should end up as `The [FOO#foobar] is a blooberry. the foobar makes a delicious pie.` and not The [FOO#foobar] is a blooberry. the [FOO#foobar] makes a delicious pie.`","msgtype":"m.text"},"ts":1405364915000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Well you could have a references section that would just be a list of other specs that get referenced","msgtype":"m.text"},"ts":1405364918000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I don't know how useful it is","msgtype":"m.text"},"ts":1405364924000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"otherwise it just gets a bit link-spammy","msgtype":"m.text"},"ts":1405364928000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: It shouldn't use a different style compared to internal references","msgtype":"m.text"},"ts":1405364969000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: but not link to it?","msgtype":"m.text"},"ts":1405364978000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the notation is just indicating that it's a link to the foobar section of the FOO spec","msgtype":"m.text"},"ts":1405364995000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"not that it's a different style","msgtype":"m.text"},"ts":1405365001000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: I don't think linking to it is all that practical","msgtype":"m.text"},"ts":1405365007000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: k","msgtype":"m.text"},"ts":1405365015000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: Right, I meant \"style\" in the sense of \"how often it links\"","msgtype":"m.text"},"ts":1405365034000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"caitp: the problem is that if different occurences of the term look different (e.g. one is a link, one is not) then it's confusing.","msgtype":"m.text"},"ts":1405365048000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i.e. my suggestion is \"do what you already do and ignore the difference between internal and external references\"","msgtype":"m.text"},"ts":1405365059000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hmm, that's true","msgtype":"m.text"},"ts":1405365061000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: i think with the current underline-less style, link-spamminess is much less of a problem","msgtype":"m.text"},"ts":1405365064000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well you probably do want to clearly identify that it's a link to somewhere else","msgtype":"m.text"},"ts":1405365090000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"The reasons I can think of to maintain [FOO]-style links to a references section are (1) use of the spec when printed and (2) adding additional metadata, such as a specific version/date. Neither of which seem to be worth the visual noise and maintenance burden, but YMMV.","msgtype":"m.text"},"ts":1405365093000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"In terms of visual style a small marker to indicate an external link might be nice. Maybe *that* could link to the references section, if you want such a thing","msgtype":"m.text"},"ts":1405365098000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jsbell: well we don't include the version or date anyway, since we're always linking to the latest revision","msgtype":"m.text"},"ts":1405365152000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yep.","msgtype":"m.text"},"ts":1405365161000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jgraham: it's been suggested that links to terms should have a popup that inline the definition and text around it. i figured for external links this would include the reference or something.","msgtype":"m.text"},"ts":1405365202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though kittens know how i figure out what reference to actually use","msgtype":"m.text"},"ts":1405365216000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's a separate issue","msgtype":"m.text"},"ts":1405365225000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one thing is that MikeSmith wanted the references section to link to all the sections that referenced the spec in question","msgtype":"m.text"},"ts":1405365245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which would be harder if there's no marker to link back to...","msgtype":"m.text"},"ts":1405365251000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Oh well if you are going fancy, that could work. But it's not clear to me that inlining the reference is at all practical","msgtype":"m.text"},"ts":1405365256000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"e.g. if it's the whole XML spec","msgtype":"m.text"},"ts":1405365267000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: i just meant the title and editor names and so on","msgtype":"m.text"},"ts":1405365277000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok i guess for now i'm going to leave the [FOO] links alone and think about it some more, and i'll make the cross-spec links completely independent of this","msgtype":"m.text"},"ts":1405365326000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no magic to autoinsert the right [FOO]s when there's a cross-spec cross-ref or whatever","msgtype":"m.text"},"ts":1405365345000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: FWIW, I use real cross-ref links everywhere, and only add a [FOO] to the first instance where a particular spec is linked","msgtype":"m.text"},"ts":1405365722000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"that makes sense","msgtype":"m.text"},"ts":1405365734000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mainly to build the reference index","msgtype":"m.text"},"ts":1405365756000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"dglazkov_: ping","msgtype":"m.text"},"ts":1405365997000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"man there sure are a lot of <dfn>s in the HTML spec that aren't used by anything in the spec","msgtype":"m.text"},"ts":1405366266000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ØªØ­Ø°ÙŠØ±","msgtype":"m.text"},"ts":1405371238000,"senderName":"awrbgh","senderId":"awrbgh@irc"},
{"content":{"body":"warning","msgtype":"m.text"},"ts":1405371239000,"senderName":"awrbgh","senderId":"awrbgh@irc"},
{"content":{"body":" you may be  watched","msgtype":"m.text"},"ts":1405371239000,"senderName":"awrbgh","senderId":"awrbgh@irc"},
{"content":{"body":"do usa&israel use the internet(facebook,youtube,twitter, chat rooms ..ect)to spy??","msgtype":"m.text"},"ts":1405371239000,"senderName":"awrbgh","senderId":"awrbgh@irc"},
{"content":{"body":"do usa&israel use the internet 2 collect informations,,can we call that spying??","msgtype":"m.text"},"ts":1405371239000,"senderName":"awrbgh","senderId":"awrbgh@irc"},
{"content":{"body":"not just usa&israel, i would imagine...","msgtype":"m.text"},"ts":1405372080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well that was interesting","msgtype":"m.text"},"ts":1405372141000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Thinking of standardizing Wake Locks. Use cases: https://w3c-webmob.github.io/wake-lock-use-cases/","msgtype":"m.text"},"ts":1405372388000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"would appreciate any feedback before proposing an API","msgtype":"m.text"},"ts":1405372406000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"books doesn't seem like a good use case, you don't want to fall asleep reading a book on your ipad and have the system prevented from going to sleep o_o","msgtype":"m.text"},"ts":1405372774000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"marcosc: my immediate reaction to the first sentence (\"The web platform currently lacks a means to prevent a device from entering a power-saving state (i.e., some means that prevents an aspect of the system from \"going to sleep\").\") was \"and that's why i love the web\"","msgtype":"m.text"},"ts":1405372836000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't media elements offer an attribute or something to prevent sleep? I thought they did but can't recall","msgtype":"m.text"},"ts":1405372873000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"marcosc: your document seems woefully short on abuse considerations","msgtype":"m.text"},"ts":1405372950000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe it's just a default chosen by the implementation, I dunno","msgtype":"m.text"},"ts":1405372950000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"marcosc: i would have an additional requirement, namely \"the page must not be able to get any kind of wake lock without user opt-in\"","msgtype":"m.text"},"ts":1405372973000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"really video elements seem like the only legitimate use case where you're going to leave the browser running for a specific use in the platform","msgtype":"m.text"},"ts":1405373075000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"otherwise, if you're a kiosk, you're disabling sleep on the system itself, if you're a videogame you're getting user input periodically, if you're a book you're turning pages, if you're a map/gps you're probably not a web browser unless someone is just printing directions out or something","msgtype":"m.text"},"ts":1405373170000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i don't see why Google Maps shouldn't support navigation on a phone","msgtype":"m.text"},"ts":1405373208000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think that use case makes emminent sense","msgtype":"m.text"},"ts":1405373213000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean there's nothing really about the native Android Google Maps app that shouldn't be possible from a web app, imho","msgtype":"m.text"},"ts":1405373244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you might use google maps on a phone, that would be fine","msgtype":"m.text"},"ts":1405373336000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but you probably are using the android or ios app","msgtype":"m.text"},"ts":1405373353000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"which can keep the device awake natively","msgtype":"m.text"},"ts":1405373359000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but why should google need to make two or more navigation apps? instead of just a web app?","msgtype":"m.text"},"ts":1405373373000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"easier on the battery too, quite likely","msgtype":"m.text"},"ts":1405373374000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well, google already does","msgtype":"m.text"},"ts":1405373405000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i see no reason why a web app shouldn't be able to do everything a native maps app can do, with no compromises (e.g. no worse battery usage)","msgtype":"m.text"},"ts":1405373409000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and if they didn't, someone else would","msgtype":"m.text"},"ts":1405373409000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(and someone else does, actually)","msgtype":"m.text"},"ts":1405373417000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but why is that a good thing?","msgtype":"m.text"},"ts":1405373422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because it is","msgtype":"m.text"},"ts":1405373429000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1405373432000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"game over: you have lost your argument","msgtype":"m.text"},"ts":1405373442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1405373446000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's a good thing because other platforms do more than the web platform without going through the process of needing to get other implementations working the same way","msgtype":"m.text"},"ts":1405373473000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and without being blocked on bugs in different implementations","msgtype":"m.text"},"ts":1405373480000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that arguments generalises to all features, and suggests the web shouldn't exist.","msgtype":"m.text"},"ts":1405373501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and that's really a logical conclusion, when you get down to it","msgtype":"m.text"},"ts":1405373512000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: true about abuse cases. Will add that.","msgtype":"m.text"},"ts":1405373530000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"caitp: the web provides a key feature that none of the other platforms provides: it's vendor-neutral. the same app can work on any platform.","msgtype":"m.text"},"ts":1405373561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: that alone justifies its existence, imho","msgtype":"m.text"},"ts":1405373566000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not really vendor-neutral, though","msgtype":"m.text"},"ts":1405373570000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's not","msgtype":"m.text"},"ts":1405373573000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"we try, we do try","msgtype":"m.text"},"ts":1405373578000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but it's not","msgtype":"m.text"},"ts":1405373580000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"with simple documents we get pretty close","msgtype":"m.text"},"ts":1405373596000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: did you read the document?","msgtype":"m.text"},"ts":1405373605000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"caitp: by definition, anything that isn't interoperable across multiple vendors isn't part of the web. :-)","msgtype":"m.text"},"ts":1405373612000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, when you add things to the web platform, you have this huge pile of constraints which aren't related whatsoever to the problem you're actually trying to solve","msgtype":"m.text"},"ts":1405373692000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"because of this, the web is not the single platform for all things","msgtype":"m.text"},"ts":1405373711000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that also describes every other platform, especially the old ones","msgtype":"m.text"},"ts":1405373715000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it can't be, it's not possible :(","msgtype":"m.text"},"ts":1405373716000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it would be cool if it were possible","msgtype":"m.text"},"ts":1405373743000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"your argument is essentially \"the web isn't perfect, therefore it's got no value\"","msgtype":"m.text"},"ts":1405373745000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I never said it had no value =)","msgtype":"m.text"},"ts":1405373754000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and things aren't that black and white","msgtype":"m.text"},"ts":1405373758000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it's got too many problems which will keep it from progressing in a meaningful way for some of these things","msgtype":"m.text"},"ts":1405373767000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"security issues, limitations of imperative languages, lack of imperative languages, etc","msgtype":"m.text"},"ts":1405373783000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"performance issues, energy cost issues","msgtype":"m.text"},"ts":1405373801000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: about games, search for Magic the gathering. Also, see the first example in \"other applications\".","msgtype":"m.text"},"ts":1405373815000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"too many responsibilities -> never going to be good at everything you need it to be","msgtype":"m.text"},"ts":1405373818000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"we're literally working on every single one of those","msgtype":"m.text"},"ts":1405373828000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i know they're being worked on, but it's never really going to \"work\"","msgtype":"m.text"},"ts":1405373843000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"right now I'm risking a chemical and electrical fire because a web application is heating my laptop to 160F while I'm sitting in a meeting","msgtype":"m.text"},"ts":1405373879000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: https://www.youtube.com/watch?v=pWdd6_ZxX8c","msgtype":"m.text"},"ts":1405373896000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is a prime example of the web not doing a great job for all things","msgtype":"m.text"},"ts":1405373903000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"not that the web is bad","msgtype":"m.text"},"ts":1405373911000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the web is awesome","msgtype":"m.text"},"ts":1405373913000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you realise that _no_ platform does \"a great job for all things\" right","msgtype":"m.text"},"ts":1405373920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it's not the be-all-end-all solution for everything","msgtype":"m.text"},"ts":1405373922000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"no, but sometimes C# or ObjC or Java or C++ does a better job of solving a given problem","msgtype":"m.text"},"ts":1405373948000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(easier than say, javascript + API bindings into someone elses C++)","msgtype":"m.text"},"ts":1405373962000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"sure. there are multiple projects ongoing for providing ways to compile C++ to a form that runs on any browser.","msgtype":"m.text"},"ts":1405373988000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not to mention that many web apps are now written in Java using GWT, etc.","msgtype":"m.text"},"ts":1405374002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah but that's not really a solution :p","msgtype":"m.text"},"ts":1405374003000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"running in a browser isn't really any better than running in anything else","msgtype":"m.text"},"ts":1405374014000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well, again, https://www.youtube.com/watch?v=pWdd6_ZxX8c","msgtype":"m.text"},"ts":1405374018000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's nothing that makes an app that runs in IE any better than an app that runs in MS-DOS","msgtype":"m.text"},"ts":1405374046000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1405374065000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's just objectively false","msgtype":"m.text"},"ts":1405374076000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it could be the exact same application, running it in IE wouldn't be any better","msgtype":"m.text"},"ts":1405374079000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it wouldn't necessarily be worse, but it wouldn't be better","msgtype":"m.text"},"ts":1405374087000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"running in a browser doesn't \"improve\" anything","msgtype":"m.text"},"ts":1405374096000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the browser is just the runtime","msgtype":"m.text"},"ts":1405374141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie, adding the user opt-in requirement also. Thanks for the feedback.","msgtype":"m.text"},"ts":1405374142000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"i don't care if it's IE or Chrome OS or whatever","msgtype":"m.text"},"ts":1405374179000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ISTM that wake lock shouldn't be API, but should simply be something UAs do themselves","msgtype":"m.text"},"ts":1405374188000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"yes, it's the runtime","msgtype":"m.text"},"ts":1405374189000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"in fact the whole point is that it can be any of the browsers","msgtype":"m.text"},"ts":1405374190000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the runtime doesn't matter","msgtype":"m.text"},"ts":1405374191000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the browser being a runtime isn't an improvement","msgtype":"m.text"},"ts":1405374202000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's not a detriment in all cases, but it's not an improvement","msgtype":"m.text"},"ts":1405374211000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the improvement is that there's multiple runtimes","msgtype":"m.text"},"ts":1405374212000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like, if i take a <video> full screen, a reasonable UA should wake lock while it's playing","msgtype":"m.text"},"ts":1405374215000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"without the author doing anything","msgtype":"m.text"},"ts":1405374222000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: yeah but e.g. for a navigation web app, how does the browser know to wake lock?","msgtype":"m.text"},"ts":1405374235000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hober: yes","msgtype":"m.text"},"ts":1405374239000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"you're a website running in an airport kiosk","msgtype":"m.text"},"ts":1405374256000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: because the user activated a control in the UA chrome? :)","msgtype":"m.text"},"ts":1405374257000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"the sysadmin controlling the kiosk has disabled sleep","msgtype":"m.text"},"ts":1405374265000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"problem solved","msgtype":"m.text"},"ts":1405374270000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"hober: Safari is going to have a \"wake lock\" button? :-)","msgtype":"m.text"},"ts":1405374273000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sysadmin/IT grunt/whoever","msgtype":"m.text"},"ts":1405374288000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah kiosks aren't a good use case","msgtype":"m.text"},"ts":1405374291000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you know us. we love adding lots of random ui buttons :)","msgtype":"m.text"},"ts":1405374294000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: i rest my case... :-P","msgtype":"m.text"},"ts":1405374303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, I didn't include them... though I do have a picture of one that we use at the office here.","msgtype":"m.text"},"ts":1405374316000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"(we use an app for meeting rooms.... but the screen could shut off after hours)","msgtype":"m.text"},"ts":1405374350000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"so they are not a terrible use case","msgtype":"m.text"},"ts":1405374355000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"there are cases where it's obvious you want to disable sleep, like videos","msgtype":"m.text"},"ts":1405374484000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but I don't think the other cases are that obvious","msgtype":"m.text"},"ts":1405374500000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that's all","msgtype":"m.text"},"ts":1405374503000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"how is maps not obvious","msgtype":"m.text"},"ts":1405374516000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because you're probably issuing inputs","msgtype":"m.text"},"ts":1405374533000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I mean the only case where you'd ever do that is on your mobile phone, and your mobile phone isn't going to sleep, unless you leave it alone for a minute, and if it does, who cares","msgtype":"m.text"},"ts":1405374571000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you could disable sleep if you need to use it as your car GPS or something","msgtype":"m.text"},"ts":1405374579000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(which you shouldn't)","msgtype":"m.text"},"ts":1405374589000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1405374596000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me tell you how i am NOT issuing inputs while driving...","msgtype":"m.text"},"ts":1405374604000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why \"which you shouldn't\"","msgtype":"m.text"},"ts":1405374621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't get it","msgtype":"m.text"},"ts":1405374622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't use your phone as a GPS while driving =) and if you can avoid it, don't use GPS at all","msgtype":"m.text"},"ts":1405374632000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"people grow overly dependent on these things, you know","msgtype":"m.text"},"ts":1405374651000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1405374673000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1405374689000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is going to keep using a navigation app until such time as his car drives itself, thanks","msgtype":"m.emote"},"ts":1405374710000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm sure it will only be a few years","msgtype":"m.text"},"ts":1405374722000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"especially with google maps being so freaking awesome at it these days","msgtype":"m.text"},"ts":1405374723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"navigating around traffic dynamically and giving lane guidance and all that","msgtype":"m.text"},"ts":1405374733000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's freaking fantastic","msgtype":"m.text"},"ts":1405374737000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then we'll forget all about reading paper maps, street signs and landmarks, and celestial navigation","msgtype":"m.text"},"ts":1405374740000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and it will be terrible","msgtype":"m.text"},"ts":1405374744000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you'd have to be crazy to not use it","msgtype":"m.text"},"ts":1405374748000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and more importantly, we'll start to forget to look away from the screen","msgtype":"m.text"},"ts":1405374780000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"wouldn't that be awful?","msgtype":"m.text"},"ts":1405374785000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"oh man","msgtype":"m.text"},"ts":1405374788000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"oh man, yeah, how will we ever survive as a species if we forget how to use logarithm tables, slide rules, punch cards, pedal looms or how to ride a horse","msgtype":"m.text"},"ts":1405374801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1405374813000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"darned right","msgtype":"m.text"},"ts":1405374815000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"no sarcasm","msgtype":"m.text"},"ts":1405374820000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it will be a sad day when that knowledge disappears =)","msgtype":"m.text"},"ts":1405374832000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"luckily for us, that knowledge will forever live on since we now have near-infinite archival storage and no longer depend on flammable paper for our backups","msgtype":"m.text"},"ts":1405374890000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"archived knowledge is not necessarily living knowledge","msgtype":"m.text"},"ts":1405374934000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"anyway I think this got a bit sidetracked =)","msgtype":"m.text"},"ts":1405374947000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"do you know how to use a slide rule?","msgtype":"m.text"},"ts":1405374963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: you didn't even read the document, did you?","msgtype":"m.text"},"ts":1405375017000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"in its entirety? heck no, I was in a meeting =)","msgtype":"m.text"},"ts":1405375040000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ok, most of the things you mentioned are addressed in the document","msgtype":"m.text"},"ts":1405375075000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"but I'm still not really buying it, I don't want any web app that wants to disabling sleep on my system, and I don't want to let a web app disable sleep","msgtype":"m.text"},"ts":1405375078000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: that's fine. You can opt out","msgtype":"m.text"},"ts":1405375093000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"but other people would want it","msgtype":"m.text"},"ts":1405375102000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"for obvious cases like videos, the UA can disable sleep, but otherwise I'd prefer to do that myself","msgtype":"m.text"},"ts":1405375108000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: ok, that's fine. But do you acknowledge that other people might not want that?","msgtype":"m.text"},"ts":1405375130000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"(i.e., a lot of people don't even know how to do that(","msgtype":"m.text"},"ts":1405375139000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1405375140000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"if someone doesn't know how to disable sleep, do you think they really know what they're doing allowing a random web app to disable sleep?","msgtype":"m.text"},"ts":1405375167000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: again, see the document","msgtype":"m.text"},"ts":1405375178000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"e.g., the app for cooking and the Brazil 2014 app","msgtype":"m.text"},"ts":1405375190000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"the document explains how it makes up for other peoples lack of knowledge?","msgtype":"m.text"},"ts":1405375192000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"o_o","msgtype":"m.text"},"ts":1405375193000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1405375198000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"which section would I find that snippet, is there another spec proposed for interfacing directly with a user's brain?","msgtype":"m.text"},"ts":1405375232000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I think that's called interaction design","msgtype":"m.text"},"ts":1405375255000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"seems you are not really interested in actually providing constructive feedback.","msgtype":"m.text"},"ts":1405375290000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"it's not that it's not constructive, it's that it's not what you want to hear","msgtype":"m.text"},"ts":1405375327000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"which is fine, I can't stop ya","msgtype":"m.text"},"ts":1405375331000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"no, this is pretty much the definition of non-constructive feedback right here","msgtype":"m.text"},"ts":1405375352000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there's no way to make this work in a good way within the constraints of the platform, domenic, that would never be appropriate","msgtype":"m.text"},"ts":1405375379000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: why is it then possible to do it effectively on Android and iOS?","msgtype":"m.text"},"ts":1405375402000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Or even in Firefox OS?","msgtype":"m.text"},"ts":1405375420000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"well, it's not as effective on the android store because the play store isn't policed as effectively","msgtype":"m.text"},"ts":1405375425000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but certainly on the app store they take abuse a bit more seriously","msgtype":"m.text"},"ts":1405375448000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Wait, you are saying that we shouldn't standardize any new features because the web doesn't have an \"app store\"?","msgtype":"m.text"},"ts":1405375496000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1405375502000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that's you fitting those words into my mouth =)","msgtype":"m.text"},"ts":1405375509000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the trouble is, by asking users to opt-in, you're A) assuming they have a clue what they're opting into or how it affects them, and B) essentially giving a free-pass for people to take advantage of less-skilled computer users","msgtype":"m.text"},"ts":1405375552000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"apologies, can we focus on the use cases and try to find an solution to the abuse cases?","msgtype":"m.text"},"ts":1405375553000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"caitp: you're not explaining your position very well, fwiw","msgtype":"m.text"},"ts":1405375559000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"while at the same time imposing inconvenience on more experienced users","msgtype":"m.text"},"ts":1405375563000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if the application provides a wake lock and it's really useful (e.g., driving, using Google Cardboard, following a recipe) I don't see how that is a huge inconvenience for a significant gain. Once the user is done using the application, they just press the power button or open a different app.","msgtype":"m.text"},"ts":1405375695000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc: on android i would expose it as a notification that said \"This Web page would like to keep your phone from turning off. This can increase battery usage. (( Allow maps.google.com to control when the phone turns off ))\" and if you dismiss it, the app is added to the blacklist so the notification doesn't come back.","msgtype":"m.text"},"ts":1405375715000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh man, google cardboard is another great use case","msgtype":"m.text"},"ts":1405375737000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I want a Google cardboard, but am ironically too lazy to make one...","msgtype":"m.text"},"ts":1405375797000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1405375803000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Domenic: you can find prebuilt kits online","msgtype":"m.text"},"ts":1405375809000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: http://www.dodocase.com/products/google-cardboard-vr-goggle-toolkit http://www.unofficialcardboard.com/","msgtype":"m.text"},"ts":1405375836000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyways I'm still not seeing where this draft is claiming to make up for a users inexperience marcosc :( do you have a link to the section/","msgtype":"m.text"},"ts":1405375906000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1405375908000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: awesome!","msgtype":"m.text"},"ts":1405375938000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"No, it's implied throughout the whole document because there are many successful apps using wake locks.","msgtype":"m.text"},"ts":1405375949000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"caitp: ^^","msgtype":"m.text"},"ts":1405375954000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"The \"Handcrafted in San Francisco\" banner is a nice touch.","msgtype":"m.text"},"ts":1405375955000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that... isn't the issue though","msgtype":"m.text"},"ts":1405375959000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there is any number of things that you could gain a marginal benefit from wakelocks for","msgtype":"m.text"},"ts":1405375973000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"must admit to having no idea what issue caitp is currently having","msgtype":"m.emote"},"ts":1405375977000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the issue is how do you prevent abuse","msgtype":"m.text"},"ts":1405375988000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"because opt-in isn't enough","msgtype":"m.text"},"ts":1405375993000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it just isn't","msgtype":"m.text"},"ts":1405375997000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's isn't because...?","msgtype":"m.text"},"ts":1405376009000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because people don't understand what they're opting into/out of, don't understand all of the implications, don't know how to undo their choices","msgtype":"m.text"},"ts":1405376029000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I guess people should not use phones then","msgtype":"m.text"},"ts":1405376057000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and more importantly, people don't want to have to opt in","msgtype":"m.text"},"ts":1405376057000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Cuz the wakelock monster will get them","msgtype":"m.text"},"ts":1405376065000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and lock their phones awake","msgtype":"m.text"},"ts":1405376070000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"we have much bigger issues that are currently opt-in without the world ending...","msgtype":"m.text"},"ts":1405376072000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for example, the geolocation api","msgtype":"m.text"},"ts":1405376081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, it would take a lot for the world to end","msgtype":"m.text"},"ts":1405376108000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if opt-in is sufficient for the geolocation api, i'm very comfortable saying that it's sufficient for a wake lock","msgtype":"m.text"},"ts":1405376148000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the industry seems to have concluded that it's sufficient for the geolocation api","msgtype":"m.text"},"ts":1405376166000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you opted into gUM on website X on one day, on a different day you've opted into wakelock","msgtype":"m.text"},"ts":1405376202000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"now you've fallen asleep, wakelock and gUM are working simultaneously and you're being surveiled","msgtype":"m.text"},"ts":1405376228000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that's creepy as hell!","msgtype":"m.text"},"ts":1405376236000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"oh no!","msgtype":"m.text"},"ts":1405376241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"call the nsa!","msgtype":"m.text"},"ts":1405376251000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but worse, it's also killing your ipad battery cycles and causing you to pay another 200$ for a replacement battery sooner!","msgtype":"m.text"},"ts":1405376256000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"oh wait, they can already do this without any help from us","msgtype":"m.text"},"ts":1405376260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since they can run software on the baseband","msgtype":"m.text"},"ts":1405376265000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes they can","msgtype":"m.text"},"ts":1405376278000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"phew","msgtype":"m.text"},"ts":1405376284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"disaster averted","msgtype":"m.text"},"ts":1405376286000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not averted, it's just ignored :p","msgtype":"m.text"},"ts":1405376296000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"just because you already have a problem doesn't mean that making it easier for people to abuse it is any better","msgtype":"m.text"},"ts":1405376311000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if you don't trust the site to not surveil you, then don't opt-in to gUM","msgtype":"m.text"},"ts":1405376366000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's what the opt-in is _for_","msgtype":"m.text"},"ts":1405376371000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe you don't remember that you opted in","msgtype":"m.text"},"ts":1405376380000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"maybe you had a good reason to opt-in at one point, but no longer do","msgtype":"m.text"},"ts":1405376388000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"maybe you don't know that you don't have a good reason to suspect people on the internet because you're a 90 year old grandmother","msgtype":"m.text"},"ts":1405376401000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I mean really, who can say","msgtype":"m.text"},"ts":1405376409000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you could come up with lots of ways to abuse it, and you'd get like at least 3 out of every 12 people you tried it on","msgtype":"m.text"},"ts":1405376474000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"probably more","msgtype":"m.text"},"ts":1405376479000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i'm totally on board with the suggestion that we should make it clearer to users that a site has permissions to use your camera or whatever","msgtype":"m.text"},"ts":1405376483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that is not specific to the web, and not specific to wake locks.","msgtype":"m.text"},"ts":1405376503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe an app-store like system for the web would actually be a really good idea","msgtype":"m.text"},"ts":1405376526000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: Maybe rethink that, given the travesty of App Store permissions (particularly on Android, but only because I'm not familiar enough with iTunes to know how bad it is).","msgtype":"m.text"},"ts":1405378771000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no, I think it would be extraordinary if we could vette specific applications and grant them permissions because we know that they aren't acting abusinely. I'm not saying it would be even close to a simple thing to implement, and it would cost piles of money and will likely never happen","msgtype":"m.text"},"ts":1405378890000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but that's the problem isn't it","msgtype":"m.text"},"ts":1405378893000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"we let people do whatever they want and keep giving them more tools to do it with and the only protection we offer is completely half-assed","msgtype":"m.text"},"ts":1405378911000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"not just specific applications but specific hashes computed from the source code of an application","msgtype":"m.text"},"ts":1405379002000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Oh, so you're saying \"A system vaguely similar to an App Store, but actually quite different from every existing App Store in important ways\".","msgtype":"m.text"},"ts":1405379050000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, somewhat similar to the apple store","msgtype":"m.text"},"ts":1405379078000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"hm... making <dfn>s for terms that are defined in other specs actually turn into links that go to those other specs makes my dfn.js ui break...","msgtype":"m.text"},"ts":1405379136000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because you end up following the link rather than seeing the list os term usages...","msgtype":"m.text"},"ts":1405379153000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of","msgtype":"m.text"},"ts":1405379156000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Dont' do that, then.  Your local definitions will clash with the other spec's definitions, and will make Bikeshed unhappy. ;_;","msgtype":"m.text"},"ts":1405379203000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"don't worry, they're easily detectable. Just ignore any <dfn> containing an <a> (or any <dfn> with a data-x-href, if you use my source file as input)","msgtype":"m.text"},"ts":1405379256000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(When you do want a local definition of a concept that is more fully defined elsewhere, Bikeshed has a concept of \"unexported\" definitions, which are local-only and don't get picked up by Shepherd's database.)","msgtype":"m.text"},"ts":1405379259000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: what was the 3D printing place you were recommending?","msgtype":"m.text"},"ts":1405379273000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: No can do, all <dfn>s have an <a> in Bikeshedding specs (for the permalink).","msgtype":"m.text"},"ts":1405379285000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: You could put a data-noexport attribute on the definitions you don't want to show up globally, if you wanna be Bikeshed-friendly.","msgtype":"m.text"},"ts":1405379326000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i'm sure we'll figure out some solution","msgtype":"m.text"},"ts":1405379338000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: i'm first trying to get something good for HTML before I worry about other specs :-)","msgtype":"m.text"},"ts":1405379357000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sure, but I wanna make sure you don't do a lot of work, and then would have to do *more* work afterwards to make it play well with others. ^_^","msgtype":"m.text"},"ts":1405379383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So just in case it's something you'd have to do to your source file, knowing about it earlier rather than later is better.","msgtype":"m.text"},"ts":1405379407000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For example, typing your dfns would be *wonderful*.","msgtype":"m.text"},"ts":1405379433000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Particularly your WebIDL ones.)","msgtype":"m.text"},"ts":1405379457000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"my medium-term plan with webidl is to not have to type any, but just to have my pipeline parse the webidl directly.","msgtype":"m.text"},"ts":1405379494000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway. the HTML spec has a section on dependencies, where all the terms the spec uses from other specs are defined","msgtype":"m.text"},"ts":1405379559000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so what i'm doing is just using this as a way to also declare internally what all the terms should actually point to","msgtype":"m.text"},"ts":1405379573000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That also works, yes.  That's what Bikeshed does.","msgtype":"m.text"},"ts":1405379611000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(re: parsing webidl automatically)","msgtype":"m.text"},"ts":1405379622000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So if you just add a data-noexport attribute to all of those definitions (because they're not \"real\" definitions, just local ones you're using for spec-specific purposes), that would be great.","msgtype":"m.text"},"ts":1405379664000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Then I won't have to constantly disambiguate HTML definitions from everything else. ^_^","msgtype":"m.text"},"ts":1405379682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"file a bug to remind me (whatwg.org/newbug, whiteboard \"tools\")","msgtype":"m.text"},"ts":1405379705000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What's the whiteboard?","msgtype":"m.text"},"ts":1405379792000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Don't see that field anywhere.","msgtype":"m.text"},"ts":1405379796000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you have to edit it after filing the bug","msgtype":"m.text"},"ts":1405379863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for some reason","msgtype":"m.text"},"ts":1405379864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k, done","msgtype":"m.text"},"ts":1405379922000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: I added the geolocation + wake lock abuse case to the document (haven't pushed yet).","msgtype":"m.text"},"ts":1405380548000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"TabAtkins: thanks","msgtype":"m.text"},"ts":1405380588000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"-there's also an early version of \"Referer\". It's called \"Referree\" [sic]. In a file from the very next day, it's called \"Referee\" [sic].","msgtype":"m.text"},"ts":1405380906000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-webhistory/2014Jul/0002.html","msgtype":"m.text"},"ts":1405380910000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"why is the second marked [sic]?","msgtype":"m.text"},"ts":1405381071000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh because that word doesn't make sense there","msgtype":"m.text"},"ts":1405381084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nevermind","msgtype":"m.text"},"ts":1405381085000,"senderName":"Hixie","senderId":"Hixie@irc"}
]