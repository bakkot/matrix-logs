[
{"content":{"body":"\"XML Interfaces to the Internet of Things with XForms\"","msgtype":"m.text"},"ts":1431606616000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Why you gotta tease us like that?","msgtype":"m.text"},"ts":1431609977000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Ms2ger just knows what you like to hear first thing in the mornin'","msgtype":"m.text"},"ts":1431610097000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, he's not wrong.","msgtype":"m.text"},"ts":1431610142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"He's sufficiently advanced AI, of course he's not wrong.","msgtype":"m.text"},"ts":1431610241000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I've seen him, and I don't think it was a skinvelope (unlike bz's remote-operated body).","msgtype":"m.text"},"ts":1431610273000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Wait, is bz or bzed bzbarsky?","msgtype":"m.text"},"ts":1431610293000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bz","msgtype":"m.text"},"ts":1431610344000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Pretty sure people having \"seen\" either Ms2ger or bz is just a conspiracy to make people believe they're human.","msgtype":"m.text"},"ts":1431610435000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger doesn't even have a real name!","msgtype":"m.text"},"ts":1431610444000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hey guys, I asked this a few days back but I don't think a lot of people were around... what do you think of exposing the dirty flag on input fields? Is that something that's been discussed before?","msgtype":"m.text"},"ts":1431610494000,"senderName":"BigPants","senderId":"BigPants@irc"},
{"content":{"body":"Maybe there's a better place to ask?","msgtype":"m.text"},"ts":1431610590000,"senderName":"BigPants","senderId":"BigPants@irc"},
{"content":{"body":"BigPants: here and the mailing list are probably the best places; I don't think it's been discussed before, but it needs though as to whether there are any subtle implications of doing so. What's the use-case for exposing it?","msgtype":"m.text"},"ts":1431610762000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: It would be a lot easier to make use of something like that than to hack together your own dirty checking in javascript (or use a library that does it for you) if you want to submit only the fields in a form that's been changed. Big forms where users change only minor details benefit quite a lot from only sending dirty fields","msgtype":"m.text"},"ts":1431611152000,"senderName":"BigPants","senderId":"BigPants@irc"},
{"content":{"body":"Domenic: ping","msgtype":"m.text"},"ts":1431614693000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: is there a solution for the chained resolved promises causing excessive memory pressure?","msgtype":"m.text"},"ts":1431614970000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I am now seeing about a 10% penalty promise returning read() vs sync read()... but I changed my test to chain promises together","msgtype":"m.text"},"ts":1431615012000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: actually, I added an unchained path to compare, and I see the 10% penalty regardless... hmm","msgtype":"m.text"},"ts":1431615350000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: one of the Bugzilla patches you linked me to was a mitigation, I am pretty sure ... Chrome also has a mitigation I believe, although a less spec-compliant one :-/","msgtype":"m.text"},"ts":1431616607000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: well, it seems unrelated to the chaining... let me push the code to repo and let you look at it","msgtype":"m.text"},"ts":1431616636000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: sample output I am seeing on my desktop here: https://pastebin.mozilla.org/8833452","msgtype":"m.text"},"ts":1431616673000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"async cases have lower throughput and about a 10ms latency penalty there","msgtype":"m.text"},"ts":1431616693000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I haven't tried with bluebird yet","msgtype":"m.text"},"ts":1431616697000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: look at the various Pump classes in here and tell me if I'm doing something stupid:  https://github.com/wanderview/streams-time-echo/blob/master/client.js","msgtype":"m.text"},"ts":1431616776000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Probably doesn't matter much but while (chunk) isn't exactly reflective of how the sync API would have to work... it'd have to be a while (self._parser.state === \"readable\"), with state being a getter","msgtype":"m.text"},"ts":1431616890000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Similarly async is using falsy/truthy chunks instead of { value, done }","msgtype":"m.text"},"ts":1431617011000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"although actually async isn't testing truthiness of the chunks; the asymmetry there is confusing to me.","msgtype":"m.text"},"ts":1431617054000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the truthiness test was just for backpressure signal... which the async gets via the promise...","msgtype":"m.text"},"ts":1431617111000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"executeTestList is broken, you can't return from inside `new Promise`","msgtype":"m.text"},"ts":1431617114000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: ah ok I thought it was done-ness signal","msgtype":"m.text"},"ts":1431617135000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: but you need to allow falsy chunks anyway, so you need a separate .state property","msgtype":"m.text"},"ts":1431617145000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'm using the web socket state for close signal","msgtype":"m.text"},"ts":1431617147000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm, let me fix executeTestList","msgtype":"m.text"},"ts":1431617199000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"not sure why it's promise-returning at all honestly","msgtype":"m.text"},"ts":1431617220000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yea, it doesn't need to be","msgtype":"m.text"},"ts":1431617356000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I seem to get bimodal results... I wonder if the lower mode is just hitting that pathological stream chunking I saw before","msgtype":"m.text"},"ts":1431617457000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: ok... things seem more equivalent now on my desktop... let me test on mobile","msgtype":"m.text"},"ts":1431617849000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I assume there is a canary for android?","msgtype":"m.text"},"ts":1431617857000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: no, but there's a dev, which will be just a week behind at most","msgtype":"m.text"},"ts":1431617914000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: got it... I'll have to sort out the IPs on my network to connect my mobile to the test server","msgtype":"m.text"},"ts":1431617982000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Can you push the code changes?","msgtype":"m.text"},"ts":1431617997000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: sure... I only fixed the executeTestList() thing","msgtype":"m.text"},"ts":1431618010000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ah OK","msgtype":"m.text"},"ts":1431618017000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is that what changed the results you think?","msgtype":"m.text"},"ts":1431618034000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't know... its possible","msgtype":"m.text"},"ts":1431618045000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it seems very sensitive","msgtype":"m.text"},"ts":1431618063000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I also added a bluebird.html","msgtype":"m.text"},"ts":1431618069000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Oh nice","msgtype":"m.text"},"ts":1431618082000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: but even with native promises I don't see much difference: https://pastebin.mozilla.org/8833455","msgtype":"m.text"},"ts":1431618101000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I'm going to re-run the tests on a more idle machine without a VM, etc... could be noise from other stuff on my desktop","msgtype":"m.text"},"ts":1431618136000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"will do all that after lunch","msgtype":"m.text"},"ts":1431618141000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: one difference is now I'm running with devtools closed... maybe it was enabling some debugging in promises that was penalizing things","msgtype":"m.text"},"ts":1431618185000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Oh yeah it probably was","msgtype":"m.text"},"ts":1431618221000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't know the details but I do know devtools has a lot of hooks into promises and I assume that they're smart enough to turn those off when devtools is closed","msgtype":"m.text"},"ts":1431618248000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or at least some of them","msgtype":"m.text"},"ts":1431618256000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So node.deleteData(2, -1) crashes Servo \\o/","msgtype":"m.text"},"ts":1431619358000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Which kind of crashes?","msgtype":"m.text"},"ts":1431619387000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Overflow","msgtype":"m.text"},"ts":1431620696000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1431620703000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which is all hardware limitations, clearly :)","msgtype":"m.text"},"ts":1431620715000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I was just checkin it wasn't something more untoward :)","msgtype":"m.text"},"ts":1431620737000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: what overflows? the -1?","msgtype":"m.text"},"ts":1431621296000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh you're talking about this in #servo","msgtype":"m.text"},"ts":1431621330000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1431621333000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"-1 is wrapped to 2**32-1, and then the sum overflows","msgtype":"m.text"},"ts":1431621352000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"dglazkov: sorry, forgot to answer to custom elements doodle","msgtype":"m.text"},"ts":1431634320000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(in theory july 21 should be ok)","msgtype":"m.text"},"ts":1431634339000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: \\o/","msgtype":"m.text"},"ts":1431634849000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Domenic: I think whatever bug was causing huge memory issues in chrome with your streams demo is causing similar havoc with my time echo benchmark... it basically blows up with an OOM on my mac laptop","msgtype":"m.text"},"ts":1431634892000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"runs fine on my windows desktop","msgtype":"m.text"},"ts":1431634899000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"O_o","msgtype":"m.text"},"ts":1431635084000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You're not even using Chrome streams, right?","msgtype":"m.text"},"ts":1431635109000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Just web sockets?","msgtype":"m.text"},"ts":1431635115000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: remember the chained promise bug where they said it only blew up memory on mac... I seem to be getting the same problem","msgtype":"m.text"},"ts":1431635119000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I ... I guess ....","msgtype":"m.text"},"ts":1431635134000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I am using chrome streams to read from the Response... I only use web sockets to upload back to the node.js server","msgtype":"m.text"},"ts":1431635139000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or I am doing something stupid","msgtype":"m.text"},"ts":1431635156000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ah OK I missed that","msgtype":"m.text"},"ts":1431635164000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe ... maybe the GC is bad on mac?","msgtype":"m.text"},"ts":1431635176000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't know... I'm going to skip mac and just try my android device","msgtype":"m.text"},"ts":1431635190000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Or the streams I guess... so strange.","msgtype":"m.text"},"ts":1431635190000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it could also be a bug in my server... what I ctrl-z the server and memory keeps climbing in chrome... its very weird","msgtype":"m.text"},"ts":1431635214000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"sampling the process shows a bunch of string operations being done","msgtype":"m.text"},"ts":1431635225000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I don't understand what could be different on mac... GC and stuff seems like it should be the same... maybe some IPC problem specific to streams and mac?","msgtype":"m.text"},"ts":1431635454000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah ... Tokyo should be waking up in a few hours... I guess this might be worth filing a crbug for?","msgtype":"m.text"},"ts":1431635496000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"String operations ... strange ...","msgtype":"m.text"},"ts":1431635502000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I didn't look at the sample long...","msgtype":"m.text"},"ts":1431635525000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: Are transform streams to the point where we should discuss how to bolt them onto TextEncoder/Decoder ?","msgtype":"m.text"},"ts":1431635674000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: no :(. they are still languishing somewhat unloved. I gotta kick the tires on writable and transform...","msgtype":"m.text"},"ts":1431635730000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I should try to find some Chrome feature that requires writable so we can whip them into shape","msgtype":"m.text"},"ts":1431635742000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: no worries; ping me if the status changes (and/or I'll continue to low frequency poll)","msgtype":"m.text"},"ts":1431635878000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"for sure","msgtype":"m.text"},"ts":1431636115000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I see a penalty for promise read() on my nexus5 with native promises... but its pretty equivalent with bluebird","msgtype":"m.text"},"ts":1431637853000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"its hard to make this benchmark reliable with the body stream without back pressure... I have to implement my own back pressure mechanism, but I risk deadlock then if chrome decides to buffer things right as I'm doing backpressure","msgtype":"m.text"},"ts":1431637977000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"gah.. or not...  these tests are so sensitive","msgtype":"m.text"},"ts":1431638710000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I ran some more tests and it looks like a 5% penalty for promise read vs sync read... I'll post data in the github issue later... I'm not sure if that is a big enough difference to worry about","msgtype":"m.text"},"ts":1431639220000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"runs to dinner...","msgtype":"m.emote"},"ts":1431639230000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: thanks for all the work!!","msgtype":"m.text"},"ts":1431639341000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh... and that penalty only shows for mobile... desktop is fast enough you can't see it with this test","msgtype":"m.text"},"ts":1431639356000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"The IndexedDB spec is so old it cites \"geocities.com\" as an example. (Will definitely leave that in for v2 because nostalgia)","msgtype":"m.text"},"ts":1431642494000,"senderName":"jsbell","senderId":"jsbell@irc"}
]