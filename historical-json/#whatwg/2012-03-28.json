[
{"content":{"body":"Hixie: here","msgtype":"m.text"},"ts":1332894156000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: Lunch sometime next week with Hixie and me (and tantek)?","msgtype":"m.text"},"ts":1332894184000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1332894191000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"To talk about CSS and <dialog>/fullscreen?","msgtype":"m.text"},"ts":1332894194000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Kk, choose a date/place.","msgtype":"m.text"},"ts":1332894200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i can head up to google, or i could host you guys here","msgtype":"m.text"},"ts":1332894207000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"sounds like a good plan.","msgtype":"m.text"},"ts":1332894207000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(i could also head to moz, of course)","msgtype":"m.text"},"ts":1332894227000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I have a feeling I know where Hixie wants to eat lunch :)","msgtype":"m.text"},"ts":1332894378000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tuesday 3 april & thursday 5 april work for me","msgtype":"m.text"},"ts":1332894416000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Let's do Tuesday then.","msgtype":"m.text"},"ts":1332894428000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i guess monday would work as well for that matter","msgtype":"m.text"},"ts":1332894429000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1332894431000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"noon? any particular google cafeteria?","msgtype":"m.text"},"ts":1332894556000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Dont' care that much.  Gotta get to my bus now, though, so I can't do any more planning tonight.","msgtype":"m.text"},"ts":1332894580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1332894592000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"is already on my bus","msgtype":"m.emote"},"ts":1332894601000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"why don't people understand the little-endian typed arrays issue? it seems so obvious","msgtype":"m.text"},"ts":1332903594000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"seems like just kenneth who's digging in his heels","msgtype":"m.text"},"ts":1332904003000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"roc: you mean the way that we've basically made the web little-endian?","msgtype":"m.text"},"ts":1332904053000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1332904063000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i pointed that out literally years ago","msgtype":"m.text"},"ts":1332904073000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nobody seemed to care then either","msgtype":"m.text"},"ts":1332904078000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't care","msgtype":"m.text"},"ts":1332904087000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"IMO, if he refuses to budge on this, someone should fork the typed array spec and fix it; this is too important to let it be broken by an inexperienced developer","msgtype":"m.text"},"ts":1332904090000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not caring is the correct response.","msgtype":"m.text"},"ts":1332904094000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"seems kinda short-sighted but certainly making it little-endian explicitly would be better than making it machine-endian specific","msgtype":"m.text"},"ts":1332904133000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's what's going to happen anyway (if a real big-endian browser ever actually exists, which may never happen)","msgtype":"m.text"},"ts":1332904157000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(i don't know what else we could do; asking authors to check the endianness and byte swap themselves is a non-starter0","msgtype":"m.text"},"ts":1332904166000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/0/)/","msgtype":"m.text"},"ts":1332904171000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(\"real\" meaning a nontrivial number of actual users use it, and it actually has modern API support, so this issue would have to be dealt with)","msgtype":"m.text"},"ts":1332904186000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if someone wants to push a big-endian architecture in the future, they need to give it byte-swapping loads and stores","msgtype":"m.text"},"ts":1332904247000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that's not hard at all, and would make the performance argument irrelevant as far as I can tell","msgtype":"m.text"},"ts":1332904268000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"would the JS have to be different?","msgtype":"m.text"},"ts":1332904289000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the performance argument is laughable","msgtype":"m.text"},"ts":1332904307000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: no, I think a big-endian machine could emulate little-endian behavior as far as JS could observe, quite easily","msgtype":"m.text"},"ts":1332904337000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it goes like this: \"every web developer should jump hoops for an optimization on a system that doesn't exist, may never exist, and which may not be a performance issue even if it ever does exist\"","msgtype":"m.text"},"ts":1332904354000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1332904379000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Hixie: he's just saying (I think) that views would always be little-endian, hiding the big-endianness (as it should be)","msgtype":"m.text"},"ts":1332904417000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"of course, even if you could persuade them to jump through those hoops, they'll probably get it wrong by accident anyway and will never know","msgtype":"m.text"},"ts":1332904422000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"the short-term problem is that we need big-endian views as well","msgtype":"m.text"},"ts":1332904425000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and this make-believe of pretending views are native-endian means it's hard to get them","msgtype":"m.text"},"ts":1332904457000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so long as we're not exposing the machine's actual endianness, i don't really care what the api is","msgtype":"m.text"},"ts":1332904458000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"native-endian just isn't workable","msgtype":"m.text"},"ts":1332904468000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we all agree :)","msgtype":"m.text"},"ts":1332904472000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"since there's no real big endian cpus out there, though, it doesn't much matter what the spec says","msgtype":"m.text"},"ts":1332904485000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just the typed array editor who's (literally) refusing to even discuss it","msgtype":"m.text"},"ts":1332904497000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it'll be little-endian de facto","msgtype":"m.text"},"ts":1332904504000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i know :)","msgtype":"m.text"},"ts":1332904508000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so why do you think the spec needs forking?","msgtype":"m.text"},"ts":1332904519000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"1: having a spec that's wrong is bad, and needs to be fixed, and 2: we need big-endian views, not just (de-facto) little endian views","msgtype":"m.text"},"ts":1332904534000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but since the editor is pretending views aren't little endian, there's no way to get him to add big-endian oens","msgtype":"m.text"},"ts":1332904625000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also ones","msgtype":"m.text"},"ts":1332904628000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I will attempt to reason with him","msgtype":"m.text"},"ts":1332904669000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i don't think i can write a diplomatic mail at the moment since his reply irritated me so much (\"this won't be changed, no matter what arguments anyone gives\"--really?), so I'm not going to reply tonight","msgtype":"m.text"},"ts":1332904700000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"just implement what you want, the spec will follow","msgtype":"m.text"},"ts":1332904735000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i suppose for now I'll just suggest in the encoding API thread that it just make up its own big-endian view type; that's lame, though","msgtype":"m.text"},"ts":1332904804000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie, Are you busy?","msgtype":"m.text"},"ts":1332905280000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"have to be offline every few minutes for a bit but if you don't mind occasional latency i'm around","msgtype":"m.text"},"ts":1332905300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Did you ever have a chance to look at this: https://www.w3.org/Bugs/Public/show_bug.cgi?id=11517 I replied to it a while back. not sure if the bug tracker sends out emails for replies to resolved bugs. I know it kind of seems unintuitive bug I think canvas could do well to implement simpler rendering methods that are capable of being more heavily optimized (that is no transforms). This goes along with the stencil operation bu","msgtype":"m.text"},"ts":1332905307000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"g. (I was going to post, but I accidently deleted a post I wrote a while ago that was basically using createImageData to make a binary stencil then allowing drawImageData to set it allowing for extremely optimized rendering). This original one: https://www.w3.org/Bugs/Public/show_bug.cgi?id=8396","msgtype":"m.text"},"ts":1332905307000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"I took that as a yes. :)","msgtype":"m.text"},"ts":1332905316000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"i generally go through all the feedback (1000s of e-mails and 100s of bugs) on a first-come-first-served basis","msgtype":"m.text"},"ts":1332905393000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i'm sure i'll get to the bug in time","msgtype":"m.text"},"ts":1332905399000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looking at it quickly now i see no clear indication of what you want me to do though","msgtype":"m.text"},"ts":1332905411000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah okay. No rush.","msgtype":"m.text"},"ts":1332905414000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"wonders if any browser vendor would consider adding an option to ignore autocomplete=off ","msgtype":"m.emote"},"ts":1332905582000,"senderName":"variable","senderId":"variable@irc"},
{"content":{"body":"Sirisian: if you want me to do something you'll have to make a clear statement in the spec, or when i do get to it i'll probably just mark it needsinfo :-)","msgtype":"m.text"},"ts":1332906118000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm thinking","msgtype":"m.text"},"ts":1332906130000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"drawImageData would just render without transforms taking in a raw ImageData object and only reference binary alpha (no complex blending is possible) and can optionally reference a set stencil buffer (another ImageData object). Then if you want to use a stencil you'd create it like: var stencil = context.createImageData(width, height); An addition I'd like is the ability to define the number of channels, but it's not necessar","msgtype":"m.text"},"ts":1332906433000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"y. That would look like createImageData(width, height, channels) so a person can specify the number of channels to create. Same for getImageData(x, y, width, height, channels) where channels would be an array to select channels like [0] to create a 1 channel ImageData of just the red channel. Then you can bind a stencil via context.stencil = stencil; Then you can render using drawImage(ImageData) which the stencil would only","msgtype":"m.text"},"ts":1332906434000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"work with. When drawing it would only use the first channel of the ImageData rendering the pixel only if the stencil isn't 0 at that place. (Context2D's Clip would still exist for everything else). This allow implementors to specialize the rendering code for with and without a stencil.","msgtype":"m.text"},"ts":1332906434000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"I actually typed this all out before like a few weeks ago and closed my browser at work and forgot about finishing it.","msgtype":"m.text"},"ts":1332906469000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"i don't understand","msgtype":"m.text"},"ts":1332906725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the use case?","msgtype":"m.text"},"ts":1332906727000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Mostly so you don't have to incur the cost of rendering to canvas objects when manipulating imageData then rendering it back to a form to get simple alpha blending. The stencil is just an optimized clip algorithm that would be useful when rendering textures in say a canvas UI.","msgtype":"m.text"},"ts":1332906895000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"s/form/canvas","msgtype":"m.text"},"ts":1332906922000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"I might have to think about it some more. I think I wrote something down a while ago that made me rethink the binary alpha blending.","msgtype":"m.text"},"ts":1332907011000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"that's not a use case, that's a solution","msgtype":"m.text"},"ts":1332907038000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or an optimisation","msgtype":"m.text"},"ts":1332907042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or something","msgtype":"m.text"},"ts":1332907044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a use case is something like \"i want a platform game\"","msgtype":"m.text"},"ts":1332907051000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and then you slowly work up to the actual concrete problem you've run into that canvas can't do yet)","msgtype":"m.text"},"ts":1332907137000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah I'll create some use cases and post a more thorough explanation tomorrow. Thanks for the feedback.","msgtype":"m.text"},"ts":1332907630000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"If I don't argue myself out of requiring it :P","msgtype":"m.text"},"ts":1332907659000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1332907688000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do i _create_ an svg matrix?","msgtype":"m.text"},"ts":1332908725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SVGMatrix, that is","msgtype":"m.text"},"ts":1332908730000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, you can't create a standalone SVGMatrix","msgtype":"m.text"},"ts":1332908734000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"...oh.","msgtype":"m.text"},"ts":1332908738000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they are only used as part of reflecting attributes","msgtype":"m.text"},"ts":1332908740000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"they will gain a constructor in SVG2","msgtype":"m.text"},"ts":1332908749000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well that's gonna put a crimp in my comprehensive use of it in canvas. :-P","msgtype":"m.text"},"ts":1332908754000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the constructor look like in svg2?","msgtype":"m.text"},"ts":1332908769000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not there yet, but it will at the very least include [Constructor()]","msgtype":"m.text"},"ts":1332908790000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"looks like all the methods on SVGMatrix return an SVGMatrix","msgtype":"m.text"},"ts":1332908798000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and probably one that takes components","msgtype":"m.text"},"ts":1332908800000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1332908820000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"wait","msgtype":"m.text"},"ts":1332908820000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I misremembered","msgtype":"m.text"},"ts":1332908822000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the way you create an SVGMatrix *currently* is: anSVGSVGElement.createSVGMatrix()","msgtype":"m.text"},"ts":1332908854000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i.e. you need an <svg> DOM object around","msgtype":"m.text"},"ts":1332908871000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1332908882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of course that sucks, and that's why we'll have constructors soon","msgtype":"m.text"},"ts":1332908887000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"seems a bit wasteful the way that if you want to create a matrix that skews, rotates, and scales, you need to create a whole bunch of temporaries","msgtype":"m.text"},"ts":1332908965000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think there are pros and cons for both designs -- certainly would be nice to be able to modify the existing matrix tho","msgtype":"m.text"},"ts":1332909059000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"both are pretty equally common in matrix apis, in my experience","msgtype":"m.text"},"ts":1332909073000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I think dino's proposed matrix interface had methods that modify the existing matrix","msgtype":"m.text"},"ts":1332909075000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"with the return-a-new-matrix looking prettier and the in-place approach usually being faster","msgtype":"m.text"},"ts":1332909092000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(whether it is in JS, on modern archs, i'm not sure)","msgtype":"m.text"},"ts":1332909104000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i guess mobile means the ubiquity of \"modern archs\" are set back by a good number of years...","msgtype":"m.text"},"ts":1332909433000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yay! undomanager is finally on w3c repository :D http://dvcs.w3.org/hg/undomanager/raw-file/tip/undomanager.html","msgtype":"m.text"},"ts":1332910162000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"publish an fsa :-)","msgtype":"m.text"},"ts":1332910189000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"updates the date","msgtype":"m.emote"},"ts":1332910254000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: so does the undomanager spec define how many managers per page?","msgtype":"m.text"},"ts":1332911361000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it's supposed to be per document.","msgtype":"m.text"},"ts":1332911415000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: but i'm still not sure.","msgtype":"m.text"},"ts":1332911431000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: i'd have to talk with enrica about it at the contributor's meeting.","msgtype":"m.text"},"ts":1332911438000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: given that firefox and opera do this already, it might be okay for us to change our behavior","msgtype":"m.text"},"ts":1332911463000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: also from our last discussion, having one undo manager per editable field matches platform conventions","msgtype":"m.text"},"ts":1332911478000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"on which platforms?","msgtype":"m.text"},"ts":1332911493000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Given this is a new API, I would prefer doing it right ;)","msgtype":"m.text"},"ts":1332911494000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: of course, you can also define undoScope attribute to define new undo manager","msgtype":"m.text"},"ts":1332911497000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: yes, that's why i haven't finalized it or started implementing it","msgtype":"m.text"},"ts":1332911518000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: editing is a mess","msgtype":"m.text"},"ts":1332911523000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: i don't want to create another mess :)","msgtype":"m.text"},"ts":1332911529000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it is","msgtype":"m.text"},"ts":1332911529000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: both Windows and Mac from what we could tell","msgtype":"m.text"},"ts":1332911542000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"looks like the spec isn't too long... I'll try to look at is asap","msgtype":"m.text"},"ts":1332911556000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah, I tried to be as brief as possible.","msgtype":"m.text"},"ts":1332911581000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: don't forget there are many other platforms that may act in weird ways... it's fine to optimise for windows and mac, but let's not make the other platforms impossible","msgtype":"m.text"},"ts":1332911585000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: as an implementor, i hate reading long specs","msgtype":"m.text"},"ts":1332911592000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: sure, but neither iOS or Android seem to support undos","msgtype":"m.text"},"ts":1332911608000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: what are other relevant platforms?","msgtype":"m.text"},"ts":1332911635000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"linux","msgtype":"m.text"},"ts":1332911653000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"some of the more esoteric platforms i was thinking of are those based on WordStar editing conventions, and Emacs. though in both cases i think they also do per-field undo.","msgtype":"m.text"},"ts":1332911656000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: i don't think emacs is a good example to follow here.","msgtype":"m.text"},"ts":1332911679000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it is if you're writing a web browser in emacs","msgtype":"m.text"},"ts":1332911689000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my point is \"platform conventions\" means the platform the browser is in, not \"mac+windows\"","msgtype":"m.text"},"ts":1332911700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sure.","msgtype":"m.text"},"ts":1332911708000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"which today might usually be mac and windows, but the whole point of being platform agnostic is that we don't hardcode that kind of thing in :-)","msgtype":"m.text"},"ts":1332911724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: but I don't think it makes sense for me to over-generalize the spec","msgtype":"m.text"},"ts":1332911731000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"untile someone complains","msgtype":"m.text"},"ts":1332911736000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it'll be too late if you wait 20 years for a new platform to come along and someone to complain","msgtype":"m.text"},"ts":1332911753000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: i'm fine with making it platform dependent as well","msgtype":"m.text"},"ts":1332911766000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"the web isn't supposed to be platform dependant","msgtype":"m.text"},"ts":1332911780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: but then there will be script-visible behavior differences","msgtype":"m.text"},"ts":1332911782000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: huh? i don't understand your proposal then","msgtype":"m.text"},"ts":1332911793000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i'm saying the api should be designed such that it abstracts out platform differences and there are no script-visible differences regardless of what the platform's conventions are","msgtype":"m.text"},"ts":1332911822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rniwa: I didn't see Hixie to propose anything ;)","msgtype":"m.text"},"ts":1332911822000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: we can either specify one behavior or make it platform dependent and define what behaviors are allowed","msgtype":"m.text"},"ts":1332911827000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: in this case, it's impossible.","msgtype":"m.text"},"ts":1332911839000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"or at least, not any script-visible differences that can be distinguished from the user doing something","msgtype":"m.text"},"ts":1332911841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rniwa: things that are impossible just take longer :-)","msgtype":"m.text"},"ts":1332911848000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well but it is impossible in this case.","msgtype":"m.text"},"ts":1332911866000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: i don't want to explain all the details since i've already explained it once to smaug____ and Aryeh other day","msgtype":"m.text"},"ts":1332911886000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but there are many existing APIs that already expose this particular behavior.","msgtype":"m.text"},"ts":1332911902000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"and to ehsan ...","msgtype":"m.text"},"ts":1332911903000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: right","msgtype":"m.text"},"ts":1332911906000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"there's no point for us to add another layer of abstraction here since it's already visible to the scripts.","msgtype":"m.text"},"ts":1332911944000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but we can make the platform better now that we're adding a new API","msgtype":"m.text"},"ts":1332911968000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: we can specify it explicitly","msgtype":"m.text"},"ts":1332911984000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: or define possible behaviors that UAs can implement","msgtype":"m.text"},"ts":1332912003000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: the latter is harder but that'll let WebKit and Trident keep their current behavior","msgtype":"m.text"},"ts":1332912026000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: draft looks good -- I wouldn't worry much about adding more formatting to it at this point","msgtype":"m.text"},"ts":1332912029000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok.","msgtype":"m.text"},"ts":1332912036000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: fsa?","msgtype":"m.text"},"ts":1332912055000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"final specification agreement","msgtype":"m.text"},"ts":1332912062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1332912066000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the step in a CG that causes people to firmly commit their patents","msgtype":"m.text"},"ts":1332912079000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1332912093000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: I just made date changes to the spec boilerplate","msgtype":"m.text"},"ts":1332912395000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so if you not otherwise planning to commit any more changes today, please push to W3C so that the W3C HTML and microdata specs get updated","msgtype":"m.text"},"ts":1332912425000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if you are going to be committing again later today, then I'll just wait","msgtype":"m.text"},"ts":1332912495000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: roger, i can do that now","msgtype":"m.text"},"ts":1332912682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: done","msgtype":"m.text"},"ts":1332912784000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1332912789000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1332912804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, MikeSmith: speaking of which, I think our microdata APi implementation is near completion aside of vCard support and propertyNodeList","msgtype":"m.text"},"ts":1332913282000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(one of our contributors is working on propertyNodeList now)","msgtype":"m.text"},"ts":1332913292000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: excellent","msgtype":"m.text"},"ts":1332913344000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think I'm cc'ed on the microdata api bug","msgtype":"m.text"},"ts":1332913361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"vcard support?","msgtype":"m.text"},"ts":1332913374000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rniwa: you know about http://w3c-test.org/html/tests/submission/Opera/microdata/001.html right?","msgtype":"m.text"},"ts":1332913387000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: oh nice","msgtype":"m.text"},"ts":1332913400000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: has opera implemented vcard support as well?","msgtype":"m.text"},"ts":1332913424000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1332913434000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't know what implementing vcard support means ..","msgtype":"m.text"},"ts":1332913449000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"seems maybe Hixie doesn't either","msgtype":"m.text"},"ts":1332913467000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"with drag and drop?","msgtype":"m.text"},"ts":1332913477000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"huh maybe it has been removed from the spec :\\ ?","msgtype":"m.text"},"ts":1332913624000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: I swear the spec had mentioned vCard at some point","msgtype":"m.text"},"ts":1332913640000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah, it did","msgtype":"m.text"},"ts":1332913650000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: was it removed?","msgtype":"m.text"},"ts":1332913663000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it's in the whatwg spec","msgtype":"m.text"},"ts":1332913684000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.html#vcard","msgtype":"m.text"},"ts":1332913706000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1332913745000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.html#conversion-to-vcard","msgtype":"m.text"},"ts":1332913746000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: right, that.","msgtype":"m.text"},"ts":1332913763000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"the conversion algorithm is what's being implemented for that I guess","msgtype":"m.text"},"ts":1332913765000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1332913766000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i don't understand what a browser would do with that","msgtype":"m.text"},"ts":1332913767000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah, i don't think it's a high priority for us","msgtype":"m.text"},"ts":1332913784000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: in theory, we could be exposing that using some UI","msgtype":"m.text"},"ts":1332913791000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: but as far as I know, it's not high priority for us","msgtype":"m.text"},"ts":1332913800000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"so i've suggested not to proceed with that change for now","msgtype":"m.text"},"ts":1332913807000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"especially since adding code like that to webkit could be rather controvertial","msgtype":"m.text"},"ts":1332913824000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i don't understand what it would mean for you to implement it","msgtype":"m.text"},"ts":1332913879000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it isn't intended for browsers to implement, certainly :-)","msgtype":"m.text"},"ts":1332913887000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: meaning that we would implement API for embedders to use.","msgtype":"m.text"},"ts":1332913901000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: webkit is also used by mail clients, etc... :)","msgtype":"m.text"},"ts":1332913913000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"oh so not part of the web-exposed api?","msgtype":"m.text"},"ts":1332913916000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh, no.","msgtype":"m.text"},"ts":1332913922000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: i mean http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.html#conversion-to-vcard doesn't really define a web-facing API, does it?","msgtype":"m.text"},"ts":1332913936000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"checks the spec.","msgtype":"m.emote"},"ts":1332913965000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah i don't think it does","msgtype":"m.text"},"ts":1332913970000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hsivonen: I was wondering why you use document.write(\"\\u003C/script>\") etc. on https://hg.mozilla.org/integration/mozilla-inbound/rev/e82fc6f3bceb","msgtype":"m.text"},"ts":1332913973000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"rniwa: that's why i was confused :-)","msgtype":"m.text"},"ts":1332914005000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: \"\\u003Cscript>\" could be just \"<script>\" and \"\\u003C/script>\" could be just \"<\\/script>\", right? or did gecko at some point implement HTML4 ETAGO parsing?","msgtype":"m.text"},"ts":1332914026000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Hixie: yeah, sorry for the confusing. i should have not really mentioned :)","msgtype":"m.text"},"ts":1332914095000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"s/really //","msgtype":"m.text"},"ts":1332914102000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"too much wekbit-ism there :P","msgtype":"m.text"},"ts":1332914130000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"matjas: Escaping < as \\u003C is the single piece of advice that works for all problems.","msgtype":"m.text"},"ts":1332915174000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"matjas: even when I know I could use something else depending on context, I try to follow the advice I give to others","msgtype":"m.text"},"ts":1332915198000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: could you elaborate on that? what are the problems with using \"</script>\" and \"<\\/script>\"?","msgtype":"m.text"},"ts":1332915224000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"i thought i had it figured out at http://mths.be/etago :(","msgtype":"m.text"},"ts":1332915254000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: \"</script>\" would break out of the script","msgtype":"m.text"},"ts":1332915262000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"matjas: \"<\\/script>\" would work","msgtype":"m.text"},"ts":1332915275000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah… so why bother with the Unicode escapes?","msgtype":"m.text"},"ts":1332915293000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: so I could have used \"<\\/script>\" here","msgtype":"m.text"},"ts":1332915298000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"matjas: because they work for \"\\u003C!--\" too","msgtype":"m.text"},"ts":1332915314000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"aah, there it is. that’s what i was missing, thanks!","msgtype":"m.text"},"ts":1332915328000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: and I want to give advice that works for both </script> and <!--","msgtype":"m.text"},"ts":1332915340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"matjas: and JSLint hates \"<\\!--\"","msgtype":"m.text"},"ts":1332915351000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"btw, '\\x3c' == '\\u003c' if you wanna be concise ;)","msgtype":"m.text"},"ts":1332915373000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: so my canned advice is \"replace < with \\u003C and you are safe\"","msgtype":"m.text"},"ts":1332915386000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i advise \"don't do anything that requires strings involving <!-- or </script>\" :-P","msgtype":"m.text"},"ts":1332915420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jslint should just accept <\\!--","msgtype":"m.text"},"ts":1332919303000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"fixed calc() and rgb() etc for hashless and unitless quirks","msgtype":"m.emote"},"ts":1332919498000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: good luck getting JSLint changed to accept conforming JS","msgtype":"m.text"},"ts":1332920171000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"uh, maybe js*hint*","msgtype":"m.text"},"ts":1332920504000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"filed https://github.com/jshint/jshint/issues/499","msgtype":"m.text"},"ts":1332920979000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: -76 had the random bytes after the first \"request\", and that's what firefox and opera implemented","msgtype":"m.text"},"ts":1332922082000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1332922130000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i guess there was no evidence that the random bytes helped mitigate the attack completely","msgtype":"m.text"},"ts":1332922193000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"poor bz","msgtype":"m.text"},"ts":1332922208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1332922238000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"arguing with CP","msgtype":"m.text"},"ts":1332922256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1332922263000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hey, I started it","msgtype":"m.text"},"ts":1332922494000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yes you did; you invaded Poland","msgtype":"m.text"},"ts":1332922572000,"senderName":"tomasf","senderId":"tomasf@irc"},
{"content":{"body":"We were invited. Punch was served.","msgtype":"m.text"},"ts":1332922757000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"the whole typed array spec is kind of horrid","msgtype":"m.text"},"ts":1332923007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but then TC39 was way slow delivering something nice :(","msgtype":"m.text"},"ts":1332923021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if TC39 should move to something easier to add new language APIs to, but then remembers that there are deliberately few APIs in ES iteslf","msgtype":"m.emote"},"ts":1332923334000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh now it's harmful to speak the truth about aggregate Web developer behavior","msgtype":"m.text"},"ts":1332923396000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1332923431000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: see chuck@jumis on the whatwg list in the thread referred to above","msgtype":"m.text"},"ts":1332923454000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"good catch, zcorpan: https://github.com/jshint/jshint/issues/499","msgtype":"m.text"},"ts":1332923588000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"funny how everyone gave up on trying to get js_L_int fixed","msgtype":"m.text"},"ts":1332923623000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Some people just are too self-righteous…","msgtype":"m.text"},"ts":1332923670000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think paying attention to him is the real problem here","msgtype":"m.text"},"ts":1332923700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems like chuck@jumis is positing the existence of angel developers (per terminology defined in http://web.archive.org/web/20110501062035/http://diveintomark.org/archives/2004/08/16/specs )","msgtype":"m.text"},"ts":1332923721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"now there's an XSD approximation of XHTML5: http://xmlmind.com/xhtml5_resources.shtml","msgtype":"m.text"},"ts":1332924290000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"matjas: i now filed https://github.com/douglascrockford/JSLint/issues/114 as well, let's see how it goes","msgtype":"m.text"},"ts":1332924600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"prediction: Crockford will just close it without even commenting","msgtype":"m.text"},"ts":1332924643000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"hsivonen: the first paragraph inspires great confidence","msgtype":"m.text"},"ts":1332924686000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"translation to English: \"XMLmind has developed an initial version of an experimental, self-contained, W3C XML Schema for XHTML 5 which is implemented to the obsolete W3C Working Draft 25 May 2011 and has several limitations inherent to W3C XML Schema.\"","msgtype":"m.text"},"ts":1332924871000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: looking at that schema now","msgtype":"m.text"},"ts":1332925643000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"doesn't do case-insensitive matching of enumerated attribute values","msgtype":"m.text"},"ts":1332925851000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok so it needed another sentence, \"Hasn't been properly reviewed yet is probably riddled with bugs.\"","msgtype":"m.text"},"ts":1332926432000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: that schema is also using built-in xsd datatypes in ways that are not faithful to the spc","msgtype":"m.text"},"ts":1332926541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*spec","msgtype":"m.text"},"ts":1332926544000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So Android Market was rebranded to Google Play in order to cover movies and music, but in Europe only Android apps are available?","msgtype":"m.text"},"ts":1332926559000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: not surprising","msgtype":"m.text"},"ts":1332926567000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1332926571000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(about it not being surprising)","msgtype":"m.text"},"ts":1332926579000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: fwiw in Japan at least I think it does have movies and music","msgtype":"m.text"},"ts":1332926634000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though I've never bought any myself","msgtype":"m.text"},"ts":1332926640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and that part of the service is Japan-specific","msgtype":"m.text"},"ts":1332926667000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as in if there isn't a Japanese companies with rights to sell some movie in Japan, I'm sure it won't be in there","msgtype":"m.text"},"ts":1332926716000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm not sure how to proceed with the big5 mess","msgtype":"m.text"},"ts":1332927811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the datasets are quite far apart","msgtype":"m.text"},"ts":1332927818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: some guy in the netherlands was able to install some google play apps (music, books and movies) on one of his devices but not the other","msgtype":"m.text"},"ts":1332928133000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"hsivonen: http://www.androidworld.nl/113707/google-brengt-google-play-meer-onder-de-aandacht/","msgtype":"m.text"},"ts":1332928136000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"i'm more worried about what the heck is going on with that russian app; to think it's possible to cause that level of mayhem by using some application identifier...","msgtype":"m.text"},"ts":1332928241000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"out of the 19782 code points you can get, 6280 are distinct among the implementations","msgtype":"m.text"},"ts":1332928396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: does any of them match some official truth from unicode.org?","msgtype":"m.text"},"ts":1332928607000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"them being the data sets","msgtype":"m.text"},"ts":1332928617000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"charlvn: what's \"the russian app\"?","msgtype":"m.text"},"ts":1332928633000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"19782 - 6280 prolly does","msgtype":"m.text"},"ts":1332928662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm assuming the rest are proprietary extensions","msgtype":"m.text"},"ts":1332928670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just generated all possible \"valid\" lead/trail byte combinations and then let various browsers generate the code points for me","msgtype":"m.text"},"ts":1332928757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: http://www.theverge.com/2012/3/26/2904389/google-play-bug-russian-email-app-samsung-android-seven","msgtype":"m.text"},"ts":1332928777000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"ignores the TypedArray thread","msgtype":"m.emote"},"ts":1332928861000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: another issue of css vendor, that I came across a few days ago. Archived HTML. Be","msgtype":"m.text"},"ts":1332930600000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"* packages","msgtype":"m.text"},"ts":1332930600000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"* epub","msgtype":"m.text"},"ts":1332930600000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"* html emails","msgtype":"m.text"},"ts":1332930600000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"* saved files as…","msgtype":"m.text"},"ts":1332930600000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"all of these will never be updated.","msgtype":"m.text"},"ts":1332930601000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: there's probably quite a bit of -webkit-CSS in epubs by now...","msgtype":"m.text"},"ts":1332932167000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yup and in emails","msgtype":"m.text"},"ts":1332932220000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: mail client-generated emails or separately-authored advertising mail?","msgtype":"m.text"},"ts":1332932277000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"localStorage.clear();","msgtype":"m.text"},"ts":1332932726000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"w(\"foo\" in localStorage);","msgtype":"m.text"},"ts":1332932729000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: You will claim that that is always true in Opera.","msgtype":"m.text"},"ts":1332932760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1332932761000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Known.","msgtype":"m.text"},"ts":1332932763000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1332932769000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: mail client-generated email","msgtype":"m.text"},"ts":1332932780000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"gsnedders, you know, a non-public BTS isn't too bad if someone can verify the existence of bugs from code snippets :)","msgtype":"m.text"},"ts":1332932893000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"giving times for meetings in something other than UTC when it's across country boundaries is just annoying","msgtype":"m.text"},"ts":1332934026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"timezone boundaries*","msgtype":"m.text"},"ts":1332934306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: about big5, just pick one (e.g. IE)","msgtype":"m.text"},"ts":1332935091000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I guess I should have given some more data in that email","msgtype":"m.text"},"ts":1332935211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah i looked at the json file and didn't know what to do with it :-P","msgtype":"m.text"},"ts":1332935244000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Personally I think IE would be fine too, but it maps an awful lot to PUA, which some people dislike; then there's the Firefox Taiwan team which provided custom mappings for Firefox which is radically different from most browsers, but they say works better...","msgtype":"m.text"},"ts":1332935269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you have ideas on how to usually present the 6000 differences, they're welcome","msgtype":"m.text"},"ts":1332935335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe I should prefilter the lists and replace PUA with FFFD, and then count the differences again","msgtype":"m.text"},"ts":1332935378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if the firefox taiwan team have a mapping that works better, why not use that?","msgtype":"m.text"},"ts":1332935416000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Firefox does not have majority market share","msgtype":"m.text"},"ts":1332935499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.wantchinatimes.com/news-subclass-cnt.aspx?id=20110906000028&cid=1206 seems somewhat recent on that","msgtype":"m.text"},"ts":1332935550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which indicates it's mostly IE","msgtype":"m.text"},"ts":1332935556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and then Chrome","msgtype":"m.text"},"ts":1332935558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Chrome is pretty close to IE for big5","msgtype":"m.text"},"ts":1332935653000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"only 62 differences","msgtype":"m.text"},"ts":1332935657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but big5-hkscs has about 6000 differences","msgtype":"m.text"},"ts":1332935675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IE treats it as an alias for big5","msgtype":"m.text"},"ts":1332935687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"afaict","msgtype":"m.text"},"ts":1332935691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is, decoding as big5 and big5-hkscs gives identical arrays","msgtype":"m.text"},"ts":1332935715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how do the firefox taiwan team know that their mapping \"works better\"?","msgtype":"m.text"},"ts":1332935836000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not sure","msgtype":"m.text"},"ts":1332935898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=310299","msgtype":"m.text"},"ts":1332935898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i guess you should ask them :-)","msgtype":"m.text"},"ts":1332935932000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"basically Microsoft fucked Unicode","msgtype":"m.text"},"ts":1332936030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"by supporting HKSCS via a font, for some set of their users","msgtype":"m.text"},"ts":1332936049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so if you install that font, big5 Hong Hong pages will look fine, but big5 Taiwan pages won't","msgtype":"m.text"},"ts":1332936084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or some such","msgtype":"m.text"},"ts":1332936086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"all the other browsers have tried a different approach, but pages still declare the encoding incorrectly (big5 instead of big5-hkscs) so Hong Kong users either install extensions or manually override the encoding","msgtype":"m.text"},"ts":1332936143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this is what I read on the subject thus far","msgtype":"m.text"},"ts":1332936162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you can't win","msgtype":"m.text"},"ts":1332936193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"except by some expensive widespread evangelism maybe","msgtype":"m.text"},"ts":1332936216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so it seems to me that big5 and big5-hkscs should be aliases, but there should be two locale-specific encodings","msgtype":"m.text"},"ts":1332936236000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"one for hong kong and one for taiwan","msgtype":"m.text"},"ts":1332936255000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that still doesn't help anyone else trying to read either","msgtype":"m.text"},"ts":1332936347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1332936357000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but that might be an improvement over the current situation","msgtype":"m.text"},"ts":1332936358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what do the extensions do? just override the encoding to one or the other?","msgtype":"m.text"},"ts":1332936466000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://www.google.com/support/forum/p/Chrome/thread?tid=466c210af3fb6d08 suggests so","msgtype":"m.text"},"ts":1332936516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which basically means they want to change the underlying table","msgtype":"m.text"},"ts":1332936527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"PUA count:","msgtype":"m.text"},"ts":1332936653000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"opera-hk 0","msgtype":"m.text"},"ts":1332936654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"firefox 290","msgtype":"m.text"},"ts":1332936655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chrome 6217","msgtype":"m.text"},"ts":1332936655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"firefox-hk 2985","msgtype":"m.text"},"ts":1332936655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"opera 0","msgtype":"m.text"},"ts":1332936655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chrome-hk 664","msgtype":"m.text"},"ts":1332936655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"internetexplorer 6217","msgtype":"m.text"},"ts":1332936655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"now PUA, FFFD:","msgtype":"m.text"},"ts":1332936739000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"opera-hk 0 1199","msgtype":"m.text"},"ts":1332936740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"firefox 290 0","msgtype":"m.text"},"ts":1332936740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chrome 6217 62","msgtype":"m.text"},"ts":1332936740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"firefox-hk 2985 0","msgtype":"m.text"},"ts":1332936740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"opera 0 6008","msgtype":"m.text"},"ts":1332936740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chrome-hk 664 751","msgtype":"m.text"},"ts":1332936740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"internetexplorer 6217 0","msgtype":"m.text"},"ts":1332936741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems odd that totally different mappings in a non-market leader could work better. very odd. URL for the \"works better\" claim?","msgtype":"m.text"},"ts":1332936861000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"running a heuristic detector isn't reliable enough for people in hong kong or taiwan, i guess?","msgtype":"m.text"},"ts":1332936873000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: see the bugzilla URL above","msgtype":"m.text"},"ts":1332936883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the IE situation is basically that IE always uses the same mapping (to PUA) and then the font on Windows does the rest","msgtype":"m.text"},"ts":1332936934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems Chrome has better interoperability with IE there for at least big5","msgtype":"m.text"},"ts":1332936963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but the font being present is acting like an override to the \"other encoding\", right?","msgtype":"m.text"},"ts":1332936988000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"no, it just shows different glyphs","msgtype":"m.text"},"ts":1332937011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the byte -> code point mapping is the same","msgtype":"m.text"},"ts":1332937020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's like wingdings","msgtype":"m.text"},"ts":1332937024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a terrible solution","msgtype":"m.text"},"ts":1332937029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, i mean both taiwan users and hong kong users don't use the same font, right?","msgtype":"m.text"},"ts":1332937050000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1332937061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh. IE depends on PUA fonts. I guess then different mapping might indeed be better","msgtype":"m.text"},"ts":1332937079000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.microsoft.com/hk/hkscs/","msgtype":"m.text"},"ts":1332937110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: yeah dunno","msgtype":"m.text"},"ts":1332937239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: IE still has insanely high market share there, reportedly pages rarely use the big5-hkscs label, and Chrome has the same mapping as IE for big5 (apart from 62 out of ~20000 code points)","msgtype":"m.text"},"ts":1332937297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: it would probably be good to flag big5 usage in Validator.nu","msgtype":"m.text"},"ts":1332937677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess, yeah.","msgtype":"m.text"},"ts":1332938111000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: no idea what tables V.nu has...","msgtype":"m.text"},"ts":1332938118000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.internetsociety.org/20th/defining-moments-internet","msgtype":"m.text"},"ts":1332940979000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1332941173000,"senderName":"dinesh___","senderId":"dinesh___@irc"},
{"content":{"body":"i believe that there was no internet before \"www\", \"tcp/ip\", \"dns\", \"emails\", \"arpanet\", \"emails\" and perhaps even rfc","msgtype":"m.text"},"ts":1332941220000,"senderName":"dinesh___","senderId":"dinesh___@irc"},
{"content":{"body":"so perhaps search engines..","msgtype":"m.text"},"ts":1332941283000,"senderName":"dinesh___","senderId":"dinesh___@irc"},
{"content":{"body":"internet existed before www","msgtype":"m.text"},"ts":1332941332000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Before \"Arpanet\"!?","msgtype":"m.text"},"ts":1332941387000,"senderName":"mainerror","senderId":"mainerror@irc"},
{"content":{"body":"perhaps but that's not what most people think","msgtype":"m.text"},"ts":1332941392000,"senderName":"dinesh___","senderId":"dinesh___@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1332941394000,"senderName":"dinesh___","senderId":"dinesh___@irc"},
{"content":{"body":"what, are you saying \"internet\" and \"web\" aren't the same thing","msgtype":"m.text"},"ts":1332941461000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"crazytalk","msgtype":"m.text"},"ts":1332941464000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"seems rfc1 is dated 7 april 1969","msgtype":"m.text"},"ts":1332941482000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rfc1: \"hello? is anybody out there?\"","msgtype":"m.text"},"ts":1332941507000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"         [ This RFC was put into machine readable form for entry ]","msgtype":"m.text"},"ts":1332941586000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"         [ into the online RFC archives by Celeste Anderson 3/97 ]","msgtype":"m.text"},"ts":1332941586000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://tools.ietf.org/html/rfc1","msgtype":"m.text"},"ts":1332941676000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"not sure what it tells me, but I'm almost as old as the first RFC. dinosaur.","msgtype":"m.text"},"ts":1332941790000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"annevk: heavenly? yeah, maybe, dunno :-)","msgtype":"m.text"},"ts":1332942333000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"euh lol","msgtype":"m.text"},"ts":1332942437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmmmm. calc() needs to support unitless. argh","msgtype":"m.text"},"ts":1332942649000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1332942674000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i mean rect()","msgtype":"m.text"},"ts":1332942679000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"aah, The Economist finally caught up and disabled my online access","msgtype":"m.text"},"ts":1332943413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's only a GBP 30 difference or so between online and online + print","msgtype":"m.text"},"ts":1332943478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a little less for the first year; is print distribution really that cheap, or is online covering the costs?","msgtype":"m.text"},"ts":1332943521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the paper/delivery bill is certainly a small percentage of the salaries.","msgtype":"m.text"},"ts":1332944244000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"but is it only 30 per year per printed magazine","msgtype":"m.text"},"ts":1332944626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a little less even","msgtype":"m.text"},"ts":1332944639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, should I add EventReceiver","msgtype":"m.text"},"ts":1332948346000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"http://www.w3.org/community/webapps-ui/","msgtype":"m.text"},"ts":1332948821000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"foolip: the arrays in big5.json are the code points found for these bytes:","msgtype":"m.text"},"ts":1332949393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"while (leadbyte < (0xFE-0x81+1)):","msgtype":"m.text"},"ts":1332949393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"    while (byte < (0xFE-0x40+1)):","msgtype":"m.text"},"ts":1332949394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"        file.write(chr(leadbyte+0x81))","msgtype":"m.text"},"ts":1332949394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"        file.write(chr(byte+0x40))","msgtype":"m.text"},"ts":1332949394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"        if byte == 0x7E-0x40:","msgtype":"m.text"},"ts":1332949394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"            byte += (0xA1 - 0x7F)","msgtype":"m.text"},"ts":1332949394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"        byte += 1","msgtype":"m.text"},"ts":1332949395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"    leadbyte += 1","msgtype":"m.text"},"ts":1332949395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"    byte = 0;","msgtype":"m.text"},"ts":1332949396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, as reported by charCodeAt I guess?","msgtype":"m.text"},"ts":1332949443000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"so 0x81 0x40 -> array[0]","msgtype":"m.text"},"ts":1332949445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: almost","msgtype":"m.text"},"ts":1332949460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: I combine surrogates","msgtype":"m.text"},"ts":1332949469000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and for Opera I ignore a few code points less than 0x80 that follow a 0xFFFD","msgtype":"m.text"},"ts":1332949510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: some stuff to get the data is here: http://dump.testsuite.org/encoding/big5/","msgtype":"m.text"},"ts":1332949534000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, ok, are the PUA points that are mapped not in the BMP, or is it just that some stuff maps to CJK C?","msgtype":"m.text"},"ts":1332949548000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk, do you already have a hunch for how you're going to spec this, or is it all just broken?","msgtype":"m.text"},"ts":1332949613000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I don't know for big5; ideally someone tells me","msgtype":"m.text"},"ts":1332949635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: the PUA is all in BMP","msgtype":"m.text"},"ts":1332949640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, have you looked at what mapping iconv uses?","msgtype":"m.text"},"ts":1332949664000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1332949678000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"foolip: On what system?","msgtype":"m.text"},"ts":1332949703000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, for which question?","msgtype":"m.text"},"ts":1332949727000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: no, but I think that would be the same as Chrome here","msgtype":"m.text"},"ts":1332949740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, oh, Chrome more or less uses iconv?","msgtype":"m.text"},"ts":1332949758000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: but maybe not, but I don't really care about non-browser consumers, they're likely even more wrong :)","msgtype":"m.text"},"ts":1332949760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perhaps","msgtype":"m.text"},"ts":1332949805000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: iconv varying between POSIX impls","msgtype":"m.text"},"ts":1332949816000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, oh, then I mean the one in GNU libc I guess","msgtype":"m.text"},"ts":1332949851000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"was no idea whether OS X has uts iwb ub this case","msgtype":"m.emote"},"ts":1332949875000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*its own in","msgtype":"m.text"},"ts":1332949880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk,  mapping things to the PUA when they exist in Unicode proper seems worth avoiding, so some idea about what the compatible subset is would be sweet","msgtype":"m.text"},"ts":1332949886000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Does Opera map to the PUA, for example?","msgtype":"m.text"},"ts":1332949893000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"no we don't","msgtype":"m.text"},"ts":1332949911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we map almost all of those to U+FFFD","msgtype":"m.text"},"ts":1332949935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"apart from a few","msgtype":"m.text"},"ts":1332949944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"big5 and big5-hkscs are also incompatible I'm told","msgtype":"m.text"},"ts":1332949963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As in, there are de-facto extensions to Big5 that conflict with Big5-HKSCS?","msgtype":"m.text"},"ts":1332950005000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"think so, not exactly sure how it relates to the standards","msgtype":"m.text"},"ts":1332950064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"let me check our bug database, Peter explained somewhere","msgtype":"m.text"},"ts":1332950077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If IE is able to treat Big5 and Big5-HKSCS as synonyms it sounds like it's possible to sort out","msgtype":"m.text"},"ts":1332950107000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: see CORE-35726","msgtype":"m.text"},"ts":1332950122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Unless the horrible truth is that the same code points are used for different glyphs in popular fonts in Taiwan and Hong Kong :{","msgtype":"m.text"},"ts":1332950137000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"that's the thing","msgtype":"m.text"},"ts":1332950147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Microsoft ships HKSCS package for Hong Kong users","msgtype":"m.text"},"ts":1332950157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a package*","msgtype":"m.text"},"ts":1332950162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and that package includes different glyph mappings for some PUA code points","msgtype":"m.text"},"ts":1332950175000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ugh...","msgtype":"m.text"},"ts":1332950198000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"yeah, it's insane","msgtype":"m.text"},"ts":1332950208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Knowing which exact characters are in conflict would be useful","msgtype":"m.text"},"ts":1332950236000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Velmont, commented","msgtype":"m.text"},"ts":1332950291000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, from Peter's comments it looks like the conflicts are pretty trivial, where there exists duplicates in Unicode or at least very similar glyphs","msgtype":"m.text"},"ts":1332950403000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"http://coq.no/character-tables/chinese-traditional/en has some analysis, but not that much","msgtype":"m.text"},"ts":1332950445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I'd be happy to help out with this since I love both Chinese and Unicode, but it sounds like right now you don't really know where to start?","msgtype":"m.text"},"ts":1332950508000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"if we assume Microsoft is the dominant force I guess what you want is a) the difference in glyph mapping between users with and without the HKSCS plugin and b) the Unicode code points for all the ~6000 glyphs","msgtype":"m.text"},"ts":1332950629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and then maybe if they are not too incompatible provide a combined set of sorts","msgtype":"m.text"},"ts":1332950660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but presumably Microsoft would have done that if it were possible","msgtype":"m.text"},"ts":1332950678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perhaps","msgtype":"m.text"},"ts":1332950690000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"if the difference is huge we could attempt to still avoid PUA (if the fonts work with that anyway, that might be another issue), and have different tables depending on locale","msgtype":"m.text"},"ts":1332950751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If possible, it would be great to have a look at the byte sequences that map to something different (in IE on Windows) in Big5 and Big5-HKSCS and screenshots of how those are actually rendered on a system with and without Microsoft's font package","msgtype":"m.text"},"ts":1332950753000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"the byte sequences map to the same code point afaict","msgtype":"m.text"},"ts":1332950796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although I have not tried installing the hkscs pack","msgtype":"m.text"},"ts":1332950804000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They probably do, it would be odd for the mappings to depend on installed fonts.","msgtype":"m.text"},"ts":1332950820000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1332950832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"This HKSCS-2001 add-on software package is not compatible with Windows Vista™. Windows Vista has built-in support for HKSCS-2004.\"","msgtype":"m.text"},"ts":1332950834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've been using Windows 7","msgtype":"m.text"},"ts":1332950861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sounds like they've already unified things somewhat?","msgtype":"m.text"},"ts":1332950880000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1332950921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"guess I should ask someone from Microsoft how they deal with it now","msgtype":"m.text"},"ts":1332950935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, let me know if you need help staring at glyphs and telling if they are the same or not.","msgtype":"m.text"},"ts":1332950979000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Time to leave now, bye!","msgtype":"m.text"},"ts":1332950986000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"thanks foolip","msgtype":"m.text"},"ts":1332951103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: http://lists.w3.org/Archives/Public/www-archive/2012Mar/0046.html","msgtype":"m.text"},"ts":1332952157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if http://www.microsoft.com/download/en/details.aspx?DisplayLang=en&id=12080 is available as source code or something","msgtype":"m.text"},"ts":1332954964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what is .msi?","msgtype":"m.text"},"ts":1332954972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Windows installation it seems","msgtype":"m.text"},"ts":1332955029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: roc: I just talked with Ken about the Typed Array stuff, and he offered a pretty convincing defense of his position.","msgtype":"m.text"},"ts":1332955411000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which was basically:","msgtype":"m.text"},"ts":1332955425000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"1) If you're generating data on the CPU for export to the GPU on the same device (common case for WebGL and WebAudio), endianness is irrelevant, because you don't really introspect the data. Using native endianness is best for performance, which is critical here.","msgtype":"m.text"},"ts":1332955468000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"2) If you're pulling data from the network, DataView handles the testing and byteswapping easily and automatically - all you need to know is the endianness of the incoming data.","msgtype":"m.text"},"ts":1332955501000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Which can reasonably be big or little, depending entirely on file format.)","msgtype":"m.text"},"ts":1332955513000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you're exporting to the network, DataView also takes care of that, automatically swapping to your desired endianness as necessary.","msgtype":"m.text"},"ts":1332955540000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: However, almost all WebGL demos do more than just generate data, so 1 isn't relevant","msgtype":"m.text"},"ts":1332955554000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The problem is that FF only implemented DataView last week, so a lot of bad advice was given.","msgtype":"m.text"},"ts":1332955559000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: 2 is good and fine in theory… but nobody does it.","msgtype":"m.text"},"ts":1332955573000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Almost no WebGL demos work on BE devices.","msgtype":"m.text"},"ts":1332955586000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Existing WebGL demos that generate data solely on the device?","msgtype":"m.text"},"ts":1332955617000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Nah, a few people did a while ago evangelize stuff for this.","msgtype":"m.text"},"ts":1332955638000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"bz probably more than anyone else, IIRC.","msgtype":"m.text"},"ts":1332955649000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm just curious about the exact shape of the failing demos.","msgtype":"m.text"},"ts":1332955657000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Mostly 2, and assuming the typed array is LE","msgtype":"m.text"},"ts":1332955675000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because Ken claimed that existing ones (that didn't rely on network data without using DataView) should work fine on either architecture.","msgtype":"m.text"},"ts":1332955694000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, they do.","msgtype":"m.text"},"ts":1332955706000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But most WebGL stuff relies on network data without using DataView.","msgtype":"m.text"},"ts":1332955714000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And he argues that the reason nobody has used DataView is to a large extent because FF didn't implement it originally.","msgtype":"m.text"},"ts":1332955723000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And as long as that's possible, web devlopers will do it, because nobody will test on BE.","msgtype":"m.text"},"ts":1332955734000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Modulo people targetting TVs, who likely will.","msgtype":"m.text"},"ts":1332955780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(The Opera Devices SDK has been shipping WebGL for over a year now)","msgtype":"m.text"},"ts":1332955820000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"He also argues that, based on long experience with the JVM, you can't do automatic endianness-swapping without killing performance.","msgtype":"m.text"},"ts":1332955837000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I totally agree. But provided we make it possible to have web devs easily break stuff on platforms almost nobody uses, they will.","msgtype":"m.text"},"ts":1332955899000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: \"performance, which is critical here\" - the cost of swapping bytes when uploading to the GPU sounds like it should be generally quite trivial compared to the other costs of copying the memory to the GPU when implemented sanely (though I'm not basing that on any experience)","msgtype":"m.text"},"ts":1332955901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's either have it not work or do endianness-swapping, practically.","msgtype":"m.text"},"ts":1332955930000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: Ken argues that it's not, because you have to hold onto a schema for the data in the CPU so you can do the swap properly just before exporting.","msgtype":"m.text"},"ts":1332955931000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I expect most people would use LE DataViews, so the cost is there on BE anyway","msgtype":"m.text"},"ts":1332955978000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I don't understand.  DataViews don't have endianness - they're native too.  You specify what the endianness of the incoming data is, and it swaps there.","msgtype":"m.text"},"ts":1332956028000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I imagine an implementation that cared about performance would JIT the memcpy-with-fancy-byte-swapping code, rather than using an explicit schema representation","msgtype":"m.text"},"ts":1332956067000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: According to Ken, that hasn't been possible in the years of compiler research in the JVM. It breaks down into lots of virtual gets.","msgtype":"m.text"},"ts":1332956103000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: You can do the same  with the typed array, no?","msgtype":"m.text"},"ts":1332956104000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I'm not entirely sure I understand what you're asking.","msgtype":"m.text"},"ts":1332956129000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Virtual gets?","msgtype":"m.text"},"ts":1332956155000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins: You store the underlying array as native endianness. [[Get]] and [[Put]] convert the words they touch. Copying the array from CPU to GPU is quick (due to native endianness), as is taking a subarray.","msgtype":"m.text"},"ts":1332956215000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"virtual calls when getting the data.  I'm more-or-less quoting from memory there, I don't know about shit.","msgtype":"m.text"},"ts":1332956218000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or maybe [[Get]] and [[Put]] are perf critical","msgtype":"m.text"},"ts":1332956228000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But that's basically what DataViews do, AIUI","msgtype":"m.text"},"ts":1332956305000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: I don't see why you'd want to do any virtual method calls when just copying an array of bytes (with no fancy getters or anything) into a new array of bytes","msgtype":"m.text"},"ts":1332956335000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders whether GPUs actually have the same endianness as their host CPUs","msgtype":"m.emote"},"ts":1332956349000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Because you need to byteswap sometimes?","msgtype":"m.text"},"ts":1332956351000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: According to Ken, yes.","msgtype":"m.text"},"ts":1332956356000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: All I know is that Ken says DataViews solve the problem in a way that automatic swapping can't.  Presumably that means swapping is done early.","msgtype":"m.text"},"ts":1332956383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Just do that for accesses of the whole array, have dataviews always have endianness, and then if you're using dataview you get high-perf 50% of the time.","msgtype":"m.text"},"ts":1332956403000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: They do, by design, for just that reason.","msgtype":"m.text"},"ts":1332956415000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: I don't believe we swap early, at least.","msgtype":"m.text"},"ts":1332956434000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: I don't see why the byteswapping would involve virtual method calls - it'd just involve reading 4 bytes from the input, doing a byte-swap instruction, then writing to the output array, and repeat for each field in the data structure that needs swapping, then loop, or whatever","msgtype":"m.text"},"ts":1332956611000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ah, now that I've looked at the spec I see what's happening.  This design seems somewhat suboptimal.","msgtype":"m.text"},"ts":1332956616000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's no reason to have the desired endianness on the get calls unless you're trying to optimize for the case where a file is mixed-endian.","msgtype":"m.text"},"ts":1332956649000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It should be specified on the constructor I guess.","msgtype":"m.text"},"ts":1332956659000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: It depends.","msgtype":"m.text"},"ts":1332956706000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That still doesn't let you swap early, though, unless you know the data's schema.","msgtype":"m.text"},"ts":1332956723000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: There are cases when you want to read in a file of non-native endianness, change one word, and then write it out.","msgtype":"m.text"},"ts":1332956753000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hm, I think I need to see an example of DataView being used with WebGL.","msgtype":"m.text"},"ts":1332956785000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In that case, it will normally be quicker to just convert the one thing you want to change","msgtype":"m.text"},"ts":1332956794000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"success","msgtype":"m.text"},"ts":1332957586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well some","msgtype":"m.text"},"ts":1332957588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://blogs.msdn.com/b/shawnste/archive/2007/03/12/cp-951-hkscs.aspx","msgtype":"m.text"},"ts":1332957589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-archive/2012Mar/0051.html sounds promising","msgtype":"m.text"},"ts":1332957777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so IE treats them as aliases, no longer has different mappings depending on locale","msgtype":"m.text"},"ts":1332957795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so IE's mapping, perhaps with some PUA code points replaced with actual code points, sounds like the best way forward","msgtype":"m.text"},"ts":1332957818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"including merging big5 and big5-hkscs","msgtype":"m.text"},"ts":1332957829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1332957980000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"created http://simon.html5.org/tools/js/unicodeize/ for spec writing","msgtype":"m.emote"},"ts":1332958249000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1332958410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"now I know my name is full of boring code points","msgtype":"m.text"},"ts":1332958416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Yay, useful!","msgtype":"m.text"},"ts":1332959392000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if anyone knows why the selection thing doesn't work in firefox and chrome when tabbing away from the textarea, lemme know","msgtype":"m.text"},"ts":1332960399000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or get firefox/chrome fixed :-P","msgtype":"m.text"},"ts":1332960458000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: what selection thing?","msgtype":"m.text"},"ts":1332960501000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"in http://simon.html5.org/tools/js/unicodeize/","msgtype":"m.text"},"ts":1332960513000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I guess I should try what happens in Opera","msgtype":"m.text"},"ts":1332960516000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ah, I see","msgtype":"m.text"},"ts":1332960539000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"http://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#dom-selection-selectallchildren is the spec","msgtype":"m.text"},"ts":1332960540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: does the output element get focus event in FF/CH ?","msgtype":"m.text"},"ts":1332960732000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yes...","msgtype":"m.text"},"ts":1332960796000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"i don't seem to get an event in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1437","msgtype":"m.text"},"ts":1332960846000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"in chrome... get it in firefox when tabbing","msgtype":"m.text"},"ts":1332960901000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not when clicking","msgtype":"m.text"},"ts":1332960912000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sweet kittens, our industry has a buzzword problem","msgtype":"m.text"},"ts":1332961158000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks like \"internet of things\" is going to be the next \"mobile web\"","msgtype":"m.text"},"ts":1332961176000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"internet of things\"?","msgtype":"m.text"},"ts":1332961231000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: I'd like to invite you to publish your complete Canvas 2D API editor's draft (including r7023 through r7038) at http://dev.w3.org/html5/2dcontext-hixie/","msgtype":"m.text"},"ts":1332961309000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1332961486000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"will there be a separate canvas spec in W3C ?","msgtype":"m.text"},"ts":1332961499000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"eventually, there will be something after HTML5, yes.","msgtype":"m.text"},"ts":1332961535000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"what is going to be published at 2dcontext then?","msgtype":"m.text"},"ts":1332961590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At the moment, that's frozen at March 7th.  It will certainly have the result of the issue 201 decision folded into it.  At this point, Hixie's draft goes beyond that with other new features.","msgtype":"m.text"},"ts":1332961656000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: a \"hixie\" version of the canvas spec would just be the html spec with the 2d api in the canvas section, i'm not sure it makes sense to have a \"hixie\" version of just the 2d api","msgtype":"m.text"},"ts":1332961680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ultimately this may need to be done to all the specs, but we don't need to do all at once, and it makes sense to delay that for as long as is reasonable for the base HTML5 spec.","msgtype":"m.text"},"ts":1332961737000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"so why not call it -next then?","msgtype":"m.text"},"ts":1332961750000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or -dev","msgtype":"m.text"},"ts":1332961763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems kind of weird to put the nick of the editor in the URL","msgtype":"m.text"},"ts":1332961817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"-next may be presumptuous and spur lots of extraneous discussions.  I simply would like to see it get out there to be discussed.  That's the best way to lead to a discussion about what should be in \"-next\"... I would much rather see leading by doing than yet another argument over who gets the pen.","msgtype":"m.text"},"ts":1332961827000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: the IETF does that all of the time, no?","msgtype":"m.text"},"ts":1332961840000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"we could go with Hickson I guess","msgtype":"m.text"},"ts":1332961856000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"the ietf is a perfect example of the mess that happens when we do that :-)","msgtype":"m.text"},"ts":1332961865000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can't http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#2dcontext be used for discussion?","msgtype":"m.text"},"ts":1332961909000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Apple has patent concerns; Microsoft has other concerns.  Simply republishing it in W3C space hopefully can get the technical discussions going instead of the non-technical ones.","msgtype":"m.text"},"ts":1332961969000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: anyway, i'm happy to check in a draft that is a true \"editor's draft\" as opposed to the \"majority draft\" or whatever it is we have now; but as editor the only draft i'd be writing is a single html spec, like the whatwg's, not a split out set of specs. if you think that'd be helpful, though, i'd be happy to do that.","msgtype":"m.text"},"ts":1332961970000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the patent concerns are moot unless we publish a REC of the draft in question","msgtype":"m.text"},"ts":1332961984000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"merely having it on dev.w3.org doesn't make any difference there","msgtype":"m.text"},"ts":1332961991000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I think it would be helpful if you were to publish a clearly separate Canvas 2D API spec, preferably under your name or nick, in W3C space.  I am not suggesting that you change anything else about how you develop such a spec.  I would prefer if this were not yet done for the other W3C specs at this time.","msgtype":"m.text"},"ts":1332962065000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: IETF also publishes in ASCII and text/plain","msgtype":"m.text"},"ts":1332962115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: i do not support having a separate canvas spec, so i would like to not frame it in such a way that it appears to be my choice","msgtype":"m.text"},"ts":1332962123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I would be glad to frame it as something that I requested.","msgtype":"m.text"},"ts":1332962152000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: there's a 2dcontext-LC/ directory in cvs right now that is woefully out of date, would it makes sense to copy what is currently in 2dcontext/ to 2dcontext-LC/ and then put 2dcontext/ back to tip-of-tree?","msgtype":"m.text"},"ts":1332962187000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rubys: and actually, IETF only does that before a WG is formed","msgtype":"m.text"},"ts":1332962196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: WG drafts don't have it","msgtype":"m.text"},"ts":1332962203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: (that seems like it would address your concerns and mine, if i understand yours correctly)","msgtype":"m.text"},"ts":1332962211000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"2dcontext-LC is what went into LC1.  We likely will need to have an LC2.  What goes into those drafts will increasingly be locked down.","msgtype":"m.text"},"ts":1332962256000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I think we need another draft that doesn't have those locks in place.  I think the Canvas doc would be a great way to start.","msgtype":"m.text"},"ts":1332962279000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"didn't you just say you want to freeze it?","msgtype":"m.text"},"ts":1332962310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there will at least be the need to apply the decision that is made for issue 201 to the W3C LC2 Canvas API draft.","msgtype":"m.text"},"ts":1332962351000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"and that cannot happen in 2dcontext-LC?","msgtype":"m.text"},"ts":1332962393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but at the moment, nobody is proposing adding ellipse support to the W3C HTML5 version of Canvas.","msgtype":"m.text"},"ts":1332962395000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"well it seems several people are","msgtype":"m.text"},"ts":1332962407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but they are not jumping through hoops","msgtype":"m.text"},"ts":1332962416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so for some definition of \"proposing\" I guess they are indeed not","msgtype":"m.text"},"ts":1332962427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agreed that we aren't disagreeing here :-)","msgtype":"m.text"},"ts":1332962440000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"hsivonen: jslint fixed. jshint not yet.","msgtype":"m.text"},"ts":1332962451000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: myth busted","msgtype":"m.text"},"ts":1332962499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"- Mike \"Pomax\" Kamermans","msgtype":"m.text"},"ts":1332962499000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"processing.js","msgtype":"m.text"},"ts":1332962500000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=14562","msgtype":"m.text"},"ts":1332962506000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"now i should probably file separate bugs to *do* whine about \"<!--\" and \"</script>\"","msgtype":"m.text"},"ts":1332962509000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"did ask","msgtype":"m.text"},"ts":1332962510000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"which led to https://www.w3.org/Bugs/Public/show_bug.cgi?id=14579","msgtype":"m.text"},"ts":1332962524000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I stand by my original recommendation.  I would really rather not have any name that appears presumptuous to the point where people feel the need to challenge it.","msgtype":"m.text"},"ts":1332962537000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: is there any problem with using the existing 2dcontext-LC/ directory for the cherrypicked draft and 2dcontext/ for the wg draft? i don't understand your objection to that","msgtype":"m.text"},"ts":1332962560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rubys: my objection to creating a third directory is that we are already littering the w3c space with obsolete copies of the canvas spec","msgtype":"m.text"},"ts":1332962582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rubys: i keep getting people coming across old copies and asking me obsolete questions about them","msgtype":"m.text"},"ts":1332962594000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rubys: it's truly hurting interop","msgtype":"m.text"},"ts":1332962601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rubys: mike did some work getting rid of some old ones, but there's still at least 3 already","msgtype":"m.text"},"ts":1332962617000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie that will start a flame war that I simply don't want to fight right now.","msgtype":"m.text"},"ts":1332962628000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"why would it start a flame war?","msgtype":"m.text"},"ts":1332962650000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"At the moment, what is in 2dcontext is what the HTML WG intends to be as a part of HTML5, and is subject to the revert policy in place.","msgtype":"m.text"},"ts":1332962741000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"so just change that to be 2dcontext-LC/","msgtype":"m.text"},"ts":1332962754000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I am not willing to fight that battle at this time.  If you wish, feel free to decline my request to publish this separately.","msgtype":"m.text"},"ts":1332962788000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"or, i guess the html validator already whines about <!-- and </script>","msgtype":"m.text"},"ts":1332962796000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well it's already published separately, the request is to publish a version of the spec that fulfills certain chair decisions but not others, right?","msgtype":"m.text"},"ts":1332962836000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, i'm not really sure whose draft this would be","msgtype":"m.text"},"ts":1332962843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't represent what i would like, so it's not an editor's copy; it doesn't represent what the wg would like, so it's not a majority copy, it's not what we're going to publish so it's not a TR/ copy...","msgtype":"m.text"},"ts":1332962874000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whose draft would it be? what process would it be under? what would decide what it contains?","msgtype":"m.text"},"ts":1332962887000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What I am suggesting is a Hixie version of the spec be published.  Whether parts of it are cherry picked for the HTML5 time frame or are fodder for an HTML.next has yet to be determined.","msgtype":"m.text"},"ts":1332962900000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"a hixie version of the spec is already published: http://whatwg.org/html","msgtype":"m.text"},"ts":1332962917000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it has the exact same patent situation as a draft in dev.w3.org","msgtype":"m.text"},"ts":1332962942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"My experience is that such a document will not attract participation by Microsoft, and in my opinion, that situation is suboptimal.","msgtype":"m.text"},"ts":1332962996000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"nor does a dev.w3.org draft, really. the amount of microsoft input in the htmlwg has been so minimal as to be de minimis","msgtype":"m.text"},"ts":1332963049000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rubys: you said microsoft has \"other concerns\". are they secret?","msgtype":"m.text"},"ts":1332963055000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I am willing to make my request be an official request of a W3C co-chair.","msgtype":"m.text"},"ts":1332963076000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"so then it'd be a chair's copy of the spec?","msgtype":"m.text"},"ts":1332963089000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: I haven't had that discussion with Microsoft, nor am I likely to.","msgtype":"m.text"},"ts":1332963132000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"seems weird for the chairs to maintain (or ask someone to have maintain for them) a copy of the spec that doesn't match the very decisions they're handing down...","msgtype":"m.text"},"ts":1332963137000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the HTML WG has had a policy for a while allowing individuals to post specs.  Mostly that demonstrated (as expected) that there is a sincere desire to converge.","msgtype":"m.text"},"ts":1332963197000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"We have asked you to revert 7023 pending a decision on 201.  Now I see that there are other changes that haven't been proposed.  I'd like to see those get published in W3C space and to have a version of the spec that evolves slower and stabilizes.","msgtype":"m.text"},"ts":1332963268000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"i'm happy to push the changes to dev.w3.org so long as we don't increase the number of different copies of the 2d api spec fragment in doing so","msgtype":"m.text"},"ts":1332963381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm pretty open to a variety of ways in which we could avoid doing that","msgtype":"m.text"},"ts":1332963394000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I believe that the LC one is pointed to by an announcement at some point.  Once we complete this LC work, we should be able to archive that one and point to the latest stable spec.","msgtype":"m.text"},"ts":1332963487000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"As I see it, there are two active threads, one that is winding down, and one that is ramping up.","msgtype":"m.text"},"ts":1332963542000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"cannot really find that announcement fwiw","msgtype":"m.text"},"ts":1332963597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also, it violates W3C policy to use the WD style sheet on dev.w3.org so that draft would have to change anyway","msgtype":"m.text"},"ts":1332963636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not the announcements i'm worried about, it's people randomly running into the draft and thinking it's the latest copy","msgtype":"m.text"},"ts":1332963657000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've found about 5 different copies of the canvas api and extensions to it in the last few minutes in w3.org space, none of which are up to date (since there isn't a mainline one currently, which is what sam is asking for me to add).","msgtype":"m.text"},"ts":1332963706000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Microsoft appears to feel strongly about issue-201, so different people will have different perspectives on what is considered up to date.","msgtype":"m.text"},"ts":1332963827000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Heck, I would gladly invite Microsoft to produce a copy of the 2D Canvas spec to their liking (and have a history of making exactly such request).","msgtype":"m.text"},"ts":1332963887000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"that would probably not resolve my concerns of there being too many different copies of the spec. :-)","msgtype":"m.text"},"ts":1332963953000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm Darwinian in that respect.  I think it would, just perhaps not quickly.","msgtype":"m.text"},"ts":1332964009000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Found the post I was looking for: http://intertwingly.net/blog/2009/08/06/Disappearing-Silverware","msgtype":"m.text"},"ts":1332964056000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"well the last time you asked them to do that it resulted in an additional spec that is still there on dev.w3.org, in an Attic directory, so I think evidence suggests otherwise. :-)","msgtype":"m.text"},"ts":1332964099000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The problem with many copies of the spec is that the harm they cause is in the short term not the long term","msgtype":"m.text"},"ts":1332964111000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1332964163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't see the harm caused by a directory clearly labeled as attic, and can see an argument that the W3C needs to put a plan in place to move the 1st LC draft into such.","msgtype":"m.text"},"ts":1332964281000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I do see considerable harm as labeling a spec that contains one of two competing proposals as \"the latest\".","msgtype":"m.text"},"ts":1332964326000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"you're not the one fielding e-mails from people every day asking for clarifications about issues in the spec that were fixed months or years earlier, caused merely because they are looking at the TR/ page, or some random CVS-deleted Attic/ file, or whatnot.","msgtype":"m.text"},"ts":1332964419000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"an alternative way to solving this problem, if we can't come to an agreement on how to have the latest copy in dev.w3.org, would be for the relevant issue to be resolved sooner rather than later.","msgtype":"m.text"},"ts":1332964464000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at the moment, we have no counter proposal to issue 201, nor any proposal for the other additions that you have been making.","msgtype":"m.text"},"ts":1332964511000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I've also seen reference to your plans for a v6 and beyond.","msgtype":"m.text"},"ts":1332964537000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"well, to be fair, you do have a counter proposal, you just don't have one that's been written up in the bureaucratic way you'd like. You even asked for the counter-proposal to be reverted, so you can't say you don't know about it. :-)","msgtype":"m.text"},"ts":1332964598000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"To me a complete proposal would include rationale.","msgtype":"m.text"},"ts":1332964639000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"the rationale is presumably the same","msgtype":"m.text"},"ts":1332964683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rubys: looking at the existing -201 issue, i can confirm that the exact same rationale would apply to what was reverted","msgtype":"m.text"},"ts":1332964797000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In any case, I've made my request.  If there is anything I can do to convince you to leave the stable copy as it stands and publish a -hixie version along side it, please let me know.","msgtype":"m.text"},"ts":1332964802000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: if you like i can submit a CP that is identical in every way except the details section, but that just seems like bureaucracy for the sake of bureaucracy","msgtype":"m.text"},"ts":1332964821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would that CP include ellipse?","msgtype":"m.text"},"ts":1332964839000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"sure, why not","msgtype":"m.text"},"ts":1332964859000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're part of the Path object, after all","msgtype":"m.text"},"ts":1332964868000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how else would you make accessible ellipsoid hit regions?","msgtype":"m.text"},"ts":1332964900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gotta go, lunch","msgtype":"m.text"},"ts":1332964928000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1332964929000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looking at http://html5.org/tools/web-apps-tracker I see a number of changes that appear to go beyond hit testing.","msgtype":"m.text"},"ts":1332964994000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I'll wander off, but I would like to see a -hixie draft and a Change Proposal that describes why what appears in that draft is a better fit for HTML5 than what is in http://www.w3.org/wiki/Canvas_hit_testing .","msgtype":"m.text"},"ts":1332965096000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"why does data:text/html,&%23x26BD; (soccer ball) not render in browsers other than Safari?","msgtype":"m.text"},"ts":1332968281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because most people don't have a font that'll display it, but Safari's last resort font has a bunch of emoji stuff, and so maybe has a soccer ball too?","msgtype":"m.text"},"ts":1332969202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's nothing wrong with the url - it produces the correct character in the page.","msgtype":"m.text"},"ts":1332969215000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"seems like a bug of sorts to me","msgtype":"m.text"},"ts":1332969367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What, the non-rendering?","msgtype":"m.text"},"ts":1332969538000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's not a bug, it's font support.  There's nothing buggy about it.","msgtype":"m.text"},"ts":1332969585000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Change your url to a character that the default font stack can render, and it works fine.","msgtype":"m.text"},"ts":1332969603000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"given that my OS has such a font, I would expect browsers to render it","msgtype":"m.text"},"ts":1332969637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They can't realistically search your entire set of OS fonts when attempting to render a page.","msgtype":"m.text"},"ts":1332969668000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I don't think OSes provide a utility for quickly asking \"do you have a font that can render this character?\".","msgtype":"m.text"},"ts":1332969690000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can bug them to improve their default stack, of course.","msgtype":"m.text"},"ts":1332969718000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"doesn't mean it doesn't seem like a bug of sorts :)","msgtype":"m.text"},"ts":1332969723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1332969730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sees the soccer ball in Firefox in F15","msgtype":"m.emote"},"ts":1332972255000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"guess I have enough fonts installed for it","msgtype":"m.text"},"ts":1332972269000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"TabAtkins: that's not convincing at all, because it assumes incorrectly that views are only ever used for creating data that you hand off to WebGL","msgtype":"m.text"},"ts":1332972642000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that's just obviously false","msgtype":"m.text"},"ts":1332972656000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"See: pdf.js.","msgtype":"m.text"},"ts":1332972792000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the solution is to define both these views and all WebGL access as little endian, say \"if you're big-endian, you're on your own\", and then ignore big endian because big endian is dead","msgtype":"m.text"},"ts":1332972805000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Using a DataView, particularly once it's been expanded to be as easy to use as the other array views, seems to be the preferred answer.","msgtype":"m.text"},"ts":1332972840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dataview is completely irrelevant","msgtype":"m.text"},"ts":1332972848000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Why so?","msgtype":"m.text"},"ts":1332972854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"views exist, so people will use them; dataview existing doesn't change taht","msgtype":"m.text"},"ts":1332972875000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also that","msgtype":"m.text"},"ts":1332972879000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"we can't remove alert() just because there are other ways to display messages; people use alert","msgtype":"m.text"},"ts":1332972896000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"DataView is meant to be *the* way to send/receive from servers.","msgtype":"m.text"},"ts":1332972903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but it *isn't*","msgtype":"m.text"},"ts":1332972910000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Right now, sure. Because DataView wasn't widely implemented.","msgtype":"m.text"},"ts":1332972924000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"views exist, and people use them (and I'll use them, because it's much nicer to have an array view of an array instead of calling a function)","msgtype":"m.text"},"ts":1332972929000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"doesn't matter--views still exist and will still be used","msgtype":"m.text"},"ts":1332972941000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"And so any advice about how to use TypedArrays *today* can't reasonably tell people to use DataViews.","msgtype":"m.text"},"ts":1332972954000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: Big endian is *not* dead because typed arrays are done for things apart from WebGL. pdf.js, for example.","msgtype":"m.text"},"ts":1332972969000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The \"array view of an array\" thing is the \"once DataViews are fixed up to be as convenient as the other arrays\" thing.","msgtype":"m.text"},"ts":1332972981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: find me a marketshare % of big endian systems and tell me it's not dead, heh","msgtype":"m.text"},"ts":1332972996000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(of big endian systems that implement modern APIs, including ArrayBuffer and WebGL)","msgtype":"m.text"},"ts":1332973007000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"From what I understand, a number of file formats (that you may want to read with an arraybuffer) are big-endian.","msgtype":"m.text"},"ts":1332973027000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: Well, of BE systems, yes, but file formats are still often BE.","msgtype":"m.text"},"ts":1332973046000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aklein: ping","msgtype":"m.text"},"ts":1332973060000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(why is Firefox's address bar autocomplete so utterly broken? I type \"typed arrays\", hit enter; I see that it had the typed array spec selected when I was at \"typed\", but then it decided to jump to some random google search when I finished typing)","msgtype":"m.text"},"ts":1332973062000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"smaug____: pong","msgtype":"m.text"},"ts":1332973066000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"gsnedders: file formats aren't the issue (there *should* be explicitly big-endian views)","msgtype":"m.text"},"ts":1332973073000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"aklein: about attribute filters","msgtype":"m.text"},"ts":1332973077000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"aklein: sicking suggested that attribute filter applies only to non-namespaced attributes","msgtype":"m.text"},"ts":1332973094000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: Surely you have done the web thing long enough to know that if there are two ways to do something and one is wrong, authors will do the wrong way 80% of the time, the right way 10% and invent an entirely new and wrong way 10%","msgtype":"m.text"},"ts":1332973096000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"aklein: what do you think about that","msgtype":"m.text"},"ts":1332973105000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: DataView is an inherently less convenient API than views, for accessing arrays","msgtype":"m.text"},"ts":1332973121000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I'd say the percentages are more balanced, overall.  They don't *instinctively* reach for the bad one.  They just do it randomly, like a gas filling a room.  Brownian motion and all that.","msgtype":"m.text"},"ts":1332973134000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: Yes.  Right now.","msgtype":"m.text"},"ts":1332973139000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: (I object to the idea that accessing arrays inside a file format via views is \"wrong\"; it's the right, clean thing to do, and the \"design\" is wrong)","msgtype":"m.text"},"ts":1332973144000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: what is \"right now\"? who is proposing changes to it?","msgtype":"m.text"},"ts":1332973154000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"aklein: I don't care too much, but would could change my patch (which sicking is reviewing) if you agree with the change","msgtype":"m.text"},"ts":1332973156000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/would//","msgtype":"m.text"},"ts":1332973163000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the only thing needed are eg. Int16BEArray, etc","msgtype":"m.text"},"ts":1332973165000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Ken?","msgtype":"m.text"},"ts":1332973165000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: Sure. I was thinking of an abstract example","msgtype":"m.text"},"ts":1332973169000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"smaug____: I don't care too much either, but I think we'd have to change our code too","msgtype":"m.text"},"ts":1332973178000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: it seems to me that if someone observes the \"value\" attribute, and a page modifies the \"xlink:value\" attribute and we notify the observer, it seems unlikely that the observer would check that it's the \"correct\" value attribute that is changed and just assume that any notifications is to the attribute that it cares about","msgtype":"m.text"},"ts":1332973203000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"one thing I need to recommend is that Int16LEArray (and friends) be added, so people can at least sidestep the issue","msgtype":"m.text"},"ts":1332973203000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"My point was just that saying \"but there is a way to get this right\" has never been good enough","msgtype":"m.text"},"ts":1332973205000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zewt: I don't know how you'd use a normal view to access data from a BE file format with varying-width records.","msgtype":"m.text"},"ts":1332973210000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but kenneth has dug in his heels on this so far he seems unwilling to do anything at all","msgtype":"m.text"},"ts":1332973217000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"There is a way to generate well-formed XML, but that didn't happen either","msgtype":"m.text"},"ts":1332973231000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: views are used for arrays (fixed-width); variable-width (eg. structs) *is* what DataView is good for","msgtype":"m.text"},"ts":1332973251000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I now understand his reasoning a bit better.  It seems correct that trying to do LE everywhere would just mean \"BE devices get *really slow* WebGL\".","msgtype":"m.text"},"ts":1332973253000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that's the only possible thing that can happen","msgtype":"m.text"},"ts":1332973265000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the alternative is \"big-endian devices get broken WebGL\"","msgtype":"m.text"},"ts":1332973275000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: Instead they will get broken WebGL","msgtype":"m.text"},"ts":1332973282000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Rather than the current one, which is \"BE devices break when you're reading data that you assumed was LE\".","msgtype":"m.text"},"ts":1332973284000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's not correct; that's wrong","msgtype":"m.text"},"ts":1332973293000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I've been told that, right now, BE devices work just fine in WebGL with typed arrays.","msgtype":"m.text"},"ts":1332973315000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you *should* be able to assume everything is little-endian. because nobody is, and nobody should have to, test on obscure big-endian devices; this is web 101--interoperability","msgtype":"m.text"},"ts":1332973318000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"They fail when you pull binary data off the network without using a dataview.","msgtype":"m.text"},"ts":1332973326000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"which is broken","msgtype":"m.text"},"ts":1332973331000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"aklein, smaug____: It seems to me that only observing the null-namespace is less bug-prone, and at least in the gecko implementation simpler since we wouldn't have a attributeNamespace property on MutationRecord","msgtype":"m.text"},"ts":1332973362000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"you should never have to care about the endianness of the system you're on; it should have no visible effects on code, ever; and you should definitely not have to test on it","msgtype":"m.text"},"ts":1332973368000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: now I'm a bit confused, are you saying attributeFilter won't stop the observer from telling me about _all_ namespaced attributes?","msgtype":"m.text"},"ts":1332973381000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"it doesn't matter that fixing it makes big-endian systems slow--and who cares? nobody's making big-endian platforms anymore","msgtype":"m.text"},"ts":1332973393000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: it wouldn't change the record","msgtype":"m.text"},"ts":1332973394000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sicking: only about filtering","msgtype":"m.text"},"ts":1332973400000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: I am 100% sure that wih the current setup BE devices will be broken on most real sites that depend on binary data","msgtype":"m.text"},"ts":1332973401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sicking: record must have the namespace","msgtype":"m.text"},"ts":1332973413000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: how so?","msgtype":"m.text"},"ts":1332973419000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"zewt: Shrug.  From what I've heard, making the LE-everywhere assumption means that the common WebGL/WebAudio/other APIs that both generate and consume data in-page will be unacceptably slow on BE devices.","msgtype":"m.text"},"ts":1332973427000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"because you need to know which attribute changed","msgtype":"m.text"},"ts":1332973429000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"They're \"work\", but that's irrelevant.","msgtype":"m.text"},"ts":1332973434000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug____: oh, for when you are observing all attribute changes?","msgtype":"m.text"},"ts":1332973434000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"*They'll","msgtype":"m.text"},"ts":1332973442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what BE devices?","msgtype":"m.text"},"ts":1332973451000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: yes","msgtype":"m.text"},"ts":1332973455000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: I would like some proof of that with actual hardware","msgtype":"m.text"},"ts":1332973461000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zewt: Aren't you assuming that BE devices exist and are important?","msgtype":"m.text"},"ts":1332973470000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: Ask Ken.  He alluded to years of experience with Java's NIO.","msgtype":"m.text"},"ts":1332973483000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aklein: sorry, yeah, so it wouldn't simplify the implementation a lot, but it seems less bugprone when attribute filters are used","msgtype":"m.text"},"ts":1332973494000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Then I would like someone that actually ships in those devices to say taht they would prefer the site to not work than to be slow","msgtype":"m.text"},"ts":1332973503000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/in/on/","msgtype":"m.text"},"ts":1332973511000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"no, I want this fixed so other APIs (eg. encoding API) don't keep getting derailed with \"well we can't return UTF-16LE as Int16Array because it's native endian!\" nonsense","msgtype":"m.text"},"ts":1332973515000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: \"Slow\", past a certain point, is a synonym for \"doesn't work\".","msgtype":"m.text"},"ts":1332973530000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sicking: I assume this discussion is happening on a review, can you send the link?","msgtype":"m.text"},"ts":1332973540000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"jgraham: You wouldn't play a videogame running at 3fps. ^_^","msgtype":"m.text"},"ts":1332973548000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"also, because it's a major, infrastructural API, and shouldn't have serious fundamental errors in the spec that everyone has to wink and ignore","msgtype":"m.text"},"ts":1332973551000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: Do you have any data to say we are remotely at that point?","msgtype":"m.text"},"ts":1332973552000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"aklein: still reviewing, but when i submit the review it'll appear here: https://bugzilla.mozilla.org/show_bug.cgi?id=641821","msgtype":"m.text"},"ts":1332973566000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jgraham: Ken asserts that we are.  I have no further data than that.","msgtype":"m.text"},"ts":1332973566000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's not useful","msgtype":"m.text"},"ts":1332973575000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Sorry.  He provided some limited assertions in his recent emails.  If you want more detail, respond there.","msgtype":"m.text"},"ts":1332973594000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(someone who has already made up their mind backing up their position with an assertion but no data)","msgtype":"m.text"},"ts":1332973607000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sicking: ah, ok, was hoping you'd laid out your suggestion there. what I'm wondering is, if I observe with attributeFilter == ['foo'], will I hear about changes to someNamespace:bar? or will I not hear about any namespaced attributes if I have an attributeFilter?","msgtype":"m.text"},"ts":1332973632000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"(aklein: sicking is shouting comments about the patch and API from the other side of the table)","msgtype":"m.text"},"ts":1332973663000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zewt: From what I understand, we're screwed anyway. If it's not native-endian, performance-critical stuff like WebGL won't work.  If it is native-endian, naive use of the API will break on unexpected endianness.","msgtype":"m.text"},"ts":1332973671000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(and \"doesn't work\" is always a synonym for \"doesn't work\". The only way the curent situation could end well is if BE devices became so common that people had to test on both. I would bet on the opposite)","msgtype":"m.text"},"ts":1332973680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Luckily, the \"worst case\" that's been talked about (the author having to test and manually reorder bytes) doesn't exist once you have DataView.","msgtype":"m.text"},"ts":1332973698000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aklein: sorry, i don't remember enough of the spec. If you observer with attributeFilter == ['foo'], would you hear about changes to bar (in null namespace)?","msgtype":"m.text"},"ts":1332973715000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Which authors won't use...","msgtype":"m.text"},"ts":1332973717000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"DataView still isn't maximally convenient, but it doesn't seem hard to come up with usability improvements.","msgtype":"m.text"},"ts":1332973720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: web-compat trumps performance","msgtype":"m.text"},"ts":1332973721000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: no","msgtype":"m.text"},"ts":1332973723000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"-> sleep","msgtype":"m.emote"},"ts":1332973738000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zewt: Make up a new LE-only binary data that you can use for non-performance-critical stuff, then.","msgtype":"m.text"},"ts":1332973742000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aklein: ok. Then no. I don't think you should hear about someNamespace:bar, nor someNamespace:foo either","msgtype":"m.text"},"ts":1332973746000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"especially since the performance thing is meaningless (what BE platforms are there that this is actually optimizing for?)","msgtype":"m.text"},"ts":1332973759000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"aklein: so the if you have filter you wouldn't get records about any namespaced attribute changes","msgtype":"m.text"},"ts":1332973764000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"aklein: i.e. there would be an implicit \"null:\" on everything in the filter","msgtype":"m.text"},"ts":1332973765000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: ... sorry, what?","msgtype":"m.text"},"ts":1332973771000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I'm confused.  You are questioning whether there are any BE platforms worth optimizing for.  But then you complain that other APIs will break on BE platforms.","msgtype":"m.text"},"ts":1332973790000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Do you care about BE platforms or not?","msgtype":"m.text"},"ts":1332973796000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aklein: namespaced attributes are used extremely rarely. It's only used in SVG and XBL1 as far as I know","msgtype":"m.text"},"ts":1332973803000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: And SVG is dropping them in SVG2.","msgtype":"m.text"},"ts":1332973814000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sicking: yeah, I'd be fine with this for that reason","msgtype":"m.text"},"ts":1332973818000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"TabAtkins: woohoo!!!!","msgtype":"m.text"},"ts":1332973825000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"seems like DOM4 is trying to deprecate them too","msgtype":"m.text"},"ts":1332973827000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Fucking XLink.","msgtype":"m.text"},"ts":1332973830000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i've never claimed to care about BE platforms, but the argument that we need a broken spec that nobody would ever implement (if there ever were any) in order to optimize for those systems is just nonsense","msgtype":"m.text"},"ts":1332973834000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(at least by deemphasizing them in the spec text)","msgtype":"m.text"},"ts":1332973841000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: how is DOM4 trying to deprecate them?","msgtype":"m.text"},"ts":1332973845000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zewt: I'm still confused, though.  Your *vehement* objection to the current spec seems to be predicated on things breaking in BE platforms.","msgtype":"m.text"},"ts":1332973862000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug____: sorry, not \"deprecate\" so much as emphasizing the null namespace case","msgtype":"m.text"},"ts":1332973867000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"sicking: doesn't RDFa use namespaced attributes?","msgtype":"m.text"},"ts":1332973868000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"But then you dismiss arguments about performance on BE platforms.","msgtype":"m.text"},"ts":1332973880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"shepazu: please god no!","msgtype":"m.text"},"ts":1332973881000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"shepazu: No.","msgtype":"m.text"},"ts":1332973884000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it did at one point, I thought...","msgtype":"m.text"},"ts":1332973897000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"cares about web-compat and perf. on BE platforms","msgtype":"m.emote"},"ts":1332973898000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: my objection is that the spec is unimplementable, and doesn't reflect reality","msgtype":"m.text"},"ts":1332973900000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"smaug____: but this is why I don't care much about dropping them: I never use 'em","msgtype":"m.text"},"ts":1332973908000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1332973914000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"However, I don't think there's a solution that solves both.","msgtype":"m.text"},"ts":1332973917000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(unimplementable due to web compat, that is)","msgtype":"m.text"},"ts":1332973929000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Your charge of \"unimplementable\" is based on BE platforms having problems with it due to breakage.","msgtype":"m.text"},"ts":1332973936000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So once again, do you care about BE platforms or not?","msgtype":"m.text"},"ts":1332973946000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aklein: sicking: I'll file a spec bug","msgtype":"m.text"},"ts":1332973952000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"why are you asking me questions that I just answered?","msgtype":"m.text"},"ts":1332973953000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Because you'r enot answering them.","msgtype":"m.text"},"ts":1332973959000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i type fast enough already; I don't need practice","msgtype":"m.text"},"ts":1332973960000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"smaug____: awesome, thanks!","msgtype":"m.text"},"ts":1332973969000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"gsnedders: That's my fear.","msgtype":"m.text"},"ts":1332973972000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: If Ken can be proved wrong regarding the perf concerns, great.  But he is experience in this, so I'm inclined to trust him.  But I'm also clueless about this, so shrug.","msgtype":"m.text"},"ts":1332974001000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I'd rather go for web-compat and slow than no web-compat and fast in the short term.","msgtype":"m.text"},"ts":1332974014000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"which devices are BE? ARM-based, or what?","msgtype":"m.text"},"ts":1332974037000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"I don't know what the relative bottle-necks are with this stuff. Depends on what you're using them for.","msgtype":"m.text"},"ts":1332974039000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zewt: You keep dismissing the \"native endianness is needed for perf\" by saying \"who cares about perf on BE platforms?\". But then you argue against native-endianness by saying that it breaks on BE platforms.","msgtype":"m.text"},"ts":1332974048000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"shepazu: ARM is almost entirely LE now. Some MIPS stuff is.","msgtype":"m.text"},"ts":1332974051000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"shepazu: Yes, ARM is the major one.","msgtype":"m.text"},"ts":1332974053000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: What major ARM device is BE?","msgtype":"m.text"},"ts":1332974062000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(That can run a web browser)","msgtype":"m.text"},"ts":1332974069000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Maybe, but like I said, past a certain point \"slow\" means \"broken\" for things like games.","msgtype":"m.text"},"ts":1332974085000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: I have no clue.  I thought I'd been told that ARM is BE.","msgtype":"m.text"},"ts":1332974094000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Android, iOS, Sybmian, Windows Phone… they all use LE mode.","msgtype":"m.text"},"ts":1332974100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: specs that are interoperable and don't expose platform obscurities is much more important than performance on obscure platforms","msgtype":"m.text"},"ts":1332974107000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: Many RISC CPUs, ARM inc., are bi-endian.","msgtype":"m.text"},"ts":1332974113000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Most bi-endian CPUs nowadays are used in LE mode.","msgtype":"m.text"},"ts":1332974127000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: qualify: \"run a modern web browser\" (eg. with WebGL, ArrayBuffers, the rest)","msgtype":"m.text"},"ts":1332974127000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Pretty much that dfn","msgtype":"m.text"},"ts":1332974136000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zewt: Once again, that doesn't answer my question.  Bad perf, in certain contexts, is equivalent to \"broken\". So you're saying that it's bad that the API is broken in BE platforms under some circumstances, but it doesn't matter that it's broken in BE platforms under other circumstances.","msgtype":"m.text"},"ts":1332974197000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you can always get bad performance; you can't make that go away (you can always write WebGL apps that tax the GPU so that it's only practically usable on a desktop); so no, I don't consider slow as equivalent to broken","msgtype":"m.text"},"ts":1332974234000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: Bad perf in certain contexts or broken in most contexts is the option here.","msgtype":"m.text"},"ts":1332974235000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Your argument is thus inconsistent.  You could instead be arguing that you think perf is an irrelevant circumstance, but you haven't made that argument so far.","msgtype":"m.text"},"ts":1332974236000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you're the only one claiming that slow == broken","msgtype":"m.text"},"ts":1332974260000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: For games, it is.  Do you challenge that assertion?","msgtype":"m.text"},"ts":1332974281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For a game designed for 30fps, you can't reasonably play it at 3fps.","msgtype":"m.text"},"ts":1332974301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's functionally equivalent to the game throwing an error immediately, for all the good it does you.","msgtype":"m.text"},"ts":1332974319000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Most BE hardware with modern web browsers, even if content was delivered in BE form with native arrays, couldn't really push a 30fps game.","msgtype":"m.text"},"ts":1332974340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so you're saying WebGL is broken because it's possible to write a game that requires the fill rate of a $500 Geforce, and runs at .1FPS on a phone?","msgtype":"m.text"},"ts":1332974358000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the game doesn't work, but that's not a bug in the spec or the API","msgtype":"m.text"},"ts":1332974373000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"likewise, if byte swapping makes your app too slow to run, that's unfortunate but not a bug","msgtype":"m.text"},"ts":1332974395000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Strawman. It's definitely possible to design a game optimized for phone-level hardware.  The perf drop is then significant.","msgtype":"m.text"},"ts":1332974396000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm unsure why you think \"too slow to run\" isn't a problem.","msgtype":"m.text"},"ts":1332974414000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's not at all equivalent to the API being broken, which the spec currently is","msgtype":"m.text"},"ts":1332974451000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: Somehow we need a solution that allows interop in all cases, even with bad perf if you use the wrong API on the wrong hardware.","msgtype":"m.text"},"ts":1332974473000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"...it's exactly the same.  You use the API, it runs fine on your platform, but it's unusable on other platforms.","msgtype":"m.text"},"ts":1332974474000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's my opinion, on the whole.","msgtype":"m.text"},"ts":1332974481000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's equivalent to using the API and it erroring out on other platforms.","msgtype":"m.text"},"ts":1332974483000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm also a bit appalled that anyone with any web experience is actually seriously arguing that it's okay to force web developers to care about endianness","msgtype":"m.text"},"ts":1332974487000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"However, I think the shit has mostly sailed.","msgtype":"m.text"},"ts":1332974498000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So practically we might be unable to do little more than spec stuff as LE","msgtype":"m.text"},"ts":1332974523000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"any web intents people around?","msgtype":"m.text"},"ts":1332974529000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: I'm normally with you, but bad perf is *really* killer for gaming, which is a case I'd like to strongly support.  So I'd prefer something that doesn't have bad perf, and is easy to use in a compat way.","msgtype":"m.text"},"ts":1332974530000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: What I'm basically suggesting there is always a way to get native perf on a certain endianness, but there may be more ways to get bad, byte-swapping perf on it too, though the behaviour will always be consistent.","msgtype":"m.text"},"ts":1332974604000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Maybe.","msgtype":"m.text"},"ts":1332974642000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wonder if we can do something like make XHR return a DataView for \"arraybuffer\"?","msgtype":"m.text"},"ts":1332974654000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Probably not, now.","msgtype":"m.text"},"ts":1332974670000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A Uint8DataView makes the most sense, IMO","msgtype":"m.text"},"ts":1332974718000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ouch, that's the most confusing name imaginable :P","msgtype":"m.text"},"ts":1332974749000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"A DataView with UInt8 array-like behavior?","msgtype":"m.text"},"ts":1332974758000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Better than ClampedUint8DataView","msgtype":"m.text"},"ts":1332974762000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, no, I'm thinking of the arrays again.","msgtype":"m.text"},"ts":1332974775000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Duh.","msgtype":"m.text"},"ts":1332974776000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"For some reason I always think they're data views.","msgtype":"m.text"},"ts":1332974789000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins, annevk: \"They can't realistically search your entire set of OS fonts when attempting to render a page.\" ... well, that's exactly what Firefox does","msgtype":"m.text"},"ts":1332974804000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"if necessary","msgtype":"m.text"},"ts":1332974810000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"liked the ES record stuff that progressed too slowly and got preempted by this, because it could have let you describe the fields of your data so you get automatic byte-swapping.","msgtype":"m.emote"},"ts":1332974829000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"roc: I didn't know that!","msgtype":"m.text"},"ts":1332974832000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I assumed you had a normal font-stack with Last Resort at the end.","msgtype":"m.text"},"ts":1332974844000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So what's this \"LE mode\" I'm hearing about?  And what's its relevance to the discussion?","msgtype":"m.text"},"ts":1332975865000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I discovered yesterday that ARM CPUs can switch endianness on the fly with a single instruction","msgtype":"m.text"},"ts":1332975940000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1332975962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's hardcore","msgtype":"m.text"},"ts":1332975964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how does that actually work? i'd think changing the endianness of your pointers would do ... bad stuff","msgtype":"m.text"},"ts":1332975969000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"only affects math, maybe?","msgtype":"m.text"},"ts":1332975982000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"carefully\"","msgtype":"m.text"},"ts":1332975983000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1332975986000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"wear a helmet\"","msgtype":"m.text"},"ts":1332975991000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I assumed it affects all loads and stores","msgtype":"m.text"},"ts":1332976002000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"is the opcode MSHRMCLD?","msgtype":"m.text"},"ts":1332976036000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://www.doulos.com/knowhow/arm/Hints_and_Tips/Byte_Swapping/","msgtype":"m.text"},"ts":1332976041000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Oh, wow: \"Oops! Google Chrome could not connect to hint.fm","msgtype":"m.text"},"ts":1332976044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Other users are also experiencing difficulties connecting to this site, so you may have to wait a few minutes.\"","msgtype":"m.text"},"ts":1332976047000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's pretty cool. <3 anonymous usage data.","msgtype":"m.text"},"ts":1332976055000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"roc: I suppose that wouldn't help the GPU, though?","msgtype":"m.text"},"ts":1332976095000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There is a way to make the Web safe for BE machines. Have Chrome randomly emulate BE 10% of the time.","msgtype":"m.text"},"ts":1332976099000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i've proposed that kind of thing in the past","msgtype":"m.text"},"ts":1332976126000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what about big-endian systems with little-endian GPUs?","msgtype":"m.text"},"ts":1332976127000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(sorry, I had to say it)","msgtype":"m.text"},"ts":1332976129000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: yeah, I think what actually matters here is BE *GPUs*","msgtype":"m.text"},"ts":1332976136000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"e.g. my websocket design required the ua to randomise the order of headers in the handshake","msgtype":"m.text"},"ts":1332976138000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I keep proposing stochastic prefix inclusion.  It hasn't yet made it past the laugh test.","msgtype":"m.text"},"ts":1332976145000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: that sounds challenging to test, heh","msgtype":"m.text"},"ts":1332976158000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"But I feel like it's kinda close.","msgtype":"m.text"},"ts":1332976162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(a bit unreasonable to expect of servers, though)","msgtype":"m.text"},"ts":1332976186000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(That is, only release prefixed things to the release channel in X% of browsers.)","msgtype":"m.text"},"ts":1332976188000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(er, clients, I guess)","msgtype":"m.text"},"ts":1332976191000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"seems sort of questionable to expect people to introduce complexity (and therefore bugs) in order to reduce bugs","msgtype":"m.text"},"ts":1332976218000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"That's pretty much been the argument against it, yeah.","msgtype":"m.text"},"ts":1332976231000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But randomness is so useful!","msgtype":"m.text"},"ts":1332976235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So many things can be solved easier with randomness than with a deterministic process.","msgtype":"m.text"},"ts":1332976249000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"especially since it's expecting people to introduce bugs in *their* stuff, to reduce bugs in someone else's","msgtype":"m.text"},"ts":1332976251000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It seems to me that WebGL performance issues on BE machines could be solved in the driver.","msgtype":"m.text"},"ts":1332976386000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"No clue.","msgtype":"m.text"},"ts":1332976535000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"roc: Btw, if you're still interested in measurement APIs and such (improvements in the vein of getBoundingClientRect, etc.), we're gaining someone who wants to do spec/impl work and is interested in this.","msgtype":"m.text"},"ts":1332976582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ARMv7 apparently always reads instructions as little-endian (except for a legacy mode in the \"real-time\" profile which can optionally be hardwired to do big-endian); otherwise the endianness just affects all load/store instructions (including NEON ones) (not registers or arithmetic or anything)","msgtype":"m.text"},"ts":1332977032000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Looking at DataView in practice, I see why it's not expected to be used.  http://code.google.com/p/webglsamples/source/browse/hdr/hdr.js#235","msgtype":"m.text"},"ts":1332977053000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sheesh.","msgtype":"m.text"},"ts":1332977057000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You need to take an array buffer, wrap it in a data view, iterate over it with some moderately long boilerplate, and copy it into another array buffer.","msgtype":"m.text"},"ts":1332977094000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This could be made *enormously* more convenient to use.","msgtype":"m.text"},"ts":1332977102000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I don't see anything saying SETEND can only be used from privileged modes, so maybe it can actually be used arbitrarily by applications?)","msgtype":"m.text"},"ts":1332977216000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: If you didn't see it, lunch next week on tuesday.","msgtype":"m.text"},"ts":1332977351000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: awesome. at goog?","msgtype":"m.text"},"ts":1332977413000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1332977417000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hopefully with tantek too.","msgtype":"m.text"},"ts":1332977432000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"any idea what time?","msgtype":"m.text"},"ts":1332977436000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Let me check scrollback...","msgtype":"m.text"},"ts":1332977445000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"noon","msgtype":"m.text"},"ts":1332977463000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1332977475000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"added to calendar","msgtype":"m.text"},"ts":1332977512000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do we have a meeting place planned?","msgtype":"m.text"},"ts":1332977536000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not yet","msgtype":"m.text"},"ts":1332977635000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1332977638000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, i'm outta here. i'll be at San Jose's FRC regional the next three days. back monday.","msgtype":"m.text"},"ts":1332977668000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: what do you mean, \"Benoit's email\"?","msgtype":"m.text"},"ts":1332978349000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hmm, I'm missing email","msgtype":"m.text"},"ts":1332978480000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: \"FWIW, here is a way to do this that will always work and won't rely on \"luck\". The key idea is that by the time one draws stuff, all the information about how vertex attributes use buffer data must be known. ...\"","msgtype":"m.text"},"ts":1332978682000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I found it in the archives","msgtype":"m.text"},"ts":1332978701000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"uh, wait, what the","msgtype":"m.text"},"ts":1332978830000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"kenneth is actually talking about polymorphism dispatch overhead in Java as if it has any relevance to JS?","msgtype":"m.text"},"ts":1332978850000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"The implication, I assume, is that similar JITing concerns may apply.","msgtype":"m.text"},"ts":1332978918000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"supposes the most irritating case is if you have overlaps like \"char data[] = { 0x01, 0x02, 0x03 }; glVertexAttribPointer(a, 1, GL_SHORT, 0, 0, data); glVertexAttribPointer(b, 1, GL_SHORT, 0, 0, data+1);\", which should give one value 0x0102 and one 0x0203","msgtype":"m.emote"},"ts":1332978949000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but there's really no parallel, i think, between the way JS and Java dispatch works and optimizes","msgtype":"m.text"},"ts":1332978963000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Philip`: Ooh, that's true.","msgtype":"m.text"},"ts":1332978973000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(so you'd have to expand into non-overlapping arrays if you wanted to swap bytes)","msgtype":"m.text"},"ts":1332978978000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: is \"shoot the programmer in the head\" an acceptable answer?","msgtype":"m.text"},"ts":1332978982000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Damn, if you pack that way you can't early-swap at all.","msgtype":"m.text"},"ts":1332978985000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: I don't think it's explicitly undefined behaviour, so shooting the programmer is unlikely to be permitted, especially since it will violate the invariance requirements","msgtype":"m.text"},"ts":1332979022000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: it violates the \"you really, seriously need to be shot in the head\" requirement","msgtype":"m.text"},"ts":1332979045000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if WebGL was designed sanely, it just wouldn't allow that--but they're obsessed with trying to make WebGL just like OpenGL (a serious design mistake, if you ask me)","msgtype":"m.text"},"ts":1332979085000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(making it an overlay of it, so they don't have to actually define it all, is good, of course)","msgtype":"m.text"},"ts":1332979109000,"senderName":"zewt","senderId":"zewt@irc"}
]