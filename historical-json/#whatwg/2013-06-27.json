[
{"content":{"body":"I’ve written a JavaScript library to encode/decode HTML entities as per the HTML spec (since no fully compliant library seemed to exist). Source: http://mths.be/he Demo: http://mothereff.in/html-entities Let me know if you think of any edge cases it fails on.","msgtype":"m.text"},"ts":1372311296000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Hixie: needless to say, the entities.json file was extremely useful for this ^","msgtype":"m.text"},"ts":1372311342000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"are there any specs that specify quirks apart from quirks-mode, html, cssom and cssom-view?","msgtype":"m.text"},"ts":1372324140000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_, css-syntax?","msgtype":"m.text"},"ts":1372325121000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: those two quirks were moved back","msgtype":"m.text"},"ts":1372325133000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1372325164000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan_: thanks for the feedback. you mean like running this on http://mothereff.in/js-escapes (through dev tools)? var el = document.querySelector('textarea'); el.value = 'high surrogate: \\uD834 low surrogate: \\uDF06 surrogate pair in the wrong order: \\uDF06\\uD834'; el.oninput()","msgtype":"m.text"},"ts":1372326803000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"that returns the output I’d expect, but I’m probably missing something","msgtype":"m.text"},"ts":1372326833000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: yes. the other direction is typing &#xD800; in the lower textarea in http://mothereff.in/html-entities which throws here","msgtype":"m.text"},"ts":1372326879000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i meant http://mothereff.in/html-entities sorry","msgtype":"m.text"},"ts":1372326883000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"zcorpan_: ah, I see. `he.decode('&#xD800;')` works fine, it’s just that encodeURIComponent(surrogate) throws","msgtype":"m.text"},"ts":1372326981000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"zcorpan_: is it even possible to URLencode a lone surrogate?","msgtype":"m.text"},"ts":1372327003000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"probably not","msgtype":"m.text"},"ts":1372327034000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"matjas: \"Otherwise, if the number is in the range 0xD800 to 0xDFFF or is greater than 0x10FFFF, then this is a parse error. Return a U+FFFD REPLACEMENT CHARACTER.\"","msgtype":"m.text"},"ts":1372327151000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1372327160000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"adds a try/catch to avoid the error","msgtype":"m.emote"},"ts":1372327253000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: the output should be U+FFFD for &#xD800; per spec","msgtype":"m.text"},"ts":1372327301000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references","msgtype":"m.text"},"ts":1372327302000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"even &#xD834;&#xDF06; -> U+FFFD U+FFFD","msgtype":"m.text"},"ts":1372327347000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"holy shit","msgtype":"m.text"},"ts":1372327420000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"good catch!","msgtype":"m.text"},"ts":1372327425000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"you need to implement that table, too","msgtype":"m.text"},"ts":1372327471000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"e.g. &#x0; -> U+FFFD","msgtype":"m.text"},"ts":1372327484000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"&#x80; -> €","msgtype":"m.text"},"ts":1372327566000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"gsnedders, zcorpan_, hsivonen, abarth, Hixie_, others: add yourselves as reviewers for html5lib-tests at https://critic.hoppipolla.co.uk","msgtype":"m.text"},"ts":1372327582000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, while you're here...","msgtype":"m.text"},"ts":1372327605000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://webappsec-test.info/web-platform-tests/CSP/script-src/CSP_1_2.php","msgtype":"m.text"},"ts":1372327608000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: You too","msgtype":"m.text"},"ts":1372327613000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is that a sane thing to do?","msgtype":"m.text"},"ts":1372327619000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Seems pretty insane to me","msgtype":"m.text"},"ts":1372327655000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or at least, I think it *could* work","msgtype":"m.text"},"ts":1372327706000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it is likely to break people's assumptions when they try to gather test results","msgtype":"m.text"},"ts":1372327728000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So they will get 1 or 2 results but not 3","msgtype":"m.text"},"ts":1372327739000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's why I'm getting complained at :)","msgtype":"m.text"},"ts":1372327766000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"My test runner jumps to the next test before it's done","msgtype":"m.text"},"ts":1372327787000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1372327795000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's what I would expect","msgtype":"m.text"},"ts":1372327801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So I reply with \"don't do that\"? :)","msgtype":"m.text"},"ts":1372327831000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Isn't it possible to have all three tests defined in the top-most frame and report up the tree by hand?","msgtype":"m.text"},"ts":1372327844000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, that's the best idea I think","msgtype":"m.text"},"ts":1372327856000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(to reply \"don't do that\")","msgtype":"m.text"},"ts":1372327868000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"cc's jgraham ","msgtype":"m.emote"},"ts":1372327894000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan_: DOM defines quirks","msgtype":"m.text"},"ts":1372328215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_: and uses it to define compatMode","msgtype":"m.text"},"ts":1372328230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: so why does css-syntax not have the quirks inlined?","msgtype":"m.text"},"ts":1372329026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: removed because it belongs in Values, not in Syntax","msgtype":"m.text"},"ts":1372329071000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk, because we don't want them in syntax","msgtype":"m.text"},"ts":1372329072000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"whether it should be inlined or not is another question","msgtype":"m.text"},"ts":1372329091000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: that sounds reasonable","msgtype":"m.text"},"ts":1372329100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1372329584000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"also for getElementsByClassName","msgtype":"m.text"},"ts":1372329696000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: you could try looping through all possible charrefs from 0 to ffff and compare the output with what a browser gives from innerHTML","msgtype":"m.text"},"ts":1372330449000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: also, do you intend to support the different parsing mode that is used in attribute values?","msgtype":"m.text"},"ts":1372330527000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: Å gets turned into &angst; which isn't wrong but i expected &Aring;","msgtype":"m.text"},"ts":1372331077000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: are there some characters that you choose not to convert to entities? is that configurable? i notice that U+000A doesn't turn into &NewLine;","msgtype":"m.text"},"ts":1372331487000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: http://mothereff.in/html-entities throws when entering newlines in the \"encoded\" textarea","msgtype":"m.text"},"ts":1372331696000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok i think that's enough playing with it for now","msgtype":"m.text"},"ts":1372331707000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: when more than one named reference is possible for a given symbol, `he` uses the shortest one, or the one with the fewest uppercase symbols","msgtype":"m.text"},"ts":1372333334000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"hence &angst; instead of &Aring;","msgtype":"m.text"},"ts":1372333344000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: i see","msgtype":"m.text"},"ts":1372333353000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: i think &Aring; has better compat though in older browsers","msgtype":"m.text"},"ts":1372333382000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"also, it only escapes symbols that are not printable ASCII or <>\"'&","msgtype":"m.text"},"ts":1372333388000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"U+OOOA isn't printable ASCII","msgtype":"m.text"},"ts":1372333441000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i explicitly added \\n to the whitelist a few minor versions back","msgtype":"m.text"},"ts":1372333472000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1372333478000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"should it be configurable? i figured most of the time people wouldn’t want to use &NewLine;","msgtype":"m.text"},"ts":1372333498000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"(similarly, he will never output &plus; and stuff like that)","msgtype":"m.text"},"ts":1372333555000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"yeah i dunno, i was just curious if there was a rule","msgtype":"m.text"},"ts":1372333557000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":" support the different parsing mode that is used in attribute values → i need to look into that, but it sounds like a plan","msgtype":"m.text"},"ts":1372333599000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"maybe it'd be useful to opt to avoid named references if one wants better compat with old browsers","msgtype":"m.text"},"ts":1372333622000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"e.g. old IE doesn't support &apos;","msgtype":"m.text"},"ts":1372333659000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nor the 1000s of mathml entities","msgtype":"m.text"},"ts":1372333675000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"files issues for everything zcorpan says","msgtype":"m.emote"},"ts":1372333944000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Lovely","msgtype":"m.text"},"ts":1372334197000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"We've got sites depending on img.x working","msgtype":"m.text"},"ts":1372334209000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And then we've got sites depending on it not working","msgtype":"m.text"},"ts":1372334218000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"matjas: give zcorpan 1,000,000 SEK","msgtype":"m.text"},"ts":1372335597000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: interesting","msgtype":"m.text"},"ts":1372335658000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: do you have pointer to bugs?","msgtype":"m.text"},"ts":1372335677000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sees https://bugzilla.mozilla.org/show_bug.cgi?id=887660","msgtype":"m.emote"},"ts":1372335828000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: so webkit/blink/presto have x but IE10 doesn't","msgtype":"m.text"},"ts":1372336354000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: cannot reproduce the issue; WONTFIX","msgtype":"m.text"},"ts":1372336651000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: dang :-|","msgtype":"m.text"},"ts":1372336671000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham, ambv: am intending on pushing out a 1.0b2 over lunch (i.e., now)","msgtype":"m.text"},"ts":1372336784000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Great. Do you need any help?","msgtype":"m.text"},"ts":1372336802000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"ambv: https://github.com/html5lib/html5lib-python/pull/84","msgtype":"m.text"},"ts":1372336926000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: the previous order in \"Patches and suggestions\" was chronological","msgtype":"m.text"},"ts":1372336998000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"now it's dubious because to get \"alphabetical\" you'd have to sort by last name","msgtype":"m.text"},"ts":1372337024000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"We need to make the order clear, at least. :)","msgtype":"m.text"},"ts":1372337061000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(and last-name ordering is locale specific)","msgtype":"m.text"},"ts":1372337070000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"first name as well. Łukasz sorts after Luke and not after Zed.","msgtype":"m.text"},"ts":1372337157000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"I mean, that's a non-issue really, don't think I'm putting too much weight on it.","msgtype":"m.text"},"ts":1372337211000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"Yeah, I know.","msgtype":"m.text"},"ts":1372337217000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ordering stuff is hard.","msgtype":"m.text"},"ts":1372337223000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"tries to work out where fantasai should be in that list","msgtype":"m.emote"},"ts":1372337246000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ordering is indeed hard. Tell me about it… http://bugs.python.org/issue18244#msg191535","msgtype":"m.text"},"ts":1372337266000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"Look at GVR's response below :D","msgtype":"m.text"},"ts":1372337285000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"Hah, not even touching MRO.","msgtype":"m.text"},"ts":1372337315000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I try and *avoid* understanding it. :)","msgtype":"m.text"},"ts":1372337338000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ambv: https://github.com/html5lib/html5lib-python/pull/84/files - that better?","msgtype":"m.text"},"ts":1372337430000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://xkcd.com/541/","msgtype":"m.text"},"ts":1372337483000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Hixie_, you're writing down all those parsing edge cases somewhere, I hope?","msgtype":"m.text"},"ts":1372337774000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: For template?","msgtype":"m.text"},"ts":1372337965000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1372337973000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham, a critic question...","msgtype":"m.text"},"ts":1372338052000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You have select.repository { background-color: white; }","msgtype":"m.text"},"ts":1372338070000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1372338072000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And what's the difference between Reviewer and Watcher?","msgtype":"m.text"},"ts":1372338127000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I don't know why the background colour thing","msgtype":"m.text"},"ts":1372338715000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: A watcher is someone who gets the mail about a review but isn't allowed to mark changes as reviewed","msgtype":"m.text"},"ts":1372338742000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Seems not-so-useful","msgtype":"m.text"},"ts":1372338774000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So if there is some piece of code that you want to be able to comment on, but where you aren't the actual owner","msgtype":"m.text"},"ts":1372338786000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well we use it a fair bit in Opera","msgtype":"m.text"},"ts":1372338809000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Seems useful if you want to restrict who can review what, I guess","msgtype":"m.text"},"ts":1372338831000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It can be useful for learning bits of the code that you want to know better","msgtype":"m.text"},"ts":1372338832000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"On another note, did you see ehsan's PR?","msgtype":"m.text"},"ts":1372338847000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah, I commented onit","msgtype":"m.text"},"ts":1372338858000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's the wrong fix, I think","msgtype":"m.text"},"ts":1372338865000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Can you eyeball https://github.com/html5lib/html5lib-python/pull/84/files — it's purely a documentation change for 1.0b2","msgtype":"m.text"},"ts":1372338945000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: https://critic.hoppipolla.co.uk/r/187","msgtype":"m.text"},"ts":1372338953000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Will try to catch ehsan","msgtype":"m.text"},"ts":1372338990000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't want to page this in :)","msgtype":"m.text"},"ts":1372339002000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: lr+tm","msgtype":"m.text"},"ts":1372339016000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Does html5lib test character encoding detection? How do you store the tests, plain files?","msgtype":"m.text"},"ts":1372339145000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"With tears.","msgtype":"m.text"},"ts":1372339176000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-tests/tree/master/encoding","msgtype":"m.text"},"ts":1372339193000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I’m writing many CSS Syntax tests in few JSON files, considering what to do when the input needs to be bytes","msgtype":"m.text"},"ts":1372339243000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"We use unicode escapes then encode as ISO-8859-1 in places.","msgtype":"m.text"},"ts":1372339266000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Note that some JSON impls don't cope with characters in general category Cc as unicode escapes.","msgtype":"m.text"},"ts":1372339284000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I’m considering http://encoding.spec.whatwg.org/#x-user-defined","msgtype":"m.text"},"ts":1372339310000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"which uses \"private use\" characters to map 0x80~0xFF","msgtype":"m.text"},"ts":1372339390000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"It’s a shame the web does not have \"real\" ISO-8859-1, if only to encode bytes","msgtype":"m.text"},"ts":1372339639000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"We just take that attitude that you probably have a ISO-8859-1 encoder anyway. And if you don't, go implement one. It's not exactly hard.","msgtype":"m.text"},"ts":1372339694000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It’s not hard when you have a binary data type in your language ;)","msgtype":"m.text"},"ts":1372339767000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1372339826000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, had some weird issues with dom.js's HTML parser. :)","msgtype":"m.text"},"ts":1372339843000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: fixed/added everything you suggested, except for the attribute parsing: http://mothereff.in/html-entities","msgtype":"m.text"},"ts":1372340779000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: nice! here's a cookie! 🍪","msgtype":"m.text"},"ts":1372341221000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is it a tracking cookie?","msgtype":"m.text"},"ts":1372341321000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"it might be. but if it is, it stops tracking you when it leaves your body again.","msgtype":"m.text"},"ts":1372341405000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"unless that happens at Google. they collect that data (http://annevankesteren.nl/2010/04/no-joke-today)","msgtype":"m.text"},"ts":1372341455000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: the cookie would still stop tracking you when it leaves your body","msgtype":"m.text"},"ts":1372341558000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe it could plant something that stays in the body, like a virus or a parasite","msgtype":"m.text"},"ts":1372341605000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Can someone ask Hixie_ when he's around if all the setup about defining what objects are exposed in workers is done now in HTML?","msgtype":"m.text"},"ts":1372342667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I want to make it much clearer for XMLHttpRequest, FormData, URL, and URLQuery.","msgtype":"m.text"},"ts":1372342716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, and TextEncoder and TextDecoder. Anything else?","msgtype":"m.text"},"ts":1372342730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, too much email :(","msgtype":"m.text"},"ts":1372343731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: i’m probably oversimplifying my code but the attribute value parsing seems pretty simple to implement","msgtype":"m.text"},"ts":1372344806000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"he.decode('foo&ampbar', { 'isAttributeValue': true }); // 'foo&ampbar'","msgtype":"m.text"},"ts":1372344865000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: do you not expand it when the next char is alphanumeric or = ?","msgtype":"m.text"},"ts":1372345020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1372345335000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"i’ll push my commit soon. still wondering if I’m missing anything","msgtype":"m.text"},"ts":1372345354000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"https://github.com/mathiasbynens/he/commit/6816219031b1c1793a0dcbf29337411c2599e1a5","msgtype":"m.text"},"ts":1372346236000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"zcorpan_: if you wanna sanity-check the attribute parsing, reload mothereff.in/html-entities and test `he.decode()` in the console","msgtype":"m.text"},"ts":1372346578000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Actually found a bug in the URL standard, yay","msgtype":"m.text"},"ts":1372346796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1372346836000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"matjas: looks OK","msgtype":"m.text"},"ts":1372347069000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"ok. templates, day 3.","msgtype":"m.text"},"ts":1372349191000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: http://krijnhoetmer.nl/irc-logs/whatwg/20130627#l-634","msgtype":"m.text"},"ts":1372349587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1372349670000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"how do you mean?","msgtype":"m.text"},"ts":1372349682000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"workes and html is the same thing","msgtype":"m.text"},"ts":1372349689000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you mean like where do we say \"exposed\"?","msgtype":"m.text"},"ts":1372349716000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"search for \"exposed to javascript\"","msgtype":"m.text"},"ts":1372349758000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I guess what I'm wondering about is whether that's done","msgtype":"m.text"},"ts":1372349855000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably not","msgtype":"m.text"},"ts":1372349862000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i don't think i yet do it for Element and company, for instance","msgtype":"m.text"},"ts":1372349869000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: when you made that commit I seem to recall you wanted to do more","msgtype":"m.text"},"ts":1372349875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the main problem is \"The interfaces and exceptions defined by this specification, except where further restricted by explicit requirements in this specification\" is far too inclusive","msgtype":"m.text"},"ts":1372349881000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I cannot find the commit however :/","msgtype":"m.text"},"ts":1372349887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe i should just remove that","msgtype":"m.text"},"ts":1372349888000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"looks at blame","msgtype":"m.emote"},"ts":1372349893000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"7851?","msgtype":"m.text"},"ts":1372349910000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"just filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=22493","msgtype":"m.text"},"ts":1372349988000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"feel free to comment in that bug about what you think should be exposed","msgtype":"m.text"},"ts":1372349998000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yeah, which brought me to http://krijnhoetmer.nl/irc-logs/whatwg/20130424#l-597","msgtype":"m.text"},"ts":1372350017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not entirely sure what the \"relevant bug\" is","msgtype":"m.text"},"ts":1372350034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"relevant bug?","msgtype":"m.text"},"ts":1372350073000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh, zcorpan's comment","msgtype":"m.text"},"ts":1372350081000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1372350083000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"But okay, it seems I can use this for Event, Promise, URL, etc.","msgtype":"m.text"},"ts":1372350125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, zcorpan's comment is a truism","msgtype":"m.text"},"ts":1372350128000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm always intending to clarify things more :-)","msgtype":"m.text"},"ts":1372350133000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1372350150000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Will look into that tomorrow. It'd be good to have that a bit clearer in those specifications.","msgtype":"m.text"},"ts":1372350161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anything you'd rather i list explicitly in the workers section rather than have in dom or wherever, feel free to put in the bug above (22493)","msgtype":"m.text"},"ts":1372350186000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I feel like we should embrace workers as first-class citizens and that therefore it's better if we don't have magic lists.","msgtype":"m.text"},"ts":1372350236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lgtm","msgtype":"m.text"},"ts":1372350275000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rafaelw: ping","msgtype":"m.text"},"ts":1372351302000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heycam|away: \"dfn-consequential-interface\" isn't a real target.","msgtype":"m.text"},"ts":1372351696000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't understand why <title> triggers in-body mode when <link> doesn't.","msgtype":"m.text"},"ts":1372352351000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Trigger from where?","msgtype":"m.text"},"ts":1372352474000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(templates, I guess?)","msgtype":"m.text"},"ts":1372352483000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"<template>","msgtype":"m.text"},"ts":1372352483000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"<template><title></title><col> ends up in in-body mode, <col> is dropped. <template><link><col> ends up in colgroup mode, <col> and <link> end up as siblings.","msgtype":"m.text"},"ts":1372352537000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it strikes me that where the HTML spec refers to \"the rules given in the XML specification to map a string of bytes or characters into a Document object\", it's making stuff up","msgtype":"m.text"},"ts":1372356395000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"no such rules actually exist","msgtype":"m.text"},"ts":1372356398000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that's right, yeah","msgtype":"m.text"},"ts":1372356613000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"iirc there is no \"xml->dom\" spec, there's just the infoset doc","msgtype":"m.text"},"ts":1372356629000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"back","msgtype":"m.text"},"ts":1372358905000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"http://dev.w3.org/csswg/css-syntax/ -- is it a bug that the railroad diagrams on this page are missing?","msgtype":"m.text"},"ts":1372363830000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"is it me or is \"A host-including inclusive ancestor is either an inclusive ancestor or a host-including inclusive ancestor of an object's root's host, if any\" a confusing sentence?","msgtype":"m.text"},"ts":1372363898000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins, ^","msgtype":"m.text"},"ts":1372363910000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"Hixie_: That's... very confusing.","msgtype":"m.text"},"ts":1372363933000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok good","msgtype":"m.text"},"ts":1372363940000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"files bug","msgtype":"m.emote"},"ts":1372363942000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Jasper: Ooh, yeah, forgot about that bug.  Let me fix.","msgtype":"m.text"},"ts":1372363943000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Preprocessor seems to not like SVG or something.","msgtype":"m.text"},"ts":1372363955000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, ns0:svg ?? I don't think that will work...","msgtype":"m.text"},"ts":1372363975000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"Interesting...","msgtype":"m.text"},"ts":1372363986000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"No, it won't work.","msgtype":"m.text"},"ts":1372363988000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like, I don't think HTML5 has XML namespace support :)","msgtype":"m.text"},"ts":1372363993000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"(And I'm fairly happy with that)","msgtype":"m.text"},"ts":1372363997000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"The HTML parser doesn't give a crap about SVG namespace.","msgtype":"m.text"},"ts":1372363997000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=22496","msgtype":"m.text"},"ts":1372364011000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"gsnedders: Any clue how to make the lxml tree output SVG in a null namespace when embedded in HTML?","msgtype":"m.text"},"ts":1372364030000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rafaelw: ping?","msgtype":"m.text"},"ts":1372364240000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"gsnedders: Alternately, how to make html5lib just output <svg> elements as in the HTML namespace, to trick lxml into not putting namespaces on them?","msgtype":"m.text"},"ts":1372364896000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it puts prefixes on them?","msgtype":"m.text"},"ts":1372364931000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yeah, check the source of http://dev.w3.org/csswg/css-syntax/#token-diagrams","msgtype":"m.text"},"ts":1372364960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The <dl> down there is supposed to contain SVG diagrams.","msgtype":"m.text"},"ts":1372364972000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"just run a postprocessing step that strips the prefixes :-)","msgtype":"m.text"},"ts":1372365041000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Possible, but hacky and terrible. ;_;","msgtype":"m.text"},"ts":1372365061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonder what the CSSOM for @page *should* be. right now it's just wrong","msgtype":"m.text"},"ts":1372366400000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i wonder why <select><template> is important and whether that means we should support e.g. <ol><template>...","msgtype":"m.text"},"ts":1372366465000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"seems like it'd be a mess unless we require <template> to be at the top","msgtype":"m.text"},"ts":1372366478000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: doesn't html5lib's serializer do teh right thing?","msgtype":"m.text"},"ts":1372366488000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Why is it wrong?  I mean, it's terrible, but it seems to be the minimal possible correct interface.","msgtype":"m.text"},"ts":1372366489000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it doesn't represent the child at-rules","msgtype":"m.text"},"ts":1372366504000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh, but it's a CSSSTyleDeclaration.","msgtype":"m.text"},"ts":1372366504000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1372366508000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and includes all the properties","msgtype":"m.text"},"ts":1372366519000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I don't know what I'm doing, so I think I'm just using lxml's html serializer.","msgtype":"m.text"},"ts":1372366526000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: html5lib's documentation is... lacking, to say the least.","msgtype":"m.text"},"ts":1372366618000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"should we allow <hgroup><template> ?","msgtype":"m.text"},"ts":1372366628000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: <svg> roundtrips in anolis at least","msgtype":"m.text"},"ts":1372366632000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i don't see a use case...","msgtype":"m.text"},"ts":1372366640000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"wow, even <Table><template> is gonna be a minefield. i guess we should require that they be the first children of <table>.","msgtype":"m.text"},"ts":1372366667000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: is there a parsing problem with supporting <hgroup><template>?","msgtype":"m.text"},"ts":1372366690000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: not that i can see","msgtype":"m.text"},"ts":1372366703000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zcorpan: Do I use something like \"from html5lib.serializer import HTMLSerializer\"?","msgtype":"m.text"},"ts":1372366715000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: no idea. check the source of anolis, maybe?","msgtype":"m.text"},"ts":1372366748000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie_: With <template> being such a generic tool, any parsing limitations that don't have a strong reason for existing should be removed.","msgtype":"m.text"},"ts":1372366749000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm talking content models now, not parsing","msgtype":"m.text"},"ts":1372366763000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"for parsing i've done as much as i think is possible sanely.","msgtype":"m.text"},"ts":1372366778000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Oh, then yeah, allow it everywhere.","msgtype":"m.text"},"ts":1372366779000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, it can't be allowed everywhere, because of the parsing limitations","msgtype":"m.text"},"ts":1372366797000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Frex, <ol><template> is great when you have the auto-stamping templates.  <ol><template><li>...</template></ol>","msgtype":"m.text"},"ts":1372366813000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"content models are easy to change when people complain","msgtype":"m.text"},"ts":1372366823000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"e.g. <table> <tr> <template> </template> <tr> ... is gonna put it in the <tr>, not the <table>, so we probably want to encourage <template> to be before the <tr>s","msgtype":"m.text"},"ts":1372366826000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i've allowed it in <ol>","msgtype":"m.text"},"ts":1372366832000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"And the point is, <template> is just the generic \"how to do templating in HTML\" solution. If you can imagine someone ever producing some markup from a template in JS (which I totally can with the contents of an <hgroup>), it should be allowed.","msgtype":"m.text"},"ts":1372366874000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, that's fair","msgtype":"m.text"},"ts":1372366894000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"allow in the same places we allow <script>?","msgtype":"m.text"},"ts":1372366899000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: it's allowed in many more places than that","msgtype":"m.text"},"ts":1372366912000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zcorpan: e.g. in <ol>","msgtype":"m.text"},"ts":1372366917000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"why don't we allow <script> there?","msgtype":"m.text"},"ts":1372366930000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sweet lord this means <ruby>'s content model is going to get EVEN MORE complicated","msgtype":"m.text"},"ts":1372366931000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zcorpan: dunno, but we don't","msgtype":"m.text"},"ts":1372366938000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1372366949000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(we can consider changing that, but let's do that in a separate change!)","msgtype":"m.text"},"ts":1372366968000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ah! no! saved by phrasing content. ruby can remain no more complicated than it already is.","msgtype":"m.text"},"ts":1372367041000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hixie: sorry. here now.","msgtype":"m.text"},"ts":1372367091000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: hello sir!","msgtype":"m.text"},"ts":1372367130000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rafaelw: question for you","msgtype":"m.text"},"ts":1372367133000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"shoot.","msgtype":"m.text"},"ts":1372367136000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: any idea why the \"template contents\" insertion mode checks for 'A start tag whose name is one of: \"link\", \"script\", \"style\", \"meta\"', but not, e.g., \"base\"?","msgtype":"m.text"},"ts":1372367167000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rafaelw: meaning <template><link><col> ends up in colgroup mode, but <template><base><col> ends up in body mode and drops the col?","msgtype":"m.text"},"ts":1372367192000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the idea was that there would be a set of elements which didn't \"select the implied context element\"","msgtype":"m.text"},"ts":1372367217000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"link, script, meta, style was (mainly) the list I got from tab (& you, irrc) at the time.","msgtype":"m.text"},"ts":1372367243000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"i think it would be fine to add more elements to that list.","msgtype":"m.text"},"ts":1372367253000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1372367276000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"how about adding all the elements that are handled in \"head\" mode?","msgtype":"m.text"},"ts":1372367289000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that seems like the least arbitrary list","msgtype":"m.text"},"ts":1372367314000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what is that list?","msgtype":"m.text"},"ts":1372367331000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"(other than what we've already mentioned?","msgtype":"m.text"},"ts":1372367342000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"one sec","msgtype":"m.text"},"ts":1372367355000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"base\", \"basefont\", \"bgsound\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"","msgtype":"m.text"},"ts":1372367372000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: so should we raise a validator warning if you use a <template> in a specific place, e.g. <ol> or <colgroup>, and put elements inside it that are nonsensical there?","msgtype":"m.text"},"ts":1372367607000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I think it's reasonable to more or less treat <template> as transparent, yes.","msgtype":"m.text"},"ts":1372367634000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it seems like that would more likely be an error than not, no? and if you want to do a random template, you can always put it in flow content...","msgtype":"m.text"},"ts":1372367636000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"So it seems clear to me that <style> and <script> should not select the implied context.","msgtype":"m.text"},"ts":1372367661000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"TabAtkins: well, it can't be only transparent, since e.g. you want to allow those specific templates in random places in <body> and <head>, right?","msgtype":"m.text"},"ts":1372367670000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rafaelw: agreed","msgtype":"m.text"},"ts":1372367683000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Oh, true.","msgtype":"m.text"},"ts":1372367683000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the rest of the metadata elements I wonder whether they should select <head> as the implied context.","msgtype":"m.text"},"ts":1372367688000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: there doesn't seem to be an advantage to doing that. it would just prevent us from using those elements anywhere later.","msgtype":"m.text"},"ts":1372367733000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rafaelw: (e.g. as we have now with <link> and <meta>)","msgtype":"m.text"},"ts":1372367743000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"meaning <link> can now be used outside of head, e.g. for HTML Imports?","msgtype":"m.text"},"ts":1372367780000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"for microdata","msgtype":"m.text"},"ts":1372367789000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and meta?","msgtype":"m.text"},"ts":1372367797000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"link and meta in <body> are currently defined for microdata","msgtype":"m.text"},"ts":1372367810000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but they and the others could be used for other things, they parse just fine","msgtype":"m.text"},"ts":1372367824000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah. i mean, I guess it's ok to allow the metadata elements to not select the implied context.","msgtype":"m.text"},"ts":1372367834000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"it kind of breaks down the mental model we were shooting for, though.","msgtype":"m.text"},"ts":1372367843000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Jasper: Thanks for bugging me; the railroad diagrams are fixed now.","msgtype":"m.text"},"ts":1372367857000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rafaelw: what's the mental model?","msgtype":"m.text"},"ts":1372367864000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"which was that for any given input, you can point to a sane element which had you applied innerHTML to that element, it would have produced the same fragment.","msgtype":"m.text"},"ts":1372367872000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Not totally acheivable, but that was kind of the goal.","msgtype":"m.text"},"ts":1372367893000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"why does this break that?","msgtype":"m.text"},"ts":1372367905000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i.e. tr.innerHTML = <script><td> is ligit","msgtype":"m.text"},"ts":1372367918000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"(note that head.innerHTML uses 'in body', not 'in head')","msgtype":"m.text"},"ts":1372367933000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ah. Well, in that case.","msgtype":"m.text"},"ts":1372368033000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Go nuts!","msgtype":"m.text"},"ts":1372368034000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"zcorpan: It looks like CSSPageRule should inherit from CSSGroupingRule (to get the rule list stuff), and then expose attributes for all the properties (possibly in prose, so we can expand it without monkey-patching?  Maybe that's okay, since we can just do a partial interface.)","msgtype":"m.text"},"ts":1372368037000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rafaelw: k :-)","msgtype":"m.text"},"ts":1372368052000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yeah. I'm fine allowing metadata elements to not select the implied context.","msgtype":"m.text"},"ts":1372368088000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"I'll open a w3c bug to make sure the other editors are ok.","msgtype":"m.text"},"ts":1372368101000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"zcorpan: By \"that's okay\", I meant just writing the exposed properties directly into the interface definition.","msgtype":"m.text"},"ts":1372368109000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, they should be exposed on the .style attribute, that is.","msgtype":"m.text"},"ts":1372368141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Via a CSSPageDeclarations object or something.","msgtype":"m.text"},"ts":1372368157000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ugh, though that means we don't have all the declaration-handling stuff from CSSStyleDeclaration.","msgtype":"m.text"},"ts":1372368190000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We need to refactor some of that stuff.","msgtype":"m.text"},"ts":1372368196000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rafaelw: the other thing is that the template spec doesn't actually technically allow you to use template anywhere (like in <ol>, <table>, etc), is that just an oversight? we were talking before you got here of allowing it pretty much everywhere","msgtype":"m.text"},"ts":1372368213000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: i don't follow","msgtype":"m.text"},"ts":1372368214000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Never mind me.","msgtype":"m.text"},"ts":1372368227000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, just shift CSSPageRule to inheriting from CSSGroupingRule instead of CSSRule.","msgtype":"m.text"},"ts":1372368241000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That'll give you the appropriate stuff for it containing at-rules.","msgtype":"m.text"},"ts":1372368253000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=22501","msgtype":"m.text"},"ts":1372368359000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"TabAtkins: so cssRules would return the at-rules, and .style would give the margin declarations?","msgtype":"m.text"},"ts":1372368359000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1372368374000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's not a problem that style exposes everything under the sun while @page only supports margin?","msgtype":"m.text"},"ts":1372368403000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins, thanks!! This is why I love the web dev community..","msgtype":"m.text"},"ts":1372368429000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"As far as I can tell, it doesn't.  The declarations are just \"the CSS declarations associated with the object\".","msgtype":"m.text"},"ts":1372368443000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hixie: looking.","msgtype":"m.text"},"ts":1372368465000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"sure, but there are all properties are IDL attributes on CSSStyleDeclaration","msgtype":"m.text"},"ts":1372368482000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Should or shouldn't test cases dealing with unicode ranges include unassigned characters? XML test cases does, but it feels good and crazy","msgtype":"m.text"},"ts":1372368487000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"hixie: ok, let's take those one at a time.","msgtype":"m.text"},"ts":1372368521000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"so you could do pagerule.style.backgroundColor","msgtype":"m.text"},"ts":1372368526000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ah, got it.","msgtype":"m.text"},"ts":1372368526000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i know that <table><template> works.","msgtype":"m.text"},"ts":1372368539000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"there are tests for that in html5lib.","msgtype":"m.text"},"ts":1372368545000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"does it look like the spec doesn't allow it?","msgtype":"m.text"},"ts":1372368552000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"The clear answer is that we need to pull all the generic machinery out to a superclass, and then just have CSSStyleDeclaration inherit from that and apply the generic CSS properties.","msgtype":"m.text"},"ts":1372368557000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And page rules can do the same, but for the page properties.","msgtype":"m.text"},"ts":1372368573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, that seems like a sane way to do it","msgtype":"m.text"},"ts":1372368586000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"although you can't tell what order was used for at-rules and declarations, but i guess that's fine","msgtype":"m.text"},"ts":1372368617000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ol looks like it works as well.","msgtype":"m.text"},"ts":1372368645000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"what am i missing?","msgtype":"m.text"},"ts":1372368647000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: i'm not talking about parsing, i'm talking about document conformance requirements. what's allowed for authors to do.","msgtype":"m.text"},"ts":1372368662000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i.e. @page { @bottom-left {} margin:1em } and @page { margin:1em; @bottom-left {} } would be represented the same","msgtype":"m.text"},"ts":1372368673000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"document con-what-ance?","msgtype":"m.text"},"ts":1372368682000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"what's that?","msgtype":"m.text"},"ts":1372368696000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: the rules that html authors follow that decides that they can't put <p> inside <ol> or <li> inside <p>","msgtype":"m.text"},"ts":1372368714000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rafaelw: known in the trade as the \"content mdel\"","msgtype":"m.text"},"ts":1372368725000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"model","msgtype":"m.text"},"ts":1372368726000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"So, e.g. http://www.whatwg.org/specs/web-apps/current-work/multipage/tabular-data.html#the-table-element","msgtype":"m.text"},"ts":1372368760000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"TabAtkins: CSSFontFaceRule is inconsistent, maybe it should switch to .style after i fix CSSPageRule?","msgtype":"m.text"},"ts":1372368768000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe should say that it's content model is ... and *template*","msgtype":"m.text"},"ts":1372368777000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1372368779000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"its","msgtype":"m.text"},"ts":1372368787000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"zcorpan: Right, you can't tell order.  The only place where I imagine that'll ever matter is when we do @mixin or the equivalent, and we'll just have to figure that out when we come to it.","msgtype":"m.text"},"ts":1372368805000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(just trying to understand what part of the spec we are talking about)","msgtype":"m.text"},"ts":1372368811000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: right","msgtype":"m.text"},"ts":1372368814000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1372368820000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"That hadn't occurred to me =-(.","msgtype":"m.text"},"ts":1372368828000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"zcorpan: CSSCounterStyleRule is like CSSFontFaceRule.  When possible, I prefer exposing the attributes directly, rather than having to go through a .style indirection.","msgtype":"m.text"},"ts":1372368832000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rafaelw: (probably saying <template> has to be first, so people don't run into problems with implied end tags)","msgtype":"m.text"},"ts":1372368834000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rafaelw: it's no biggie","msgtype":"m.text"},"ts":1372368838000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rafaelw: i'll just add it all over the place","msgtype":"m.text"},"ts":1372368845000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Switching CSSPageRule to the @font-face style would be better imo. ^_^","msgtype":"m.text"},"ts":1372368854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Does that content model imply anything for implementations?","msgtype":"m.text"},"ts":1372368855000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: not to browser implementations, no","msgtype":"m.text"},"ts":1372368861000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Or is it purely communication to authors?","msgtype":"m.text"},"ts":1372368862000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1372368866000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"validators and authors","msgtype":"m.text"},"ts":1372368874000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and editors","msgtype":"m.text"},"ts":1372368876000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1372368879000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Ok. Yup, that makes sense.","msgtype":"m.text"},"ts":1372368884000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Thanks, once again =-)","msgtype":"m.text"},"ts":1372368915000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"TabAtkins: so at-rules via cssRules and margins exposed as hard-coded IDL attributes?","msgtype":"m.text"},"ts":1372368926000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rafaelw: np!","msgtype":"m.text"},"ts":1372368941000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zcorpan: Yeah.","msgtype":"m.text"},"ts":1372368949000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rafaelw: nearly done with this edit, just need to finish off the <template> section itself (element definition, idl, examples, etc)","msgtype":"m.text"},"ts":1372368965000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1372368967000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"That's my preferred solution, at least.","msgtype":"m.text"},"ts":1372368985000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Actually... if we follow the @font-face example, you don't need any of the CSSStyleDeclaration methods at all.","msgtype":"m.text"},"ts":1372369066000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They only exist to help with generic handling of the rule, since the number of potential attributes it could have is so large and continually-growing.","msgtype":"m.text"},"ts":1372369111000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For a single at-rule, the list is small and rarely-growing.","msgtype":"m.text"},"ts":1372369120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"should it have an attribute for the shorthand?","msgtype":"m.text"},"ts":1372369126000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1372369134000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you can set it in the rule, it should have an attribute.","msgtype":"m.text"},"ts":1372369144000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"most. complicated. content. model. ever.","msgtype":"m.text"},"ts":1372369155000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(Plus, we expand things into shorthands all the time, so you always have to treat shorthands and longhands the same, to aid with future expansion.)","msgtype":"m.text"},"ts":1372369184000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: Just to be sure, I'm bringing up the .style/direct question on the list, to make sure we have agreement.","msgtype":"m.text"},"ts":1372369355000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ok, thanks. i filed a bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=22500","msgtype":"m.text"},"ts":1372369388000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wow. we have no elements so far whose content model depends on what the parent element is, except those that are transparent.","msgtype":"m.text"},"ts":1372369505000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"how the heck did we last that long without content models that depend on context? that's amazing","msgtype":"m.text"},"ts":1372369520000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: hah, my definition of transparent means i can's use it here, because it means \"use the same part of hte content model in which this element was placed\", but for most cases, that's a part of the content model that just says \"zero or more template elements\"","msgtype":"m.text"},"ts":1372369649000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hm, that sounds weird.","msgtype":"m.text"},"ts":1372369687000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why is there any place with an explicit content model of \"zero or more template elements\"?","msgtype":"m.text"},"ts":1372369700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, that's what you mean by \"part of\"","msgtype":"m.text"},"ts":1372369718000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right, like, ol is zero or more template, followed by zero or more li","msgtype":"m.text"},"ts":1372369730000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so if i made template transparent, it would itself only allow zero or more templates...","msgtype":"m.text"},"ts":1372369743000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and no lis.","msgtype":"m.text"},"ts":1372369747000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Being able to mix <li> and <template> seems useful.","msgtype":"m.text"},"ts":1372369757000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah but <ul> <li> <template></template> <li> <li> </ul> doesn't do what you think it does","msgtype":"m.text"},"ts":1372369781000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"since <template> doesn't autoclose <li>","msgtype":"m.text"},"ts":1372369790000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Sure, but that's just the auto-closing rules.","msgtype":"m.text"},"ts":1372369791000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1372369811000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Only <li> closes an <li>.  (Or </ul>, or probably a few more less obvious cases I don't rely on.)","msgtype":"m.text"},"ts":1372369812000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"On the other hand, I have a use-case for mixing static <li>s at the start of the list with a bunch of dynamically-generated <li>s following.","msgtype":"m.text"},"ts":1372369836000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"My recipe app does this with the list of recipes on the week planner page.","msgtype":"m.text"},"ts":1372369857000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i suppose we could allow it","msgtype":"m.text"},"ts":1372369858000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It starts with \"Free Entry\" and \"Fasting\", and then lists all the actual recipes in the db.","msgtype":"m.text"},"ts":1372369874000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you gonna want <dl> <dt></dt> <template></template> <dd></dd> </dl>, or should i force <template> to replace entire groups in <dl>?","msgtype":"m.text"},"ts":1372369935000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Mixed.  I can see using <template> to just fill in <dd>s.","msgtype":"m.text"},"ts":1372369957000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Resist the urge to add nanny restrictions. ^_^","msgtype":"m.text"},"ts":1372369986000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't see them as restrictions, i see them as helpful ways to catch errors","msgtype":"m.text"},"ts":1372370010000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you can't force <template> to replace entire groups anyway. say you have <dl><dt><dd></dd> <template></template> <dt><dd></dl>, if the template inserts a dd it becomes part of the earlier group","msgtype":"m.text"},"ts":1372370135000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the content model of the <template> in that case could also be to have entire groups","msgtype":"m.text"},"ts":1372370174000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1372370187000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(but won't)","msgtype":"m.text"},"ts":1372370196000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok, so the current <dl> content model is: Zero or more groups each consisting of one or more dt elements followed by one or more dd elements.","msgtype":"m.text"},"ts":1372370293000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what should it be, to allow <template>?","msgtype":"m.text"},"ts":1372370300000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zcorpan: (btw if you want scripts allowed everywhere, it'll be trivial to make that happen once i've done all this work -- just make template and script have a new category, and replace \"template\" with that category everywhere in the content models. file a bug if you want that.)","msgtype":"m.text"},"ts":1372370421000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: ok","msgtype":"m.text"},"ts":1372370500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1372370667000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie_: you want something similar to transparent I guess, it's valid (almost?) anywhere so just ignore it for the purposes of the content model of the parent","msgtype":"m.text"},"ts":1372371230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so it was brought to my attention that actually you might well want any random content model","msgtype":"m.text"},"ts":1372373449000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"e.g. <ol><template>Hello</template></ol> might be used by a script to stamp out <li>s which it then fills with the template.","msgtype":"m.text"},"ts":1372373476000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah, I think <template> is basically anywhere and anything","msgtype":"m.text"},"ts":1372373605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<ol><template><td>hello</template></ol> ?","msgtype":"m.text"},"ts":1372373653000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: Yeah, our argument was that, at least for normal <template>, let it be anything, because you dont' know what it'll be used for.  When you mix in MDV and <template iterate>/etc, you can do content checking, because you have declarative knowledge of what it'll be used for.","msgtype":"m.text"},"ts":1372373662000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i've done that sort of thing with <tr>'s with manual templating for table entries, recall it being sort of annoying","msgtype":"m.text"},"ts":1372373667000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zcorpan: Nearly that exact example was used in our convo.  ^_^","msgtype":"m.text"},"ts":1372373684000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"anyone have a link to rafaelw's mdv spec, if such a thing exists? (not sure i know what i'm asking)","msgtype":"m.text"},"ts":1372373837000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"mdv? what's that?","msgtype":"m.text"},"ts":1372373850000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":";-)","msgtype":"m.text"},"ts":1372373851000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"There isn't a current \"spec\"","msgtype":"m.text"},"ts":1372373860000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"The spec is the code","msgtype":"m.text"},"ts":1372373863000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"btw tomorrow is my last day before several weeks of vacation, so if there's something i should fix tomorrow, lemme know :-)","msgtype":"m.text"},"ts":1372373864000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The design has evolved to the point that it is conceptually two additional primitives.","msgtype":"m.text"},"ts":1372373876000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"zcorpan: yeah, what if they are going to stamp an <li><table>...<tr><th>... and then append the template","msgtype":"m.text"},"ts":1372373889000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I'm planning to \"spec\" those (probably hand-wavy) to see if I can get anyone interested again.","msgtype":"m.text"},"ts":1372373894000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Anything in particular you are curious about?","msgtype":"m.text"},"ts":1372373908000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: the context is i'm trying to work out if there's a context in which more detailed content models (ways to catch authoring mistakes) would help","msgtype":"m.text"},"ts":1372373926000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rafaelw: so mostly i'm curious about what hte markup looks like","msgtype":"m.text"},"ts":1372373936000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i see. then, yeah, there are some examples here: https://github.com/Polymer/mdv/tree/stable/examples/how_to","msgtype":"m.text"},"ts":1372373976000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1372373983000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: fffffffffuuuuuuuuuu, <table> content model is even more insane to add <template> to arbitrarily","msgtype":"m.text"},"ts":1372374077000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Hahaha! Mine is an evil laugh!","msgtype":"m.text"},"ts":1372374093000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"seriously wtf, i don't even","msgtype":"m.text"},"ts":1372374108000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"finds a hack","msgtype":"m.emote"},"ts":1372374134000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\", optionally with one or more <code>template</code> elements between any of the other elements\"","msgtype":"m.text"},"ts":1372374165000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"should https://github.com/Polymer/mdv/blob/stable/examples/how_to/conditional_template.html be valid?","msgtype":"m.text"},"ts":1372374427000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: What are you trying to do!?","msgtype":"m.text"},"ts":1372374450000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: Trying to stop html5lib from putting foreign elements in a namespace?","msgtype":"m.text"},"ts":1372374477000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"seems like it shouldn't be using <ul>","msgtype":"m.text"},"ts":1372374521000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: I don't see anything weird in that spec?","msgtype":"m.text"},"ts":1372374522000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: Give me better bug reports, damn it! :P","msgtype":"m.text"},"ts":1372374552000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Basically, yeah.  ^_^  I fixed it by using html5lib's serializer, which I didn't realize was even available.  I was using lxml's serializer before.","msgtype":"m.text"},"ts":1372374619000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which only serializes as xhtml, and so puts the namespaces stuff on <svg>.","msgtype":"m.text"},"ts":1372374628000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: sounds like MikeSmith is gonna love you","msgtype":"m.text"},"ts":1372374659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Well, duh. lxml's serializer outputs XML. (Or does it have an HTML serializer?)","msgtype":"m.text"},"ts":1372374751000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: html5lib's serializer doesn't really work for foreign content, but does most of the time. Breaks when you have namespaced attributes on foreign content, I believe.","msgtype":"m.text"},"ts":1372374784000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Well, I kind of expect that \"html.tostring()\" would output html.  ^_^","msgtype":"m.text"},"ts":1372375028000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Luckily I don't care about namespaces stuff in foreign content.  I just copied code from anolis.","msgtype":"m.text"},"ts":1372375043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Oh, there is an html.tostring. But yeah, that just uses libxml2's HTML stuff. Which, as know, is shit.","msgtype":"m.text"},"ts":1372375550000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]