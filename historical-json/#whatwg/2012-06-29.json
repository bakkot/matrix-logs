[
{"content":{"body":"looks like once again i'm going to screw the one browser that followed the spec (opera in this case) in order to match the others who are all doing the same thing...","msgtype":"m.text"},"ts":1340931433000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(pushState vs base URLs)","msgtype":"m.text"},"ts":1340931445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"frowns","msgtype":"m.text"},"ts":1340931689000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"frowns?","msgtype":"m.text"},"ts":1340931768000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's an unfortunate state of afairs","msgtype":"m.text"},"ts":1340931796000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1340931803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks like, however, i might be able to just drop the \"document's current address\" concept","msgtype":"m.text"},"ts":1340931857000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and just have pushState() change the document's address directly","msgtype":"m.text"},"ts":1340931864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"man, this is huge","msgtype":"m.text"},"ts":1340932449000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the document's current address is dead! long live the now-mutable document's address!","msgtype":"m.text"},"ts":1340932478000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: shaving yaks in the way of my patch still, fwiw, just to update on progress","msgtype":"m.text"},"ts":1340934890000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I've got something best represented as a tree of urls. Can anyone speak to the proper use of CollectionPage in this instance?","msgtype":"m.text"},"ts":1340945808000,"senderName":"Stephen","senderId":"Stephen@irc"},
{"content":{"body":"Stephen: what is CollectionPage? If that is Java this might not be the right place","msgtype":"m.text"},"ts":1340955839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: so should we update the DOM with that iterator stuff?","msgtype":"m.text"},"ts":1340957840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yeah! so for things that are [ArrayClass], nothing needs to be done","msgtype":"m.text"},"ts":1340957868000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, can't remember what the state of [ArrayClass] is for NodeList and HTMLCollection","msgtype":"m.text"},"ts":1340957887000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, I think those two interfaces at least should have iterators","msgtype":"m.text"},"ts":1340957892000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, not sure whether it is worth have NodeList's iterator be a NodeIterator object or not","msgtype":"m.text"},"ts":1340957925000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"we have it for one of them still","msgtype":"m.text"},"ts":1340957929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, (as jorendorff's suggested)","msgtype":"m.text"},"ts":1340957932000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but WebKit hit issues with [ArrayClass]","msgtype":"m.text"},"ts":1340957943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh :(","msgtype":"m.text"},"ts":1340957947000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"mind you the iterator stuff hasn't been added to the ES6 spec yet","msgtype":"m.text"},"ts":1340957958000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"haven't seen much follow up though, so maybe they resolved themselves, but I doubt it","msgtype":"m.text"},"ts":1340957962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although there is agreement in TC39 for it to be added afaik","msgtype":"m.text"},"ts":1340957965000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1340957969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what was the issue?","msgtype":"m.text"},"ts":1340957972000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I guess I'll file a bug on the iterators then awaiting ES6","msgtype":"m.text"},"ts":1340957983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: compat iirc","msgtype":"m.text"},"ts":1340957991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"let me search my bugmail","msgtype":"m.text"},"ts":1340958000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, sounds good","msgtype":"m.text"},"ts":1340958011000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so yeah, it was on NodeList, HTMLCollection nobody thought was feasible, https://bugs.webkit.org/show_bug.cgi?id=81573 is the bug on adding it to NodeList in WebKit","msgtype":"m.text"},"ts":1340958050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: closure broke apparently","msgtype":"m.text"},"ts":1340958087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: always the Google properties that break...","msgtype":"m.text"},"ts":1340958097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1340958104000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1340958104000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"kudos to them I guess for pushing the platform, but too bad it makes it difficult to change it","msgtype":"m.text"},"ts":1340958166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1340958173000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"would be good to know what the specific breakage was","msgtype":"m.text"},"ts":1340958178000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"to see if it's something fundamental or something that could be worked around","msgtype":"m.text"},"ts":1340958187000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah, bugs don't say :(","msgtype":"m.text"},"ts":1340958290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arv prolly knows, but is also asleep I guess","msgtype":"m.text"},"ts":1340958300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CCs himself to the bug","msgtype":"m.emote"},"ts":1340958357000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh great, so DOM is discussed on public-script-coord too now","msgtype":"m.text"},"ts":1340958424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as long as it is discussed on a list you're subscribed too...","msgtype":"m.text"},"ts":1340958469000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"*to","msgtype":"m.text"},"ts":1340958473000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I guess","msgtype":"m.text"},"ts":1340958509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which reminds me, I guess I should subscribe to www-style again","msgtype":"m.text"},"ts":1340958517000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"since crazy won at the W3C (quelle surprise) and we're now using two mailing lists to discuss Fullscreen","msgtype":"m.text"},"ts":1340958548000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm up to ~2400 unread mails there","msgtype":"m.text"},"ts":1340958554000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"fffffffuuuuuuuuuuuu","msgtype":"m.text"},"ts":1340958581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"speaking of crazy, this is totally my new favourite spec title: https://lists.w3.org/Archives/Member/chairs/2012AprJun/0119.html","msgtype":"m.text"},"ts":1340958612000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=17648 is for iterators","msgtype":"m.text"},"ts":1340958618000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"goes off to enjoy his friday night","msgtype":"m.emote"},"ts":1340958862000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam|away: YOur link is pass protected","msgtype":"m.text"},"ts":1340959221000,"senderName":"Stephen","senderId":"Stephen@irc"},
{"content":{"body":"Stephen: Yeah \"Member\" in the url is like #secrettreehouse for W3C","msgtype":"m.text"},"ts":1340959311000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"what's \"Team\" then?","msgtype":"m.text"},"ts":1340959325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"#topofthetree ?","msgtype":"m.text"},"ts":1340959337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"#cabal","msgtype":"m.text"},"ts":1340959352000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"#secretfloorinthesecrettreehouse","msgtype":"m.text"},"ts":1340959356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: you mean that all interfaces that support that and do not have [ArrayClass] they need to define iterators in prose?","msgtype":"m.text"},"ts":1340960691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: prolly worth cc'ing heycam|away and making the suggestion somewhat more concrete","msgtype":"m.text"},"ts":1340960715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, that WebIDL puts an iterator() function on the prototype for all interfaces that support indexed properties","msgtype":"m.text"},"ts":1340960735000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"There's a thread over on script-cord","msgtype":"m.text"},"ts":1340960745000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"coord*","msgtype":"m.text"},"ts":1340960746000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that concluded with heycam|away adding IDL synta","msgtype":"m.text"},"ts":1340961167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"x","msgtype":"m.text"},"ts":1340961168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe I missed somewhat","msgtype":"m.text"},"ts":1340961174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"something*","msgtype":"m.text"},"ts":1340961177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1340961324000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That seems silly","msgtype":"m.text"},"ts":1340961327000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"fix it","msgtype":"m.text"},"ts":1340961399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll put it on my todo list :)","msgtype":"m.text"},"ts":1340961424000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie, I'm around now.  When you asked me, it was 12:30 AM my time, so . . .","msgtype":"m.text"},"ts":1340962100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Stephen: heycam link was to an announcement of a spec titled \"Registration and Discovery of Multimodal Modality Components in Multimodal Systems : Use Cases and Requirements\"","msgtype":"m.text"},"ts":1340962233000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"The length IDL attribute on the Window interface must return the number of child browsing contexts that are nested through elements that are in the Document that is the active document of that Window object, if that Window's browsing context shares the same event loop as the script's browsing context of the entry script accessing the IDL attribute; otherwise, it must return zero.\"","msgtype":"m.text"},"ts":1340965316000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Huh?","msgtype":"m.text"},"ts":1340965322000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"a) how do I trigger a situation in which the event loops aren't shared and b) is is really sensible to have implementation details about event loops exposed like this?","msgtype":"m.text"},"ts":1340965403000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean, I guess there are other ways it is exposed, but…","msgtype":"m.text"},"ts":1340965429000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that seems a bit weird","msgtype":"m.text"},"ts":1340965440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I can't work out how one might end up with a reference to a window using a different event loop","msgtype":"m.text"},"ts":1340965505000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Assuming the UA complies with the \"at most one event loop per unit of related browsing context\" text","msgtype":"m.text"},"ts":1340965543000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://www.webkit.org/blog/2082/tim-horton-is-now-a-webkit-reviewer/","msgtype":"m.text"},"ts":1340978864000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Free (canadian) coffee for the Webkit project?","msgtype":"m.text"},"ts":1340978864000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"wonders what a zero-size Blob is good for","msgtype":"m.emote"},"ts":1340983002000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"For avoiding complex special-casing in algorithms that want to return blobs of variable non-negative sizes?","msgtype":"m.text"},"ts":1340983112000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hello whatwg","msgtype":"m.text"},"ts":1340984845000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"a friend of mine wishes to make use of rel=feed. i suggested using rel=alternate with an ATOM MIME type. he considers that unclean somehow and hopes to change the standard by not using rel=alternate","msgtype":"m.text"},"ts":1340984886000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"karlcow: he's heard that one before. :)","msgtype":"m.text"},"ts":1340984888000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"what can i say besides “it is not supported anywhere a”","msgtype":"m.text"},"ts":1340984909000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i argue it is not semantic because the meaning of the predicate is not defined.","msgtype":"m.text"},"ts":1340984941000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"hober: I'm pretty sure a million times","msgtype":"m.text"},"ts":1340984953000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"so <link rel=feed href=\"http://example.org\"> would be <this document> <UNKNOWN PREDICATE> <http://example.org>","msgtype":"m.text"},"ts":1340984969000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"anyone can chime in on that issue?","msgtype":"m.text"},"ts":1340984976000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"anyone can chime in on that issue?","msgtype":"m.text"},"ts":1340985274000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Anyone have tests for Progress Events?","msgtype":"m.text"},"ts":1340985867000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"If I include a script on xmpl.com/host.html from xmpl.org/guest.js, what sec context does guest run under?  Can it access the cookies from both the xmpl.com and xmpl.org domains?","msgtype":"m.text"},"ts":1340988444000,"senderName":"n00lk0w","senderId":"n00lk0w@irc"},
{"content":{"body":"n00lk0w: <script>s always get run in the origin of the document that they're loaded from","msgtype":"m.text"},"ts":1340988919000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(i.e. the origin http://xmpl.com:80 in your example)","msgtype":"m.text"},"ts":1340988934000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: so, does that mean that if i include a script from google's CDN/jsapi, the request doesn't carry the user's google acct authcookie in the header?","msgtype":"m.text"},"ts":1340989104000,"senderName":"n00lk0w","senderId":"n00lk0w@irc"},
{"content":{"body":"and that the google cookie is completely unreadable to the ajax.googleapis.com server?","msgtype":"m.text"},"ts":1340989136000,"senderName":"n00lk0w","senderId":"n00lk0w@irc"},
{"content":{"body":"Philip`: Unless they set document.domain","msgtype":"m.text"},"ts":1340989471000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(which isn't relevant to the case at hand)","msgtype":"m.text"},"ts":1340989536000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"n00lk0w: If the user has any cookies associated with ajax.googleapis.com, those will be sent in the HTTP request to that server when loading .js files from it","msgtype":"m.text"},"ts":1340989895000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"n00lk0w: The origin thing just means that when the script code is executed on the client, it will have the same security privileges as if it were included directly in the containing document (so it won't have client-side access to cookies from ajax.googleapis.com)","msgtype":"m.text"},"ts":1340990046000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"smaug____: greetings. do you happen to know what sicking's referring to with his <iframe> paragraph in his latest response re parser-caused mutations?","msgtype":"m.text"},"ts":1340991602000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"smaug____: (fwiw, I think I found it: http://www.whatwg.org/specs/web-apps/current-work/#scripts-that-modify-the-page-as-it-is-being-parsed)","msgtype":"m.text"},"ts":1340993371000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"I like that the only way I learn about silly HTML WG things is twitter","msgtype":"m.text"},"ts":1340993959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Edward \"HTML bottleneck\" O'Connor","msgtype":"m.text"},"ts":1340993999000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you know me","msgtype":"m.text"},"ts":1340994803000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"aklein: (sorry, it was sauna time.) But yeah, I think sicking meant that.","msgtype":"m.text"},"ts":1340994892000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(and I think sicking is somewhere in Europe atm)","msgtype":"m.text"},"ts":1340994967000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1341000655000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jwalden: Any discussion anywhere/bug report about __proto__ in SM, BTW?","msgtype":"m.text"},"ts":1341011610000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: not yet, trying to fly under the radar until I have a completed patch","msgtype":"m.text"},"ts":1341011672000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"has one mostly completed now","msgtype":"m.emote"},"ts":1341011680000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Nice, large clean-up, I guess? :)","msgtype":"m.text"},"ts":1341011694000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"not too much, actually","msgtype":"m.text"},"ts":1341011706000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"the problem is the current way we do it depends on a lot of incidental side effects","msgtype":"m.text"},"ts":1341011727000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"which are not present if we make the stuff proper accessors","msgtype":"m.text"},"ts":1341011741000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Ah.","msgtype":"m.text"},"ts":1341011752000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"also various code that depends on those incidental side effects","msgtype":"m.text"},"ts":1341011757000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"brendan is right that it's more work to do it this way, and presents various transition hazards and potential for bugs","msgtype":"m.text"},"ts":1341011790000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"doesn't change that it's the right thing to do in the long run, tho","msgtype":"m.text"},"ts":1341011802000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"also the current way we're doing it, the current mechanism for properties like that, is quite under-understood, and it's been on my kill list for awhile","msgtype":"m.text"},"ts":1341011835000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"although in a longer-term sense, because a lot of stuff used it","msgtype":"m.text"},"ts":1341011852000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Ah, in our case it wasn't much of a clean-up apart from removing __proto__ special-casing in [[Get]], [[Put]] given we had a single (C++) method that actually did the mutation.","msgtype":"m.text"},"ts":1341011853000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SpiderMonkey is old, and it predates many of the specs","msgtype":"m.text"},"ts":1341011872000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"it has a lot of barnacles","msgtype":"m.text"},"ts":1341011876000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"far fewer now than six years ago when I first started hacking SpiderMonkey code, but still a bunch","msgtype":"m.text"},"ts":1341011890000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Yeah, Carakan doesn't really have that disadvantage, given it's only a few years old :)","msgtype":"m.text"},"ts":1341011902000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"we have a single method as well","msgtype":"m.text"},"ts":1341011909000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"the problem is that single method doesn't also contemplate various access checks needed to safely do/not do the mutation","msgtype":"m.text"},"ts":1341011925000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Of stuff like circular protos, or?","msgtype":"m.text"},"ts":1341011999000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Or stuff like cross-context?)","msgtype":"m.text"},"ts":1341012068000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"no, the central method does that","msgtype":"m.text"},"ts":1341012075000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"cross-context is the issue","msgtype":"m.text"},"ts":1341012098000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"cross-global object more precisely","msgtype":"m.text"},"ts":1341012103000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Ah. I believe we allow cross-context stuff, but any access will throw.","msgtype":"m.text"},"ts":1341012129000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"with the current magic property mechanism, it executes in the context of the object where the \"property\"'s being set","msgtype":"m.text"},"ts":1341012130000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"with accessors, not the case","msgtype":"m.text"},"ts":1341012134000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"also there's extra complexity for things like proxies -- Proxy.create(...).__proto__ will never hit the current mechanism, because it'll hit a getPropertyDescriptor trap or whatever, which can only expose accessors or data properties","msgtype":"m.text"},"ts":1341012179000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"so an accessor has to tiptoe a little more","msgtype":"m.text"},"ts":1341012191000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Yeah, not having implemented that yet probably helps :)","msgtype":"m.text"},"ts":1341012199000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"likely","msgtype":"m.text"},"ts":1341012214000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Also: reading up stuff I'd starred on es5-discuss is scary. Stuff like Function.caller not throwing despite being [[Writable]]: false in strict mode in Carakan.","msgtype":"m.text"},"ts":1341012489000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]