[
{"content":{"body":"anyone: what browsers implement the standardized gradient syntax?  gecko and ie alone?  or am I missing someone?","msgtype":"m.text"},"ts":1306195260000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: The CSS3 stuff?","msgtype":"m.text"},"ts":1306195320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jwalden: I believe we do.","msgtype":"m.text"},"ts":1306195321000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gecko implements a slightly older version of the syntax.  webkit implements the new syntax, though with some bugs.  opera and ie now implement the new syntax.","msgtype":"m.text"},"ts":1306195322000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so... \"shape\" of a compositing object (in this case — an image) is what's underspecified at the moment?","msgtype":"m.text"},"ts":1306195680000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1306195681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If shape were properly defined, the compositing behavior is trivial.","msgtype":"m.text"},"ts":1306195740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"should i bring it to the mailing list?","msgtype":"m.text"},"ts":1306195741000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"Go ahead, though I think it's been discussed before.","msgtype":"m.text"},"ts":1306195742000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, i'll check out archives","msgtype":"m.text"},"ts":1306195743000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"although... if the definition was to be specified, how will whatwg decide which one to pick? :)","msgtype":"m.text"},"ts":1306195800000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"introducing new mode would help of course","msgtype":"m.text"},"ts":1306195801000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"Just add a switch, and default to the majority (global, not shape-constrained).","msgtype":"m.text"},"ts":1306195920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"webkit is switching to the canvas specified model for canvas 2d shortly, btw","msgtype":"m.text"},"ts":1306195921000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"oh boy","msgtype":"m.text"},"ts":1306195922000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"meaning destination-in will clear every pixel that is fully transparent in the thingy being drawn","msgtype":"m.text"},"ts":1306195980000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"you can get the behavior you want most of the time by setting an explicit clip","msgtype":"m.text"},"ts":1306195981000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: explicit clip as in `clip()`?","msgtype":"m.text"},"ts":1306195982000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1306195983000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: that means you're confined to a set of low-level commands for creating your clipping path :)","msgtype":"m.text"},"ts":1306196040000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"instead of just drawing an image","msgtype":"m.text"},"ts":1306196041000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"well, images have rectangular clipping regions normally","msgtype":"m.text"},"ts":1306196042000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"so it's pretty easy to construct a clip around the image or whatever portion you want the composite operation to apply in","msgtype":"m.text"},"ts":1306196100000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"you can also expect that most values for globalCompositeOperation other than the default are buggy in current browsers","msgtype":"m.text"},"ts":1306196101000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"oh i know","msgtype":"m.text"},"ts":1306196102000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"but if you want to draw an image then normally you want to construct a rectangle around the image and clip() before drawing, if you only want to apply the composite operation inside the bounds of the image","msgtype":"m.text"},"ts":1306196160000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i won't be using this behavior in any case... due to such poor \"support\" of it, but wanted to get to the bottom of it","msgtype":"m.text"},"ts":1306196161000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"jamesr: i don't think that would help me, since clipping region would still be rectangular (just a bounding box of an image)","msgtype":"m.text"},"ts":1306196220000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"jamesr: if i'm understanding you correctly","msgtype":"m.text"},"ts":1306196280000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"what clipping region do you want?","msgtype":"m.text"},"ts":1306196281000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: non-rectangular of course","msgtype":"m.text"},"ts":1306196282000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"oh you want to use the opacity in the image?","msgtype":"m.text"},"ts":1306196283000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1306196284000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"it don't do that :)","msgtype":"m.text"},"ts":1306196285000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"webkit does :)","msgtype":"m.text"},"ts":1306196340000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"well, only by accident","msgtype":"m.text"},"ts":1306196341000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"it's not consistent if you use, say, gradients or patterns","msgtype":"m.text"},"ts":1306196342000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i undestand","msgtype":"m.text"},"ts":1306196343000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"well, TabAtkins says SVG has behavior similar to what I want and it seems like a pretty common use case — just clipping something to a non-rectangular, non-vector shape (image with transparent content being perfect candidate)","msgtype":"m.text"},"ts":1306196400000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"Clipping to a shape and clipping to the non-transparent regions are a bit different.","msgtype":"m.text"},"ts":1306196460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you can clip to a shape in canvas","msgtype":"m.text"},"ts":1306196461000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"but there's no notion of clipping to opacity","msgtype":"m.text"},"ts":1306196462000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: yeah, only vector one","msgtype":"m.text"},"ts":1306196463000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"You can do a <circle fill=\"transparent\" ... /> in SVG, which will apply the compositing op to the circle even though it's transparent.","msgtype":"m.text"},"ts":1306196464000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Use getImageData, create a path by tracing around every non-transparent pixel, call clip() - easy :-)","msgtype":"m.text"},"ts":1306196465000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"maybe i should just do this manually","msgtype":"m.text"},"ts":1306196520000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"Philip`: was just thinking that :)","msgtype":"m.text"},"ts":1306196521000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"can only imagine the resulting performance of something like this","msgtype":"m.text"},"ts":1306196522000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"i can also probably find all transparent pixels of masking image and then \"transparentize\" those same pixels on canvas","msgtype":"m.text"},"ts":1306196640000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"would have thought there must be an easier way to do this by drawing the image onto a large temporary canvas and then drawing that back onto the main canvas with appropriate compositing mode, to stop it depending on the inconsistent behaviour of compositing outside the source shape","msgtype":"m.emote"},"ts":1306196760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: it's not even that — FF considers image shape to be that of a box, not its opaque content","msgtype":"m.text"},"ts":1306197240000,"senderName":"kangax","senderId":"kangax@irc"},
{"content":{"body":"mumbles something abouyt 100+ post threads that have 100+ proposals and no use case descriptions","msgtype":"m.emote"},"ts":1306197420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`, what happens in the canvas 2d spec if you set the transform to something non-invertible, set the globalCompositeOperation, then do a draw?","msgtype":"m.text"},"ts":1306198740000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"it seems like firefox ignores the draw made with a non-invertible transform","msgtype":"m.text"},"ts":1306199040000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"instead of clearing everything","msgtype":"m.text"},"ts":1306199041000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: The transform matrix only applies to the shape, before it's drawn onto the infinite transparent bitmap","msgtype":"m.text"},"ts":1306199520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so the shape should map to nothing, and then the infinite transparent bitmap is composited?","msgtype":"m.text"},"ts":1306199521000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"The compositing is independent of transforms, so I believe so","msgtype":"m.text"},"ts":1306199580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/canvas/?c.clearRect%280%2C%200%2C%20640%2C%20480%29%3B%0Ac.save%28%29%3B%0Atry%20{%0A%20%20c.globalCompositeOperation%20%3D%20%22source-over%22%3B%0A%20%20c.fillStyle%3D%22red%22%3B%0A%20%20c.fillRect%280%2C%200%2C%20640%2C%20480%29%3B%0A%20%20c.fillStyle%20%3D%20%22blue%22%3B%0A%20%20c.fillRect%2820.5%2C%2020.5%2C%2050%2C%2050%29%3B%0A%20%20c.globalCompositeOperation%20%3D%20%22destination-in%22%3B%0A%","msgtype":"m.text"},"ts":1306199581000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"20%20c.setTransform%280%2C%200%2C%200%2C%200.5%2C%200%2C%200%29%3B%0A%20%20c.fillStyle%20%3D%20%22red%22%3B%0A%20%20c.fillRect%2810.5%2C%2030.5%2C%2020%2C%2020%29%3B%0A}%20finally%20{%0A%20%20c.restore%28%29%3B%0A}%0A","msgtype":"m.text"},"ts":1306199582000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"firefox just ignores the draw","msgtype":"m.text"},"ts":1306199583000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"and drawing the finite shape with e.g. scale(0,0) should presumably be about the same as drawing with scale(1e-300, 1e-300), i.e. vanishingly small","msgtype":"m.text"},"ts":1306199584000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"opera clears the whole world","msgtype":"m.text"},"ts":1306199640000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"k, seems like a firefox bug","msgtype":"m.text"},"ts":1306199641000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"webkit will soon clear everything","msgtype":"m.text"},"ts":1306199642000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"My desk is still greatly cluttered, so unfortunately it doesn't clear the whole world :-(","msgtype":"m.text"},"ts":1306199700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Sounds like clearing the canvas is the spec-compliant behaviour, though I think any consequences of degenerate transforms in the spec are pretty much accidental","msgtype":"m.text"},"ts":1306199760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"anyone have any input on the spec in regards to min/max widths?","msgtype":"m.text"},"ts":1306201260000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"I'm finding that both firefox and chrome treat min with a higher priority than max","msgtype":"m.text"},"ts":1306201320000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"actually, flat out negating the fact that max even exists","msgtype":"m.text"},"ts":1306201321000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"the situation in a table is where I have min-width and max-width both applied to a <td>","msgtype":"m.text"},"ts":1306201380000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"You talking about CSS min-width/max-width?","msgtype":"m.text"},"ts":1306201381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"in this case the min is the ONLY thing that even matters","msgtype":"m.text"},"ts":1306201382000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"the max isn't even acknowledged","msgtype":"m.text"},"ts":1306201383000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"The application of min/max to table-* elements is kinda weird.","msgtype":"m.text"},"ts":1306201440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes, CSS as you state","msgtype":"m.text"},"ts":1306201441000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"kinda?","msgtype":"m.text"},"ts":1306201442000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"bit of an understatement there","msgtype":"m.text"},"ts":1306201443000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"but the fact that gecko and webkit both treat this the same is double disturbing","msgtype":"m.text"},"ts":1306201444000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"I'm having an extremely hard time understanding how we can be working on things like css transitions when we can't even get something as simple as min-width/max-width finished and into the spec and implemented","msgtype":"m.text"},"ts":1306201500000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"it's probably one of the more fundamental styles, especially in regards to table layouts","msgtype":"m.text"},"ts":1306201560000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"Table layout is *completely* unspecified.","msgtype":"m.text"},"ts":1306201561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The 2.1 spec offers a suggested layout algorithm, but it doesn't match any browser in the details.","msgtype":"m.text"},"ts":1306201562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ugh!","msgtype":"m.text"},"ts":1306201620000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"everybody thinks the thing they care about is obviously more important than everything else","msgtype":"m.text"},"ts":1306201621000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: very true","msgtype":"m.text"},"ts":1306201622000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"but not being able to specify min and max widths for a table with lots of data causes unwanted wrapping results, making the data hard to read, etc","msgtype":"m.text"},"ts":1306201680000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"but I hardly see how something like css transitions could take precedence over something as basic as width styling","msgtype":"m.text"},"ts":1306201740000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1306201741000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"Because table layout works well enough, and nobody wants to spend time figuring out how to specify it properly.","msgtype":"m.text"},"ts":1306201742000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"even when this is pointed out people still insist the thing they care about is obviously more important than whatever else :)","msgtype":"m.text"},"ts":1306201743000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"But transitions are sexy and cool.","msgtype":"m.text"},"ts":1306201744000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1306201745000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"that's the problem","msgtype":"m.text"},"ts":1306201746000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"It's only a problem if you think table layout doesn't work properly.  Most people don't care.  ^_^","msgtype":"m.text"},"ts":1306201800000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I just want to say fuck tables and the horse they rode in on altogether at this point","msgtype":"m.text"},"ts":1306201860000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"you also seem to think that the people who work on transitions would be working on table layout if they weren't working on transitions. that is definitely not true","msgtype":"m.text"},"ts":1306201861000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: another good point","msgtype":"m.text"},"ts":1306201862000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"but seriously though, how hard is it to code up a min/max range...","msgtype":"m.text"},"ts":1306201920000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"Obeying all the other implicit constraints that make up the big ball of pain that is table layout?","msgtype":"m.text"},"ts":1306201980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: why would they come into play if these are specified?","msgtype":"m.text"},"ts":1306202040000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"Everything comes into play when you layout tables.","msgtype":"m.text"},"ts":1306202041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Imagine, for example, two cells that have \"min-width: 100px\", and a cell in another row that spans both columns and has \"max-width: 150px\".","msgtype":"m.text"},"ts":1306202100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Now imagine that, rather than fully overlapping, it only partially overlaps, so you either have to ignore the constraint or find some way to fit the non-overlapping part of the cell into 50px.","msgtype":"m.text"},"ts":1306202101000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"good point there, I'd fall back on the max in that case","msgtype":"m.text"},"ts":1306202102000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"min-width is pretty easy, all in all.  Given that table cells are BFCs, they already have implicit min-width constraints of the width of the longest word in their contents.","msgtype":"m.text"},"ts":1306202160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Max, though, just plain hurts.","msgtype":"m.text"},"ts":1306202220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if min-width is specified, it's the king","msgtype":"m.text"},"ts":1306202221000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"and then it just does whatever it wants","msgtype":"m.text"},"ts":1306202222000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"But you just said you'd honor max-width, ignoring the min-width on the other cells!","msgtype":"m.text"},"ts":1306202223000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I have multiple cells min-width: 70px","msgtype":"m.text"},"ts":1306202224000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"they are spanning to 95px on their own beyond the boundaries of the table width!","msgtype":"m.text"},"ts":1306202280000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"wdith: 77px !important doesn't even fix it","msgtype":"m.text"},"ts":1306202281000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1306202340000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"width*","msgtype":"m.text"},"ts":1306202341000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"I see the issues you present, but how to you explain that ^^ behavior?","msgtype":"m.text"},"ts":1306202400000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"s/to/do","msgtype":"m.text"},"ts":1306202401000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"I don't.  Like I said, table layout is unspecified. ^_^","msgtype":"m.text"},"ts":1306202402000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also, I'm out for the day.","msgtype":"m.text"},"ts":1306202403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"later","msgtype":"m.text"},"ts":1306202404000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"thought I'd show this around in here in case anyone has any tips. https://audiofile.cc/","msgtype":"m.text"},"ts":1306206900000,"senderName":"cgcardona","senderId":"cgcardona@irc"},
{"content":{"body":"cgcardona, LOL INTERNET. have you read the lilypond paper on why music is not really something representable with XML?","msgtype":"m.text"},"ts":1306208220000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"also, can you show me a demo? i cannot seem to find one.","msgtype":"m.text"},"ts":1306208221000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: no please post the link. The code you see at the top as well as the canvas are a live example","msgtype":"m.text"},"ts":1306208340000,"senderName":"cgcardona","senderId":"cgcardona@irc"},
{"content":{"body":"it's a new idea so thats the only example I have worth showing. After I get chords as well as sharps implemented i want to get some examples that change the notes with clicks and such","msgtype":"m.text"},"ts":1306208341000,"senderName":"cgcardona","senderId":"cgcardona@irc"},
{"content":{"body":"cgcardona, it might be this http://lilypond.org/doc/v2.12/Documentation/user/lilypond-learning/Background.html","msgtype":"m.text"},"ts":1306208640000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"the lilypond people may have stuff you might wish to use :)","msgtype":"m.text"},"ts":1306208641000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i'll check it out. thanks","msgtype":"m.text"},"ts":1306208700000,"senderName":"cgcardona","senderId":"cgcardona@irc"},
{"content":{"body":"saluton amikoj","msgtype":"m.text"},"ts":1306218120000,"senderName":"Akilo","senderId":"Akilo@irc"},
{"content":{"body":"notes that only FOs were filed as bugs","msgtype":"m.emote"},"ts":1306224780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if somebody had a different argument and voted No or Abstain, maybe repeat the argument in a bug?","msgtype":"m.text"},"ts":1306224840000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mysterious. The ICU-based check for max week of a year always seems to return 52","msgtype":"m.text"},"ts":1306229640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: No surprise there then","msgtype":"m.text"},"ts":1306229700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hahah, that ihatexml.py in html5lib  XD","msgtype":"m.text"},"ts":1306234860000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"still no editing action in the rel registry","msgtype":"m.text"},"ts":1306235340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder if that's going to change once MikeSmith redeploys the back end of validator.w3.org","msgtype":"m.text"},"ts":1306235400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"asmodai: jgraham is the wittiest of men.","msgtype":"m.text"},"ts":1306235820000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Given the contents of the file I think the name is aptly chosen.","msgtype":"m.text"},"ts":1306235821000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"based on google search suggestions for \"is <char>\", a lot of people are searching for \"is <person> gay\"","msgtype":"m.text"},"ts":1306236300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Wow","msgtype":"m.text"},"ts":1306236420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"f is the first letter where I didn't get at leats one suggest matching that pattern","msgtype":"m.text"},"ts":1306236421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although I did get \"is fish meat\"","msgtype":"m.text"},"ts":1306236480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So I am a little concerened with the general intelligience of people using Google","msgtype":"m.text"},"ts":1306236481000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"where as \"are <char>\" seems to mostly end with \"real\" and \"good for you\"","msgtype":"m.text"},"ts":1306236482000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: try \"is g\" :)","msgtype":"m.text"},"ts":1306236483000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Honestly the pattern is so widespreaed I suspect people gaming the results for giggles","msgtype":"m.text"},"ts":1306236660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or people are really interested in whether other people are gay","msgtype":"m.text"},"ts":1306236720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I suppose that is possible","msgtype":"m.text"},"ts":1306236780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"time to donate blood plasma","msgtype":"m.text"},"ts":1306236840000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm. Why does V.nu have unused floating point datatypes?","msgtype":"m.text"},"ts":1306239300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Maybe because the spec used to have floats until they got changed to doubles?","msgtype":"m.text"},"ts":1306239420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"has the spec changed back and forth as far as exponent allowability on input type=number goes?","msgtype":"m.text"},"ts":1306239780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I can't believe the validator has been wrong for 4 years with the correct code in the codebase as dead code","msgtype":"m.text"},"ts":1306239840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"can't be bothered to do full version control archeology research","msgtype":"m.emote"},"ts":1306239841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm rather shocked by the state of float handling in the validator","msgtype":"m.text"},"ts":1306240140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it looks like I almost fixed this stuff in 2007 and then forgot to take all the remaining steps","msgtype":"m.text"},"ts":1306240200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's also possible that Hixie has had something too crazy in the spec at a critical moment","msgtype":"m.text"},"ts":1306240201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"seriously, it's 2011 and we still get stuff like this in a spec: http://www.w3.org/WAI/PF/aria/complete#valuetype_number","msgtype":"m.text"},"ts":1306241160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"why does the PFWG ask me to state if I'm commenting on behalf of an organization and if the org is a W3C group, Member org or other?","msgtype":"m.text"},"ts":1306241400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Isn't http://www.w3.org/WAI/PF/aria/complete#typemapping the more relevant definition of \"number\"?","msgtype":"m.text"},"ts":1306241460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen: Because a comment from some W3C member could turn into a vote against the spec at PR at the AC level?","msgtype":"m.text"},"ts":1306241461000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: What would you rather the abstract model defined a number to be?","msgtype":"m.text"},"ts":1306241520000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.w3.org/WAI/PF/aria/complete#valuetype_number seems plausible as a definition of what XML Schema calls the value space, although then the problem is the value space can't be represented by the lexical representations listed in http://www.w3.org/WAI/PF/aria/complete#typemapping","msgtype":"m.text"},"ts":1306241640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(since they only do finite decimal numbers, not all real numbers)","msgtype":"m.text"},"ts":1306241641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but that's being a bit picky","msgtype":"m.text"},"ts":1306241642000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Filed http://www.w3.org/WAI/PF/comments/details?comment_id=357","msgtype":"m.text"},"ts":1306241760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I think that section just defines the abstract ARIA model, not specific to any syntax.","msgtype":"m.text"},"ts":1306241880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: OK. so the spec fails by not linking to that section","msgtype":"m.text"},"ts":1306241881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders: I see. I don't like this abstract stuff.","msgtype":"m.text"},"ts":1306241882000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: That subsubsection says \"These are generic types for states and properties, but do not define specific representation. See State and Property Attribute Processing for details on how these values are expressed and handled in host languages.\"","msgtype":"m.text"},"ts":1306241883000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which links to http://www.w3.org/WAI/PF/aria/complete#state_property_processing which links to http://www.w3.org/WAI/PF/aria/complete#typemapping","msgtype":"m.text"},"ts":1306241940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: ok.","msgtype":"m.text"},"ts":1306241941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(though it says it's non-normative)","msgtype":"m.text"},"ts":1306241942000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well, evidently, this is a readability failure","msgtype":"m.text"},"ts":1306241943000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Well, really, it's no worse from an abstraction POV than HTML5, which only clearly defines the element definitions as abstract in one or two easy to miss places","msgtype":"m.text"},"ts":1306242120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The undefinedness of how to lexically represent e.g. the aria-valuenow property with value 1/3 isn't great, but at least it's trying, whereas HTML5 only defines the mathematical concept of numbers as the consequence of a 140-word paragraph (and then defines a parsing algorithm that gives a different result)","msgtype":"m.text"},"ts":1306242300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"huh. Hixie has allowed capital E as the exponent separator at some point...","msgtype":"m.text"},"ts":1306243500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Consistency with what ES5 allows in ToNumber","msgtype":"m.text"},"ts":1306243620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.w3.org/Bugs/Public/show_bug.cgi?id=12739 oooh ipv6 address","msgtype":"m.text"},"ts":1306252260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"recommendations for a perl module for parsing e-mail messages?","msgtype":"m.text"},"ts":1306255620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"My recommendation would be not to use perl :)","msgtype":"m.text"},"ts":1306255680000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or to parse email messages","msgtype":"m.text"},"ts":1306255681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Peter`: hey, I remember you have tools to check mozilla and webkit repositories?","msgtype":"m.text"},"ts":1306255682000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"jgraham, ssh, I want him to parse them :)","msgtype":"m.text"},"ts":1306255683000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"if perl's good enough for Hixie, it's good enough for me","msgtype":"m.text"},"ts":1306255740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if there's a decent bugzilla library for python, I'd rather write it in python instead","msgtype":"m.text"},"ts":1306255800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I couldn't find any python bugzilla library","msgtype":"m.text"},"ts":1306255860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Surely the solution to any parsing problem is regexps","msgtype":"m.text"},"ts":1306255861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Rik`: Just WebKit and Chromium","msgtype":"m.text"},"ts":1306255920000,"senderName":"Peter`","senderId":"Peter`@irc"},
{"content":{"body":"Peter`: are they public tools ?","msgtype":"m.text"},"ts":1306255921000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"http://peter.sh/data/last-week/webkit/2011-20-monday.html","msgtype":"m.text"},"ts":1306255980000,"senderName":"Peter`","senderId":"Peter`@irc"},
{"content":{"body":"http://peter.sh/data/last-week/chromium/2011-20-monday.html","msgtype":"m.text"},"ts":1306255981000,"senderName":"Peter`","senderId":"Peter`@irc"},
{"content":{"body":"MikeSmith: Are these emails from random users that might be malformed etc?","msgtype":"m.text"},"ts":1306255982000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"They're hardly tools, just a more convenient list of changesets","msgtype":"m.text"},"ts":1306255983000,"senderName":"Peter`","senderId":"Peter`@irc"},
{"content":{"body":"I think Mozilla has python tools for interacting with bugzilla, but I don't know if the W3C instance has BZAPI set up","msgtype":"m.text"},"ts":1306255984000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Philip`, emails to public-html-comments","msgtype":"m.text"},"ts":1306255985000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Philip`: yeah","msgtype":"m.text"},"ts":1306255986000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"always wonders if bzapi is a intentional reference to bz-the-person","msgtype":"m.emote"},"ts":1306256040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(It looks like stuff like Email::Simple might be nice enough but it says \"you cannot expect it to cope well as the only parser between you and the outside world\" which presumably isn't ideal here)","msgtype":"m.text"},"ts":1306256041000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: OK","msgtype":"m.text"},"ts":1306256100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"has no personal experience of anything other than piping strings into sendmail, though","msgtype":"m.emote"},"ts":1306256101000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ms2ger: I don't think it does have BZAPI set up","msgtype":"m.text"},"ts":1306256102000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham, not afaik","msgtype":"m.text"},"ts":1306256103000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith, I'd argue that's your first step, then :)","msgtype":"m.text"},"ts":1306256160000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Peter`: that's exactly what I'm looking for, a more convenient way to list mozilla changesets","msgtype":"m.text"},"ts":1306256161000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"Ms2ger: Surely I can't be the only person who thinks of that when I see it though :)","msgtype":"m.text"},"ts":1306256162000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: it just exposes a REST API anyway, right?","msgtype":"m.text"},"ts":1306256163000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not bound to python clients","msgtype":"m.text"},"ts":1306256164000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1306256165000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Isn't the first step to upgrade to a newer bugzilla? Tht would solve lots of problems, right?","msgtype":"m.text"},"ts":1306256220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1306256221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and probably introduce a lot of others","msgtype":"m.text"},"ts":1306256222000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Rik`, I may have a look in setting this up for Mozilla as well, but won't have any bandwidth until next wek","msgtype":"m.text"},"ts":1306256223000,"senderName":"Peter`","senderId":"Peter`@irc"},
{"content":{"body":"week*","msgtype":"m.text"},"ts":1306256224000,"senderName":"Peter`","senderId":"Peter`@irc"},
{"content":{"body":"(https://github.com/toolness/pybugzilla, btw)","msgtype":"m.text"},"ts":1306256225000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: Maybe. But the W3C copy seems to be well behind","msgtype":"m.text"},"ts":1306256280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: and anyway, I have to work with what I have","msgtype":"m.text"},"ts":1306256281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Peter`: don't worry, I was just looking for an existing tool so I don't have to write it :)","msgtype":"m.text"},"ts":1306256340000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"mike][inq: f you wanted an upgrade you would presiumably point out that newer versions have more aria. Tht works like a cheat code, right? :)","msgtype":"m.text"},"ts":1306256400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: ping","msgtype":"m.text"},"ts":1306256401000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: pong","msgtype":"m.text"},"ts":1306256460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: that's a good point, actually","msgtype":"m.text"},"ts":1306256461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I didn't know they hard aria markup","msgtype":"m.text"},"ts":1306256462000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"apologieses if he disturbed mike][inq ","msgtype":"m.emote"},"ts":1306256463000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: are you aware that gradients in browsers don't actually have \"no intrinsic dimensions\"?  like, background-image: gradient; background-size: 5px; acts as though the gradient had an intrinsic aspect ratio equal to that of the background positioning area","msgtype":"m.text"},"ts":1306256520000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"wonders how well dbolter gets on with bugzilla","msgtype":"m.emote"},"ts":1306256521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: which seems a bit bizarre to me, but I'm not sure if you're trying to codify reality or codify a sensible behavior","msgtype":"m.text"},"ts":1306256580000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: the gradient itself has no dimensions.  The gradient, when used, acquires dimensions equal to the element's background area.","msgtype":"m.text"},"ts":1306256581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm not sure whether or not background-size:5px should affect things.  Maybe?","msgtype":"m.text"},"ts":1306256640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the way css3 says to negotiate background-size, something with no dimensions and no aspect ratio and only one dimension constrained is rendered as if for 'contain'","msgtype":"m.text"},"ts":1306256641000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"TabAtkins: which in that case means as large as possible while holding that specified dimension fixed","msgtype":"m.text"},"ts":1306256700000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"TabAtkins: so background-size: 5px should per current spec algorithms give you 5px by (other dimension of BPA)","msgtype":"m.text"},"ts":1306256701000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"TabAtkins: in browsers now it gives you 5px by (whatever length gives a ratio equal to that of the BPA)","msgtype":"m.text"},"ts":1306256760000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: Okay, so I've looked at the spec again.  That behavior *should* be a bug, but it's not entirely clear from the spec, because it's not well-defined how the background-properties map into the inputs to the size resolution algorithm in the Image Values spec.","msgtype":"m.text"},"ts":1306256880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The intent is that saying \"background-size:5px\" will make the \"specified size\" input be a 5px by 5px square, which immediately wins and sets the concrete object size to 5px by 5px.","msgtype":"m.text"},"ts":1306256940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"seems pretty clear to me how they map into the background-size algorithm in css3 b&b","msgtype":"m.text"},"ts":1306256941000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"which takes as inputs only intrinsic width/height/aspect ratio","msgtype":"m.text"},"ts":1306256942000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"fwiw I encountered this because I was implementing the css3 background-size algorithm for images partially or completely lacking intrinsic dimensions","msgtype":"m.text"},"ts":1306257180000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"and the change to make gradients have no intrinsic ratio tripped a couple tests we have that expect the current behavior, rather than the one css3 b&b + images seems to specify","msgtype":"m.text"},"ts":1306257240000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I do need to resolve precisely where background-size sits in the size resolution order.","msgtype":"m.text"},"ts":1306257300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jwalden: So, background-size actually repeats most of what's in the Image Values algorithm.","msgtype":"m.text"},"ts":1306257840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's possible","msgtype":"m.text"},"ts":1306257841000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"that seems bad","msgtype":"m.text"},"ts":1306257842000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"If you provide 0, 1, or 2 dimensions, the behavior is identical to the Image Values algorithm, with the dimensions being the \"specified size\".","msgtype":"m.text"},"ts":1306257900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"seems like images should delegate to css3 b&b for background-size, which *does* actually have a specified algorithm","msgtype":"m.text"},"ts":1306257901000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"unlike <img> or <object>","msgtype":"m.text"},"ts":1306257902000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"It should be the other way around, actually.  Image Values has the generic algorithm that everyone uses.","msgtype":"m.text"},"ts":1306257903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But the B&B module was written before I wrote that algorithm, thus the current state of affairs.","msgtype":"m.text"},"ts":1306257904000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But anyway, the current behavior (where the gradient takes the ratio of the box as its intrinsic ratio) is a bug.","msgtype":"m.text"},"ts":1306257960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It should size itself to the background-size box.","msgtype":"m.text"},"ts":1306257961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wait","msgtype":"m.text"},"ts":1306257962000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"so gradients *have* intrinsic dimensions then?","msgtype":"m.text"},"ts":1306257963000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1306258020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess I'm just confused how images would have anything more than a width (maybe), a height (maybe), and proportions (maybe)","msgtype":"m.text"},"ts":1306258021000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"That is all they have, which means we're miscommunicating somehow.","msgtype":"m.text"},"ts":1306258080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, a gradient indicated by linear-gradient(...) has more than that somehow, because it has a different width/height/ratio depending on the context that uses it","msgtype":"m.text"},"ts":1306258200000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"and the goal was, I thought, to make gradients a special case of images writ generally","msgtype":"m.text"},"ts":1306258201000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"That's completely expected.  You use a gradient as a background on a 200x100 box, the gradient will be resolved into a 200x100 image.","msgtype":"m.text"},"ts":1306258202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is described by the sizing algorithm.","msgtype":"m.text"},"ts":1306258260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Background-size *should* affect that computation, so writing \"width:200px; height:100px; background-size:5px;\" should resolve it into a 5x100 image.","msgtype":"m.text"},"ts":1306258261000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so \"Gradients have no intrinsic dimensions.\" in 5. Gradients is just flat-out wrong?","msgtype":"m.text"},"ts":1306258262000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"wait","msgtype":"m.text"},"ts":1306258320000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"No, it's correct.  I'm not sure what we're confusing each other over. ^_^","msgtype":"m.text"},"ts":1306258321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"background-size: 5px is b-s: 5px auto, which means the height is chosen to preserve the proportions of the image","msgtype":"m.text"},"ts":1306258322000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"which for a gradient that ostensibly is 200x100 means you'd have 5px 2.5px rendered","msgtype":"m.text"},"ts":1306258323000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Yes.  But gradients have no proportions before resolution, so it instead drops down to taking the height of the sizing area.","msgtype":"m.text"},"ts":1306258380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You're confusing yourself by thinking about things in the wrong order.","msgtype":"m.text"},"ts":1306258381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so, this idea of an image that doesn't have proportions, then does, is what's not represented by b&b","msgtype":"m.text"},"ts":1306258382000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"You're imagining it goes \"set size of element\" -> \"resolve gradient size\" -> \"apply background-size\".","msgtype":"m.text"},"ts":1306258383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jwalden: Well, it's unclear in B&B, because such a thing didn't exist at the time.","msgtype":"m.text"},"ts":1306258500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't think I'm imagining anything -- I'm simply reading b&b which says that the size of the background is determined by consulting the specified background-size, then resolving any auto/contain/cover using the intrinsic dimensions width, height, and ratio of the image","msgtype":"m.text"},"ts":1306258501000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"...yes?  That's correct, and consistent with what I've been saying.","msgtype":"m.text"},"ts":1306258502000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"which exist independent of context, as part of the image itself","msgtype":"m.text"},"ts":1306258503000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Can you give me a situation that you believe is resolving incorrectly?","msgtype":"m.text"},"ts":1306258504000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"200x100 box, with gradient, background-size: 20px auto; 1) width is 20px as specified; 2) \"An ‘auto’ value for one dimension is resolved by using the image's intrinsic ratio and the size of the other dimension, or failing that, using the image's intrinsic size, or failing that, treating it as 100%.\" => no intrinsic ratio to consult, no intrinsic size, fail to treating as 100% 3) rendered...","msgtype":"m.text"},"ts":1306258680000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"...size is 20px by 100px","msgtype":"m.text"},"ts":1306258681000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Yes, that's entirely correct.","msgtype":"m.text"},"ts":1306258682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What part of that do you think is inconsisten with what I've said?","msgtype":"m.text"},"ts":1306258683000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't","msgtype":"m.text"},"ts":1306258684000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"so I'm confused about how we're disagreeing, then, because I thought we were somehow","msgtype":"m.text"},"ts":1306258740000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"We aren't.  ^_^","msgtype":"m.text"},"ts":1306258741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well then!","msgtype":"m.text"},"ts":1306258742000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"glad that's settled","msgtype":"m.text"},"ts":1306258743000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Violent agreement it is!","msgtype":"m.text"},"ts":1306258744000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And, important note, the gradient itself is rendered into a 20x100 box, so color-stop positions done as lengths are resolved against that.  They're not resolved against a 200px-wide box and then scaled down to 20px-wide.","msgtype":"m.text"},"ts":1306258800000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"omg chome has --allow-all-activex flag","msgtype":"m.text"},"ts":1306263300000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"%)","msgtype":"m.text"},"ts":1306263301000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"krijnh: it seems that the yellow highlights and the hiding of joins/parts is broken again","msgtype":"m.text"},"ts":1306265520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ifette: yt?","msgtype":"m.text"},"ts":1306267380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hey","msgtype":"m.text"},"ts":1306267381000,"senderName":"ifette","senderId":"ifette@irc"},
{"content":{"body":"Hixie: yes","msgtype":"m.text"},"ts":1306267382000,"senderName":"ifette","senderId":"ifette@irc"},
{"content":{"body":"hey","msgtype":"m.text"},"ts":1306267383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are the protocol updates ready?","msgtype":"m.text"},"ts":1306267384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"our respective chairs are getting all antsy","msgtype":"m.text"},"ts":1306267440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dunno why they get to be antsy, but it is what it is","msgtype":"m.text"},"ts":1306267441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: there's a few other changes that need to make it out in -08, e.g. reviews that came in from the TSV area director, some changes around ping/pong, etc","msgtype":"m.text"},"ts":1306267442000,"senderName":"ifette","senderId":"ifette@irc"},
{"content":{"body":"I have a draft that incorporates hooks for you already","msgtype":"m.text"},"ts":1306267443000,"senderName":"ifette","senderId":"ifette@irc"},
{"content":{"body":"but there's a bit more work before it can be called -08","msgtype":"m.text"},"ts":1306267444000,"senderName":"ifette","senderId":"ifette@irc"},
{"content":{"body":"cool, that'll work","msgtype":"m.text"},"ts":1306267445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i will send it to you via email","msgtype":"m.text"},"ts":1306267446000,"senderName":"ifette","senderId":"ifette@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1306267500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doesn't really care about version numbers :-)","msgtype":"m.emote"},"ts":1306267501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's sent. I need to run, have a lunch meeting.","msgtype":"m.text"},"ts":1306267620000,"senderName":"ifette","senderId":"ifette@irc"},
{"content":{"body":"later","msgtype":"m.text"},"ts":1306267621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1306267622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think I defined everything (including how to send and receive data, sigh)","msgtype":"m.text"},"ts":1306267623000,"senderName":"ifette","senderId":"ifette@irc"},
{"content":{"body":"afk","msgtype":"m.text"},"ts":1306267680000,"senderName":"ifette","senderId":"ifette@irc"},
{"content":{"body":"ok let's see if i can find the things i was supposed to update!","msgtype":"m.text"},"ts":1306267681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aha, i have a folder for websocket issues","msgtype":"m.text"},"ts":1306267800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"perfect","msgtype":"m.text"},"ts":1306267801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, our implementers are getting antsy too ;)","msgtype":"m.text"},"ts":1306268040000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"they have a valid reason to be antsy","msgtype":"m.text"},"ts":1306268100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: if you saw my bug comment, I was truly just wondering where the discussion about API changes is happening. Since I don't recall such emails in WebApps","msgtype":"m.text"},"ts":1306268160000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Didn't mean to suggest anything else","msgtype":"m.text"},"ts":1306268220000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well, Hixie might know where the discussion about changes to WebSocket API is happening :9","msgtype":"m.text"},"ts":1306268280000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1306268281000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"In his IMAP folders? :)","msgtype":"m.text"},"ts":1306268282000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"whatwg, webapps, and w3c bugzilla","msgtype":"m.text"},"ts":1306268340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sicking mentioned something about adding open()","msgtype":"m.text"},"ts":1306268460000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I can't really find any email about that","msgtype":"m.text"},"ts":1306268461000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: have you looked at the bug?","msgtype":"m.text"},"ts":1306268462000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i have no plans to add open(), but there have been some mails about it","msgtype":"m.text"},"ts":1306268463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i haven't yet read all the feedback though","msgtype":"m.text"},"ts":1306268464000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: ah, you're awake!","msgtype":"m.text"},"ts":1306268465000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so maybe there is some reason to add it that i am not yet aware of","msgtype":"m.text"},"ts":1306268520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is in meeting","msgtype":"m.emote"},"ts":1306268521000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"oh, right, I'm not in EET, atm","msgtype":"m.text"},"ts":1306268522000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: last i looked, binary data and redirects were easier if we had .open","msgtype":"m.text"},"ts":1306268523000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"(so far the only argument i've seen is \"you can't hook the event listeners before the events fire if you don't have open()\", which is false)","msgtype":"m.text"},"ts":1306268524000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: i look forward to coming across the relevant feedback :-)","msgtype":"m.text"},"ts":1306268525000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i can't see how it would affect either of those, but i'm certainly happy to find out","msgtype":"m.text"},"ts":1306268580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: for binary data, you want to choose which format you want the result (blob or arraybuffer)","msgtype":"m.text"},"ts":1306268581000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: which you can do after opening, but you risk the UA wasting time converting","msgtype":"m.text"},"ts":1306268582000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, if you had time to look at http://www.w3.org/Bugs/Public/show_bug.cgi?id=12742 , that would be nice","msgtype":"m.text"},"ts":1306268640000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(Turns out someone is implementing meter)","msgtype":"m.text"},"ts":1306268641000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: on it","msgtype":"m.text"},"ts":1306268642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: couldn't you just give all that information as parameters to ctor?","msgtype":"m.text"},"ts":1306268643000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sicking: why would the UA spend any time converting? surely the behind-the-scenes storage is identical","msgtype":"m.text"},"ts":1306268644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: my plan was to just expose both","msgtype":"m.text"},"ts":1306268645000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: sure, but that means there's two APIs for choosing format. You need the ability to change format after receiving messages","msgtype":"m.text"},"ts":1306268700000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"aha","msgtype":"m.text"},"ts":1306268701000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ok, I thought there would be one socket for each type","msgtype":"m.text"},"ts":1306268702000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: if we first store to a blob, and then the page says \"i want array buffers\", we wasted time streaming to disk and then reading back into memory","msgtype":"m.text"},"ts":1306268703000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"(for each message, just do .getDataAsBlob() or .getDataAsArrayBuffer() or whatnot and once you've done it the shop is closed and that's it)","msgtype":"m.text"},"ts":1306268704000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: why would you stream to disk?","msgtype":"m.text"},"ts":1306268705000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: just have the blob be memory-backed","msgtype":"m.text"},"ts":1306268706000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: if you're receiving a huge thing","msgtype":"m.text"},"ts":1306268760000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"why would the size matter","msgtype":"m.text"},"ts":1306268761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you just memory map something that can be paged out","msgtype":"m.text"},"ts":1306268762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the whole reason you'd ever want to use blobs at all, is that the data is so large that you would rather not keep it in memory","msgtype":"m.text"},"ts":1306268763000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"that's the only reason you'd ever use a blob with websocket","msgtype":"m.text"},"ts":1306268764000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"or XHR","msgtype":"m.text"},"ts":1306268765000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"whether it's in the ram chips or the disk cache or the disk or any number of other places seems like something the OS should take care of","msgtype":"m.text"},"ts":1306268820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you just give the OS the pile of data, ask for some address space for it, and let it figure it out","msgtype":"m.text"},"ts":1306268821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: no, you don't want to have the same API for managing 4 bytes as for 4MB","msgtype":"m.text"},"ts":1306268822000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Ms2ger: in what sense is it ambiguous? i don't follow the bug.","msgtype":"m.text"},"ts":1306268823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that's the same reason we have different APIs for <video> and <img.","msgtype":"m.text"},"ts":1306268880000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"<img>","msgtype":"m.text"},"ts":1306268881000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"you need to think differently when you handle large amounts of data","msgtype":"m.text"},"ts":1306268882000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"we have different apis for <video> and <img> because <video> can be stopped and started and <img> can't","msgtype":"m.text"},"ts":1306268883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not because they are different sizes","msgtype":"m.text"},"ts":1306268884000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i disagree","msgtype":"m.text"},"ts":1306268885000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"as the person who wrote the api, i am pretty sure i'm confident of the reasoning that led to the api :-)","msgtype":"m.text"},"ts":1306268886000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the buffering APIs on <video> has nothing to do with start/stop","msgtype":"m.text"},"ts":1306268940000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"well sure, there's nothing to buffer for <img>, you always have to show all of it","msgtype":"m.text"},"ts":1306268941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1306268942000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"what's that got to do with 4 bytes vs 4 MB?","msgtype":"m.text"},"ts":1306268943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if the 4MB is a PNG, you need all of it","msgtype":"m.text"},"ts":1306268944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if the 400 bytes is a WebM video, you can use buffering APIs","msgtype":"m.text"},"ts":1306269000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so my point is that if you want to be able to manage large amounts of data, you need separate APIs for doing so efficently","msgtype":"m.text"},"ts":1306269001000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i don't think the size is the important factor here","msgtype":"m.text"},"ts":1306269002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if we had the same APIs for managing Blobs as for say Strings, people will write more inefficient code","msgtype":"m.text"},"ts":1306269003000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Strings vs Blob is a red herring, since the difference there is one of encodings","msgtype":"m.text"},"ts":1306269060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Blob vs ArrayBuffer is the better comparison","msgtype":"m.text"},"ts":1306269061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the difference there is just what you're goign to do with it, not the size","msgtype":"m.text"},"ts":1306269062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that doesn't make it a red herring","msgtype":"m.text"},"ts":1306269063000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"there are multiple differences I agree","msgtype":"m.text"},"ts":1306269120000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"you can have a 10 bytes Blob and a 10MB ArrayBuffer and not be doing anything wrong","msgtype":"m.text"},"ts":1306269121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, so, what would document.createElement(\"meter\").max return?","msgtype":"m.text"},"ts":1306269122000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"and vice versa","msgtype":"m.text"},"ts":1306269123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: except that you'll likely end up with inefficent code","msgtype":"m.text"},"ts":1306269124000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: you want APIs where expensive operations feel expensive, and cheap operations feel cheap","msgtype":"m.text"},"ts":1306269180000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so now after protocol delays we are going to have API delays before Web Sockets become an unprefixed interoperable part of the Web platform?","msgtype":"m.text"},"ts":1306269181000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: 0.0","msgtype":"m.text"},"ts":1306269182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: if by \"delays\" you mean \"a couple of days\"","msgtype":"m.text"},"ts":1306269183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: and Chrome continues to ship the non-prefixed old API/protocol","msgtype":"m.text"},"ts":1306269184000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sicking: sure","msgtype":"m.text"},"ts":1306269185000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: but that's not the difference here","msgtype":"m.text"},"ts":1306269240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: and copying 4 bytes and 4MB takes different time","msgtype":"m.text"},"ts":1306269241000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: Blob is about handling an opaque set of bytes, ArrayBuffer is about reading the bytes.","msgtype":"m.text"},"ts":1306269242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: how they are backed is an implementation concern not exposed in the API.","msgtype":"m.text"},"ts":1306269243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: nope","msgtype":"m.text"},"ts":1306269244000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: well, let's hope it's a just a couple of days plus one six-week development cycle","msgtype":"m.text"},"ts":1306269245000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: ArrayBuffer is opaque","msgtype":"m.text"},"ts":1306269246000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"That's what I thought, but the patch returns 1.0","msgtype":"m.text"},"ts":1306269247000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: better fix it then :-)","msgtype":"m.text"},"ts":1306269248000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: both ArrayBuffer and Blob represent a bag of bytes","msgtype":"m.text"},"ts":1306269249000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: a","msgtype":"m.text"},"ts":1306269300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1306269301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: which you can use other APIs to read from","msgtype":"m.text"},"ts":1306269302000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking, a bag does not impose ordering. an array does","msgtype":"m.text"},"ts":1306269303000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"sicking: true, i forgot about FileReader","msgtype":"m.text"},"ts":1306269304000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ArrayBuffer represents a size small enough that it makes sense to keep in memory","msgtype":"m.text"},"ts":1306269360000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"So, want to add, say, \"(For the purposes of reflection, these attributes don't have default values.)\"? :)","msgtype":"m.text"},"ts":1306269420000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sicking: i disagree that there is a size implication to Blob or ArrayBuffer.","msgtype":"m.text"},"ts":1306269421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: there's like a 100 attributes in the spec to which that would apply. It would just make the spec bigger without improving its quality.","msgtype":"m.text"},"ts":1306269422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: may i steal your editor argument? ;-)","msgtype":"m.text"},"ts":1306269423000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: you can certainly argue that the specs intended for there to be a difference","msgtype":"m.text"},"ts":1306269480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"K","msgtype":"m.text"},"ts":1306269481000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sicking: but they don't have one in the finished product","msgtype":"m.text"},"ts":1306269482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: they are certainly optimized for the usecase of being different size","msgtype":"m.text"},"ts":1306269483000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: people can always abuse any API if that's what you mean?","msgtype":"m.text"},"ts":1306269484000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: this is why ArrayBuffer allows synchronous access, but Blob does not","msgtype":"m.text"},"ts":1306269540000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: I would agree that ArrayBuffer is more optimal for in-memory data and Blob is more optimal for data that is stored on something with high latency","msgtype":"m.text"},"ts":1306269541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: but that's also independent of size","msgtype":"m.text"},"ts":1306269542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: if i have a gig of data in RAM, and one byte of data on a tape in an automated tape cassette deck system, it's gonna be quicker to read the entire gig than the one byte","msgtype":"m.text"},"ts":1306269600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: and ArrayBuffer would be appropriate for the former while Blob is appropriate for the latter","msgtype":"m.text"},"ts":1306269601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: and not vice versa","msgtype":"m.text"},"ts":1306269602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: right, so erm, i'm not gonna optimize the API for that computer","msgtype":"m.text"},"ts":1306269603000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"\"that computer\" is also called \"the cloud\"","msgtype":"m.text"},"ts":1306269660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"your cloud is backed by a one byte tape cassette?","msgtype":"m.text"},"ts":1306269661000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i didn't say the cassette only had one byte","msgtype":"m.text"},"ts":1306269720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i just meant that you had one byte of interest on the tape","msgtype":"m.text"},"ts":1306269721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and yes, the cloud is backed by tape backup","msgtype":"m.text"},"ts":1306269722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(q.v. http://gmailblog.blogspot.com/2011/02/gmail-back-soon-for-everyone.html)","msgtype":"m.text"},"ts":1306269723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so if you want a performant app, you should not use a ArrayBuffer that swaps to that disk","msgtype":"m.text"},"ts":1306269780000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"it'll work if you do, it'll just be slow","msgtype":"m.text"},"ts":1306269781000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"and you shouldn't use a blob for the 1GB in-memory file, since you would have to convert the Blob to an ArrayBuffer to read it","msgtype":"m.text"},"ts":1306269840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway i think the original argument is better expressed as \"we don't want to have to keep the whole thing in memory if we don't have to\"","msgtype":"m.text"},"ts":1306269841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so if the author can give a hint that the data won't be immediately read, that would be a good hint to give","msgtype":"m.text"},"ts":1306269842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1306269900000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1306269901000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"as long as i can choose if i want the next message as an arraybuffer or a blob i'm happy","msgtype":"m.text"},"ts":1306269902000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"and we can disagree what the use cases are :)","msgtype":"m.text"},"ts":1306269903000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"controlling the next message is probably not ideal either","msgtype":"m.text"},"ts":1306269904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if the server tells you \"i'm about to send a 1GB attachment\" and then sends it, it might be too late by the time you process the event for the warning message to help the UA with the next message","msgtype":"m.text"},"ts":1306269960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so what do you propose?","msgtype":"m.text"},"ts":1306269961000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"what you really want is a way for the script to tell the UA ahead of time which messages should be stored as Blobs and which shouldn't, or something like that...","msgtype":"m.text"},"ts":1306269962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1306270020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do binary messages have any metadata?","msgtype":"m.text"},"ts":1306270021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or as they straight binary data?","msgtype":"m.text"},"ts":1306270022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't know","msgtype":"m.text"},"ts":1306270023000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"s/as/are/","msgtype":"m.text"},"ts":1306270024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1306270025000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think it also depends on what the client side is going to use the data for","msgtype":"m.text"},"ts":1306270080000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"man, this protocol got way more complicated","msgtype":"m.text"},"ts":1306270081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if i know that all i'm gonna do with the data is to stick it in IndexedDB, then it's nice if i can just tell the socket to give me a blob","msgtype":"m.text"},"ts":1306270082000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"this is sort of similar to the responseType property on XHR","msgtype":"m.text"},"ts":1306270083000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"no metadata, it seems","msgtype":"m.text"},"ts":1306270140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with XHR, you ask for the data ahead of time, though","msgtype":"m.text"},"ts":1306270200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, i gotta take off","msgtype":"m.text"},"ts":1306270201000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"later","msgtype":"m.text"},"ts":1306270202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you are with websocket too, no? by connecting","msgtype":"m.text"},"ts":1306270203000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"websocket is full-duplex, not request-response","msgtype":"m.text"},"ts":1306270204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you don't know that the next packet you get is going to be what you last asked for","msgtype":"m.text"},"ts":1306270260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it could be a random update","msgtype":"m.text"},"ts":1306270261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure, i'm not sure I see the difference thoguh","msgtype":"m.text"},"ts":1306270262000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"say you ask for a big image you want to store somewhere","msgtype":"m.text"},"ts":1306270320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so you set the websocket object to give you a blob","msgtype":"m.text"},"ts":1306270321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but the next message you get from the server is a binary status message","msgtype":"m.text"},"ts":1306270380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and only then do you get the big image","msgtype":"m.text"},"ts":1306270381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, that can easily be solved on a app level","msgtype":"m.text"},"ts":1306270382000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"just send one message saying what's about to come next","msgtype":"m.text"},"ts":1306270383000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"by the time you are processing that message, it's too late","msgtype":"m.text"},"ts":1306270384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that message and the binary data will probably all be read from the same IP packet and processed by the UA before any events are fired","msgtype":"m.text"},"ts":1306270440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it's that small amount of data then it doesn't really matter though","msgtype":"m.text"},"ts":1306270441000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"the implementation can just create a memory backed blob","msgtype":"m.text"},"ts":1306270442000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"effectively the same thing happens with XHR","msgtype":"m.text"},"ts":1306270500000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"you're going to be getting a lot of data very quickly","msgtype":"m.text"},"ts":1306270501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"by the time you fire the HEADERS_RECEIVED event, the body will be full on streaming","msgtype":"m.text"},"ts":1306270502000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"if the main UI thread is busy doing something like whosing an alert(), you're going to get the whole 4MB before you have had a chance to tell the script about the warning message","msgtype":"m.text"},"ts":1306270503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1306270560000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"same thing with XHR","msgtype":"m.text"},"ts":1306270561000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"well i can't speak for XHR's design","msgtype":"m.text"},"ts":1306270562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the page can just choose not to put up an alert","msgtype":"m.text"},"ts":1306270563000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"this is all about giving the page the tools to manage its resources","msgtype":"m.text"},"ts":1306270564000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"it can do so well, or it can do so crappily","msgtype":"m.text"},"ts":1306270620000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"are we talking about an API that forces teh response to be just one type, like XHR, or an API that gives a hint but doesn't preclude getting the other type?","msgtype":"m.text"},"ts":1306270621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't think it's realistic to expect a whole event loop spin to occur fast enough after the first message is processed to be useful for the next message","msgtype":"m.text"},"ts":1306270680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, if the app strings two messages together, it's got basically the same capabilities as XHR, right?","msgtype":"m.text"},"ts":1306270681000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i can't speak for XHR's design. As far as I can tell, allowing responseType to be set in the headers stage nullifies any implementation benefit for that API.","msgtype":"m.text"},"ts":1306270740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"out of curiosity, what bandwidth are you envisioning?","msgtype":"m.text"},"ts":1306270741000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"well i dunno. in some parts of the world we're still talking 24kbps, but in other parts of the world we're seeing deployment of residential terabit broadband","msgtype":"m.text"},"ts":1306270860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but since the cpu is probably somewhat proportional to the bandwidth, i doubt that matters much","msgtype":"m.text"},"ts":1306270861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my experience is that downloading 4MB takes a lot longer than spinning the event loop a couple of times","msgtype":"m.text"},"ts":1306270920000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"but i haven't run any numbers","msgtype":"m.text"},"ts":1306270921000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ok, taking off for real","msgtype":"m.text"},"ts":1306270980000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"seems like the better solution is to just have the UA stream to memory at first, then past a dynamic threshold switch to streaming to disk","msgtype":"m.text"},"ts":1306271100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the threshold being derived by inspection, based on the frequency with which getAsBlob() is called vs getAsBuffer() for each particular size","msgtype":"m.text"},"ts":1306271160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe on a per-origin basis","msgtype":"m.text"},"ts":1306271161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"although i have to wonder, won't many protocols consist of a binary prefix saying what kind of data it is followed by something to be read as a blob?","msgtype":"m.text"},"ts":1306271220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"instead of a text frame followed by a binary frame?","msgtype":"m.text"},"ts":1306271221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess the latter is easier with this api","msgtype":"m.text"},"ts":1306271280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://bit.ly/iUaRu8 - Is it just me, or are the controls coming out red? (in chrome, fine in firefox)","msgtype":"m.text"},"ts":1306271281000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"And just to make sure I'm not crazy, \"input\" should *not* work in css for \"audio\" controls, correct?","msgtype":"m.text"},"ts":1306271340000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"They shouldn't.  But they do, because our implementation is bad right now.","msgtype":"m.text"},"ts":1306271400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Near future, controls will be properly hidden under a shadow dom, and won't match selectors in the outer page.","msgtype":"m.text"},"ts":1306271401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: kaykay, thanks!","msgtype":"m.text"},"ts":1306271640000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"Hixie: Just published Lists WD, a full 8.5 years after your last WD.  I know that's a record in CSS; I wonder how it compares across the W3C?","msgtype":"m.text"},"ts":1306272540000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: meh, publishing WDs is so last decade","msgtype":"m.text"},"ts":1306272660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Whatevs.","msgtype":"m.text"},"ts":1306272720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"last decade, or, well, 8.5 years ago at any rate","msgtype":"m.text"},"ts":1306272840000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: Section 7 Using Content as Markers: The 'marker' value for 'display'... Did you mean to have 'same as CSS2.1' listed for each property?","msgtype":"m.text"},"ts":1306272841000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"bfrohs: Yes.  The preprocessor that generates the property table at the end gets angry without all the values.","msgtype":"m.text"},"ts":1306272900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]