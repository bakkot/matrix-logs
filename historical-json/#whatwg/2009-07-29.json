[
{"content":{"body":"annevk2: for file upload i'm waiting for arun's draft","msgtype":"m.text"},"ts":1248825600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the spec says that WebSocket is to app-level protocols what TCP is to internet protocols","msgtype":"m.text"},"ts":1248825660000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: if you're targeting TTY instead of TCP, please say so :)","msgtype":"m.text"},"ts":1248825661000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: so yes, send() can of course return how much space there's in UA queue at the moment (I was thinking about kernel queue, and this data is usually unavailable)","msgtype":"m.text"},"ts":1248825720000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: it feels quite weird to report implementation details in this way though","msgtype":"m.text"},"ts":1248825721000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"it should probably be a percentage or something as otherwise you need to figure out UTF-16 vs UTF-8 etc.","msgtype":"m.text"},"ts":1248825780000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"if anything at all, that is","msgtype":"m.text"},"ts":1248825781000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"the important thing is to be able to estimate the available bandwidth, and keep the UA queue close to empty after that","msgtype":"m.text"},"ts":1248825900000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"or take 50% of available bandwidth, for example","msgtype":"m.text"},"ts":1248825901000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"ok so i got run of onoverflow, and instead just made send() return a number, which is either 0 (connection closed), 1 (buffering not supported), a number indicating the number of bytes that can be buffered, or 4294967295 if the buffering is essentially unlimited.","msgtype":"m.text"},"ts":1248825960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and overflowing the buffer closes the connection.","msgtype":"m.text"},"ts":1248825961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"got rid of, rather","msgtype":"m.text"},"ts":1248826020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm catching up on the mailing list thread. has the alternative been discussed in which notification occurs when writes are successful? this would allow application code to make use of an arbitrarily large buffer but be aware of the rate at which the buffer is being drained","msgtype":"m.text"},"ts":1248826080000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"Hixie: what is the client to do when 1 is returned?","msgtype":"m.text"},"ts":1248826081000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"ap: pray it doesn't hit the network rate limit","msgtype":"m.text"},"ts":1248826082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ap: i just needed a number that wasn't 0, since 0 means \"failed\"","msgtype":"m.text"},"ts":1248826140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok","msgtype":"m.text"},"ts":1248826141000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: I think that's workable, let's see what people have to say about elegance","msgtype":"m.text"},"ts":1248826142000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"it's the web, i gave up trying to win any awards for legance long ago :-)","msgtype":"m.text"},"ts":1248826200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but yeah","msgtype":"m.text"},"ts":1248826201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for elegance, even","msgtype":"m.text"},"ts":1248826202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"franksalim: could you explain this in more detail? what's a successful write?","msgtype":"m.text"},"ts":1248826203000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"ap, successfully dequeued by the UA","msgtype":"m.text"},"ts":1248826204000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"ap, not necessarily acked","msgtype":"m.text"},"ts":1248826205000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"franksalim: I see. I don't think it's been suggested","msgtype":"m.text"},"ts":1248826260000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"this would make the information available to keep buffers close to empty for \"smart\" developers, but not close connections forcefully at arbitrary limits","msgtype":"m.text"},"ts":1248826261000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"what was wrong with my idea of allowing apps to query the amount of buffered data?","msgtype":"m.text"},"ts":1248826320000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: that's basically what we have now, though in reverse","msgtype":"m.text"},"ts":1248826321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"most (all?) other js APIs can use arbitrarily large amounts of memory","msgtype":"m.text"},"ts":1248826322000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"maybe we should also have an attribute for the actual amount pending?","msgtype":"m.text"},"ts":1248826380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, roc: except what we have now implies that there has to be a max, right?","msgtype":"m.text"},"ts":1248826381000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"franksalim: I think that a highwater mark notification would still be needed to rate limit","msgtype":"m.text"},"ts":1248826382000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"franksalim: no, the UA is allowed to return 4294967295 if the buffering is essentially unlimited","msgtype":"m.text"},"ts":1248826383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, but then you don't know how much of the buffer you have used","msgtype":"m.text"},"ts":1248826384000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"franksalim: correct","msgtype":"m.text"},"ts":1248826385000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think it's a lot more useful to know how much data is queued than how much space is left in the buffer","msgtype":"m.text"},"ts":1248826440000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i think it is desirable to have an unlimited buffer size with the ability to know how large a buffer you are using","msgtype":"m.text"},"ts":1248826441000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"roc, i agree","msgtype":"m.text"},"ts":1248826442000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"hmm... maybe i should have it return the amount queued, then? or make it return a boolean and have a separate amount-queued attribute?","msgtype":"m.text"},"ts":1248826443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"franksalim: \"other js APIs can use arbitrarily large amounts of memory\" - the issue here is not with OOM, but with letting the app achieve its mission. other JS APIs don't usually cause infinite memory growth when doing something useful","msgtype":"m.text"},"ts":1248826444000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"roc: what should i call such an attribute?","msgtype":"m.text"},"ts":1248826500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ap, yes. but setting a max buffer size is not necessary. the important data is how far backed up you are, not how much space you have left","msgtype":"m.text"},"ts":1248826501000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"websocket.queueLength?","msgtype":"m.text"},"ts":1248826502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bufferedAmount?","msgtype":"m.text"},"ts":1248826503000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"franksalim: agreed","msgtype":"m.text"},"ts":1248826504000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: with the boolean returned, will it be for success/failure?","msgtype":"m.text"},"ts":1248826680000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"it'll return false if the connection is closed (e.g. because of buffer overflow) and true otherwise","msgtype":"m.text"},"ts":1248826681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: once the connection is closed, should bufferedAmount be reset to zero, or should it continue counting the number of bytes that aren't getting sent?","msgtype":"m.text"},"ts":1248826740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this attributes makes a lot of sense, it lets you just check to see if it's non-zero, and just not send data while that is true","msgtype":"m.text"},"ts":1248827040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it will still take a good amount of \"isSafari\" and \"isFirefox\" checks for someone to send a 128K blob of data","msgtype":"m.text"},"ts":1248827100000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1248827101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: maybe I'm just not seeing how it can be done. what would you suggest?","msgtype":"m.text"},"ts":1248827160000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"for a browser that can buffer such amount, the best way is to send in one chunk","msgtype":"m.text"},"ts":1248827220000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: I'd say bufferedAmount should keep increasing, if you keep allowing send()s","msgtype":"m.text"},"ts":1248827221000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"for one that cannot - how large can bufferedAmount become before the app should freak out?","msgtype":"m.text"},"ts":1248827222000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"roc: k, done that","msgtype":"m.text"},"ts":1248827280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ap: if you're sending a 128KB frame, then it's one send() call.","msgtype":"m.text"},"ts":1248827281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ap: I think this is just like any other memory issue","msgtype":"m.text"},"ts":1248827282000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"ap: so there's nothing to check","msgtype":"m.text"},"ts":1248827340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: if I understand what you're saying right, the model is that buffer will be unlimited (or huge) for this API to work","msgtype":"m.text"},"ts":1248827341000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1248827342000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"which is like all the other buffers Web apps deal with today","msgtype":"m.text"},"ts":1248827343000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: makes sense","msgtype":"m.text"},"ts":1248827344000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"I think in practice if you carve your data into 1MB chunks you should be in good shape for any scenario","msgtype":"m.text"},"ts":1248827400000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"other than dial-up :)","msgtype":"m.text"},"ts":1248827401000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"then you're just doomed :-)","msgtype":"m.text"},"ts":1248827402000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Can anyone point me in the direction of a tutorial for the <video> tag and how to style etc","msgtype":"m.text"},"ts":1248829500000,"senderName":"Tripler","senderId":"Tripler@irc"},
{"content":{"body":"\"return the result of subtracting value from zero\" - hmm, sounds like COBOL","msgtype":"m.text"},"ts":1248858420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"the Hixie fork of the HTML5 specification\" classic","msgtype":"m.text"},"ts":1248858540000,"senderName":"annevk4","senderId":"annevk4@irc"},
{"content":{"body":"annevk4: Hixie was just tired of Hixie's unsound, dictatorial decisions","msgtype":"m.text"},"ts":1248858660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk4: so he had to fork Hixie's original spec and make his own","msgtype":"m.text"},"ts":1248858661000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"zcorpan, really? you want a section on SGML differences?","msgtype":"m.text"},"ts":1248859020000,"senderName":"annevk4","senderId":"annevk4@irc"},
{"content":{"body":"zcorpan, nobody cares","msgtype":"m.text"},"ts":1248859021000,"senderName":"annevk4","senderId":"annevk4@irc"},
{"content":{"body":"fortunately both objections placed so far are against process and I don't think they carry any weight","msgtype":"m.text"},"ts":1248859080000,"senderName":"annevk4","senderId":"annevk4@irc"},
{"content":{"body":"well, \"fortunately\" I personally don't really care that much about publishing either way I think","msgtype":"m.text"},"ts":1248859081000,"senderName":"annevk4","senderId":"annevk4@irc"},
{"content":{"body":"I don't think Working Drafts are all that important, but I do get annoyed at every little thing being turned into a political fight","msgtype":"m.text"},"ts":1248859380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in particular, the Editor's Draft being mch changed from the Working Draft was used for political point scoring","msgtype":"m.text"},"ts":1248859381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and now the process of updating it is being turned into a political fight","msgtype":"m.text"},"ts":1248859382000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk2: i was more thinking of extending the paragraph with more examples","msgtype":"m.text"},"ts":1248859440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"... such as NET syntax, marked sections and processing instructions\"","msgtype":"m.text"},"ts":1248859441000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"marked sections?","msgtype":"m.text"},"ts":1248859500000,"senderName":"annevk4","senderId":"annevk4@irc"},
{"content":{"body":"I suppose I could add something like that","msgtype":"m.text"},"ts":1248859501000,"senderName":"annevk4","senderId":"annevk4@irc"},
{"content":{"body":"<![INCLUDE[ ]]>, <![CDATA[ ]]>","msgtype":"m.text"},"ts":1248859502000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well, <![CDATA[ ]]> is still there somewhat","msgtype":"m.text"},"ts":1248859560000,"senderName":"annevk4","senderId":"annevk4@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1248859561000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe don't mention marked sections","msgtype":"m.text"},"ts":1248859562000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"joy, co-author of URI and IRI specs wonders whether www.%77%33.org vs www.w3.org is a problem","msgtype":"m.text"},"ts":1248860940000,"senderName":"annevk4","senderId":"annevk4@irc"},
{"content":{"body":"Hixie: yt?","msgtype":"m.text"},"ts":1248865920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: Ignore that","msgtype":"m.text"},"ts":1248867120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Why would html5lib.HTMLParser().parseFragment(StringIO(\"<p>foo\")) return None","msgtype":"m.text"},"ts":1248869700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`, do you have, or could you obtain, any data comparing how common it is for authors to include = within unquoted attribute values, compared with those that write attributes like alt= with no value?","msgtype":"m.text"},"ts":1248873000000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'm trying to show why Hixie choice is wrong here http://lists.w3.org/Archives/Public/public-html/2009Jul/0817.html","msgtype":"m.text"},"ts":1248873001000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"What's the reason a= and a=b=c can't both be valid? I can't remember. Is it stuff like a=b c?","msgtype":"m.text"},"ts":1248873780000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva, Hixie claims it's because of situations like <img alt= class=photo> where \"class=photo\" would be interpreted as the value of the alt attribute","msgtype":"m.text"},"ts":1248873900000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"If the space between them was left out, you mean?","msgtype":"m.text"},"ts":1248874020000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"no, with the space","msgtype":"m.text"},"ts":1248874021000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"perhaps the better solution is to make whitespace before unqutoed attribute values invalid","msgtype":"m.text"},"ts":1248874022000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Oh. So there's probably content that depends on a= b being parsed as a=\"b\" then","msgtype":"m.text"},"ts":1248874080000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"so <img class= photo> would be invalid, but <img class= \"photo\" could still be valid","msgtype":"m.text"},"ts":1248874081000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1248874082000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: How would those two cases be distinguished? <img alt = class=photo> seems like it could be either, and would require human interpretation","msgtype":"m.text"},"ts":1248874680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Lachy: But anyway I don't have data like that, and don't think I can easily obtain it, since it probably involves hacking the tokeniser","msgtype":"m.text"},"ts":1248874740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, you could use a rough technique by looking for obvious cases like the href attribute where = in values is common <a href= ?foo-bar>, and also look for [^=]+=\\s+([A-Za-z]+)= where $1 matches known attribute names","msgtype":"m.text"},"ts":1248874920000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"s/foo-bar/foo=bar/","msgtype":"m.text"},"ts":1248874921000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"actually, just the regex would be more like [A-Za-z]+=\\s+([A-Za-z]+)=","msgtype":"m.text"},"ts":1248874980000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"or [A-Za-z]+\\s?=\\s+([A-Za-z]+)=","msgtype":"m.text"},"ts":1248875040000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Philip`: Can you fix html5lib so test cases can run with more recent SimpleJSON which throws on \"output\":[\"ParseError\", [\"Character\", \"\\uD869\"], \"ParseError\", [\"Character\", \"\\uDED6\"]]}?","msgtype":"m.text"},"ts":1248875280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Lachy: Hmm, that sounds kind of vague :-p","msgtype":"m.text"},"ts":1248876900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If you have a single specific Java-compatible regexp, I can run it and give a list of the matching lines or of matching substrings","msgtype":"m.text"},"ts":1248876960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and then I wouldn't have to actively think about it, which would be good","msgtype":"m.text"},"ts":1248876961000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: Why me? :-(","msgtype":"m.text"},"ts":1248876962000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: Also: How could it be fixed?","msgtype":"m.text"},"ts":1248876963000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok, I'll have to find out what a java compatible regex is, and how it differs from the one I gave you","msgtype":"m.text"},"ts":1248876964000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Philip`: Because your around, and might have an idea of how to fix it.","msgtype":"m.text"},"ts":1248877020000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Lachy: It's basically a Perl-compatible regexp","msgtype":"m.text"},"ts":1248877021000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is the one I gave you perl compatible?","msgtype":"m.text"},"ts":1248877022000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"so the one you said should be fine","msgtype":"m.text"},"ts":1248877023000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"except for the mistake in it","msgtype":"m.text"},"ts":1248877024000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"but you'd need to include the list of common attribute values if that's what you want","msgtype":"m.text"},"ts":1248877025000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Uh, names","msgtype":"m.text"},"ts":1248877026000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"corrected version: [A-Za-z]+\\s*=\\s+([A-Za-z]+)=","msgtype":"m.text"},"ts":1248877080000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"gsnedders: Hmm, what test case can cause the expected output to have unpaired surrogate codepoints?","msgtype":"m.text"},"ts":1248877140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"do you mean like: [A-Za-z]+\\s*=\\s+(class|href|src|...)=","msgtype":"m.text"},"ts":1248877141000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Yes","msgtype":"m.text"},"ts":1248877142000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1248877143000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: if you want to restrict it to that","msgtype":"m.text"},"ts":1248877144000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: A tokenizer one with input like that","msgtype":"m.text"},"ts":1248877145000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Lachy: (Also you might want to prefix with (?i) to make it case-insensitive)","msgtype":"m.text"},"ts":1248877146000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: From your script, I think","msgtype":"m.text"},"ts":1248877147000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Yes, but I'm too lazy to look it up myself :-p","msgtype":"m.text"},"ts":1248877148000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok, I'll think about it more and get back to you","msgtype":"m.text"},"ts":1248877260000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"ought to set up a web service so people can run their own regexps over the page data","msgtype":"m.emote"},"ts":1248877440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but that sounds like too much effort now)","msgtype":"m.text"},"ts":1248877441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"how much processing time does it take to run a typical regex over the data?","msgtype":"m.text"},"ts":1248877620000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Um... A while","msgtype":"m.text"},"ts":1248877740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"like a few hours?","msgtype":"m.text"},"ts":1248877800000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(so a web service would have to be restricted to a subset of the data most of the time)","msgtype":"m.text"},"ts":1248877801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"More like a few minutes","msgtype":"m.text"},"ts":1248877802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(for the 425K pages)","msgtype":"m.text"},"ts":1248877803000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"where \"few\" might be \"ten\" or something but I can't really remember now","msgtype":"m.text"},"ts":1248877804000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yay! An IndexError from html5lib. What I always wanted.","msgtype":"m.text"},"ts":1248877805000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and also it depends on the complexity of the regexp","msgtype":"m.text"},"ts":1248877806000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok. Still, it would be a DOS risk","msgtype":"m.text"},"ts":1248877807000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"would abuse the system by trying to run hundreds of simultaneous queries for the same thing :-)","msgtype":"m.emote"},"ts":1248877860000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"It's fast enough that I haven't bothered writing the code to parallelise it, in any case","msgtype":"m.text"},"ts":1248877861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"There's also the issue that the university wouldn't be particularly happy about running web servers on their machines, for security","msgtype":"m.text"},"ts":1248877920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"fragment parsing isn't well tested in html5lib seemingly","msgtype":"m.text"},"ts":1248877980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, yeah, it wasn't well implemented either iirc","msgtype":"m.text"},"ts":1248878220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least not initially","msgtype":"m.text"},"ts":1248878221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has so far hit one exception and one infinite loop","msgtype":"m.emote"},"ts":1248878280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, wait.","msgtype":"m.text"},"ts":1248878640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"This infinite loop isn't an html5lib bug. We follow the spec. The spec has an infinite loop.","msgtype":"m.text"},"ts":1248878641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I guess this is where we're allowed implementation specific limitations, due to hardware constraints.","msgtype":"m.text"},"ts":1248878700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the spec has an infinite loop?","msgtype":"m.text"},"ts":1248878701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and validator.nu does not?","msgtype":"m.text"},"ts":1248878702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: validator.nu doesn't implement innerHTML, does it?","msgtype":"m.text"},"ts":1248878820000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I thought it did","msgtype":"m.text"},"ts":1248879060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that's loop indeed","msgtype":"m.text"},"ts":1248879540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: Any self-respecting Turing-complete machine should be happy to run infinite loops without exceeding hardware constraints","msgtype":"m.text"},"ts":1248879541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"True, but they never complete executing, which annoys me.","msgtype":"m.text"},"ts":1248879600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The desire to not wait infinitely long for a web page to render is a user constraint, not a hardware constraint","msgtype":"m.text"},"ts":1248879601000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and we should consider other solutions to that problem, such as making users immortal","msgtype":"m.text"},"ts":1248879602000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Do you know of anyone who will implement that?","msgtype":"m.text"},"ts":1248879780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: No, but I can think of a number of ways to test it","msgtype":"m.text"},"ts":1248879840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Can anyone see a better fix for the middle change in http://code.google.com/p/html5lib/source/detail?r=21ce65db1e551ef8e7c4e91db0295caab08a4f62#","msgtype":"m.text"},"ts":1248880080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: for e in reversed(self.tree.openElements): if e.name == 'table': return e; (newline) return self.tree.openElements[0]","msgtype":"m.text"},"ts":1248880500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"perhaps?","msgtype":"m.text"},"ts":1248880501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(except not using reversed if we want Python 2.3 compatibility)","msgtype":"m.text"},"ts":1248880560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The code you checked in looks disgusting :-p","msgtype":"m.text"},"ts":1248880620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Agreed, but I was going it off the top of my head :P","msgtype":"m.text"},"ts":1248881640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"This is such an extreme edge case that I'm surprised this discussion has received 34 (now 35) replies.\" - someone should teach him about bikesheds until it no longer surprises him","msgtype":"m.text"},"ts":1248881641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: I think it's best if you use the insides of your head instead :-p","msgtype":"m.text"},"ts":1248881700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Where is this?","msgtype":"m.text"},"ts":1248881701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Between your shoulders and your hair","msgtype":"m.text"},"ts":1248881820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: No, the quote","msgtype":"m.text"},"ts":1248881880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Oh, on the PHP/SGML discussion","msgtype":"m.text"},"ts":1248881940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Does HTML5 do anything special to &image inside URLs? ","msgtype":"m.text"},"ts":1248882000000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: no","msgtype":"m.text"},"ts":1248882060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm, ok ","msgtype":"m.text"},"ts":1248882061000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"&image; is special, though","msgtype":"m.text"},"ts":1248882180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh, wow, so browsers will interpret &image= as the actual character entity. News to me. ","msgtype":"m.text"},"ts":1248882360000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"No, only &image;=","msgtype":"m.text"},"ts":1248882361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Well, or &image;foo or whatever)","msgtype":"m.text"},"ts":1248882420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Wait, really? ","msgtype":"m.text"},"ts":1248882421000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"If the character reference is being consumed as part of an attribute, and the last character matched is not a U+003B SEMICOLON (;), and the next character is in the range U+0030 DIGIT ZERO to U+0039 DIGIT NINE, U+0041 LATIN CAPITAL LETTER A to U+005A LATIN CAPITAL LETTER Z, or U+0061 LATIN SMALL LETTER A to U+007A LATIN SMALL LETTER Z, then, for historical reasons, all the characters that were matched after the U+0026 AMPERSAND (&) must be unconsumed, ","msgtype":"m.text"},"ts":1248882480000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Only the ones explicitly listed (in the giant table in HTML5) without a semicolon will be parsed if they don't have a semicolon","msgtype":"m.text"},"ts":1248882481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"aha! ","msgtype":"m.text"},"ts":1248882482000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"and then only in cases where they're not followed by 0-9a-z","msgtype":"m.text"},"ts":1248882483000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so &amp=foo is an entity, &ampx=foo isn't, &image=foo isn't, &image;=foo is","msgtype":"m.text"},"ts":1248882540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(if I remember correctly)","msgtype":"m.text"},"ts":1248882541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(in attribute values)","msgtype":"m.text"},"ts":1248882542000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"othermaciej, We've had conference room names for less than 24 hours and you already know that they're good?","msgtype":"m.text"},"ts":1248884220000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hello","msgtype":"m.text"},"ts":1248884580000,"senderName":"mengelhardt","senderId":"mengelhardt@irc"},
{"content":{"body":"Hixie: I remember you data-mined a big corpus of pages to figure out common class/id names.  Has anyone done similar for frequency of font names used in css?","msgtype":"m.text"},"ts":1248888300000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"or are there big page sets already gathered (and freely available somewhere?) to do such an analysis on?","msgtype":"m.text"},"ts":1248888360000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"jacobolus: There's http://dev.opera.com/articles/view/mama/ but I'm not sure that's got font names","msgtype":"m.text"},"ts":1248888480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That uses pages downloaded from the freely available list from dmoz.org","msgtype":"m.text"},"ts":1248888540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.dotnetdotcom.org/ has a big pile of HTML pages (no CSS) freely available","msgtype":"m.text"},"ts":1248888541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: thanks, that's a cool resource.  no listed fonts though","msgtype":"m.text"},"ts":1248888542000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"(the opera one)","msgtype":"m.text"},"ts":1248888600000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"are there actually authors that try to validate (unprocessed source) PHP files as HTML?","msgtype":"m.text"},"ts":1248888601000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"jacobolus: I can easily run regexps over dotnetdotcom's ~425K HTML pages, so if there's a regexp that would (approximately) extract font names (from inline CSS) then I could do that","msgtype":"m.text"},"ts":1248888660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: okay, just a minute","msgtype":"m.text"},"ts":1248888720000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"\"font\\s*:\" and \"font-family\\s?:\" would probably catch a lot them","msgtype":"m.text"},"ts":1248888780000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"(?i)font(?:-family)?\\s*:([^;\"}]+) gives some stuff you could extract individual names from","msgtype":"m.text"},"ts":1248888840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: will your regexps just return all captures?","msgtype":"m.text"},"ts":1248889080000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"jacobolus: For each line that matches the regexp, it can either print the line or print the first matching substring or print any captured group","msgtype":"m.text"},"ts":1248889140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"just one of the captured groups?","msgtype":"m.text"},"ts":1248889200000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"oh, I guess if it can print the lines out, it would be possible to grab that and run further regexps on it","msgtype":"m.text"},"ts":1248889201000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1248889202000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Most of the lines have lots of HTML junk in them","msgtype":"m.text"},"ts":1248889260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1248889560000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"jacobolus: http://philip.html5.org/data/fonts-in-inline-css-raw.txt.gz (~7MB) has the strings that match the regexp I gave earlier","msgtype":"m.text"},"ts":1248889561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"font(?:\\-family)?\\s*\\:.*\\s*((?:(?:'[a-zA-Z ]*')|(?:\"[a-zA-Z ]*\")|[a-zA-Z]*)(?=\\s*[,}])[^}]*)}","msgtype":"m.text"},"ts":1248889620000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"(I can do it differently if you're willing to wait ten minutes for it to regenerate)","msgtype":"m.text"},"ts":1248889621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think that should be right","msgtype":"m.text"},"ts":1248889622000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"I should do some testing","msgtype":"m.text"},"ts":1248889623000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"(Use a command like 'gzip -cd fonts-in-inline-css-raw.txt.gz|sort -u|cut -f2|sort|uniq -c|sort -n' to count number of pages each string occurs on, etc)","msgtype":"m.text"},"ts":1248889624000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"actually","msgtype":"m.text"},"ts":1248889740000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"font(?:\\-family)?\\s*\\:.*\\s*((?:(?:'[a-zA-Z ]*')|(?:\"[a-zA-Z ]*\")|[a-zA-Z]*)(?=\\s*[,;}])[^;}]*)[};]","msgtype":"m.text"},"ts":1248889741000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"jacobolus: That seems like it's probably close to a subset of what my regexp was matching, so hopefully you could just run that on my existing output :-)","msgtype":"m.text"},"ts":1248889742000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: probably a subset, yes :)","msgtype":"m.text"},"ts":1248889800000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"this just grabs all the fonts in a \"stack\"","msgtype":"m.text"},"ts":1248889801000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"as one capture","msgtype":"m.text"},"ts":1248889802000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"jacobolus: That one wouldn't match style=\"font-family: wingdings\"","msgtype":"m.text"},"ts":1248889803000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think","msgtype":"m.text"},"ts":1248889804000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh, true","msgtype":"m.text"},"ts":1248889805000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"because it doesn't end in ,, ;, or }","msgtype":"m.text"},"ts":1248889806000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1248889860000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"I suppose I should complain about the inability to set an li style to \"+\" or \"-\" to the css folks, not the html folks?","msgtype":"m.text"},"ts":1248889980000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Sorry, nevermind:  12:56PM < mamont> Darxus: li:before { content: \"+\"; }","msgtype":"m.text"},"ts":1248890100000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Darxus: you can just use a custom image or so, no?","msgtype":"m.text"},"ts":1248890101000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"Darxus: \"To obtain other glyphs, authors should use the 'content' property of the ::marker pseudo-element.\" — CSS3 Lists","msgtype":"m.text"},"ts":1248890160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"if you do li:before won't that change the alignment","msgtype":"m.text"},"ts":1248890161000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"jacobolus: I can, but I don't consider the inability... to do the above acceptable.  ","msgtype":"m.text"},"ts":1248890162000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"jacobolus: Haven't tried it yet.  My guess is the \"before\" part isn't necessary.","msgtype":"m.text"},"ts":1248890163000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"gsnedders: do browsers implement that?","msgtype":"m.text"},"ts":1248890164000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"jacobolus: No.","msgtype":"m.text"},"ts":1248890165000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1248890166000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"jacobolus: But the fact that CSS3 says something about it means there's little point in writing to www-style :)","msgtype":"m.text"},"ts":1248890220000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1248890221000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"It's actually in CSS3.","msgtype":"m.text"},"ts":1248890222000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"IOW go complain in #webkit, on irc.mozilla.org, etc...","msgtype":"m.text"},"ts":1248890223000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"not that they'll have any sympathy","msgtype":"m.text"},"ts":1248890280000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"comes across Dashiva in BTS","msgtype":"m.emote"},"ts":1248890460000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jacobolus: You can get a seemingly reasonably not-too-inaccurate list by doing something like","msgtype":"m.text"},"ts":1248890640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gzip -cd fonts-in-inline-css-raw.txt.gz|sort -u|cut -f2|sort|perl -lne's/.*?://;print $1 while /('\\''[^'\\'']+'\\''|\"[^\"]+\"|[^\\s,]+)/g'|sort|uniq -c|sort -n","msgtype":"m.text"},"ts":1248890641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So that content trick seems to be not what I want.  It's not changing the bullet, and so it's not doing the alignment I care about.","msgtype":"m.text"},"ts":1248890700000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"and then ignoring the ones like \"11px\" which obviously aren't fonts","msgtype":"m.text"},"ts":1248890701000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Can't imagine how CSS has gone so long without allowing you to specify an arbitrary character as the bullet style.","msgtype":"m.text"},"ts":1248890702000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Might need to tweak the results so they're more meaningful e.g. counting number of pages each value appears on","msgtype":"m.text"},"ts":1248890703000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Darxus: Images.","msgtype":"m.text"},"ts":1248890704000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Not acceptable.","msgtype":"m.text"},"ts":1248890705000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Philip`: I was writing a python script to spit out all the font stacks :)","msgtype":"m.text"},"ts":1248890760000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"Darxus: \"<p>+ Line one.<br>+ Line two.</p>\"","msgtype":"m.text"},"ts":1248890761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'll do a table.  I think it actually sort of qualifies as tabular data.","msgtype":"m.text"},"ts":1248890762000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Darxus: Well, obviously, seeming is has gone for so long it is acceptable","msgtype":"m.text"},"ts":1248890763000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jacobolus: I prefer bash+perl :-)","msgtype":"m.text"},"ts":1248890764000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I want to alternate between + and -, the characters are different widths, so what I'm looking for is proper alignment.","msgtype":"m.text"},"ts":1248890765000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"(Positive and negative attributes of the thing in the list heading.)","msgtype":"m.text"},"ts":1248890820000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Philip`: I dunno whether you've done much python ever, but this is fun stuff: http://www.dabeaz.com/generators","msgtype":"m.text"},"ts":1248890821000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"Darxus: \"<p><span style=position:absolute>+</span>&nbsp; Line one.<br><span style=position:absolute>-</span>&nbsp; Line two.</p>\"","msgtype":"m.text"},"ts":1248890822000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jacobolus: But Python is slow!","msgtype":"m.text"},"ts":1248890823000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Nice, it looks like since yesterday whatwg overthrew w3 as the first google hit for html5.","msgtype":"m.text"},"ts":1248890880000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"We're back at number one!","msgtype":"m.text"},"ts":1248890881000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Are scripts running upon being added to the DOM?","msgtype":"m.text"},"ts":1248891600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/188 should run per HTML 5, but doesn't in IE, Fx, Chromium, and only does in Opera","msgtype":"m.text"},"ts":1248892680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Snooping in canvas bugs, are you?","msgtype":"m.text"},"ts":1248893160000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: no","msgtype":"m.text"},"ts":1248893161000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"needs a break having been working for almost eight hours","msgtype":"m.emote"},"ts":1248893162000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Time to go home, I think","msgtype":"m.text"},"ts":1248893163000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.smashingmagazine.com/2009/07/29/misunderstanding-markup-xhtml-2-comic-strip/ is nice","msgtype":"m.text"},"ts":1248894120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"except of course that XHTML as text/html is fiction :p","msgtype":"m.text"},"ts":1248894180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - XHTML as text/html is not fiction - validates just fine with the W3C validator :)","msgtype":"m.text"},"ts":1248895140000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"that validator is also a piece of fiction :p","msgtype":"m.text"},"ts":1248895200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"having said that, I don't really care that much what people do with their markup","msgtype":"m.text"},"ts":1248895260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annekv - you have a curious usage of the word \"fiction\" ;) http://validator.w3.org","msgtype":"m.text"},"ts":1248895320000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"XHTML as text/html isn't fiction, it happens all the time","msgtype":"m.text"},"ts":1248895500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the rules for how to process XHTML go out of the window when you use text/html though","msgtype":"m.text"},"ts":1248895501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and with XHTML5, you can't have XHTML5 as text/html","msgtype":"m.text"},"ts":1248895502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this Installed Apps thread had better be good","msgtype":"m.text"},"ts":1248895860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: :\\","msgtype":"m.text"},"ts":1248895920000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"tantek, I'll give you that :)","msgtype":"m.text"},"ts":1248896460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders_: why is it desireable for the parser to go out of its way to avoid multiple <body>s?","msgtype":"m.text"},"ts":1248897420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders_: i'm not going to change the spec on that, at least not unless a good reason to do so is presented.","msgtype":"m.text"},"ts":1248897480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What is the correct way to display a triple line break between paragraphs, to show greater separation?","msgtype":"m.text"},"ts":1248897540000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Er, correct markup.","msgtype":"m.text"},"ts":1248897541000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"<style> p { margin:2em 0 } </style>","msgtype":"m.text"},"ts":1248897600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Darxus: <p>...</p><hr><p>...</p>","msgtype":"m.text"},"ts":1248897601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I like that one better, thanks.","msgtype":"m.text"},"ts":1248897602000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"HTML5 then styles <hr> as  hr { border: none; margin: 2em; } or something","msgtype":"m.text"},"ts":1248897603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It took me a long time to give in to p's with end tags (used br's instead), but now I'm fond of them.","msgtype":"m.text"},"ts":1248897720000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"You guys may enjoy reading up on Lojban, a synthetic human language designed to reduce language related limits on thought.  No ambiguity.  ","msgtype":"m.text"},"ts":1248897840000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"(And it's entirely HTML5's fault I ended up finding it - wondering how best to apply the HTML refinement process to human language.)","msgtype":"m.text"},"ts":1248897900000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Darxus: There's always ambiguity, you just move it one step up in the hierarchy","msgtype":"m.text"},"ts":1248898320000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"ds++","msgtype":"m.text"},"ts":1248898620000,"senderName":"tfh","senderId":"tfh@irc"},
{"content":{"body":"Dashiva: Where is there ambiguity in Lojban?","msgtype":"m.text"},"ts":1248899580000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"CSS3 for lists is awfully extensive for not being able to specify a freaking character to use as the bullet:  http://www.w3.org/TR/css3-lists/","msgtype":"m.text"},"ts":1248900300000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Darxus, you may be looking for generated content.","msgtype":"m.text"},"ts":1248900360000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Somebody pointed me at that earlier, the problem is that it doesn't handle the alignment as a bullet.","msgtype":"m.text"},"ts":1248900361000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Oh, hah, I didn't realize that CSS3 (at least for lists) is also Hixies fault.","msgtype":"m.text"},"ts":1248900420000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Hixie: Fix it.","msgtype":"m.text"},"ts":1248900421000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"i took a break from css to work on html5","msgtype":"m.text"},"ts":1248900422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ah.","msgtype":"m.text"},"ts":1248900423000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"I think I took the same break to work on microformats.","msgtype":"m.text"},"ts":1248900424000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie: I would like to be able to specify any character to use as a bullet in a list.","msgtype":"m.text"},"ts":1248900425000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"::marker { content: '' }","msgtype":"m.text"},"ts":1248900480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"iirc","msgtype":"m.text"},"ts":1248900481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Particulary + / -, to list positive and negative aspects of something.","msgtype":"m.text"},"ts":1248900482000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Darxus, I believe you may need to use generated content, and float:left, and text-align:right","msgtype":"m.text"},"ts":1248900483000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"oh and perhaps some negative margin-left","msgtype":"m.text"},"ts":1248900484000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"but you may find better luck to such questions in #css","msgtype":"m.text"},"ts":1248900485000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Tables work easy :P","msgtype":"m.text"},"ts":1248900486000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"tantek: Talked to #css about it first.","msgtype":"m.text"},"ts":1248900540000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Darxus, Hixie is right - see ::marker http://www.w3.org/TR/css3-lists/#markers","msgtype":"m.text"},"ts":1248900600000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Working on it, thanks.  Any idea if any browsers have implimented it?","msgtype":"m.text"},"ts":1248900900000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Yeah I copied the example in the spec and it doesn't work in chrome or firefox 3.  ","msgtype":"m.text"},"ts":1248901260000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"Hixie: But thanks for including it.","msgtype":"m.text"},"ts":1248901261000,"senderName":"Darxus","senderId":"Darxus@irc"},
{"content":{"body":"you may want to check their open source repositories for evidence of ::marker support","msgtype":"m.text"},"ts":1248901262000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"perhaps ask in the #webkit channel","msgtype":"m.text"},"ts":1248901320000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"and in #firefox","msgtype":"m.text"},"ts":1248901380000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"finds http://www.pemberton.nl/vandf/2009/07/xhtml2-not-dead.html","msgtype":"m.emote"},"ts":1248902400000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"i wouldn't expect anyone to support the lists stuff yet","msgtype":"m.text"},"ts":1248902640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"iirc nobody went further than a bunch of the new keywords","msgtype":"m.text"},"ts":1248902820000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"wonders if Thomas meant getting the name wrong with bad quoting or the top posting :p","msgtype":"m.emote"},"ts":1248907080000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"wonders who Philip is","msgtype":"m.emote"},"ts":1248907140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe some weird mixup between Patrick and PHP?","msgtype":"m.text"},"ts":1248907200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"in lieu of an email writeup in lieu of a wiki writeup (probably to follow at some point) :","msgtype":"m.text"},"ts":1248908940000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"While the HTML 4.01 definition of CITE","msgtype":"m.text"},"ts":1248908941000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"http://www.w3.org/TR/html401/struct/text.html#edef-CITE","msgtype":"m.text"},"ts":1248908942000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"\"Contains a citation or a reference to other sources\"","msgtype":"m.text"},"ts":1248908943000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"may be too vague, ","msgtype":"m.text"},"ts":1248908944000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the current HTML5 draft definition:","msgtype":"m.text"},"ts":1248908945000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-cite-element","msgtype":"m.text"},"ts":1248908946000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"\"The cite element represents the title of a work...\"","msgtype":"m.text"},"ts":1248908947000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"\"A person's name is not the title of a work ...\"","msgtype":"m.text"},"ts":1248908948000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"is a bit too narrow.","msgtype":"m.text"},"ts":1248908949000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"The cite element is for *any* kind of source, whether that source is:","msgtype":"m.text"},"ts":1248909000000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"* the title of a printed work, or ","msgtype":"m.text"},"ts":1248909001000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"* a URL to an online work (should be represented by a nested hyperlink), ","msgtype":"m.text"},"ts":1248909002000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"* or even the name of a person who said something, perhaps outloud in person or in an online chat such as IRC.","msgtype":"m.text"},"ts":1248909003000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"why people?","msgtype":"m.text"},"ts":1248909004000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Note that I am not advocating allowing marking up the name of an author of a work with cite, but rather, when the source/work is simply speech from an author that is not otherwise part of a work, then it is appropriate to markup the author (and their name or online nickname) as a cite.","msgtype":"m.text"},"ts":1248909005000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"using <cite> for names is silly","msgtype":"m.text"},"ts":1248909006000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's typographically wrong","msgtype":"m.text"},"ts":1248909007000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's applying semantics where none are needed","msgtype":"m.text"},"ts":1248909008000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, do you have a reference for why/how it is *typographically* wrong?","msgtype":"m.text"},"ts":1248909009000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"sure, hold on","msgtype":"m.text"},"ts":1248909060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The precise semantic is that the *person* themsevles is the \"other source\".","msgtype":"m.text"},"ts":1248909061000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"when quoting from otherwise untitled/ungrouped speech from that person","msgtype":"m.text"},"ts":1248909062000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"thus the person themselves is the \"other source\" (per HTML 4.01 definition)","msgtype":"m.text"},"ts":1248909120000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"hence the usage of cite to refer to a speaker in such examples is semantically correct","msgtype":"m.text"},"ts":1248909121000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(oops sorry about the nearly dup text there)","msgtype":"m.text"},"ts":1248909180000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"and also note that I am not advocating for general use of <cite> for names.","msgtype":"m.text"},"ts":1248909300000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"but rather for a very specific use for a person's name (or nickname if appropriate, e.g. for quoting from IRC) saying something which is quoted.","msgtype":"m.text"},"ts":1248909480000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"my reference for the typography of names is going to be the chicacgo manual of style. I can't find anything in there that justifies using the same element for a title of a work and a name of a person, ever.","msgtype":"m.text"},"ts":1248909481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<cite> is not for citations at all in html5","msgtype":"m.text"},"ts":1248909540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just for titles of works","msgtype":"m.text"},"ts":1248909541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because that's more useful in practice as far as i can tell","msgtype":"m.text"},"ts":1248909542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thought the answer to http://twitter.com/johnfoliot/statuses/2918355573 has been long known","msgtype":"m.emote"},"ts":1248910980000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"wonders what this new wave of fake-ignorance is about","msgtype":"m.emote"},"ts":1248910981000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Hixie, in practice <cite> is also useful for names of speakers as noted above. E.g. http://rbach.priv.at/Microformats/IRC/2009-05-01","msgtype":"m.text"},"ts":1248911040000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: how is it useful there?","msgtype":"m.text"},"ts":1248911100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tantek: just use <dt> and <dialog> for a chat log.","msgtype":"m.text"},"ts":1248911101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the same as knowing what the \"source\" is for any quottation","msgtype":"m.text"},"ts":1248911102000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"knowing what the \"source\" is for any quotation is not useful, as far as i can tell","msgtype":"m.text"},"ts":1248911103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sounds useful","msgtype":"m.text"},"ts":1248911104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but is not actually useful","msgtype":"m.text"},"ts":1248911105000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is useful, in that it provides a mechanism by which it may be possible to determine the validity of the quote","msgtype":"m.text"},"ts":1248911160000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"often by looking up the source","msgtype":"m.text"},"ts":1248911161000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"you don't need an element for that","msgtype":"m.text"},"ts":1248911162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the same usefulness for citing any source","msgtype":"m.text"},"ts":1248911163000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"what's the use for the element that can't be done without any element?","msgtype":"m.text"},"ts":1248911164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is the harm in permitting an existing semantic usage to continue?","msgtype":"m.text"},"ts":1248911165000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"that's _exactly_ what the spec is doing","msgtype":"m.text"},"ts":1248911220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I believe there is more weight on the side of keeping an existing practical usage, than dropping it. It doesn't appear to be doing any harm.","msgtype":"m.text"},"ts":1248911221000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the existing semantic usage is people use it for titles","msgtype":"m.text"},"ts":1248911222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not citations","msgtype":"m.text"},"ts":1248911223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No the current draft spec is keeping one usage and dropping another.","msgtype":"m.text"},"ts":1248911224000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"people are using <cite> to refer to \"other sources\" per HTML 4.01.  *one* of those other sources is the title of a work, another is a URL to a work, yet another is the name of a speaker of a quote. all of which are sources.","msgtype":"m.text"},"ts":1248911340000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I understand the utility in refining the definition as given in HTML 4.01. However it seems to do more harm than good to ignore one of those existing uses, and disallow another, rather than explicitly allow all three existing uses.","msgtype":"m.text"},"ts":1248911400000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the vast majority of people who are using <cite> for any purpose other than \"italics\" are using <cite> to mean \"title of work\", not \"cited name\"","msgtype":"m.text"},"ts":1248911401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and there is no good use for using it to mark up cited names that needs an element","msgtype":"m.text"},"ts":1248911460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"using it for names has one harm, it encourages people to use incorrect typography for names","msgtype":"m.text"},"ts":1248911461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just look at anne's blog","msgtype":"m.text"},"ts":1248911462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is Anne using it incorrectly?","msgtype":"m.text"},"ts":1248911463000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"he's using it as you suggest","msgtype":"m.text"},"ts":1248911464000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, it's not clear that \"no good use for it\" argument makes any sense, as any use case for the \"title of a work\" can also be made for the name of a speaker ","msgtype":"m.text"},"ts":1248911520000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the only use case for title of work is \"makes it italics\", which doesn't apply to \"name of a speaker\"","msgtype":"m.text"},"ts":1248911580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I disagree - another use of the title of a work, and name of a speaker, is to look up said title/name and provide more information","msgtype":"m.text"},"ts":1248911581000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"about the source","msgtype":"m.text"},"ts":1248911582000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"you don't need an element to do that","msgtype":"m.text"},"ts":1248911583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you do - in order to indicate what is the title or name of the speaker, as opposed to nearby text","msgtype":"m.text"},"ts":1248911640000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"So if I say \"Tantek said that you needed that\", you wouldn't know that \"Tantek\" was a name, because I didn't mark it up?","msgtype":"m.text"},"ts":1248911641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"either i'm dramatically misunderstanding you, or someone gave you semantic web drugs this morning","msgtype":"m.text"},"ts":1248911700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"entity discovery/resolution is buggy/unreliable, even in just one language, nevermind internationally.","msgtype":"m.text"},"ts":1248911701000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I stopped using <cite> that way btw","msgtype":"m.text"},"ts":1248911702000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"with the exception of very well defined text grammar","msgtype":"m.text"},"ts":1248911703000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"people have no trouble understanding what is a name and what isn't","msgtype":"m.text"},"ts":1248911704000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie - depends on the language","msgtype":"m.text"},"ts":1248911705000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"no, it really doesn't","msgtype":"m.text"},"ts":1248911706000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and what about names that are not title-cased?","msgtype":"m.text"},"ts":1248911760000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"like when i say that tantek said something?","msgtype":"m.text"},"ts":1248911761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie - right","msgtype":"m.text"},"ts":1248911762000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"you have no problem seeing the name there either","msgtype":"m.text"},"ts":1248911763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"assuming you have a NLP that processes the sentence at all","msgtype":"m.text"},"ts":1248911764000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"if you really, really, truly and honestly really desperately need some sort o machine-readable way to know that something is a name... use hCard","msgtype":"m.text"},"ts":1248911765000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is the name \"that tantek\" or \"tantek\"","msgtype":"m.text"},"ts":1248911766000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"it gets more complicated in languages such as German where all nouns are capitalized","msgtype":"m.text"},"ts":1248911880000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"please show me one example of that confusion actually happening, where <cite> would actually have helped.","msgtype":"m.text"},"ts":1248911881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie - agreed that hCard helps to markup the name of a person and recognize it as such, especially if it has several name components (given, family, suffix etc.)","msgtype":"m.text"},"ts":1248911882000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"what <cite> does above and beyond that, is to indicate that that person is a *source*","msgtype":"m.text"},"ts":1248911940000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"which can then be connected to a quotation q through its cite attribute","msgtype":"m.text"},"ts":1248911941000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"in html5, <cite> doesn't indicate that the thing is a source","msgtype":"m.text"},"ts":1248911942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok come now, nobody ever uses cite=\"\"","msgtype":"m.text"},"ts":1248911943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the main problem with using <cite> for this is, as I learned after I used it for a while, is that it is typographically incorrect, at least in English, to italicize the name","msgtype":"m.text"},"ts":1248911944000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"i've seriously considered dropping cite=\"\" altogether","msgtype":"m.text"},"ts":1248911945000,"senderName":"Hixie","senderId":"Hixie@irc"}
]