[
{"content":{"body":"TabAtkins: I wonder if Bikeshed should automatically insert an \"X depends on the Infra Standard\" statement into specs it builds. Or have an easy way to produce that statement, since nearly all specs will do so.","msgtype":"m.text"},"ts":1485216134000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: Reffing a term from Infra will insert it into the Index.","msgtype":"m.text"},"ts":1485216165000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I think the biblio?","msgtype":"m.text"},"ts":1485216171000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, but https://infra.spec.whatwg.org/#usage says to add one more sentence. Maybe that's unnecessary though given the references.","msgtype":"m.text"},"ts":1485216207000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"The idea is that if you insert that sentence then all of https://infra.spec.whatwg.org/#conventions applies","msgtype":"m.text"},"ts":1485216471000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So then you don't need your own conformance section for example","msgtype":"m.text"},"ts":1485216488000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"UTF-16 pages need either a BOM or an HTTP header to work, right? Or have the undefined heuristics conclude they're UTF-16?","msgtype":"m.text"},"ts":1485223886000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"<meta charset> seems like it'd work, and it's a more-or-less defined heuristic?","msgtype":"m.text"},"ts":1485223914000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"<meta charset> only works for ASCII-superset encodings","msgtype":"m.text"},"ts":1485223925000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the undefined heuristic I meant is the \"The user agent may attempt to autodetect the character encoding from applying frequency analysis or other algorithms to the data stream.\"","msgtype":"m.text"},"ts":1485223961000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: for one, it'll never find the sequence of ASCII bytes \"<meta\"!","msgtype":"m.text"},"ts":1485224131000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(well, I suppose it could, but that'd be something weird in UTF-16 :))","msgtype":"m.text"},"ts":1485224150000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ah I see","msgtype":"m.text"},"ts":1485224336000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's also <?xml sniffing but bz didn't want to specify what WebKit/Blink did last time I proposed it and didn't have any ideas for something better to specify. https://github.com/whatwg/html/pull/1752","msgtype":"m.text"},"ts":1485224391000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh. Yeah. That.","msgtype":"m.text"},"ts":1485224750000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mkwst: canâ€™t make this stuff up http://stackoverflow.com/questions/41818474/how-to-link-to-a-css-stylesheet-uploaded-on-a-ftp-server","msgtype":"m.text"},"ts":1485225914000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(from just today)","msgtype":"m.text"},"ts":1485225932000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: I think there is a default, utf-16 maps to utf-16le or be on the web","msgtype":"m.text"},"ts":1485237505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: oh declare at all, hmm, yes, in theory, but there is still sniffing here and there","msgtype":"m.text"},"ts":1485237575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, Domenic: where are we adding type=module tests?","msgtype":"m.text"},"ts":1485240612000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I don't know about an agreed upon location","msgtype":"m.text"},"ts":1485240939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: http://w3c-test.org/html/semantics/scripting-1/the-script-element/ would make some sense to me (should at least have a forward pointer if not there)","msgtype":"m.text"},"ts":1485240954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: alright, i'm just add it to html/semantics/scripting-1/the-script-element","msgtype":"m.text"},"ts":1485240958000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: ya","msgtype":"m.text"},"ts":1485240961000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: Alex is not responding to my questions on the URL issues so I don't know","msgtype":"m.text"},"ts":1485242621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I guess we have to wait for Alex","msgtype":"m.text"},"ts":1485242648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sorry, what'd I miss?","msgtype":"m.text"},"ts":1485242728000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: heh, Christensen, not Russell","msgtype":"m.text"},"ts":1485242964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: different company too","msgtype":"m.text"},"ts":1485242994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: if you could have a quick look at https://github.com/w3c/web-platform-tests/pull/4541 that'd be great","msgtype":"m.text"},"ts":1485243307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, lots of dup'ed code!","msgtype":"m.text"},"ts":1485243425000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: okay, so then we should indeed ask him to rewrite","msgtype":"m.text"},"ts":1485243485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, it's really silly to duplicate the code to create a test tree for example","msgtype":"m.text"},"ts":1485243522000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: that should be clearly shared","msgtype":"m.text"},"ts":1485243531000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: i think duplicating assertions is okay","msgtype":"m.text"},"ts":1485243535000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: because we don't want expected results to be the result of running some algorithm LOL","msgtype":"m.text"},"ts":1485243553000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: add a quick comment?","msgtype":"m.text"},"ts":1485243560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: 'cause then we have to be testing that algorithm","msgtype":"m.text"},"ts":1485243562000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: did","msgtype":"m.text"},"ts":1485243563000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1485243567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I do write those sometimes, but the algorithms are somewhat straightforward","msgtype":"m.text"},"ts":1485243608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: could you review https://github.com/whatwg/meta/issues/7#issuecomment-274599778 pretty please?","msgtype":"m.text"},"ts":1485244334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: somehow I think you know all about .gitattributes","msgtype":"m.text"},"ts":1485244345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, Domenic: presumably nomodule should also prevent loading, right?","msgtype":"m.text"},"ts":1485244346000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yeah, there wouldn't be much point in fetching","msgtype":"m.text"},"ts":1485244368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which part of https://github.com/whatwg/html/pull/2261/files says that?","msgtype":"m.text"},"ts":1485244386000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I guess you can test by setting a cookie and fetching it via some other means and see if the cook is set?","msgtype":"m.text"},"ts":1485244391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1485244396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, I can just check load events","msgtype":"m.text"},"ts":1485244407000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: the paragraph at the end that's together with a note modifies \"prepare a script\" in a place before script fetching happens","msgtype":"m.text"},"ts":1485244552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: so if those conditions are met, no fetching would happen","msgtype":"m.text"},"ts":1485244568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, okay","msgtype":"m.text"},"ts":1485244575000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: FWIW, I think it's a use-case worth breaking.","msgtype":"m.text"},"ts":1485247724000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I'm planning on sending you some patches to Fetch. I'm not sure how to write tests for either, since WPT doesn't seem to support either FTP or basic auth.","msgtype":"m.text"},"ts":1485247770000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"But, you know, I'll work something out.","msgtype":"m.text"},"ts":1485247778000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: basic auth you can implement right? there might already be some python scripts that do so","msgtype":"m.text"},"ts":1485247831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: FTP is indeed a rather interesting proposition, best to loop jgraham and gsnedders in on that one","msgtype":"m.text"},"ts":1485247858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, I'm sure I can work that out, I just didn't find anything that implemented it for me (nor is the automation part clear).","msgtype":"m.text"},"ts":1485247861000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: did you look in the XMLHttpRequest dir as well?","msgtype":"m.text"},"ts":1485247884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I did, in #testing. They said Â¯\\_(ãƒ„)_/Â¯","msgtype":"m.text"},"ts":1485247884000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1485247891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I guess we can just use ftp://example.com/ and make sure the failure is reasonably fast? nearly as fast as rejecting ftp://test:test/ for instance?","msgtype":"m.text"},"ts":1485247958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: little icky of course to rely on timing, but...","msgtype":"m.text"},"ts":1485247981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Point to a real FTP server?","msgtype":"m.text"},"ts":1485248029000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"If we point to a server that doesn't exist, then the failure mode for the current behavior (network error) is the same as the success mode for the new behavior (network error).","msgtype":"m.text"},"ts":1485248059000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"It just takes longer.","msgtype":"m.text"},"ts":1485248062000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Pointing to a real FTP server is icky. And Blink's test environment actually blocks the bots from making external connections, so.","msgtype":"m.text"},"ts":1485248096000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk, Domenic: https://github.com/w3c/web-platform-tests/pull/4611","msgtype":"m.text"},"ts":1485248153000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Same for Gecko","msgtype":"m.text"},"ts":1485248155000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mkwst: yeah, so if a real server isn't an option, than doing a timing \"attack\" is a way to go, but icky","msgtype":"m.text"},"ts":1485248240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok. *shrug* I'll play with it a bit to see what might make sense.","msgtype":"m.text"},"ts":1485248271000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"rniwa: cool, I'll let Domenic review those since he's more familiar with it","msgtype":"m.text"},"ts":1485248689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1485248940000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Amusingly, it doesn't look like Blink's test server supports FTP either.","msgtype":"m.text"},"ts":1485250303000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: that's a good security reason for removal","msgtype":"m.text"},"ts":1485250372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: Yeah agreed about breaking that ftp use case","msgtype":"m.text"},"ts":1485250374000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst: complete removal, even","msgtype":"m.text"},"ts":1485250376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Indeed.","msgtype":"m.text"},"ts":1485250450000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I'm currently looking at https://github.com/whatwg/html/issues/1698,","msgtype":"m.text"},"ts":1485250564000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: does WebKit even prompt to unload, unload and abort the current document?","msgtype":"m.text"},"ts":1485250576000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: sorry, no bandwidth for lifecycle questions","msgtype":"m.text"},"ts":1485250883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Heh ok. :)","msgtype":"m.text"},"ts":1485250891000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: my recommendation is to write many many tests covering all aspects and then figure out what everyone can agree on to move forward with","msgtype":"m.text"},"ts":1485250911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: btw, the other thing we need for the PRs is some positive noise from other vendors","msgtype":"m.text"},"ts":1485251191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yup. I'll poke folks.","msgtype":"m.text"},"ts":1485251205000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: ta","msgtype":"m.text"},"ts":1485251211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://fetch.spec.whatwg.org/#concept-bodyinit-extract","msgtype":"m.text"},"ts":1485251929000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"BufferSource part","msgtype":"m.text"},"ts":1485251935000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"apparently browsers do use \"application/octet-stream\" in some cases","msgtype":"m.text"},"ts":1485251966000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"at least with sendBeacond","msgtype":"m.text"},"ts":1485252120000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Beacon","msgtype":"m.text"},"ts":1485252123000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: o_O","msgtype":"m.text"},"ts":1485252248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: sendBeacon() should really not do more than HTML <form>","msgtype":"m.text"},"ts":1485252264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: it violates the same-origin policy otherwise","msgtype":"m.text"},"ts":1485252276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: since it doesn't use CORS at all apparently","msgtype":"m.text"},"ts":1485252289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: that was fixed in https://github.com/w3c/beacon/commit/8a6fbdca25115aa5a66c32cfc37d4882384b3398 by Ilya","msgtype":"m.text"},"ts":1485252467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(not the greatest model, but I suppose it works)","msgtype":"m.text"},"ts":1485252482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it is just that baku is making some cleanups to BodyInit handling and we noticed that currently Gecko does use \"application/octet-stream\", and so does Blink","msgtype":"m.text"},"ts":1485252572000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"so it is unclear whether following the spec will break something","msgtype":"m.text"},"ts":1485252588000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: a Blob with an empty type defaults to that or some such?","msgtype":"m.text"},"ts":1485252622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: does that result in a CORS preflight?","msgtype":"m.text"},"ts":1485252639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"don't know about Blob","msgtype":"m.text"},"ts":1485252641000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"this is about ArrayBuffer/ArrayBufferView","msgtype":"m.text"},"ts":1485252650000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"tests Blob","msgtype":"m.emote"},"ts":1485252661000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: okay, if that happens without preflight it would be a security issue","msgtype":"m.text"},"ts":1485252670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: although maybe enshrined if both Chrome and Gecko do it :/","msgtype":"m.text"},"ts":1485252688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Blob sends no contentType","msgtype":"m.text"},"ts":1485252834000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"tries some cross-origin case","msgtype":"m.emote"},"ts":1485252854000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"cross-origin arraybuffer* works the same way","msgtype":"m.text"},"ts":1485253012000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I'm somewhat annoyed we let sendBeacon() happen, it didn't work out well","msgtype":"m.text"},"ts":1485253874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"much churn and low adoption","msgtype":"m.text"},"ts":1485253883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and potentially some new holes (I believe Chrome still hasn't fixed some)","msgtype":"m.text"},"ts":1485253905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: any idea why function objects exist (https://heycam.github.io/webidl/#dfn-function-object) and what makes them different from functions?","msgtype":"m.text"},"ts":1485260709000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: not really","msgtype":"m.text"},"ts":1485260826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: darn.","msgtype":"m.text"},"ts":1485260838000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: ^","msgtype":"m.text"},"ts":1485260854000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: thanks.","msgtype":"m.text"},"ts":1485260882000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Isn't it just what ES itself call these?","msgtype":"m.text"},"ts":1485261097000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: maybe? In which case it wouldn't make any sense to define them in the WebIDL spec again.","msgtype":"m.text"},"ts":1485261160000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"nox: I'm actually trying to fix a bug you filed early last year","msgtype":"m.text"},"ts":1485261209000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: well, IDL duplicates a number of things so you have both an IDL concept thing and an ECMAScript thing, but I'm not sure if this is one of those","msgtype":"m.text"},"ts":1485261215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: About callback interfaces with an interface object?","msgtype":"m.text"},"ts":1485261228000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: it shouldn't be, it's in the bindings.","msgtype":"m.text"},"ts":1485261237000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie, annevk: https://tc39.github.io/ecma262/#sec-ecmascript-function-objects","msgtype":"m.text"},"ts":1485261245000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: https://github.com/heycam/webidl/issues/78","msgtype":"m.text"},"ts":1485261324000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Can't believe I guessed that right. :P","msgtype":"m.text"},"ts":1485261339000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: that's a sign you don't file enough bugs against WebIDL :P","msgtype":"m.text"},"ts":1485261369000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Mozlando meeting omg, I wasn't even working for Mozilla back then.","msgtype":"m.text"},"ts":1485261375000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Oh, neat, irccloud just added how long ago someone was active in the nick autocomplete.","msgtype":"m.text"},"ts":1485261510000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"nox: I'm trying to parse the last 2 paragraphs of https://heycam.github.io/webidl/#interface-object","msgtype":"m.text"},"ts":1485261629000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: What about them?","msgtype":"m.text"},"ts":1485261665000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"sorry, last three.","msgtype":"m.text"},"ts":1485261674000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"nox: non-callback interfaces are function objects","msgtype":"m.text"},"ts":1485261776000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Yes.","msgtype":"m.text"},"ts":1485261784000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"tobie: The ticket you linked is about callback interface objects.","msgtype":"m.text"},"ts":1485261807000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yes, that's right below","msgtype":"m.text"},"ts":1485261824000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"nox: The internal [[Prototype]] property of an interface object for a callback interface must be the Function.prototype object.","msgtype":"m.text"},"ts":1485261844000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I think that's new,","msgtype":"m.text"},"ts":1485261866000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"and that that was done for my ticket,","msgtype":"m.text"},"ts":1485261870000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: which makes it a function, no?","msgtype":"m.text"},"ts":1485261874000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"but my ticket was left open or something.","msgtype":"m.text"},"ts":1485261876000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: but then the note says: Remember that interface objects for callback interfaces only exist if they have constants declared on them; when they do exist, they are not function objects.","msgtype":"m.text"},"ts":1485261895000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Mmh.","msgtype":"m.text"},"ts":1485261906000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"My feeling exactly.","msgtype":"m.text"},"ts":1485261914000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Also: typeof NodeFilter => \"function\" in FF & Chrome","msgtype":"m.text"},"ts":1485261954000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: https://github.com/heycam/webidl/commit/6b0eb63d6cba3ff1f90f4ef3e733749ff51751a0","msgtype":"m.text"},"ts":1485262032000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"alright, so I guess we just need to cleanup some of the surrounding notes.","msgtype":"m.text"},"ts":1485262095000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"nox: thanks","msgtype":"m.text"},"ts":1485262101000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: should we prepare anything for later today? I'm thinking just saying hi and listening to what folks have to say","msgtype":"m.text"},"ts":1485263035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I wasn't going to do much more than make sure the thread's in my head","msgtype":"m.text"},"ts":1485263058000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: As far as I can tell it's \"people who absolutely think the fetch should be externally abortable, else it's a no better than XHR\" -vs- \"people who think the fetch should only be internally abortable, else it's no better than XHR\"","msgtype":"m.text"},"ts":1485263132000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Both groups are strongly opinionated, and people are doing to be disappointed with whatever outcome","msgtype":"m.text"},"ts":1485263156000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm not sure what those two variants would mean","msgtype":"m.text"},"ts":1485263374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that's something I'm afraid of, that we don't have enough common language on this subject for people to understand each other","msgtype":"m.text"},"ts":1485263396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if I pass you the result of fetch(url), should you be able to control its priority & abort it, or do only I get to do that, because I started the fetch?","msgtype":"m.text"},"ts":1485263429000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That seems to be one of the fundamental disagreements","msgtype":"m.text"},"ts":1485263440000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: okay, that's clear","msgtype":"m.text"},"ts":1485263474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what improvement over XHR do I get with a tool that is not externally abortable?","msgtype":"m.text"},"ts":1485263612000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: you can still hand someone the \"internal\" abortion tool","msgtype":"m.text"},"ts":1485263831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1485263853000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"so just a terminology","msgtype":"m.text"},"ts":1485263857000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"or, well, you do not exactly pass the fetch around","msgtype":"m.text"},"ts":1485263908000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"and the result of fetch() is just a promise","msgtype":"m.text"},"ts":1485263921000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"so there really is no surface for a truly external abortion, imho","msgtype":"m.text"},"ts":1485263949000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: we could subclass the promise","msgtype":"m.text"},"ts":1485263955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would a subclassed promise be externally abortable? sounds very inconsistent with the existing promise resolution policy","msgtype":"m.text"},"ts":1485264036000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"There's no reason it couldn't be","msgtype":"m.text"},"ts":1485264141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: consistency reason? offering fulfill/reject only to the creator, but abort to consumer?","msgtype":"m.text"},"ts":1485264609000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: that's the argument. Although I don't know if it's all that bad that fetch promises are different","msgtype":"m.text"},"ts":1485264737000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I mean, once you've got the request, the consumer can consume it","msgtype":"m.text"},"ts":1485264751000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"and that's seen by other consumers","msgtype":"m.text"},"ts":1485264761000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Do we have cases where there is a NamedConstructor but no Constructor?","msgtype":"m.text"},"ts":1485265248000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Mmm. nm.","msgtype":"m.text"},"ts":1485265309000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1485265322000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"All three of them","msgtype":"m.text"},"ts":1485265334000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: I am not sure I follow the example/argument with \"consumer consumering stuff seen by other consumers\"","msgtype":"m.text"},"ts":1485265341000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: const p = fetch(url); p.then(r => r.json()); p.then(r => r.json()); The second .json call will fail","msgtype":"m.text"},"ts":1485265568000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: do you know what https://github.com/whatwg/fetch/issues/447#issuecomment-273633060 is proposing?","msgtype":"m.text"},"ts":1485265938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: looking at bluebird there's no external cancel/abort API as far as I can see","msgtype":"m.text"},"ts":1485265954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: ta","msgtype":"m.text"},"ts":1485265957000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: or am I missing something?","msgtype":"m.text"},"ts":1485265960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I am, http://bluebirdjs.com/docs/api/cancel.html","msgtype":"m.text"},"ts":1485265987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: okay, so Netflix folks would prefer some form of subclassing, jan-ivar and others are leaning more towards controller/observer patterns","msgtype":"m.text"},"ts":1485266028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'm personally on the fence","msgtype":"m.text"},"ts":1485266047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yep, and both groups are absolutely certain they're right :D","msgtype":"m.text"},"ts":1485266126000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Can someone running Edge tell me what the result of running NodeFilter.prototype; is?","msgtype":"m.text"},"ts":1485266194000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Pretty please.","msgtype":"m.text"},"ts":1485266202000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I'm on the fence too. Separating the controller & observer makes sense as you can pass on the observer without giving control. Eg, the service worker should only get the observer.","msgtype":"m.text"},"ts":1485266246000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tobie: undefined in Edge 13","msgtype":"m.text"},"ts":1485266261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ty","msgtype":"m.text"},"ts":1485266267000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: aha, interesting. I would say that both .json() calls shall return the same value.","msgtype":"m.text"},"ts":1485266270000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but I obviously never tried doing so","msgtype":"m.text"},"ts":1485266282000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: so only chromium is weird.","msgtype":"m.text"},"ts":1485266292000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ondras: that means the value has to be buffered forever, which is a problem if the response is a 1gb video","msgtype":"m.text"},"ts":1485266304000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ondras: https://jakearchibald.com/2014/reading-responses/","msgtype":"m.text"},"ts":1485266326000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tobie: also undefined in Edge 14","msgtype":"m.text"},"ts":1485266366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: do you know Tim O'Ryan btw? I never heard back from them?","msgtype":"m.text"},"ts":1485266449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't :(","msgtype":"m.text"},"ts":1485266462000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: okay, I see. but still, the part of the fetch transation whose state is modified by the consumer is the response. And you do not want to abort the response, but the request, right?","msgtype":"m.text"},"ts":1485266614000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"foolip: I'm cleaning up the WebIDL spec for NodeFilter.","msgtype":"m.text"},"ts":1485266618000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ondras: correct","msgtype":"m.text"},"ts":1485266632000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"foolip: realized Chromium still has a weird prototype defined on it.","msgtype":"m.text"},"ts":1485266645000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: all the other browsers have none defined.","msgtype":"m.text"},"ts":1485266692000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: do you want me to file a bug against this?","msgtype":"m.text"},"ts":1485266721000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: or is https://bugs.chromium.org/p/chromium/issues/detail?id=591919 where you're tracking it.","msgtype":"m.text"},"ts":1485266783000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: we also want to turn these into \"legacy interface callback\" at some point I think","msgtype":"m.text"},"ts":1485266807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, I've built that into my PR.","msgtype":"m.text"},"ts":1485266825000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: will you file downstream issues/PRs too?","msgtype":"m.text"},"ts":1485266860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, you want a syntax change too.","msgtype":"m.text"},"ts":1485266911000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: kinda, but calling it out as legacy is a good first step","msgtype":"m.text"},"ts":1485266976000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: not having it in the syntax still encourages copy-and-pasting unfortunately","msgtype":"m.text"},"ts":1485266989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how any callback interfaces do we have which don't have constants?","msgtype":"m.text"},"ts":1485267064000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: the goal is to turn IDL into something where when you ignore things prefixed with legacy, it's likely you'll do the right thing","msgtype":"m.text"},"ts":1485267070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: number of callback interfaces - 1","msgtype":"m.text"},"ts":1485267096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I don't really know)","msgtype":"m.text"},"ts":1485267113000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK, I was just wondering if there were going out too at some point, but it appears not, right?","msgtype":"m.text"},"ts":1485267175000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I'm not sure what you mean?","msgtype":"m.text"},"ts":1485267220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the only ones we want deprecated are the NodeFilter kind.","msgtype":"m.text"},"ts":1485267256000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: correct?","msgtype":"m.text"},"ts":1485267261000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: no all of them","msgtype":"m.text"},"ts":1485267268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh really?","msgtype":"m.text"},"ts":1485267278000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: future is plain callbacks or promises","msgtype":"m.text"},"ts":1485267279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: good thing I asked. I was assuming otherwise.","msgtype":"m.text"},"ts":1485267307000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I now face the most difficult of challenges... getting google hangouts to work on my machine","msgtype":"m.text"},"ts":1485268049000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: oh my, I hope my setup actually works","msgtype":"m.text"},"ts":1485268076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I can use my laptop which works... but no matter how many times I try to install the plugin on my windows machine it never recognizes","msgtype":"m.text"},"ts":1485268103000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I do remember hitting some issue the last time around, will be a short meeting for me if that happens again","msgtype":"m.text"},"ts":1485268105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Don't we have webrtc now?","msgtype":"m.text"},"ts":1485268139000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Actually, I think my phone is guaranteed to work if there are no network issues, so I should be somewhat good","msgtype":"m.text"},"ts":1485268146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: always the troll","msgtype":"m.text"},"ts":1485268153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyone happen to know what int type Opera/Presto used for CSS percentages?","msgtype":"m.text"},"ts":1485268715000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: is there a document describing the current proposals on the table for the meeting?","msgtype":"m.text"},"ts":1485269155000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"so I can refresh my memory before joining the call","msgtype":"m.text"},"ts":1485269166000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://github.com/whatwg/fetch/issues/447","msgtype":"m.text"},"ts":1485269476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, https://github.com/whatwg/fetch/issues/447 is already long again","msgtype":"m.text"},"ts":1485269477000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"annevk: yea... I was hoping for a summary of \"latest best ideas\"... but its ok","msgtype":"m.text"},"ts":1485269504000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess JakeA's final posts kind of do that","msgtype":"m.text"},"ts":1485269512000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, I think all ideas floated so far apart from tokens are still possible","msgtype":"m.text"},"ts":1485269540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll update the post after the meeting","msgtype":"m.text"},"ts":1485269588000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"let's see if Hangouts works on my laptop","msgtype":"m.text"},"ts":1485269601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks for organising that","msgtype":"m.text"},"ts":1485273449000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: thanks for writing the summary :-)","msgtype":"m.text"},"ts":1485273564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: just listened to HTTP 203, guess the meeting was timely considering your Q1 goals","msgtype":"m.text"},"ts":1485281352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we're recording another on Thursday so will be able to talk about the results","msgtype":"m.text"},"ts":1485281527000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/dom is back to 99.9% HTML \\o/","msgtype":"m.text"},"ts":1485286613000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Haha nice","msgtype":"m.text"},"ts":1485287289000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh shoot I forgot to read this channel this morning","msgtype":"m.text"},"ts":1485287334000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the interface object rabbit hole took me to https://github.com/heycam/webidl/issues/281","msgtype":"m.text"},"ts":1485287419000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: Thoughts as to how to fix that?","msgtype":"m.text"},"ts":1485287432000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Hold your horses I'm only up to 4am","msgtype":"m.text"},"ts":1485287445000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1485287459000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"tobie: I guess just don't add things to an interface prototype object if there is no interface prototype object?","msgtype":"m.text"},"ts":1485287660000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah. Let me rephrase that. Rewriting the interface objects using a more modern style","msgtype":"m.text"},"ts":1485287717000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I was wondering whether I should include setting the constants in them","msgtype":"m.text"},"ts":1485287737000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ah!","msgtype":"m.text"},"ts":1485287740000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That sounds great, although, it seems important to be sure that the \"spec code\" for setting constants is a \"function\" that you call twice, one for interface and once for interface prototype object (if applicable)","msgtype":"m.text"},"ts":1485287776000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://heycam.github.io/webidl/#es-constants","msgtype":"m.text"},"ts":1485287817000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"The location of the property is determined as follows:\"","msgtype":"m.text"},"ts":1485287821000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wonder if the two complicated cases even exist on the platform","msgtype":"m.text"},"ts":1485287827000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think for now maybe just preserve them","msgtype":"m.text"},"ts":1485287844000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But as a follow-up consider removing them from the spec and adding restrictions (e.g., constants cannot be used on [Global]s or consequential interfaces of [Global]s) to prohibit them","msgtype":"m.text"},"ts":1485287863000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Constants are also legacy IMO","msgtype":"m.text"},"ts":1485287950000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yup","msgtype":"m.text"},"ts":1485287957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"String enums","msgtype":"m.text"},"ts":1485287968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ftw","msgtype":"m.text"},"ts":1485287971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Do we *not* have any on [Global]s or consequential interfaces of [Global] at this point?","msgtype":"m.text"},"ts":1485288038000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: annevk: this github issue makes me sad... maybe we should have an easier way for sites to pre-cache requests so they can be safely used for navigations (redirects causing issue here) https://github.com/GoogleChrome/sw-precache/issues/220","msgtype":"m.text"},"ts":1485288083000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"tobie: EventTarget","msgtype":"m.text"},"ts":1485288149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: oh no, hmm","msgtype":"m.text"},"ts":1485288184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: there's a chance globals might not have constants","msgtype":"m.text"},"ts":1485288213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so I had some further questions, but they required me to show you the legacy callback interface object creation algorithm, but I just borked my stash, so that'll have to wait.","msgtype":"m.text"},"ts":1485288731000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1485288744000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: fixed.","msgtype":"m.text"},"ts":1485289116000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: https://gist.github.com/tobie/54473a62c7f6984c3ada862e8cb68c96","msgtype":"m.text"},"ts":1485289121000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: looks excellent","msgtype":"m.text"},"ts":1485289181000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so should \"create a legacy callback interface object\" also set the constants?","msgtype":"m.text"},"ts":1485289281000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yes, in theory. But doing that in a way that factors out constant-creation so all places that create constants use it seems a little tricky. I would do what you have as a first PR.","msgtype":"m.text"},"ts":1485289325000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: cool","msgtype":"m.text"},"ts":1485289337000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"It's not too tricky, but there's no reason to couple it.","msgtype":"m.text"},"ts":1485289342000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah, it's the coupling I wasn't to sure about.","msgtype":"m.text"},"ts":1485289369000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"There's already a lot going here.","msgtype":"m.text"},"ts":1485289376000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: tests for https://github.com/whatwg/url/pull/216 are coming at some point I assume?","msgtype":"m.text"},"ts":1485289425000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: hmm I think I wrote tests already","msgtype":"m.text"},"ts":1485289536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: maybe I forgot to create a PR, there's a commit linked from the issue","msgtype":"m.text"},"ts":1485289571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1485289572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yup, fixed","msgtype":"m.text"},"ts":1485289644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm whatwg-url already passes them, let's see what the deal is","msgtype":"m.text"},"ts":1485289797000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, annevk: what's the best practice for setting variables in algorithm to the result of if..else clauses?","msgtype":"m.text"},"ts":1485292305000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Meh, there are lots of options, kind of depends on how long hte computation process is","msgtype":"m.text"},"ts":1485292334000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Lemme create a gist","msgtype":"m.text"},"ts":1485292337000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if: 3 steps otherwise: 1 step","msgtype":"m.text"},"ts":1485292372000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: should it go in infra?","msgtype":"m.text"},"ts":1485292399000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Not sure...","msgtype":"m.text"},"ts":1485292412000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"What is the 1 step?","msgtype":"m.text"},"ts":1485292414000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Here are the most obvious patterns https://gist.github.com/domenic/b621f2c538ddd1b1dc288ce7a56032e5","msgtype":"m.text"},"ts":1485292513000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh, you do it nicely like that, making sure to define the variable first. Cool.","msgtype":"m.text"},"ts":1485292612000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1485292619000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: if feels weird that no [[HasInstance]] is defined for named constructors","msgtype":"m.text"},"ts":1485297286000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: am I missing something?","msgtype":"m.text"},"ts":1485297300000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I'm getting both `new Image() instanceof HTMLImageElement` and `new Image() instanceof Image` return `true` in FF and Chrome.","msgtype":"m.text"},"ts":1485297387000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: is that because of some kind of UA magic?","msgtype":"m.text"},"ts":1485297411000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: filed https://github.com/heycam/webidl/issues/282","msgtype":"m.text"},"ts":1485297737000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Just don't try `document createElement('img') instanceof Image`","msgtype":"m.text"},"ts":1485298355000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: document createElement('img') instanceof HTMLImageElement is just as bad.","msgtype":"m.text"},"ts":1485298707000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jsbell: oh no, it isn't","msgtype":"m.text"},"ts":1485298750000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jsbell: that's mind boggling.","msgtype":"m.text"},"ts":1485298768000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: sorry. :-/","msgtype":"m.text"},"ts":1485298871000,"senderName":"tobie","senderId":"tobie@irc"}
]