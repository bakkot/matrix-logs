[
{"content":{"body":"tobie: so I read \"I think we need a community group for that.\" and for a moment there I thought you were serious, then read the rest","msgtype":"m.text"},"ts":1526034147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah. This work mode is an important cause of the current situation.","msgtype":"m.text"},"ts":1526034299000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: it puts the burden of initiating change on those that are victims of the status quo.","msgtype":"m.text"},"ts":1526034323000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: but then lets those benefiting from the status quo keep the situation as is by refusing to enact change (absence of consensus for change at the AC level).","msgtype":"m.text"},"ts":1526034478000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: this is how Swirtzerland works, btw.","msgtype":"m.text"},"ts":1526034501000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah, hence WHATWG, but WHATWG isn't exactly diverse either","msgtype":"m.text"},"ts":1526034528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes on both counts.","msgtype":"m.text"},"ts":1526034559000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Hmm, what is the best way to search through wpt to see if some behavior is being tested","msgtype":"m.text"},"ts":1526035799000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"perhaps I should just run them all","msgtype":"m.text"},"ts":1526035806000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and change implementation to see if anything breaks","msgtype":"m.text"},"ts":1526035825000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(or get unexpected pass)","msgtype":"m.text"},"ts":1526035834000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: We might have useful coverage data these days?","msgtype":"m.text"},"ts":1526036102000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"jgraham_: hmm","msgtype":"m.text"},"ts":1526036188000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"this particular case is about form element stuff inside shadow DOM","msgtype":"m.text"},"ts":1526036210000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: https://github.com/marco-c/code-coverage-reports/blob/master/web-platform-tests.tar.xz has wpt coverage data","msgtype":"m.text"},"ts":1526036258000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"From Firefox CI","msgtype":"m.text"},"ts":1526036273000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"smaug____: I tend to resort to grep and digging around in the couple places that might make sense","msgtype":"m.text"},"ts":1526044728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"frivoal: fyi tobie was sarcastic","msgtype":"m.text"},"ts":1526049536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hehe. That went way over my head. Also, I had heard the same comment made non sarcastically by a couple of people right before, so...","msgtype":"m.text"},"ts":1526050085000,"senderName":"frivoal","senderId":"frivoal@irc"},
{"content":{"body":"either way, this is a real problem, and priviledged people alone are unlikely to be in the best position to get to the bottom of it.","msgtype":"m.text"},"ts":1526050140000,"senderName":"frivoal","senderId":"frivoal@irc"},
{"content":{"body":"(which doesn't mean committees are the best way of out this)","msgtype":"m.text"},"ts":1526050170000,"senderName":"frivoal","senderId":"frivoal@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1526050380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"frivoal: oops. see my comments above. The problem with that is we’re basically asking minorities to do the work for free. And then it’ll die at the AC.","msgtype":"m.text"},"ts":1526050387000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: What was the context?","msgtype":"m.text"},"ts":1526052189000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"+1 for that being a problem.","msgtype":"m.text"},"ts":1526052219000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: essentially me being a sarcastic jerk on twitter. :-/","msgtype":"m.text"},"ts":1526052276000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":" jyasskin: https://twitter.com/annevk/status/994876132422975489?s=21","msgtype":"m.text"},"ts":1526052505000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Your joke was good.","msgtype":"m.text"},"ts":1526052568000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"WHATWG has something of the opposite problem: browser implementers are in a position of power, and folks who don't work for a browser have an uphill battle even if they're right.","msgtype":"m.text"},"ts":1526053072000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"It’s the same problem, really. Creating diversity grants would be a good first step imho.","msgtype":"m.text"},"ts":1526053403000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I'm gonna uppercase those variable names now","msgtype":"m.text"},"ts":1526055324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: for https://github.com/whatwg/whatwg.org/pull/201 that is","msgtype":"m.text"},"ts":1526055335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah OK sounds good","msgtype":"m.text"},"ts":1526055343000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: shall I also add my review.sh thingie?","msgtype":"m.text"},"ts":1526055374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah please go ahead :). I was prepared to take over since it's getting late for you but if you're still working go for it","msgtype":"m.text"},"ts":1526055407000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: should be all in order now","msgtype":"m.text"},"ts":1526056316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I haven't quite tested the full setup though, only the individual pieces","msgtype":"m.text"},"ts":1526056340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: if I do more work later on I'll ping you here first, but it seems unlikely","msgtype":"m.text"},"ts":1526056365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I'll try to give it a try today. It's a bit hard since using curlbikeshed doesn't work until the Bikeshed PR is merged","msgtype":"m.text"},"ts":1526056372000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe landing the Bikeshed changes + CSS refactoring + rebuilding all the living standards would be a good first step","msgtype":"m.text"},"ts":1526056402000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll make gray icons of everything","msgtype":"m.text"},"ts":1526056416000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Happy to land whenever.","msgtype":"m.text"},"ts":1526056432000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Probably Monday","msgtype":"m.text"},"ts":1526056553000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I guess the other thing I might work on later is updating Makefile / .gitignore / README.md for standards","msgtype":"m.text"},"ts":1526056680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Did for URL now, as a demo","msgtype":"m.text"},"ts":1526058284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I haven't looked at what we need to do for HTML, hopefully it's not too bad","msgtype":"m.text"},"ts":1526058305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic, annevk, anyone else with an opinion: Putting together the code for cross-spec backrefs now, so uses of a definition in other specs will show up in the dfn's dfn-panel. Should I just put a single reference to the *spec* that's referencing the term, or should I, when possible, put in all the links to the actual references, like you get with the spec-internal references?","msgtype":"m.text"},"ts":1526065073000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Possible problem with the latter is that very common types will have *lots* of references - TypeError is referenced by WebIDL alone 70 times, for instance.","msgtype":"m.text"},"ts":1526065119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh wow, interesting/awesome...","msgtype":"m.text"},"ts":1526065224000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe just something like `<a href='link-to-spec'>webidl</a> (70 refs)`","msgtype":"m.text"},"ts":1526065252000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Specs that aren't Bikeshedded probably won't have IDs on their refs anyway, so I *can't* link straight to them. But this first run is only going over Bikeshedded specs, so the question still arises.)","msgtype":"m.text"},"ts":1526065306000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm a bit confused by that example, where would that show up for TypeError? Since TypeError is defined in JS.","msgtype":"m.text"},"ts":1526065317000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, it's just the particular thing I'm looking at. Imagine anothe rspec that's actually bikeshedded. ^_^","msgtype":"m.text"},"ts":1526065342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like, Infra's set/append definition is referenced 8 times in WebIDL.","msgtype":"m.text"},"ts":1526065433000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"list-iterate has 12 refs in WebIDL.","msgtype":"m.text"},"ts":1526065467000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"etc.","msgtype":"m.text"},"ts":1526065468000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Got it, yeah. I think that would work well, maybe with [WebIDL] as the text","msgtype":"m.text"},"ts":1526065475000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You could do the whole thing with <details>, but with a big increase in output file size in many cases, I imagine.","msgtype":"m.text"},"ts":1526065511000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, if I go this way I'd just use the same naming code that generates the spec names in the indexes.","msgtype":"m.text"},"ts":1526065521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, exactly.","msgtype":"m.text"},"ts":1526065525000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I have a related idea to make that work even better...","msgtype":"m.text"},"ts":1526065570000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The fact that you can't iterate down the list of refs, like you can internal ones, suggests to me that having the full list wouldn't be that helpful.","msgtype":"m.text"},"ts":1526065577000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah?","msgtype":"m.text"},"ts":1526065587000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you made the \"Terms defined by other specifications\" behave like https://html.spec.whatwg.org/multipage/infrastructure.html#dependencies","msgtype":"m.text"},"ts":1526065601000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"where clicking on the term opens a dfn panel","msgtype":"m.text"},"ts":1526065617000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Then you could have \"70 refs\" link to the entry in \"Terms defined by other specifications\"","msgtype":"m.text"},"ts":1526065630000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So you could jump directly to the usage of the term in the other spec's appendix and see all uses","msgtype":"m.text"},"ts":1526065652000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ooooh.","msgtype":"m.text"},"ts":1526065660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, I'd have to do some verification that said newly-generated section actually exists, in case you're looking at a spec that hasn't been regenerated recently, or isn't Bikeshed at all...","msgtype":"m.text"},"ts":1526065702000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I wanted to do that anyway, to verify that the URL your .bs file claims is where you're published actually contains a document on the other end...  (WebVR, for example, is now lying.)","msgtype":"m.text"},"ts":1526065757000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Claims to live at https://immersive-web.github.io/webvr/, was moved to https://immersive-web.github.io/webvr/spec/1.1/, first URL is now a \"this spec is abandoned, here's a link to it for legacy purposes\" landing page.)","msgtype":"m.text"},"ts":1526065845000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This sounds quite exciting","msgtype":"m.text"},"ts":1526066037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think my current attempt is probably not great anyway, and I should just be parsing HTML directly and inferring the spec it's referencing via URL. That'll automatically extend to non-Bikeshed things, and won't depend on possibly-legacy linking data.","msgtype":"m.text"},"ts":1526066039000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'll do that \"dfn-panel for Terms Defined By Reference\" thing first, that's more straightforward.","msgtype":"m.text"},"ts":1526066257000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: This sounds great, and I like Domenic's https://html.spec.whatwg.org/multipage/infrastructure.html#dependencies suggestion. Note, though, that it wasn't obvious to me that clicking would open the dfn panel instead of jumping to the definition in the other spec.","msgtype":"m.text"},"ts":1526067980000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Yeah, it looks like a link there. I won't be styling it like a link.","msgtype":"m.text"},"ts":1526068006000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah that makes sense","msgtype":"m.text"},"ts":1526068016000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Can the Bikeshed web service parse multiple Text-Macro values?","msgtype":"m.text"},"ts":1526068777000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And more trickily, how would I pass them with curl?","msgtype":"m.text"},"ts":1526068795000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://api.csswg.org/bikeshed/ explains how to pass metadata to bikeshed via the curl api.  It *should* handle multiple Text-Macro values, but you'd have to check.","msgtype":"m.text"},"ts":1526070907000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"All right, Terms Defined By Reference is now dfn-panel'd. Let me know if there's anything you want fixed in https://github.com/tabatkins/bikeshed/issues/1249. I'll give more thought to backreferences next week.","msgtype":"m.text"},"ts":1526079550000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]