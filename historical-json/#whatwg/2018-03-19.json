[
{"content":{"body":"https://w3c.github.io/webvr/spec/1.1/ is dead","msgtype":"m.text"},"ts":1521452233000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Never mind, that's just an invalid URL on MDN.","msgtype":"m.text"},"ts":1521452253000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: do I understand correctly that the spec text that makes the expected output null for https://github.com/w3c/web-platform-tests/blob/master/mimesniff/mime-types/resources/generated-mime-types.json#L967 is https://tools.ietf.org/html/rfc7230#section-3.2.6 ?","msgtype":"m.text"},"ts":1521456301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: https://mimesniff.spec.whatwg.org/#parsing-a-mime-type","msgtype":"m.text"},"ts":1521456354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I somehow failed to reach that by following links from the constructor of Response in the Fetch spec","msgtype":"m.text"},"ts":1521456394000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: they're in the mimesniff folder for that reason","msgtype":"m.text"},"ts":1521456397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1521456397000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: yes, but the test invoked Response constructor, so I started there","msgtype":"m.text"},"ts":1521456419000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: ah, that might not all be hooked up concretely yet I suppose","msgtype":"m.text"},"ts":1521456432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: also, Response has bytes, but the \"parse a MIME type\" algorithm operates on Unicode","msgtype":"m.text"},"ts":1521456461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: the hope is btw that browsers get a centralized MIME type module for this that's reused everywhere","msgtype":"m.text"},"ts":1521456473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If I change the error handling policy of UTF-8 to UTF-16 conversion in Gecko, the test fails","msgtype":"m.text"},"ts":1521456486000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: there's some Firefox bugs for this","msgtype":"m.text"},"ts":1521456491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what spec tells me how to get from bytes in Fetch to Unicode in mimesniff?","msgtype":"m.text"},"ts":1521456546000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: hmm yeah, \"extract a MIME type\" is underdefined","msgtype":"m.text"},"ts":1521456552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: the expectation is that it uses https://infra.spec.whatwg.org/#isomorphic-decode","msgtype":"m.text"},"ts":1521456580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks. that's not what Gecko is doing","msgtype":"m.text"},"ts":1521456601000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: seems a little weird since header values are supposedly always \"latin1\"","msgtype":"m.text"},"ts":1521456625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not saying that the current code is correct","msgtype":"m.text"},"ts":1521456646000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: but yeah, the specs are not fully okay here and I guess I should get back to cleaning up the remainder of the MIME Sniffing integration","msgtype":"m.text"},"ts":1521456666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK. thanks","msgtype":"m.text"},"ts":1521456683000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It's kinda sad that we actually have code whose test pass level depends on our present weird error handling policy for in-RAM UTF-8 to UTF-16 conversion","msgtype":"m.text"},"ts":1521456733000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the policy being that if there's an error, the result of the conversion is the empty string","msgtype":"m.text"},"ts":1521456748000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"silently collapsing stuff to the empty string in infrastructural code seems like Bad Idea, so I'm trying to change this","msgtype":"m.text"},"ts":1521456798000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"FWIW: I have no plans for dinner; if anyone from IETF land wants to meet up this evening let me know","msgtype":"m.text"},"ts":1521460069000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because, like, it'd be great to see some of you.","msgtype":"m.text"},"ts":1521460082000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I'm flying around that time :/","msgtype":"m.text"},"ts":1521460226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1521460274000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"How did IETF day go?","msgtype":"m.text"},"ts":1521464073000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the WHATWG meetup went well, we didn't really get into URLs, but everything else we're doing was roughly agreeable","msgtype":"m.text"},"ts":1521464310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cool, much discussion of fetch?","msgtype":"m.text"},"ts":1521464600000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: a little bit about how we can make the WebSocket bits nicer","msgtype":"m.text"},"ts":1521464628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh cool","msgtype":"m.text"},"ts":1521464635000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: and an action item of sorts for me to figure out what a better integration with HTTP would look like","msgtype":"m.text"},"ts":1521464650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sounds hard :)","msgtype":"m.text"},"ts":1521464662000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, HTTP folks might work on another revision of the protocol, which might enable that so it's probably worth a shot","msgtype":"m.text"},"ts":1521464690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't suppose data: URLs or forgiving base-64 decoding came up","msgtype":"m.text"},"ts":1521464775000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or MIME parsing?","msgtype":"m.text"},"ts":1521464787000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MIME parsing came up, nobody was phased much by not having strict handling there","msgtype":"m.text"},"ts":1521464813000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Email might have similar parsing","msgtype":"m.text"},"ts":1521464820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No clear action items though","msgtype":"m.text"},"ts":1521464828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Didn't really discuss data: URLs","msgtype":"m.text"},"ts":1521464839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or base64; I think IETF mostly prefers the base64 url variant, but I'm not sure what implementations do for that","msgtype":"m.text"},"ts":1521464865000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"…in which I use #SmooshGate as an excuse to explain why We Can’t Break The Web: https://developers.google.com/web/updates/2018/03/smooshgate","msgtype":"m.text"},"ts":1521467191000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Domenic: Advice on getting https://github.com/whatwg/console/issues/113#issuecomment-370198540 rolling?","msgtype":"m.text"},"ts":1521479178000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I'm a little hesitant to just ping Joseph again but not sure what else to do; chrome seems ready to move forward (https://bugs.chromium.org/p/chromium/issues/detail?id=801442#c9)","msgtype":"m.text"},"ts":1521479199000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: does Joseph even disagree?","msgtype":"m.text"},"ts":1521479839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: you could ping some other implementers to make sure everyone agrees on a way forward, but not throwing kinda seems like the way to go based on a quick read?","msgtype":"m.text"},"ts":1521479872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, I think not throwing seems to match current behavior and is easier for implementations that don't evaluate the string when the DevTools = closed. Personally I like throwing better, but looks like that might not be the best way moving forward.","msgtype":"m.text"},"ts":1521480073000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Is there an easy way to get the multipage version of a link found in the full-page version of HTML?","msgtype":"m.text"},"ts":1521488447000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: append the fragment to /multipage/ and wait for the client-side redirect script to run","msgtype":"m.text"},"ts":1521488675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Awesome thanks!","msgtype":"m.text"},"ts":1521488731000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"am i correct in thinking that WebIDL and ECMAScript are both different languages, and browsers just happen to use ECMAScript to implement WebIDL interfaces?","msgtype":"m.text"},"ts":1521492958000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: Kinda. WebIDL was originally supposed to be an independent language for describing how interfaces should be implemented, so that you could do the actual implementation in multiple different target languages.","msgtype":"m.text"},"ts":1521493356000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so, would i be crazy if i think that wasm would allow other languages other than JS to implement WebIDL interfaces as well?","msgtype":"m.text"},"ts":1521493403000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"(once wasm is mature enough that is)","msgtype":"m.text"},"ts":1521493423000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"But we abandoned that pretense a while back, because it turns out Java and JS have different execution semantics (who knew!) which changes how you want to shape the interfaces between the two languages. WebIDL is now just a more-succinct way of describing JS APIs that takes a lot of the busywork away.","msgtype":"m.text"},"ts":1521493430000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Other languages implementing APIs described by WebIDL will still run into the \"other languages might not offer the same constructs in the same way\" problem that Java/JS had.","msgtype":"m.text"},"ts":1521493474000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm, so in other for other languages to substitute JS as the interface layer, they'll need to not only implement the APIs necessary, but also the execution model?","msgtype":"m.text"},"ts":1521494222000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"recalls that there is a project to replace JS with ruby in the browser","msgtype":"m.emote"},"ts":1521494226000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: wasm will impl IDL bindings","msgtype":"m.text"},"ts":1521495552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"KiChjang: At least a little bit. Like, you can't implement WebIDL's `iterable<Foo>` if your language doesn't have something closely equivalent to iterables.","msgtype":"m.text"},"ts":1521501520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]