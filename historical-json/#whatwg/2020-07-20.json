[
{"content":{"body":"annevk: about hyphenated adjectives, I found a good example of a case where it makes a big difference","msgtype":"m.text"},"ts":1595205241000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://japantoday.com/category/entertainment/japan%E2%80%99s-anti-piracy-ads-are-back-with-reboot-after-six-year-break headline","msgtype":"m.text"},"ts":1595205254000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"‚ÄúJapan‚Äôs anti-movie piracy ads are back with reboot after six-year break‚Äù","msgtype":"m.text"},"ts":1595205285000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"while a muliply-hyphenated adjective as in ‚ÄúJapan‚Äôs anti-movie-piracy ads‚Äù would look a bit awkward, ‚ÄúJapan‚Äôs anti-movie piracy ads‚Äù is a lot more awkward","msgtype":"m.text"},"ts":1595205415000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...because it sounds like it‚Äôs referring to ads promoting piracy, and that are also ‚Äúanti-movie‚Äù (rather anti-piracy)","msgtype":"m.text"},"ts":1595205566000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: or stolen ads üòä","msgtype":"m.text"},"ts":1595229830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess it still works because there's only one \"logical\" explanation (absent this channel's rules)","msgtype":"m.text"},"ts":1595229859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I don't really see how that would work in a multi-process architecture. Could you walk me through it?","msgtype":"m.text"},"ts":1595230129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so uhm, firefox seem to be really eager to render <summary>","msgtype":"m.text"},"ts":1595245408000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"https://jsfiddle.net/8dvht9wz/","msgtype":"m.text"},"ts":1595245410000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"(my firefox shows that even before the ::before pseudo-element)","msgtype":"m.text"},"ts":1595245420000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"shall I file a bug here?","msgtype":"m.text"},"ts":1595245424000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: Firefox seems more correct","msgtype":"m.text"},"ts":1595248821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"@annevk: interesting.. is this specced somewhere? I would expect ::before to appear before *any* markup-specified content...","msgtype":"m.text"},"ts":1595248907000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Oh wait, this is https://github.com/whatwg/html/issues/3805 and per the last comment there I guess it is a Firefox bug (which is reported and has an unreviewed patch from ecobos)","msgtype":"m.text"},"ts":1595249077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"@annevk: I see, thanks for the link!","msgtype":"m.text"},"ts":1595249849000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"MikeSmith: almost wrote \"first party trackers\" just now","msgtype":"m.text"},"ts":1595256013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, so in a multi-process architecture, container document is nonsense, since you cannot access `Document` objects in another process. Instead, the relevant information (in this case origin) is synced to every process in the frame tree every time it changes.","msgtype":"m.text"},"ts":1595258458000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i.e. every time we cross process boundaries in \"synchronous\" \"browser\" spec-code (not posting a task to the appropriate event loop), such as when we access container document, we're effectively saying that browsers need to proactively sync whatever data we access.","msgtype":"m.text"},"ts":1595258540000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the idea behind container document is that it's some abstract representation of your embedding parent","msgtype":"m.text"},"ts":1595258572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure. So is parent browsing context's active document.","msgtype":"m.text"},"ts":1595258588000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: whereas if you go to the parent browsing context and then the active document it could be anything","msgtype":"m.text"},"ts":1595258591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't see the difference. Both are documents.","msgtype":"m.text"},"ts":1595258600000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yes, but a browsing context could have been navigated","msgtype":"m.text"},"ts":1595258622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure, you need to sync relevant data on navigation.","msgtype":"m.text"},"ts":1595258636000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Every process knows the active document('s origin, etc.) just like they know their container document('s origin, etc.)","msgtype":"m.text"},"ts":1595258652000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't see how that helps","msgtype":"m.text"},"ts":1595258705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The dangerous thing is when active document can *change* between steps, e.g. in navigation","msgtype":"m.text"},"ts":1595258706000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Active document can change while you ask what it is","msgtype":"m.text"},"ts":1595258723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But if you have a single synchronous loop (like the XFO spec) then all the data is available and won't change because it's been synced last time there was a navigation","msgtype":"m.text"},"ts":1595258725000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It cannot change during the steps of a synchronous algorithm","msgtype":"m.text"},"ts":1595258740000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Fair, but I think where we want to end up is closer to container document","msgtype":"m.text"},"ts":1595258871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Probably more like container document abstraction or some such, but still","msgtype":"m.text"},"ts":1595258886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess you're also assuming that the document in which something is being processed is itself fully active or active?","msgtype":"m.text"},"ts":1595259003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure... it's being navigated, but I think you can navigate non-active documents.","msgtype":"m.text"},"ts":1595259226000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I guess we should also update https://w3c.github.io/webappsec-csp/#frame-ancestors-navigation-response which uses the old \"nested through\"...","msgtype":"m.text"},"ts":1595259262000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that was also a concern with source browsing context I think, because if it was ever by a non-active document a lot of the browsing context checks don't add up","msgtype":"m.text"},"ts":1595259376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That seems like an argument for container document now that I think about it.","msgtype":"m.text"},"ts":1595259410000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It generally seems preferable to have a single source of authority rather than a container for sources of authority üòä","msgtype":"m.text"},"ts":1595259484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean there are cases where checking the active chain is better than checking the creator chain","msgtype":"m.text"},"ts":1595259512000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But they probably don't make sense for inactive documents","msgtype":"m.text"},"ts":1595259522000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Can they be different for active documents?","msgtype":"m.text"},"ts":1595259540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hopes not","msgtype":"m.emote"},"ts":1595259586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They can be different for active documents but not for fully-active ones, I think","msgtype":"m.text"},"ts":1595259727000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think we also have some issues about that distinction","msgtype":"m.text"},"ts":1595259748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe this revived interest in bfcache will help clean some of that up","msgtype":"m.text"},"ts":1595259775000,"senderName":"annevk","senderId":"annevk@irc"}
]