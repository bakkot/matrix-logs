[
{"content":{"body":"TabAtkins: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1056)> when running bikeshed update","msgtype":"m.text"},"ts":1584664908000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"any clues?","msgtype":"m.text"},"ts":1584664938000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"this is after rebasing my mdn-annotations branch against current master, and fixing python2-isms to be python3-compatible","msgtype":"m.text"},"ts":1584664996000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hm, i'll check","msgtype":"m.text"},"ts":1584665174000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it seems to maybe be a macOS-specific problem","msgtype":"m.text"},"ts":1584665593000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I’m using the Apple-installed system Python3","msgtype":"m.text"},"ts":1584665614000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I could try installing python3 from homebrew","msgtype":"m.text"},"ts":1584665640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That would explain why I didn't run into it","msgtype":"m.text"},"ts":1584665641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1584665738000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"url in Worker(url) constructor must be same-origin, but where the spec actually state that requirement?","msgtype":"m.text"},"ts":1584667617000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"from https://html.spec.whatwg.org/multipage/workers.html#dom-worker it’s not clear there is a such a requirement","msgtype":"m.text"},"ts":1584667656000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just a non-normative note","msgtype":"m.text"},"ts":1584667674000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> Any same-origin URL (including blob: URLs) can be used. data: URLs can also be used, but they create a worker with an opaque origin.","msgtype":"m.text"},"ts":1584667677000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well there is the SecurityError in the first step, but that’s optional","msgtype":"m.text"},"ts":1584667756000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: with python3 installed from homebrew, I don’t get that SSL error","msgtype":"m.text"},"ts":1584669687000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I think the Apple-installed Pthonall hope of getting responses to my questions there","msgtype":"m.text"},"ts":1584669723000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Interesting, okay","msgtype":"m.text"},"ts":1584669729000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(oofs, fat-fingered a copy/paste there; please ignore)","msgtype":"m.text"},"ts":1584669781000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to my questions there","msgtype":"m.text"},"ts":1584669795000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"People always used to have problems with the system version if py2 on Mac too. Word but unsurprising, I guess","msgtype":"m.text"},"ts":1584669798000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(dang did it again)","msgtype":"m.text"},"ts":1584669806000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: yeah I think there is no system-installed Python3 on macOS, yet","msgtype":"m.text"},"ts":1584669851000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it is instead installed by XCode","msgtype":"m.text"},"ts":1584669866000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe that was true for Python2 as well, I dunno","msgtype":"m.text"},"ts":1584669897000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and in general I think some XCode-installed stuff can break when you also install stuff from homebrew","msgtype":"m.text"},"ts":1584669941000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: OK, the SSL thing seems to be a known issue; I found https://stackoverflow.com/a/60334957/441757, which claims “Apple will not fix this, because Apple does not think this is a problem”","msgtype":"m.text"},"ts":1584670306000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"see also https://github.com/HandBrake/HandBrake/issues/2216#issuecomment-527114519","msgtype":"m.text"},"ts":1584670317000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"apparently whatever Apple person responded to it seemed be saying the solution is to not use urllib but instead use the requests library","msgtype":"m.text"},"ts":1584670400000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, or else explicitly pass cafile to urllib","msgtype":"m.text"},"ts":1584670427000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: OK, it can be “fixed” by importing certifi and giving a cafile arg to all urllib.request.urlopen calls","msgtype":"m.text"},"ts":1584671244000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., urllib.request.urlopen(ghPrefix + \"manifest.txt\", cafile=certifi.where())","msgtype":"m.text"},"ts":1584671251000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dunno whether it’s worth doing that or not, since in the case of XCode-installed Python3, that would require the user to pip install certifi, which I think they need root perms to do","msgtype":"m.text"},"ts":1584671336000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I can make a patch/PR for it anyway","msgtype":"m.text"},"ts":1584671362000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: worker thing looks like a legit bug; may have gotten lost when I tried to allow cross-origin module workers and then annevk undid that. Please file; can fix tomorrow.","msgtype":"m.text"},"ts":1584676700000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: OK, will do — thanks","msgtype":"m.text"},"ts":1584677803000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don’t think it’s a bug, it’s supposed to fail during fetching and does","msgtype":"m.text"},"ts":1584686086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Bakkot: yeah I guess, it still seems really vague to me overall. I guess I’d prefer not doing anything or providing an explicit hook","msgtype":"m.text"},"ts":1584686229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which spec states that it must fail? Fetch?","msgtype":"m.text"},"ts":1584688281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, fetch mode is \"same-origin\"","msgtype":"m.text"},"ts":1584689334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/html/issues/3238#issuecomment-601383619 looks great. Curious though, why not an identifier? Tricky due to IDL's weird identifier rules?","msgtype":"m.text"},"ts":1584695250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why is CSS Images 4 not a superset of 3?","msgtype":"m.text"},"ts":1584696939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think all the work is happening in level 3, and level 4 is outdated?","msgtype":"m.text"},"ts":1584697429000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: not entirely, HTML depends on 4 for something","msgtype":"m.text"},"ts":1584697448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: I was looking at https://github.com/whatwg/html/pull/5358 which made me wonder","msgtype":"m.text"},"ts":1584697462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"¯\\_(ツ)_/¯","msgtype":"m.text"},"ts":1584697512000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"Outdated\" here means that it doesn't yet incorporate all of images-3's changes, right?","msgtype":"m.text"},"ts":1584699117000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"not that it's deprecated or anything","msgtype":"m.text"},"ts":1584699125000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"because on a project for a client of mine I have a tracking bug for images-4 since we could really use object-fit: cover scale-down;","msgtype":"m.text"},"ts":1584699170000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: right, I think it still shows broad ideas for new features in l4, but how stable they are idk","msgtype":"m.text"},"ts":1584699226000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1584699246000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1584699250000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"MikeSmith Framework iterate an array over div using either v-for, ng-for Array.map(). Can there be a rules for iterating on HTML. we have array type HTML elements like ul, ol, dl, table, tr. Something like only those would be used?","msgtype":"m.text"},"ts":1584706424000,"senderName":"grvpanchal","senderId":"grvpanchal@irc"},
{"content":{"body":"MikeSmith Can there be new elements for grid layout?","msgtype":"m.text"},"ts":1584706457000,"senderName":"grvpanchal","senderId":"grvpanchal@irc"},
{"content":{"body":"grvpanchal: I don’t know why you are asking me in particular","msgtype":"m.text"},"ts":1584707000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I saw yor name in w3.org/html/wg/next/markup/","msgtype":"m.text"},"ts":1584707123000,"senderName":"grvpanchal","senderId":"grvpanchal@irc"},
{"content":{"body":"aha","msgtype":"m.text"},"ts":1584707193000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that doc is very out of date","msgtype":"m.text"},"ts":1584707211000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ohh ok","msgtype":"m.text"},"ts":1584707222000,"senderName":"grvpanchal","senderId":"grvpanchal@irc"},
{"content":{"body":"If I have to propose such changes How do I go along?","msgtype":"m.text"},"ts":1584707251000,"senderName":"grvpanchal","senderId":"grvpanchal@irc"},
{"content":{"body":"grvpanchal: well these days if you have a problem that you’re hoping to solve, the place to post a description of the problem is https://github.com/whatwg/html/issues","msgtype":"m.text"},"ts":1584707301000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don’t suggest you start by proposing specific changes","msgtype":"m.text"},"ts":1584707322000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"grvpanchal: prolly best to start at https://whatwg.org/faq#adding-new-features and https://whatwg.org/working-mode","msgtype":"m.text"},"ts":1584707329000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"grvpanchal: yeah what annevk said — see step #1 at https://whatwg.org/faq#adding-new-features","msgtype":"m.text"},"ts":1584707385000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Thanks MikeSmith annevk","msgtype":"m.text"},"ts":1584707392000,"senderName":"grvpanchal","senderId":"grvpanchal@irc"},
{"content":{"body":"I was thinking if there are three different implementation on grid layout i.e. float, display:flex and display:grid. Why not native grid elements that transcend through web component's shadow DOM?","msgtype":"m.text"},"ts":1584707568000,"senderName":"grvpanchal","senderId":"grvpanchal@irc"},
{"content":{"body":"what do you guys think?","msgtype":"m.text"},"ts":1584707593000,"senderName":"grvpanchal","senderId":"grvpanchal@irc"},
{"content":{"body":"TabAtkins could definitely give some insight on that","msgtype":"m.text"},"ts":1584707629000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"grvpanchal: it seems that would conflate separation of content and style","msgtype":"m.text"},"ts":1584707673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk true I observed that css of user agent stylesheet (http://trac.webkit.org/browser/trunk/Source/WebCore/css/html.css) can transverse shadow DOM. Something similar could be great for grid elements","msgtype":"m.text"},"ts":1584707949000,"senderName":"grvpanchal","senderId":"grvpanchal@irc"},
{"content":{"body":"annevk: a string seems to make a lot more sense as the actual value space we're working in, leaving identifiers for programming-language identifier things. Also, you need to solve http-equiv <-> httpEquiv, and I think [Reflect=\"http-equiv\"] is nicer than [Reflect=http_equiv] with a rule that converts _ to -","msgtype":"m.text"},"ts":1584714060000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm I guess I am wrong about - not being allowed","msgtype":"m.text"},"ts":1584714233000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Enumerated attributes are still really hard though","msgtype":"m.text"},"ts":1584714318000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: because they are case-insensitive and not enums therefore?","msgtype":"m.text"},"ts":1584714347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: could we (ab)use an enum?","msgtype":"m.text"},"ts":1584714361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nah just hard to come up with a data model that expresses all the things that the spec does","msgtype":"m.text"},"ts":1584714366000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And yeah I think enums would be some component of it","msgtype":"m.text"},"ts":1584714371000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: did you consider exposing hooks so the weird cases could be done in prose?","msgtype":"m.text"},"ts":1584714419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: e.g., the crossorigin funkiness","msgtype":"m.text"},"ts":1584714432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I mean, that could work","msgtype":"m.text"},"ts":1584714434000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or [ReflectCORS]","msgtype":"m.text"},"ts":1584714441000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think there are three tiers of them: simple 1:1 keyword:states, many:1 keywords:states (<area shape=\"\">), and CORS settings attributes (one state has no keyword)","msgtype":"m.text"},"ts":1584714509000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(There are others in the second tier besides <area shape=\"\">)","msgtype":"m.text"},"ts":1584714533000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm maybe CORS isn't alone in being weird","msgtype":"m.text"},"ts":1584714569000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"translate=\"\" also has a no-keyword state","msgtype":"m.text"},"ts":1584714578000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I dunno, it's doable, not \"hard\", just a good deal harder.","msgtype":"m.text"},"ts":1584714600000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"One thing you could decide to not do is states","msgtype":"m.text"},"ts":1584714680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g., since <area shape> isn't limited to known values it doesn't really matter","msgtype":"m.text"},"ts":1584714715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah TimothyGu was suggesting that too","msgtype":"m.text"},"ts":1584714735000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I have a harder time with that since my mental picture of enumerated attributes intimately includes states. But I think you're right it could simplify things a good bit.","msgtype":"m.text"},"ts":1584714773000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Because yeah, trying to fit a table structure in there doesn't seem great","msgtype":"m.text"},"ts":1584714777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"However from a code-generator point of view, if not a spec-writing point of view, you kind of want the attribute <-> state mapping to be generated automatically","msgtype":"m.text"},"ts":1584714819000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess it doesn't have to be done in IDL, but it sure would be convenient","msgtype":"m.text"},"ts":1584714833000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm, this week is clearly not the week I'm getting caught up on COOP/COEP, but I did some bits","msgtype":"m.text"},"ts":1584714838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I'll have a go at updating tests at least for this deleted constructor idea","msgtype":"m.text"},"ts":1584714857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: we could still do most of that","msgtype":"m.text"},"ts":1584714912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: each enum value is a state, missing default is a state (unless it's an enum value) invalid default is a state (unless it's an enum value)","msgtype":"m.text"},"ts":1584714935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and then in prose we switch on state and group states that are treated equivalent","msgtype":"m.text"},"ts":1584714959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: you'd have to refactor <area shape> (and potentially equivalent others); CORS requires some additional logic but perhaps most can be shared","msgtype":"m.text"},"ts":1584715072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: other alternative is to change https://heycam.github.io/webidl/#idl-record and go full on ordered maps 🙂","msgtype":"m.text"},"ts":1584715218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not quite sure how that'd work, but it's early yet :)","msgtype":"m.text"},"ts":1584715568000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ugh, hiding the constructor ends up affecting a lot of tests","msgtype":"m.text"},"ts":1584716038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HMM","msgtype":"m.text"},"ts":1584716771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"new WebAssembly.Memory({ shared:true, initial:1, maximum:1 }).buffer.byteLength is?","msgtype":"m.text"},"ts":1584716795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Didn't we decide there was no spec for that","msgtype":"m.text"},"ts":1584716817000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"65536","msgtype":"m.text"},"ts":1584716833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There kinda is and more importantly it does something in Chrome and Firefox","msgtype":"m.text"},"ts":1584716847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"O_O","msgtype":"m.text"},"ts":1584716856000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe it goes per 16 bits of bytes?","msgtype":"m.text"},"ts":1584717024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems like it","msgtype":"m.text"},"ts":1584717057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: not sure how curious you are, but there's https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#javascript-api-changes and https://github.com/WebAssembly/threads/blob/master/document/js-api/index.bs#L603 (and they're out-of-sync in that one says TypeError and the other RangeError; browsers do TypeError; I filed an issue on that)","msgtype":"m.text"},"ts":1584717284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah OK, it's just the rendered version that you couldn't find","msgtype":"m.text"},"ts":1584717310000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And yeah, the numbers are in 64KiB increments","msgtype":"m.text"},"ts":1584717399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not quite a full replacement for a SAB then, I suppose","msgtype":"m.text"},"ts":1584717498000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, though I wasn't able to find Overview.md initially either and generally it's just super confusing how everything is organized there","msgtype":"m.text"},"ts":1584717513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not really, unless you're willing to deal with largish buffers","msgtype":"m.text"},"ts":1584717542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: following up on your question yesterday about \"what about deleting SAB from a subset of globals\", i followed up internally and the feeling is \"rather not\"","msgtype":"m.text"},"ts":1584719515000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: mkay, fixing tests seems less trivial in a number of cases than I had hoped","msgtype":"m.text"},"ts":1584719550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: also practically, i assume you saw the chrome release freeze? will affect COOP+COEP rollout on chrome's end","msgtype":"m.text"},"ts":1584719568000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: e.g., Encoding tests rely on not having to set COOP/COEP and using the Wasm hack requires workarounds","msgtype":"m.text"},"ts":1584719572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: yeah","msgtype":"m.text"},"ts":1584719603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: wait, there are existing single-threaded tests that use SAB?","msgtype":"m.text"},"ts":1584719605000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: yeah of course","msgtype":"m.text"},"ts":1584719616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, like, for the pure purpose of testing if the API can work with SAB regardless of headers?","msgtype":"m.text"},"ts":1584719638000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: yup or throws or whatever","msgtype":"m.text"},"ts":1584719659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"instead of changing the tests wouldn't it be easier to mock the headers in the test runner? is that possible?","msgtype":"m.text"},"ts":1584719671000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: https://github.com/web-platform-tests/wpt/issues/22358 has a list of potentially affected tests (though html/ probably not so much if at all)","msgtype":"m.text"},"ts":1584719699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: not possible for .any.js tests","msgtype":"m.text"},"ts":1584719708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: and we'd also have to change them to force HTTPS in that case","msgtype":"m.text"},"ts":1584719735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as an aside what does the .any. mean","msgtype":"m.text"},"ts":1584719742000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: https://web-platform-tests.org/writing-tests/testharness.html#multi-global-tests","msgtype":"m.text"},"ts":1584719771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1584719790000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Domenic: btw, since most APIs take a view, the backing buffer being somewhat largish isn't a big deal, though ymmv","msgtype":"m.text"},"ts":1584729184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah that makes sense","msgtype":"m.text"},"ts":1584729195000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith: Thanks so much for diagnosing it, I've added a note to the install instructions about it.","msgtype":"m.text"},"ts":1584743889000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm curious why you say using certifi would require the user to do something themselves and have sudo? I can just pick up more dependencies now, it's not a big deal.","msgtype":"m.text"},"ts":1584743950000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Really, I guess I shoudl rewrite to use requests for more stuff; I'm already using it for some things.)","msgtype":"m.text"},"ts":1584743977000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]