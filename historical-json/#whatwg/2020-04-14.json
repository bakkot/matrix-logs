[
{"content":{"body":"offered without comment: https://mailarchive.ietf.org/arch/msg/ietf/h6fTco-9fw7IeF_x6jvEvfrZuvk/","msgtype":"m.text"},"ts":1586831517000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Harald's reply seems pretty on-point","msgtype":"m.text"},"ts":1586831648000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1586831664000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> This is part of what theIETF process is supposed to do between \"proposed standard\" and\"standard\" (but rarely does).","msgtype":"m.text"},"ts":1586831716000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"stumbled across https://lab.syncer.jp/Web/API_Interface/Reference/IDL/ which in some cases seems more complete than MDN BCD","msgtype":"m.text"},"ts":1586835618000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hey guys","msgtype":"m.text"},"ts":1586867674000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"I am a radio operator in Brisbane Australia","msgtype":"m.text"},"ts":1586867687000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"abc.net.au/triplej","msgtype":"m.text"},"ts":1586867692000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"I will try to get the host to play some punk","msgtype":"m.text"},"ts":1586867699000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"this is hard on me....","msgtype":"m.text"},"ts":1586867704000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"they are trying to play some punk","msgtype":"m.text"},"ts":1586867744000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"talk to me","msgtype":"m.text"},"ts":1586867745000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"Slyda1","msgtype":"m.text"},"ts":1586867748000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"I hear all of you","msgtype":"m.text"},"ts":1586867753000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"and then sometimes I hear you","msgtype":"m.text"},"ts":1586867757000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"but I hear all of you!","msgtype":"m.text"},"ts":1586867768000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1586867769000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"10.36pm","msgtype":"m.text"},"ts":1586867786000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"6x6 are 36","msgtype":"m.text"},"ts":1586867791000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"abc.net.au/triplej","msgtype":"m.text"},"ts":1586867953000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"Radio Operator","msgtype":"m.text"},"ts":1586867956000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"Lachlan is on","msgtype":"m.text"},"ts":1586867958000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"he is real good eh!","msgtype":"m.text"},"ts":1586867961000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"I like Lachlan","msgtype":"m.text"},"ts":1586867968000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"he is pretty good do you like him!","msgtype":"m.text"},"ts":1586867974000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"sweet some nice punk!","msgtype":"m.text"},"ts":1586867977000,"senderName":"Slyda1","senderId":"Slyda1@irc"},
{"content":{"body":"MikeSmith: there's also https://web-confluence.appspot.com/#!/catalog?releases=%5B%22Edge_18.17763_Windows_10.0%22,%22Safari_13.0.2_OSX_10.15%22,%22Chrome_78.0.3904.70_Windows_10.0%22,%22Firefox_70.0_Windows_10.0%22%5D&q=%22%22","msgtype":"m.text"},"ts":1586872584000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yup, thanks — the only complaint I have about that is that it doesn’t go back far enough for what’s needed in MDN/BCD at times","msgtype":"m.text"},"ts":1586872912000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean as far as “what browser versions did this feature first ship in”","msgtype":"m.text"},"ts":1586873044000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"on that note today I realized the https://trac.webkit.org/browser/webkit/tags/ tag browser can be very useful for figuring out what tag a particular webkit revision first went into","msgtype":"m.text"},"ts":1586873297000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is useful not just for Safari but also for older Chrome pre-fork","msgtype":"m.text"},"ts":1586873343000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: experience with https://hub.github.com/ or similar? Thinking of adding that to spec-factory to create the PRs in an easier way, but not sure if that's the preferred dependency or if there's something else","msgtype":"m.text"},"ts":1586877131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I use hub, exclusively for the `hub checkout $PR_URL` command. I imagine the \"preferred\" way would be to use the GitHub API via some pure-Python package, but that involves tokens and stuff; shelling out to a command line script is probably easier for you.","msgtype":"m.text"},"ts":1586877204000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: however I think `hub` is being replaced by \"the official GitHub CLI\"; let me look that up...","msgtype":"m.text"},"ts":1586877217000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: https://cli.github.com/","msgtype":"m.text"},"ts":1586877230000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://github.com/cli/cli#comparison-with-hub","msgtype":"m.text"},"ts":1586877255000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I saw that, but that had less features","msgtype":"m.text"},"ts":1586877260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I guess I'll go with a hub dependency for now and be prepared to change it later","msgtype":"m.text"},"ts":1586877287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm curious, what feature of hub do you need that gh doesn't have?","msgtype":"m.text"},"ts":1586877298000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: talking to the raw API to add a comment","msgtype":"m.text"},"ts":1586877328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Interesting","msgtype":"m.text"},"ts":1586877340000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I want to create a script for RDs as well if I start doing this","msgtype":"m.text"},"ts":1586877356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although I guess the comment there is after merging hmm","msgtype":"m.text"},"ts":1586877377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I hadn't completely thought the whole thing through, mandatory reviews are another issue","msgtype":"m.text"},"ts":1586877433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess you might want something more like https://github.com/PyGithub/PyGithub for that","msgtype":"m.text"},"ts":1586877736000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Lots of choices although that one is listed first https://developer.github.com/v3/libraries/","msgtype":"m.text"},"ts":1586877776000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That also seems reasonable I suppose, it takes a token which is the main thing we need","msgtype":"m.text"},"ts":1586877808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You get an email per commit? Oh my I should be more careful","msgtype":"m.text"},"ts":1586880156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I dunno, it's self-inflicted because I choose not to set up any filter rules.","msgtype":"m.text"},"ts":1586880355000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But it usually works pretty well.","msgtype":"m.text"},"ts":1586880359000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh so ARIA attributes are also superglobal attributes, I missed that","msgtype":"m.text"},"ts":1586880388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've used PyGitHub fwiw","msgtype":"m.text"},"ts":1586880519000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: hmm https://w3c.github.io/html-aria/#rules-wd does not say so","msgtype":"m.text"},"ts":1586880537000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://w3c.github.io/aria/#AriaAttributes extends Element","msgtype":"m.text"},"ts":1586880572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1586880575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1586880582000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm indeed","msgtype":"m.text"},"ts":1586884793000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that wasn’t there before","msgtype":"m.text"},"ts":1586884801000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wonder when they added it","msgtype":"m.text"},"ts":1586884807000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"next maybe the https://w3c.github.io/dpub-aria/ will do the same for the three dozen doc-* roles it defines","msgtype":"m.text"},"ts":1586885120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: so if we ever allow non-data URL sandboxed workers, the allocation of the thread has to happen after the response comes in","msgtype":"m.text"},"ts":1586885452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: which is reasonable I suppose, we fetch in parallel and then create an environment","msgtype":"m.text"},"ts":1586885469000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: maybe once we address the racy stuff in how shared workers are created that'll mostly solve itself","msgtype":"m.text"},"ts":1586885492000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Where do we stand nowadays in terms of web apps being able to store key-value pairs with a TTL associated with them. In order words, cookies but without being needlessly sent over the network (which is either unpleasant or a show stopper, depending on the data in quesion and one's policy on privacy).","msgtype":"m.text"},"ts":1586889669000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I recall a few different efforts existing in this realm, but I'm not seeing this particular use case mentioned anywhere, is that right?","msgtype":"m.text"},"ts":1586889702000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"The status quo, for Wikipedia as example, is either: Cookies or really-really-bad use of LocalStorage. Where really-really-bad is looping through localStorage key by key (in all its race glory) and delete stuff that's expired based on your own value format. Aside from being buggy and racey, it is also horrible for performance as on mobile localStorage can incur disk I/O. In our testing, easily up to 100ms per call, and unlike desktop, the whole","msgtype":"m.text"},"ts":1586889862000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"origin's store does not go into RAM after one call.","msgtype":"m.text"},"ts":1586889862000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Our current compromise for mobile, for the limited cases that absolutely need expiry and cant use cookies, is to start somewhre randomly between 0 and localStorage.length, and to requetIdleCallback/setTimeout yield as much as we can, and either way stop after a handful of iterations because otherwise it'd just be a waste of energy.","msgtype":"m.text"},"ts":1586889922000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: the idea is still alive, there might be some progress on buckets this year","msgtype":"m.text"},"ts":1586892422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: mainly WHATWG or one of the W3 WGs? Is there a ticket I can create or should follow?","msgtype":"m.text"},"ts":1586892558000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"with Wikimedia now being a member, perhaps we can help in a more organised fashion on this if in-scope","msgtype":"m.text"},"ts":1586892575000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: whatwg/storage, but maybe there is discussion elsewhere too, not sure","msgtype":"m.text"},"ts":1586894530000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you mean that as part of the navigation.storage spec etc there'd be potentially a new localstorage-like API that supports TTL on a per-key basis?","msgtype":"m.text"},"ts":1586894591000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"not sure if buckets really aims to address things on a per-key basis...","msgtype":"m.text"},"ts":1586894701000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Krinkle: oh, I missed per-key","msgtype":"m.text"},"ts":1586894704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Some modification to cache storage might make more sense, although I'm not aware of concrete efforts in that area either. Being able to expire individual cache storage items autoamtically has come up as a use case a couple of times at least","msgtype":"m.text"},"ts":1586894743000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"https://github.com/w3c/ServiceWorker/issues/863 has some thoughts","msgtype":"m.text"},"ts":1586894793000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"The main issuse we're running into is that when different features over the weeks/months store keys and then no longer need those keys the code for it ceases to exist so the keys linger ,which ultimately keeps shrinking the amount of space available.","msgtype":"m.text"},"ts":1586894885000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"It also means when someone enables an experimental feature that uses up a fair amount storage and then disables it again, the keys remain etc.","msgtype":"m.text"},"ts":1586894911000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"also things like mything-{variable}-something are big red flags right now given no expirration","msgtype":"m.text"},"ts":1586894929000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"at least that experimental feature use case seems like it doesn't need per-key expiry; the experimental feature could have its own storage bucket, with a per-bucket expiration date, and then their own CacheStorage/IndexedDB/localstorage/...  inside that bucket","msgtype":"m.text"},"ts":1586894981000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"assuming you don't need transactions that span multiple buckets...","msgtype":"m.text"},"ts":1586894993000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"yeah, for 99% of what I'm imagining, transactions are not needed. these are just simple key-value pairs","msgtype":"m.text"},"ts":1586895331000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"where is the best place to raise issues against unicode.org's site?","msgtype":"m.text"},"ts":1586900328000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"actually... looks like http://blog.unicode.org/2020/04/technical-alert-unicode-technical.html might the cause of my links to it not working","msgtype":"m.text"},"ts":1586900467000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"}
]