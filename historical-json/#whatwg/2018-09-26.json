[
{"content":{"body":"annevk: https://stackoverflow.com/questions/52518370/transparent-movement-of-cors-enabled-resources-with-cross-origin-redirect","msgtype":"m.text"},"ts":1537967878000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> I'd need to be able to tell the browser to send credentials to old.example.com but once it redirects you to new.example.com, request it without credentials / in no-cors mode. As far as I know that's not possible -- the initial request and all following redirects get the same fetch options. Am I missing something? Is there another way to accomplish this?","msgtype":"m.text"},"ts":1537967896000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: replied","msgtype":"m.text"},"ts":1537968760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1537968808000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"o/","msgtype":"m.text"},"ts":1537972794000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"Quick question for WebSocket: When calling .close, the 'close' event should not fire as a result, right?","msgtype":"m.text"},"ts":1537972819000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"lgrahl: https://html.spec.whatwg.org/multipage/web-sockets.html#dom-websocket-close It depends.","msgtype":"m.text"},"ts":1537972892000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: Ok... what if I'm connected, I call .close and once the closing handshake completes, the 'close' event fires. What close code will I get in that event?","msgtype":"m.text"},"ts":1537973066000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"What I'm on about: How would I know whether the close code came from me initiating the closing handshake or from the server?","msgtype":"m.text"},"ts":1537973276000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"Also: \"The code attribute must return the value it was initialized to. It represents the WebSocket connection close code provided by the server.\"","msgtype":"m.text"},"ts":1537973426000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"Does anyone else experience this? When I paste this exact link into Chrome's URL bar and hit enter, it google searches for the link, instead of navigating to the page: https://w3c.github.io/preload/ (but without the trailing `/`, it navigates fine)","msgtype":"m.text"},"ts":1537975262000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: doesn't repro here?","msgtype":"m.text"},"ts":1537975438000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and of course it isn't for me anymore. It did like 10 times in a row though, odd.","msgtype":"m.text"},"ts":1537975532000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"hah!","msgtype":"m.text"},"ts":1537976462000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, I've definitely seen weirdness like this in multiple browsers.","msgtype":"m.text"},"ts":1537976471000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ugh, still stubbornly ignore the streams API... https://github.com/w3c/webrtc-quic/issues/63","msgtype":"m.text"},"ts":1537978247000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"eeeps: how will the HTML example in the issue you replied on only load a single image?","msgtype":"m.text"},"ts":1537994462000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"The rel=preload shouldn‚Äôt know about any other elements in the page. It‚Äôs job is just to load what it describes. And the first link described a potentially-media-matching image derived from a source set, and the second describes an always-media-marching image from a source set right?","msgtype":"m.text"},"ts":1537994578000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"When both <source>s are wrapped within a <picture>, the second one is ignored if the first one matches. Here's a non-normative part of the spec that says as much -- https://html.spec.whatwg.org/multipage/images.html#introduction-3:art-direction-3 -- zcorpan would know better than I where to find it normatively","msgtype":"m.text"},"ts":1537994913000,"senderName":"eeeps","senderId":"eeeps@irc"},
{"content":{"body":"So, yeah, in order to preload just one, you'd have to modify your <link media>s to make them mutually exclusive, because as you say, the <link>s wouldn't know about the <picture> context","msgtype":"m.text"},"ts":1537995007000,"senderName":"eeeps","senderId":"eeeps@irc"},
{"content":{"body":"If we figure out some way for the `<link>`s to know about that context, it saves authors from having to modify their `media`s, and would allow preloading resources for image-format based selection (`<picture><source type>`). Not sure if those use cases are worth the complexity this would add to <link> though.","msgtype":"m.text"},"ts":1537995219000,"senderName":"eeeps","senderId":"eeeps@irc"},
{"content":{"body":"Btw the normative part you‚Äôre looking for is https://html.spec.whatwg.org/multipage/images.html#updating-the-source-set","msgtype":"m.text"},"ts":1537995386000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"üëç","msgtype":"m.text"},"ts":1537995410000,"senderName":"eeeps","senderId":"eeeps@irc"},
{"content":{"body":"Ok so you‚Äôre saying we‚Äôd preload two images, when that might not be necessary at all","msgtype":"m.text"},"ts":1537995461000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Right -- if you just copy the medias from the <source>s in the example to <link>s, you sometimes preload both resources. But the <picture> on its own would only ever load one.","msgtype":"m.text"},"ts":1537995562000,"senderName":"eeeps","senderId":"eeeps@irc"},
{"content":{"body":"That makes sense. I was confused by ‚ÄúHTML in the example will load only one image‚Äù. Makes sense you were referring to the <picture> HTML tho. I agree that is an awkward problem hmm","msgtype":"m.text"},"ts":1537995785000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Asking authors to modify medias to be mutually exclusive might not be a terrible solution? Again, not sure what to do about type, other than add some mechanism so that the <link>s are grouped and processed together somehow, as the <source>s will be later.","msgtype":"m.text"},"ts":1537996008000,"senderName":"eeeps","senderId":"eeeps@irc"},
{"content":{"body":"eeeps: Ahh, the confusion earlier (my bad!) was that we were talking about two different HTML snippets it seems. Hmm, yeah asking authors to do that might not be too bad. I wonder how bad it would be if they took no action though, and every preload loaded (aka how many image requests on average would be wasted)","msgtype":"m.text"},"ts":1537999429000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I mean, if that number is significant, preloading useless resources is an unconscionable crime against performance, and if it's insignificant, why are you art directing in the first place?","msgtype":"m.text"},"ts":1538000293000,"senderName":"eeeps","senderId":"eeeps@irc"},
{"content":{"body":"and I assure you, if there was any confusing communication going on, it was almost certainly my bad (:","msgtype":"m.text"},"ts":1538000365000,"senderName":"eeeps","senderId":"eeeps@irc"},
{"content":{"body":"We‚Äôll have to consider ways to make certain preloads not load then. Interesting, since right now preloads are ‚Äúmandatory‚Äù fetches.","msgtype":"m.text"},"ts":1538003709000,"senderName":"domfarolino","senderId":"domfarolino@irc"}
]