[
{"content":{"body":"smaug____: yeah html/semantics/embedded-content/the-canvas-element directory","msgtype":"m.text"},"ts":1486342862000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"smaug____: what kind of tests were you expecting there?","msgtype":"m.text"},"ts":1486342875000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh there","msgtype":"m.text"},"ts":1486342876000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"didn't find that","msgtype":"m.text"},"ts":1486342879000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"well there are not many there either","msgtype":"m.text"},"ts":1486342889000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: someone was asking where to add new tests","msgtype":"m.text"},"ts":1486342890000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1486342893000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess the spec does not have many requirements in that section that are not requirements of the 2dcontext API","msgtype":"m.text"},"ts":1486342942000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I suggested html/dom","msgtype":"m.text"},"ts":1486342952000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1486342974000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there are no canvas tests under there","msgtype":"m.text"},"ts":1486343004000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1486343043000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but that doesn't really say much","msgtype":"m.text"},"ts":1486343051000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"well except the HTMLCanvasElement interface","msgtype":"m.text"},"ts":1486343052000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(assuming that‚Äôs what it‚Äôs called)","msgtype":"m.text"},"ts":1486343078000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but ok, I commented that html/semantics/embedded-content/the-canvas-element could be used","msgtype":"m.text"},"ts":1486343081000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1486343087000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1486343100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"reading https://lists.webkit.org/pipermail/webkit-dev/2017-February/028694.html ‚ÄúUpstreaming Tests from WebKit to Web Platform Tests‚Äù from rniwa","msgtype":"m.text"},"ts":1486343212000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://www.w3.org/community/httpslocal/","msgtype":"m.text"},"ts":1486349437000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: FYI https://bugzilla.gnome.org/show_bug.cgi?id=778192 (request to have libxslt output <!DOCTYPE html) if <xsl:output method=\"html\" version=\"5\"> (as Saxon already does)","msgtype":"m.text"},"ts":1486373056000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: also I discovered that if you use <xsl:output doctype-system=\"about:legacy-compat\"> with libxslt it will output <!DOCTYPE html>","msgtype":"m.text"},"ts":1486373123000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"due to https://bugzilla.gnome.org/show_bug.cgi?id=747301","msgtype":"m.text"},"ts":1486373136000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if you use <xsl:output doctype-system=\"about:legacy-compat\"> with Saxon or other XSL implementations, of course you will get a literal SYSTEM \"about:legacy-compat\" in the doctype, as you‚Äôd expect","msgtype":"m.text"},"ts":1486373193000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don‚Äôt have much hope that Daniel Veillard will implement my request unless I provide a patch (and maybe not even then)","msgtype":"m.text"},"ts":1486373247000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"But I prefixed the bug title with ‚ÄúPlease consider supporting‚Ä¶‚Äù so maybe that will help :)","msgtype":"m.text"},"ts":1486373300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: üëç","msgtype":"m.text"},"ts":1486373464000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_adding_new_features_to_a_specification.3F looks like steps 7, 8, 9 are kinda backwards now","msgtype":"m.text"},"ts":1486384423000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah it'd be good to get that updated","msgtype":"m.text"},"ts":1486393701000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"SimonSapin: Dammit Simon, you ninja'd me by like 30 seconds. I was almost done with a nearly identical response. ^_^","msgtype":"m.text"},"ts":1486416515000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1486416523000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: so how do you feel about implementing it?","msgtype":"m.text"},"ts":1486416554000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Writing up that response now - please god do it.","msgtype":"m.text"},"ts":1486416567000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: we had a servo PR for this last year, but it was kind wrong in lots of ways and I never got around to fixing it up. Then it got bitrotted enough that we closed it.","msgtype":"m.text"},"ts":1486416603000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(And it‚Äôs not like servo was gonna drive adoption. But now with Stylo it could be another story‚Ä¶)","msgtype":"m.text"},"ts":1486416653000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Implementing what?","msgtype":"m.text"},"ts":1486417376000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: MQ4 new syntax","msgtype":"m.text"},"ts":1486417386000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/www-style/2017Feb/0035.html","msgtype":"m.text"},"ts":1486417396000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Specifically, adding the relational operators (<, >, <=, >=) to MQ rather than using min-*/max-* prefixes on things.","msgtype":"m.text"},"ts":1486417432000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Nice.","msgtype":"m.text"},"ts":1486417440000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"element's browsing context isn't something defined anywhere, right?","msgtype":"m.text"},"ts":1486425455000,"senderName":"smaug","senderId":"smaug@irc"}
]