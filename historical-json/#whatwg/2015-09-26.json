[
{"content":{"body":"hello.  where can I find people who care about bugs in processing “text/plain” by major modern browsers?  more details here http://www.superstructure.info/browser/compromised/toxic-sniffing.html (the story is only partially written, but enough to see bugs).","msgtype":"m.text"},"ts":1443261620000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: \"bugs\"","msgtype":"m.text"},"ts":1443262045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: see https://mimesniff.spec.whatwg.org/","msgtype":"m.text"},"ts":1443262055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: if your problem is with BOM being more important than other encoding declarations, that's https://encoding.spec.whatwg.org/","msgtype":"m.text"},"ts":1443262157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: also not considered a bug","msgtype":"m.text"},"ts":1443262161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: a text wall too high; didn’t find anyting relevant to my case but mentioning of one https://mimesniff.spec.whatwg.org/#no-sniff-flag but without much detail.","msgtype":"m.text"},"ts":1443262538000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":" could you give a link to provisions that are relevant to “text/plain”?","msgtype":"m.text"},"ts":1443262539000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: it's very much unclear what \"processing bug\" you're talking about so I don't know","msgtype":"m.text"},"ts":1443262576000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: if it's indeed mostly about encodings, I recommend reading the Encoding Standard","msgtype":"m.text"},"ts":1443262590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: you shouldn't be using non-utf-8 encodings anyway","msgtype":"m.text"},"ts":1443262597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"damn.   who approved it?","msgtype":"m.text"},"ts":1443262610000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: and BOM trumps Content-Type","msgtype":"m.text"},"ts":1443262611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: not sure what you mean","msgtype":"m.text"},"ts":1443262639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which standard-making body declared “you shouldn't be using non-utf-8 encodings anyway”?","msgtype":"m.text"},"ts":1443262655000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: WHATWG, and I guess W3C did too since they copied it over","msgtype":"m.text"},"ts":1443262687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: W3C standard of HTML5 doesn’t contain such rubbish.   it ony specified that if the document is seemingly Unicode (isn’t encoded in an octet-oriented code page), then BOM takes precedence.","msgtype":"m.text"},"ts":1443262845000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: while out of date and a poor reference, http://www.w3.org/TR/encoding/ most certainly has the same requirement as https://encoding.spec.whatwg.org/ with regards to utf-8","msgtype":"m.text"},"ts":1443262903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: also, http://www.w3.org/TR/html5/references.html#refsENCODING","msgtype":"m.text"},"ts":1443262946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: anyway, I wouldn't recommend reading W3C copies, they're not what's being implemented","msgtype":"m.text"},"ts":1443262971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.w3.org/TR/encoding/ doesn’t state anything is deprecated, restricted to certain circumstances, or so.    all encodings are, theoretically, permitted.","msgtype":"m.text"},"ts":1443263081000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: *sigh*","msgtype":"m.text"},"ts":1443263121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: 'Authors must use the utf-8 encoding and must use the ASCII case-insensitive \"utf-8\" label to identify it.'","msgtype":"m.text"},"ts":1443263125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"again, HTML5 is about “text/html”.  annevk, do you understand the word “text/plain”?","msgtype":"m.text"},"ts":1443263183000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: HTML defines how text/plain works","msgtype":"m.text"},"ts":1443263199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: and text/plain is not a word","msgtype":"m.text"},"ts":1443263215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"RoTFL.   these are different media types.","msgtype":"m.text"},"ts":1443263228000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: sure, but it's rendered using the HTML parser, see \"Page load processing model for text files\"","msgtype":"m.text"},"ts":1443263274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq[IrcCity]: in the HTML standard","msgtype":"m.text"},"ts":1443263281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I read in HTML5 about parser.","msgtype":"m.text"},"ts":1443263307000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: irrespective of that, the Encoding standard applies to all MIME types","msgtype":"m.text"},"ts":1443263319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it’s a stage after decoding, not before.","msgtype":"m.text"},"ts":1443263331000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: actually, part of the HTML parser handles decoding","msgtype":"m.text"},"ts":1443263347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTML decoding rules apply only to HTML.","msgtype":"m.text"},"ts":1443263354000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"and HTML5 make a special provision abour “irrelevent” confidence.","msgtype":"m.text"},"ts":1443263401000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"when browser operates in its internal text encoding.","msgtype":"m.text"},"ts":1443263419000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"I see, well, have a nice day","msgtype":"m.text"},"ts":1443263460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I think W3C people missed your out-of-context “Authors must use the utf-8” thing in CR-encoding-20140916, and possibly will be amazed with such your “novel” ideas as applying BOM sniffing to all media types including binaries ☺","msgtype":"m.text"},"ts":1443264463000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"may I quote this chat in mailing lists?","msgtype":"m.text"},"ts":1443264475000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"given the channel has logs publicly readable at krijnhoetmer.nl, I’ll proceed to quote the conversation without explicit permission.","msgtype":"m.text"},"ts":1443267146000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"Hah, you're in for a surprise ;-)","msgtype":"m.text"},"ts":1443267388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But yeah, feel free to quote. I tried to help you out, but it seems like you had some set of answers already","msgtype":"m.text"},"ts":1443267426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, I’m conservative.    my “set of answers” is based on original HTTP/1.1, not diluted by accommodation to idiocy.","msgtype":"m.text"},"ts":1443267842000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: please stay civil","msgtype":"m.text"},"ts":1443267867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"naïve people here.    admins of httpd software were told for 17 years (since RFC 2068 till HTML5) they must specify Content-Type: text/whichever, charset=actual.   many of them ignored it.","msgtype":"m.text"},"ts":1443268012000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"now you make BOM sniffing mandatory and hope it would be universal solution ☺","msgtype":"m.text"},"ts":1443268070000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"sounds about right","msgtype":"m.text"},"ts":1443268214000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and naïve Prof. Dürst who boasts he pioneered reliability of heuristic UTF-8 detection as early as in 1997, but seemingly unaware how modern broswers “detect” UTF-8 :D","msgtype":"m.text"},"ts":1443268326000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"I would look to see what Martin J. Dürst would do when, eventually, learned about the algorithm promulgated by Anne van Kesteren and company.   what would he say to Anne.","msgtype":"m.text"},"ts":1443268619000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"Pretty sure he knows about it","msgtype":"m.text"},"ts":1443268650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if the stream starts with «\\357\\273\\277», then it’s damn UTF-8, no matter the fourth byte is \\377 :D","msgtype":"m.text"},"ts":1443268735000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"one big problem: major browsers ceased to honour values in Content-Type, and not only for text/html.   and two narrower cases: 1. broken text/plain (already),","msgtype":"m.text"},"ts":1443269905000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"2. such novelties as “the Encoding standard applies to all MIME types” (yet to happen to application/* and so on).","msgtype":"m.text"},"ts":1443269908000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"How is text/plain broken?","msgtype":"m.text"},"ts":1443270858000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox, did you see test cases at http://www.superstructure.info/browser/compromised/toxic-sniffing.html#better ?","msgtype":"m.text"},"ts":1443270967000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"one should enter \\357\\273\\277 and so on manually, of course.","msgtype":"m.text"},"ts":1443271019000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"I don't understand.","msgtype":"m.text"},"ts":1443271181000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"What spec does that test follow?","msgtype":"m.text"},"ts":1443271187000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox, testing compliancy with RFC 2616 was initially in mind.   RFC 7231 is somewhat vague about Content-Type, but major browsers defy even its relaxed provisions.","msgtype":"m.text"},"ts":1443271344000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"Where is the accommodation to idiocy?","msgtype":"m.text"},"ts":1443271375000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: overriding explicitly serviced «charset=» with own guesses.   BTW, what is no-sniff-flag?","msgtype":"m.text"},"ts":1443271460000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"in other words, Google Chrome tells its user that one lamer qq[IrcCity] mistook «charset=» and it (Google) knows better what was intended meaning.","msgtype":"m.text"},"ts":1443271694000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"even when the text its claim to be UTF-8 has \\377 in the fourth octet.","msgtype":"m.text"},"ts":1443271744000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"What is that text?","msgtype":"m.text"},"ts":1443271756000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"The page is lacking many information. What was the actual charset you intended to transmit?","msgtype":"m.text"},"ts":1443271774000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox, there is a simpler test case at http://course.irccity.ru/ya-yu-9-amp.txt but about toxic UTF-16.   two minutes, about to made the same for UTF-8.","msgtype":"m.text"},"ts":1443271897000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: And why would \\377 as the fourth octet change things btw?","msgtype":"m.text"},"ts":1443271987000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"from the point of view of RFC 2616, it’s at all irrelevant.","msgtype":"m.text"},"ts":1443272030000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"but it can show madness of BOM sniffing better.","msgtype":"m.text"},"ts":1443272055000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1443272151000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Interestingly, forcing charset to Windows-1251 on that last link doesn't change anything in Safari.","msgtype":"m.text"},"ts":1443272167000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"http://course.irccity.ru/p-guillemet-yi-ya.txt shows toxic UTF-8.","msgtype":"m.text"},"ts":1443272231000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: Then again, the question is whether your examples are the majority, or whether actually honouring 'charset' breaks more things.","msgtype":"m.text"},"ts":1443272246000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"examples are not about majority.  they are about predictability.","msgtype":"m.text"},"ts":1443272302000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"The rules you call bugs are predictable.","msgtype":"m.text"},"ts":1443272351000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"they are predictable only since some guys found certain WhatWG and developers agreed to follow recommendations.   they aren’t predictable in the old world where protocols did matter.","msgtype":"m.text"},"ts":1443272468000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"You do realise that the specs are how they are because actually the majority never cared about honouring 'charset', even in the old world?","msgtype":"m.text"},"ts":1443272532000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox, which majority?   Russian-speaking sites mostly cared.","msgtype":"m.text"},"ts":1443272565000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"and nobody can predict new things will WhatWG invent tomorrow: UTF-8 sniffing for octet-stream or whatever.","msgtype":"m.text"},"ts":1443272597000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"Dürst in a mail linked on the page says \"Yes, the iso-8859-1 'default' was invalidated because there were  millions and millions of documents for which it would have been wrong, especially in Eastern Europe and Asia.\"","msgtype":"m.text"},"ts":1443272599000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Are you talking about something else?","msgtype":"m.text"},"ts":1443272603000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox, about overriding explicitly serviced charset, again.","msgtype":"m.text"},"ts":1443272634000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"not old HTTP default.","msgtype":"m.text"},"ts":1443272648000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"So I guess this actually broke a Russian-speaking site somewhere?","msgtype":"m.text"},"ts":1443272832000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"what??","msgtype":"m.text"},"ts":1443272842000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"Not honouring Content-Type.","msgtype":"m.text"},"ts":1443272859000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"what do you speaking about?   90%+ pages contained charset= if not in Content-Type, then in HTML <meta> in the worst case.","msgtype":"m.text"},"ts":1443272935000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"if I am barred from saying п»їя in Windows-1251 (although all four characters pertain to the codepage), then the protocol is not honoured anymore.   not a problem with HTML that may not start…","msgtype":"m.text"},"ts":1443273003000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"… from arbitrary characters anyway, but a problem for text/plain.","msgtype":"m.text"},"ts":1443273030000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"My question is, is that an actual bug that actually breaks stuff, or is that just a theoretical problem that doesn't break anything in practice?","msgtype":"m.text"},"ts":1443273137000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"You are not barred from saying such a thing in a text/plain document, you are barred from beginning a document with such a thing.","msgtype":"m.text"},"ts":1443273159000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"No?","msgtype":"m.text"},"ts":1443273163000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Did you look at RFC5987 btw?","msgtype":"m.text"},"ts":1443273295000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Also, https://tools.ietf.org/html/draft-ietf-httpbis-p2-semantics-26#section-3.1.1.5","msgtype":"m.text"},"ts":1443273506000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox, how is RFC5987 relevant to the dispute?   it is related to our case (RFC 7231) like RFC 1522 (i18n of headers) is related to RFC 1521 (i18n of bodies).","msgtype":"m.text"},"ts":1443273548000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"qq[IrcCity]: Yeah disregard that one, lost myself in tabs.","msgtype":"m.text"},"ts":1443273624000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Meant to ask whether httpbis had some changes planned in that area, apparently no.","msgtype":"m.text"},"ts":1443273639000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: so you agree that browsers defy HTTP semantics 3.1.1.5, aren’t you?","msgtype":"m.text"},"ts":1443273705000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"I agree, but I'm not sure it's actually important.","msgtype":"m.text"},"ts":1443273735000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I’m not aware anyone complained before me about that.","msgtype":"m.text"},"ts":1443273812000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"I made Codepage Explorer just for the case, to show an actual application that can be broken by unlucky combination of octets.","msgtype":"m.text"},"ts":1443273860000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"It's a nice catch, but I'm afraid you'll just be told that it's not actually a problem in real world and thus nothing will be changed.","msgtype":"m.text"},"ts":1443273933000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"not a nice thing for me, since my trust in browsers ended abruptly.    this is not that Internet I was accustomed to.","msgtype":"m.text"},"ts":1443274070000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"nowadays browsers lie you twice more than despisable Windows lied users in 1990s.","msgtype":"m.text"},"ts":1443274129000,"senderName":"qq[IrcCity]","senderId":"qq[IrcCity]@irc"},
{"content":{"body":"Ugh","msgtype":"m.text"},"ts":1443284267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ECMAScript still requires that `var x = new ArrayBuffer(10); postMessage(x, \"*\", [x]); console.log(x.byteLength)` throws, but no implementation does that","msgtype":"m.text"},"ts":1443284302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, actually, I'm mistaken","msgtype":"m.text"},"ts":1443285387000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm I think it does","msgtype":"m.text"},"ts":1443288825000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Last I checked TC39 still wants to try that. And no implementers want to try that. So awesome.","msgtype":"m.text"},"ts":1443288861000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't understand how it's possible that I never knew about http://devdocs.io/ before now","msgtype":"m.text"},"ts":1443310042000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"do other people here know about it already?","msgtype":"m.text"},"ts":1443310052000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it seems extremely well done, as far as putting some very good UI/UX around aggregated docs from a bunch of different sources (e.g., MDN, but a ton of other stuff as well)","msgtype":"m.text"},"ts":1443310117000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh, I had heard of that but now it has Rust docs","msgtype":"m.text"},"ts":1443310837000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Seems like it could be more convenient than trying to remember where it installs them and start a web server","msgtype":"m.text"},"ts":1443310856000,"senderName":"jgraham","senderId":"jgraham@irc"}
]