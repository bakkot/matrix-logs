[
{"content":{"body":"TabAtkins: for using <wpt> with the HTML spec, we will need some way to override the WPT Path Prefix per-<wpt>-element","msgtype":"m.text"},"ts":1535281575000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"... because some tests for the HTML spec are not in the wpt /html top-level directory, but are instead in /2dcontext, /custom-elements, etc","msgtype":"m.text"},"ts":1535281645000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/web-platform-tests/wpt/tree/master/html#html","msgtype":"m.text"},"ts":1535281650000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(has the list)","msgtype":"m.text"},"ts":1535281664000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in https://github.com/tabatkins/bikeshed/issues/1116#issue-267243756 I see mention of ‚ÄúAdd a test-path-prefix metadata, so you can omit the common parts of your test path. Probably *add an attribute to <test> to let you override that*‚Äù, but I guess that attribute doesn‚Äôt exist yet?","msgtype":"m.text"},"ts":1535281843000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to be clear, I don‚Äôt need support for it to be implemented in Bikeshed yet „Éºinstead all I would need it some decision about what the name of the attribute should be","msgtype":"m.text"},"ts":1535281939000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh bah.. nevermind","msgtype":"m.text"},"ts":1535282059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I need to read the docs more carefully..","msgtype":"m.text"},"ts":1535282081000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I had overlooked https://tabatkins.github.io/bikeshed/#element-attrdef-wpt-pathprefix ‚Äúan explicit pathprefix attribute can also provide the path prefix, and will override the metadata if specified‚Äù","msgtype":"m.text"},"ts":1535282128000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(sorry for the noise)","msgtype":"m.text"},"ts":1535282134000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"üòÄ","msgtype":"m.text"},"ts":1535291821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: so if the @@asyncIterator method takes all the options","msgtype":"m.text"},"ts":1535321368000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"why bother having iterator()","msgtype":"m.text"},"ts":1535321375000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: Seems better to not make people call symbol-named methods manually","msgtype":"m.text"},"ts":1535321400000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i see the convenience","msgtype":"m.text"},"ts":1535321443000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but do we do this pattern elsewhere","msgtype":"m.text"},"ts":1535321451000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Well, we have .values() === [Symbol.iterator]() in various places","msgtype":"m.text"},"ts":1535321488000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or .entries()","msgtype":"m.text"},"ts":1535321493000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Seems like the same sort of thing, have a string-named method for real people to call, have a symbol-named method for the for-(await-)of syntax to call","msgtype":"m.text"},"ts":1535321525000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rip being a real person","msgtype":"m.text"},"ts":1535321536000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"MikeSmith: Oh, missed this question earlier. No, the metadata keys are ASCII case-insensitive. (And generally the values are too, tho it's possible I've missed some conversions.)","msgtype":"m.text"},"ts":1535321977000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ah OK, cool „Éºthanks","msgtype":"m.text"},"ts":1535325386000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]