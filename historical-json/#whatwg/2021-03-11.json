[
{"content":{"body":"annevk: new version submitted. Using `TransformStream` with a custom flush to monitor EOF, and also handling cached responses.","msgtype":"m.text"},"ts":1615460773000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: Made several style passes on it, I think it's pretty clean but it's a big patch so hopefully I didn't miss anything","msgtype":"m.text"},"ts":1615460905000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"yoav ^^","msgtype":"m.text"},"ts":1615460909000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Is there some common spec pattern for pausing an in-parallel algorithm until some other spec invokes a specific hook?","msgtype":"m.text"},"ts":1615461446000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: \"Wait for x\"","msgtype":"m.text"},"ts":1615461476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: we don't have a dfn for Wait currently, but that's the pattern","msgtype":"m.text"},"ts":1615461492000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: thanks, I'll take a look in a bit","msgtype":"m.text"},"ts":1615461520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: But just \"wait for x\" isn't defining steps for x so if you have \"run any steps for x defined in other applicable specifications\", it arguably doesn't work","msgtype":"m.text"},"ts":1615461585000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: is parallel queue what you're looking for perhaps?","msgtype":"m.text"},"ts":1615461625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not quite, I think? So the concrete example is something like a hook that is invoked when the load event has been fired for a specific document. And in WebDriver we have two things that might happen in response: we might emit an (webdriver, not dom) event to the client indicating that load happened, and we might unblock an async navigation command that is waiting on the load. So the event  on its own is","msgtype":"m.text"},"ts":1615462981000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"pretty simple, you just define steps that happen in reponse to the hook. And one option is that those steps say something like \"now unblock any tasks that are [=waiting=] for an event named <code>load</code> with |navigation id|\" where \"waiting\" is something defined in that spec to explictly handle unblocking the command. But I was wondering if there's an easier way. The parallel queue doesn't seem quite","msgtype":"m.text"},"ts":1615462987000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"right because it's not something where we're trying to serialise running a set of tasks that may otherwise happen in parallel.","msgtype":"m.text"},"ts":1615462993000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I guess a parallel queue might still fit as it seems you need some kind of \"in parallel\" loop","msgtype":"m.text"},"ts":1615463518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm maybe not","msgtype":"m.text"},"ts":1615463603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, you could model it as a queue and whenever you want to wait for something you push the subsequent steps to the relevant queue and when the hook is invoked you empty the queue running all the steps. But that seems suspiciously like it's reinventing callbacks inside the spec whereas something that looks more like awaiting a promise is going to be easier to read and write","msgtype":"m.text"},"ts":1615463819000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I think the issue is that you need some kind of queue as \"in parallel\" is still an ordered set of steps; I guess you could have some while true setup and inside you wait for any of the events you care about to fire and then you do something...","msgtype":"m.text"},"ts":1615464350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: somehow I missed your reply to https://github.com/whatwg/fetch/issues/1143 :/ let me know if it would help to have some elaboration in the issue or if you're happy to wait a bit longer, I'm getting to the point where I can address it I think","msgtype":"m.text"},"ts":1615466639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I noticed that it seems the only way to get a password from an input[type=password] is via `.value`, which returns a plain old immutable string. Do UAs typically zero out strings when a site is closed?","msgtype":"m.text"},"ts":1615469816000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"EveryOS: they get GC'd","msgtype":"m.text"},"ts":1615470860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: do you have plans to work on https://github.com/w3c/webappsec-upgrade-insecure-requests?","msgtype":"m.text"},"ts":1615471058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Annevk: Thanks","msgtype":"m.text"},"ts":1615471121000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"But does the garbage collector zero out the strings? (Wondering since they may contain sensitive data)","msgtype":"m.text"},"ts":1615472065000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"EveryOS: if someone has physical access to your computer there's a lot to be worried about","msgtype":"m.text"},"ts":1615472195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"EveryOS: and just writing over something once doesn't really help aiui","msgtype":"m.text"},"ts":1615472208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, ok, thanks","msgtype":"m.text"},"ts":1615472220000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"annevk: I didn't quite understand your comment about the transform stream","msgtype":"m.text"},"ts":1615472728000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"ah I think I get it, put all of it in the existing \"consuming a body\" rather than as a TransformStream","msgtype":"m.text"},"ts":1615472831000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: not quite","msgtype":"m.text"},"ts":1615473038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: 1. I think we want to store stuff on response earlier (basically when we might return it to the caller)","msgtype":"m.text"},"ts":1615473079000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"re 1. - yes, I got that. we know everything apart from responseEnd at that time","msgtype":"m.text"},"ts":1615473113000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"... and can clean up TAO etc","msgtype":"m.text"},"ts":1615473143000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: 2. I think we want to define \"incrementally read\" and \"fully read\" algorithms that take a response (rather than a body); these would use the body variants underneath but also store the additional timing data on response (if applicable per TAO) and since they have the callback from the document they can execute the RT object creation before executing that callback","msgtype":"m.text"},"ts":1615473187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/from the document/from the caller/","msgtype":"m.text"},"ts":1615473234000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: TAO doesn't play a role at this point, as responseEnd is not TAO-protected","msgtype":"m.text"},"ts":1615473255000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"does that change anything?","msgtype":"m.text"},"ts":1615473261000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: not really","msgtype":"m.text"},"ts":1615473268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: I guess that only matters for the byte length numbers","msgtype":"m.text"},"ts":1615473301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1615473322000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"so it's a new export that callers would have to re-attach to instead of \"consume a body\"? something like \"consume a response body\"?","msgtype":"m.text"},"ts":1615473334000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: we haven't migrated all callers yet to use the modern conventions of Fetch (except for XHR), but yes","msgtype":"m.text"},"ts":1615473378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK understood, thanks","msgtype":"m.text"},"ts":1615473402000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: I suspect most would actually use processResponseEndOfBody which we'd refactor to use \"fully ready\" _response_","msgtype":"m.text"},"ts":1615473430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: as for naming, maybe <dfn for=response>incrementally read</dfn> / <dfn for=response>fully read</dfn> is good enough?","msgtype":"m.text"},"ts":1615473482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/ready/read/","msgtype":"m.text"},"ts":1615473502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We might still need some configuration here for special cases, e.g., I have no idea how Background Fetch would integrate into this cc JakeA","msgtype":"m.text"},"ts":1615473553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: as in, \"To incrementally read a response\" ?","msgtype":"m.text"},"ts":1615473571000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"ah I see your dfn, got it","msgtype":"m.text"},"ts":1615473616000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: \"To <dfn export for=response>incrementally read</dfn> a <a for=/>response</a> <var>response</var>\" yeah","msgtype":"m.text"},"ts":1615473619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, planning to deal with https://github.com/w3c/webappsec-upgrade-insecure-requests","msgtype":"m.text"},"ts":1615474605000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what in particular are you wanting about it?","msgtype":"m.text"},"ts":1615474634000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I ended up poking Mixed Content instead","msgtype":"m.text"},"ts":1615474642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I mostly want the modern setup so it's easier to do PRs","msgtype":"m.text"},"ts":1615474650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I was looking at fixing https://github.com/whatwg/fetch/issues/409","msgtype":"m.text"},"ts":1615474664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1615474723000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah I will it up for that","msgtype":"m.text"},"ts":1615474752000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I can wait, no worries","msgtype":"m.text"},"ts":1615474760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: is it intentional that https://drafts.csswg.org/css-backgrounds/ has no MDN annotations?","msgtype":"m.text"},"ts":1615474864000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it seems like in general, CSS drafts that are at CR have no MDN annotations","msgtype":"m.text"},"ts":1615474928000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Dunno, I'd have to check","msgtype":"m.text"},"ts":1615475060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1615475131000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: OK https://w3c.github.io/webappsec-mixed-content/ now being autopublished","msgtype":"m.text"},"ts":1615478179000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: for \"unsafe shared current time\", I don't see it in the export list for HR-TIME when running `bikeshed refs`. Do I need to twist some bolt in bikeshed somewhere?","msgtype":"m.text"},"ts":1615479663000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: HR-TIME should use <dfn export>","msgtype":"m.text"},"ts":1615479693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: then it should get indexed and then we get to use it","msgtype":"m.text"},"ts":1615479708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: everything in HR-TIME is using <dfn data-export=\"\">, is that the problem?","msgtype":"m.text"},"ts":1615479731000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"it's an HTML file and not .bs","msgtype":"m.text"},"ts":1615479751000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: that means you consider everything a public API, so maybe then the problem is that it's not indexed","msgtype":"m.text"},"ts":1615479757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, seems like everything else there is indexed. which button needs to be pressed?","msgtype":"m.text"},"ts":1615479789000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: hmm, https://w3c.github.io/hr-time/#dfn-shared-monotonic-clock if I inspect that element I don't see export","msgtype":"m.text"},"ts":1615479828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, that one is private","msgtype":"m.text"},"ts":1615479846000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"it should be \"unsafe shared current time\"","msgtype":"m.text"},"ts":1615479857000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"my bad, okay yeah, not sure why that's not indexed","msgtype":"m.text"},"ts":1615479877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: is Shepherd stuck again?","msgtype":"m.text"},"ts":1615479890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it because it's a ReSpec spec?","msgtype":"m.text"},"ts":1615479905000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh maybe, in the source it only has <dfn data-export=\"\">unsafe shared current time</dfn> without ID and such","msgtype":"m.text"},"ts":1615480015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah I don't know how that would work","msgtype":"m.text"},"ts":1615480200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"all the dfns there don't have IDs","msgtype":"m.text"},"ts":1615480215000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"When I do bikeshed refs spec=hr-time I get back /TR/hr-time-2/ refs","msgtype":"m.text"},"ts":1615480217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"do I need to add one specifically to that one?","msgtype":"m.text"},"ts":1615480222000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"yea I think it's not the ID, but reading an old version of the spec","msgtype":"m.text"},"ts":1615480245000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"I guess it might have to get published on TR/? WHATWG doesn't do ReSpec though somehow we often end up having to do tech support :/","msgtype":"m.text"},"ts":1615480262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gotcha. CC yoav","msgtype":"m.text"},"ts":1615480849000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"I've always manually added ReSpec specs to the anchors block","msgtype":"m.text"},"ts":1615480896000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm pinging folks to make sure it's published","msgtype":"m.text"},"ts":1615481061000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"it's hr-time-3 though","msgtype":"m.text"},"ts":1615481079000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Do Bikeshed refs work differently?","msgtype":"m.text"},"ts":1615481110000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: Shepherd's not stuck, but it's also not showing any processes at all at the moment, which is pretty rare. Is something late?","msgtype":"m.text"},"ts":1615481235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, note that I don't have hr-time-3 in the refs data.","msgtype":"m.text"},"ts":1615481283000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Moving over to Reffy data by the end of this month is my big goal, btw.","msgtype":"m.text"},"ts":1615481326000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: for now I pushed with a dfn inside FETCH so that we can progress on the other stuff... I put all the different reporting streams - it actually seems kinda similar to what happens in chromium, where there is a common \"Resource Loader\" that  wraps FETCH and adds things like the response_end time.","msgtype":"m.text"},"ts":1615481397000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: yeah fair, maybe add an XXX near it or some such?","msgtype":"m.text"},"ts":1615481449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1615481470000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Okay I just added hr-time-3, hopefully its markup is sufficient despite being ReSpec.","msgtype":"m.text"},"ts":1615481557000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But yeah, since the source doesn't have IDs, I don't think it'll work.","msgtype":"m.text"},"ts":1615481622000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I suspect they're generated by script and hopefully the post-script version is what gets published","msgtype":"m.text"},"ts":1615482293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"On /TR it looks like it, but the ED is source+JS.","msgtype":"m.text"},"ts":1615482317000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So better hope you're okay with getting the /TR links.","msgtype":"m.text"},"ts":1615482331000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Right yeah, not sure I care enough, but it is icky (and so is the -3)","msgtype":"m.text"},"ts":1615482400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Random question: if I get NickServ messages sying I'm \"already logged in as domfarolino\" sometimes.. does this imply someone is trying to log in with my name or something? Or does this \"just happen\" sometimes on IRC","msgtype":"m.text"},"ts":1615484816000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: this could happen if you connect to a new server, I think, but not sure","msgtype":"m.text"},"ts":1615484975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: I have had this happen and no reason to believe I'm compromised...","msgtype":"m.text"},"ts":1615485033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: It's happened to me before. It *could* mean that somebody is impersonating you, but for me, it usually happens because there was a network glitch, or I had not closed my previous session.","msgtype":"m.text"},"ts":1615485043000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"OK that sounds good thanks for roughly confirming","msgtype":"m.text"},"ts":1615485067000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: FYI corrected a typo in OP of https://github.com/whatwg/participate.whatwg.org/pull/178","msgtype":"m.text"},"ts":1615486050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah cool, thank you","msgtype":"m.text"},"ts":1615486063000,"senderName":"Domenic","senderId":"Domenic@irc"}
]