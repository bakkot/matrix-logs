[
{"content":{"body":"news","msgtype":"m.text"},"ts":1408320745000,"senderName":"admin_000","senderId":"admin_000@irc"},
{"content":{"body":"zewt: ah, right. Yeah, they're using icon fonts.","msgtype":"m.text"},"ts":1408327663000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I think we should probably allow pages to specify fonts for PUA characters even when \"allow pages to choose their own fonts\" is unchecked.","msgtype":"m.text"},"ts":1408327716000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I'll file a bug","msgtype":"m.text"},"ts":1408327736000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"these aren't the droids you're looking for!","msgtype":"m.text"},"ts":1408327912000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1054817","msgtype":"m.text"},"ts":1408327951000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"where is the \"disvote\" option","msgtype":"m.text"},"ts":1408327993000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"makes sense to me. there's no point (almost by definition) in rendering PUA characters in a different font","msgtype":"m.text"},"ts":1408328336000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"there are those of us who would prefer to be aware of the meaningless codepoints we are being subjected to, however ...","msgtype":"m.text"},"ts":1408328443000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"all five of you","msgtype":"m.text"},"ts":1408328586000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, astearns: also, it would introduce a perverse insentive to use meaningless codepoints when meaningful codepoints exist","msgtype":"m.text"},"ts":1408328587000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"wonders where in the priority of constituencies people concerned with codepoints lies","msgtype":"m.emote"},"ts":1408328613000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"SamB: I don't find PUA codepoints perverse, so in my mind author intent trumps your particular use case","msgtype":"m.text"},"ts":1408328707000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"I do see the utility in users choosing their own fonts, when they want","msgtype":"m.text"},"ts":1408328753000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"but when their fonts are almost guaranteed not to have anything useful to display...","msgtype":"m.text"},"ts":1408328768000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: you don't think it's dumb to use a meaningless PUA codepoint when there's a perfectly good non-PUA codepoint for the symbol in question?","msgtype":"m.text"},"ts":1408328769000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"depends on when there is an alternative. for the icon case we were discussing, my guess is that there often is not an alternative","msgtype":"m.text"},"ts":1408328814000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"using SVG with a reasonable filename would honestly be more accessible ...","msgtype":"m.text"},"ts":1408328836000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(or a ligature trick)","msgtype":"m.text"},"ts":1408328868000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I agree - and using an agreed-upon codepoint is preferable to making up your own","msgtype":"m.text"},"ts":1408328957000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"some browsers just can't render webfonts","msgtype":"m.text"},"ts":1408328962000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and some browsers don't run script","msgtype":"m.text"},"ts":1408328997000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1408329000000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I know","msgtype":"m.text"},"ts":1408329003000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hopefully both of those situations will get less and less relevant","msgtype":"m.text"},"ts":1408329013000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"also screenreaders will NEVER know WTF those PUA codepoints are supposed to be","msgtype":"m.text"},"ts":1408329044000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah, but a screenreader can't make sense of a PNG icon either.","msgtype":"m.text"},"ts":1408330453000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"a braille display could","msgtype":"m.text"},"ts":1408330555000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"roc: it could read the filename out, though!","msgtype":"m.text"},"ts":1408330994000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"a braille display can render the glyphs for unknown Unicode codepoints too :-)","msgtype":"m.text"},"ts":1408331092000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"SamB: what if it's a data URL? hate to read that out :-)","msgtype":"m.text"},"ts":1408331114000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: well don't do that then!","msgtype":"m.text"},"ts":1408331126000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"of course, github clearly don't CARE","msgtype":"m.text"},"ts":1408331140000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"surprised there so far hasn't been much discussion anywhere about the technical claims the blink team has been with regard to pointer events vs touch events","msgtype":"m.text"},"ts":1408344365000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"except for smaug's reply","msgtype":"m.text"},"ts":1408344381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-pointer-events/2014JulSep/0052.html","msgtype":"m.text"},"ts":1408344394000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"prolly because this was all already sorted behind the scenes","msgtype":"m.text"},"ts":1408349960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah","msgtype":"m.text"},"ts":1408350301000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"open and transparency ftw","msgtype":"m.text"},"ts":1408350326000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't really know MikeSmith","msgtype":"m.text"},"ts":1408350401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know enough about UI events and even less about touch specifically","msgtype":"m.text"},"ts":1408350440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah me neither","msgtype":"m.text"},"ts":1408350454000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"But given that touch is mostly for mobile and that's mostly Google/Apple, and pointer events never had buy-in from Apple, ...","msgtype":"m.text"},"ts":1408350473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1408350484000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It would work if Apple was doing nothing like Microsoft did with IE6","msgtype":"m.text"},"ts":1408350503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well it seems like for Windows 8 Microsoft has bought into touch","msgtype":"m.text"},"ts":1408350543000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"even for their desktop OS","msgtype":"m.text"},"ts":1408350554000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which they have still quite a lot of market share for","msgtype":"m.text"},"ts":1408350568000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so it's kinda not just about mobile","msgtype":"m.text"},"ts":1408350581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though I guess it's unclear how successful they've been so far with bringing touch to desktop","msgtype":"m.text"},"ts":1408350614000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The only user I know is Domenic","msgtype":"m.text"},"ts":1408350691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there’s quite a few touchscreen windows laptops","msgtype":"m.text"},"ts":1408350694000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I dunno if anyone actually uses the touch capabilities","msgtype":"m.text"},"ts":1408350702000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yeah, not sure if he uses the touch screen either, he has a keyboard attached","msgtype":"m.text"},"ts":1408350719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in my limited experience using Windows 8 on a laptop it works a lot better if you use touch instead of trying to use the mouse/pointer","msgtype":"m.text"},"ts":1408350915000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's kind of like, when you're using the pointer, you feel like you're emulating touch actions","msgtype":"m.text"},"ts":1408350939000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh, this pointer events stuff","msgtype":"m.text"},"ts":1408351123000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think Google is right that there’s a difference between mouse and touch UIs that pointer events handle badly","msgtype":"m.text"},"ts":1408351178000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"blink is happy to say no pointer events, and one reasoning is that webkit doesn't support them, yet they are happy to implement a lot more complicate stuff, which slows down various things and not supported by webkit, web components","msgtype":"m.text"},"ts":1408351220000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"specifically, on touch UI platforms, touches are always captured based on what you touch first - there’s no such thing as swiping your finger across a row of controls and getting their hover effects","msgtype":"m.text"},"ts":1408351238000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: pointer events can handle that","msgtype":"m.text"},"ts":1408351270000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that makes all the leave/in/out machinery and the rule of targeting based on hit testing useless or perhaps even harmful","msgtype":"m.text"},"ts":1408351273000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"similar way as touch events","msgtype":"m.text"},"ts":1408351278000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"they do have the capture mode","msgtype":"m.text"},"ts":1408351279000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and pointer events don't have the odd touchList stuff","msgtype":"m.text"},"ts":1408351299000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if one needs touch lists, that can be done within the web app","msgtype":"m.text"},"ts":1408351310000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anyhow, I think pointer events are pretty much dead now","msgtype":"m.text"},"ts":1408351339000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"who knows? Google might change their mind again","msgtype":"m.text"},"ts":1408351354000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that is possible","msgtype":"m.text"},"ts":1408351373000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"their implementation decisions seem kind of mysterious to me","msgtype":"m.text"},"ts":1408351377000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm not going to remove pointer events support from Gecko any time soon","msgtype":"m.text"},"ts":1408351383000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"othermaciej: yeah, with Apple it's always clearcut","msgtype":"m.text"},"ts":1408351420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1408351423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"usually our pattern is we don’t say anything (or actively say no), then we ship it","msgtype":"m.text"},"ts":1408351450000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"s/anyhow, I think pointer events are pretty much dead now/anyhow, I think pointer events are pretty much dead for now/","msgtype":"m.text"},"ts":1408351479000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm pretty sure my Mum would use a tocuhscrren laptop, based on the fact she kept trying to touch things on the screen of my laptop last time she used it. I'm not sure why; I think she just uses a tablet so much that she now assumes all devices work in the same way","msgtype":"m.text"},"ts":1408351521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how do pointer events handle multi-touch?","msgtype":"m.text"},"ts":1408351547000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"separate event for each touch?","msgtype":"m.text"},"ts":1408351554000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1408351559000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"othermaciej: I would think that hover could be implemented in touch environments that also had relatively finer-grained proximity-sensor support. My Galaxy S4 has that sort of proximity sensor and some parts of the UI already use it to produce effects on hover -- e.g., you can actually hover over a row of controls and it gives you the hover effects you'd expect","msgtype":"m.text"},"ts":1408351588000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can’t remember the whole reason for the TouchList thing, but I think it was invented so you could implement gestures involving multiple touches without having to keep a lot of state to know what was happening with the active touch points","msgtype":"m.text"},"ts":1408351683000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham: I would think touchscreen laptops are way more intuitive for first-time computer users -- or for anybody already used to a mobile phone with a touchscreen","msgtype":"m.text"},"ts":1408351703000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"whether it helps with that, I don’t know","msgtype":"m.text"},"ts":1408351709000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it doesn’t seem like bespoke multitouch gestures has turned out to be much of a thing","msgtype":"m.text"},"ts":1408351721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1408351750000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"foolip: you around?","msgtype":"m.text"},"ts":1408351752000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it does at least let you avoid accidentally treating an extra touch with fingers already down as an independent tap that activates something","msgtype":"m.text"},"ts":1408351768000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"foolip: I think I'll make Attr.prototype.value readonly for now in the specification and open a bug about what we should do if that cannot be implemented","msgtype":"m.text"},"ts":1408351779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: if that cannot be done we can basically do the thing where Attr objects can be added to objects and Attr objects can be created, etc. and have an ownerElement","msgtype":"m.text"},"ts":1408351812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pointer events have the concept of primary pointer","msgtype":"m.text"},"ts":1408351901000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"MikeSmith: Yeah. In this case she's familiar with the concept of non-touch-screen devices but just assumed that any new device is touch-capable. However there are an increasing number of people who have never used a non-touch device.","msgtype":"m.text"},"ts":1408352798000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"recalls a video of a 2-year old concluding that the paper magazine is broken because it doesn't respond to touch","msgtype":"m.emote"},"ts":1408353076000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://www.youtube.com/watch?v=aXV-yaFmQNk","msgtype":"m.text"},"ts":1408353460000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"1 year old","msgtype":"m.text"},"ts":1408353517000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: here!","msgtype":"m.text"},"ts":1408361292000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"yay","msgtype":"m.text"},"ts":1408361301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: see bugmail :-)","msgtype":"m.text"},"ts":1408361305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1408361311000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"also, we have a fullscreen issue here","msgtype":"m.text"},"ts":1408361324000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"things get weird when you have display:none on a parent of the fullscreen element","msgtype":"m.text"},"ts":1408361342000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"the spec says \"It is not rendered if it, or an ancestor, has the display property set to none.\" and that's pretty much what happens","msgtype":"m.text"},"ts":1408361358000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"the consequence on a site we've been debugging is that one is left in fullscreen even though the fullscreen content isn't showing any longer","msgtype":"m.text"},"ts":1408361401000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"don't know how to fix it, so I wanted to ask if there's a great reason why things in the top layer don't ignore display:none on their parents?","msgtype":"m.text"},"ts":1408361432000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"that would be a first in CSS","msgtype":"m.text"},"ts":1408361533000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I suspected as much","msgtype":"m.text"},"ts":1408361545000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"and on the face of it seems like it might destroy a bunch of optimizations in the CSS engine","msgtype":"m.text"},"ts":1408361553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and exiting fullscreen would require reacting to changes in computed style","msgtype":"m.text"},"ts":1408361577000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"i guess at some point we might get a computed style observer thingie that would make that possible","msgtype":"m.text"},"ts":1408361673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wild idea: an extra backdrop which you can't make transparent that ends up below the ::backdrop pseudo elements, so that you can never see anything other than the :fullscreen element and its children?","msgtype":"m.text"},"ts":1408361722000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"seems like that is something we want to be able to show though","msgtype":"m.text"},"ts":1408361767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right now you can fullscreen some random element and set it to display:none, and it looks like you've entered fullscreen for documentElement or document.body, it's pretty weird","msgtype":"m.text"},"ts":1408361834000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"but it also only seems to happen when the site has done something strange (in this case didn't consider that it might be in fullscreen even though it had a fullscreen button)","msgtype":"m.text"},"ts":1408361872000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"are there use cases for doing that kind of thing, or is it just consequence of keeping things simple?","msgtype":"m.text"},"ts":1408361993000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"keeping things simple I guess","msgtype":"m.text"},"ts":1408362059000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. :root { display:none } is possible too","msgtype":"m.text"},"ts":1408362066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1408362185000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"we'll try to get the site fixed and see if the problem keeps coming up","msgtype":"m.text"},"ts":1408362228000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"to the bugmail","msgtype":"m.text"},"ts":1408362253000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: :-(","msgtype":"m.text"},"ts":1408364990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So what remains? Attributes can't have child nodes","msgtype":"m.text"},"ts":1408365032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And they are not nodes, although whether that matters much is up for debate now","msgtype":"m.text"},"ts":1408365045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, getting rid of the child nodes is the only remaining simplification I'm aware of","msgtype":"m.text"},"ts":1408365149000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"there's a relevant use counter for that, let me find it","msgtype":"m.text"},"ts":1408365161000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Attr.textContent: http://www.chromestatus.com/metrics/feature/timeline/popularity/349","msgtype":"m.text"},"ts":1408365190000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Attributes not being nodes also simplifies some stuff as other algorithms don't have to deal with the fact of being passed an Attr node","msgtype":"m.text"},"ts":1408365193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so textContent would have to be made an alias at the very leat","msgtype":"m.text"},"ts":1408365221000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: we could support that as an alias to .value","msgtype":"m.text"},"ts":1408365223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems like it","msgtype":"m.text"},"ts":1408365227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure how to effectively measure if child nodes themselves are needed","msgtype":"m.text"},"ts":1408365235000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"does Chrome even support that?","msgtype":"m.text"},"ts":1408365244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that means attr.appendChild(text) is supported","msgtype":"m.text"},"ts":1408365258000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"modifying child elements causes the attribute value to be updated last I checked","msgtype":"m.text"},"ts":1408365288000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"it's really weird :)","msgtype":"m.text"},"ts":1408365293000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"oh, some weird hack?","msgtype":"m.text"},"ts":1408365327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1408365330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and going through childNodes?","msgtype":"m.text"},"ts":1408365338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I can check myself","msgtype":"m.text"},"ts":1408365347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Attr::childrenChanged in Source/core/dom/Attr.cpp","msgtype":"m.text"},"ts":1408365374000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"not so crazy implementation-wise, but it's a crazy API for changing attributes","msgtype":"m.text"},"ts":1408365393000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I guess you knew that","msgtype":"m.text"},"ts":1408365402000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I guess as a start one could measure in Attr::childrenChanged, but getting rid of only that while still keeping the child nodes doesn't seem great","msgtype":"m.text"},"ts":1408365472000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: did you switch away from anolis?","msgtype":"m.text"},"ts":1408365474000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe we need an Exif5 spec","msgtype":"m.text"},"ts":1408366564000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: no","msgtype":"m.text"},"ts":1408367149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I started updating DOM again btw","msgtype":"m.text"},"ts":1408367159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1408367163000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: since you never pinged back on switch to Bikeshed","msgtype":"m.text"},"ts":1408367173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I do plan on switching to what TabAtkins made as it seems better maintained","msgtype":"m.text"},"ts":1408367310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I have not made the time however and I think there's a few things it does differently at the moment that make switching harder","msgtype":"m.text"},"ts":1408367328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: I think I'll try to leave out some of the *NS methods as they just don't seem used and do actually make things more complicated","msgtype":"m.text"},"ts":1408369275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: they do? which ones?","msgtype":"m.text"},"ts":1408369872000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: setAttributeNodeNS, getAttributeNodeNS, but I guess we could leave those too","msgtype":"m.text"},"ts":1408369901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: createAttributeNodeNS","msgtype":"m.text"},"ts":1408369907000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"euh, createAttributeNS()","msgtype":"m.text"},"ts":1408369914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have no love for any of those, but what complexity do they add on top of the non-namespaced variants?","msgtype":"m.text"},"ts":1408370027000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"yeah you're right","msgtype":"m.text"},"ts":1408370139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-( :-(","msgtype":"m.text"},"ts":1408370150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there aren't enough sad faces to throw at Attr","msgtype":"m.text"},"ts":1408370188000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"do you know who came up with this API to begin with?","msgtype":"m.text"},"ts":1408370198000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"or is it hidden in a teleconf from 1995?","msgtype":"m.text"},"ts":1408370220000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"the Java guys involved in designing the DOM","msgtype":"m.text"},"ts":1408370455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and then they added all the complexity for XML in a nonsensical manner","msgtype":"m.text"},"ts":1408370476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so crazy","msgtype":"m.text"},"ts":1408370478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"web platform is best platform","msgtype":"m.text"},"ts":1408370902000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: Oh right, sorry.  I'd stopped while we worked out the header/footer situation with Domenic for Streams, and never got back to it.","msgtype":"m.text"},"ts":1408372438000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug____: Re: not staying logged in, use an incognito window?","msgtype":"m.text"},"ts":1408372838000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug____: (You have to stay logged in for *some* period of time just to use multiple pages at once, so you're just asking for the ability to auto-logout after a much shorter period than normal.)","msgtype":"m.text"},"ts":1408372876000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: right, private browsing mode should work","msgtype":"m.text"},"ts":1408372894000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm asking for a mode where I would be logged out automatically after closing top level Google (not search) tabs","msgtype":"m.text"},"ts":1408372961000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"well, even search","msgtype":"m.text"},"ts":1408372966000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"because search just doesn't need the account information for anything","msgtype":"m.text"},"ts":1408372978000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(except for targeted ads, which are super annoying )","msgtype":"m.text"},"ts":1408372999000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I don't see how that's possible, actually. Pages can't maintain state like that.","msgtype":"m.text"},"ts":1408373054000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Without something like storing all state on the server and doing heartbeat pings.","msgtype":"m.text"},"ts":1408373087000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Isn't that sessionStorage?","msgtype":"m.text"},"ts":1408373236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or you could use a shared worker","msgtype":"m.text"},"ts":1408373312000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"foolip: you still want to fix bugs in Chrome I think","msgtype":"m.text"},"ts":1408373869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: e.g. what it does for var x = document.createAttribute(\"test:test\");w(x.localName) is pretty weird","msgtype":"m.text"},"ts":1408373875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: Chrome doesn't throw for document.createAttributeNS(\"test:test\") which is somewhat odd too","msgtype":"m.text"},"ts":1408373929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The great Attr retreat of 2014 :(","msgtype":"m.text"},"ts":1408374166000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: haven't given up completely yet, but yeah, we're adding back some complexity to the spec","msgtype":"m.text"},"ts":1408374251000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, was just a sad set of emails to wake up to","msgtype":"m.text"},"ts":1408374269000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: Hmm, sessionStorage doesn't apply across domains.","msgtype":"m.text"},"ts":1408374760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Also, it's a variant of localStorage, which we don't like.)","msgtype":"m.text"},"ts":1408374775000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Using a Shared Worker is possible. A lot of complexity for something solved by \"use an incognito window\", though.","msgtype":"m.text"},"ts":1408374834000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: sub domains i could see, but i think there would have security issues if data-storage occurs across domains.","msgtype":"m.text"},"ts":1408374848000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"I meant subdomains too.","msgtype":"m.text"},"ts":1408375081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's issues with \"subdomains\" too: https://publicsuffix.org/","msgtype":"m.text"},"ts":1408375762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which is why we tie things to origins","msgtype":"m.text"},"ts":1408375766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"new things, anyway","msgtype":"m.text"},"ts":1408375772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh joy http://lists.w3.org/Archives/Public/semantic-web/2014Aug/0063.html","msgtype":"m.text"},"ts":1408376474000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ーHTML either misuses or fails to appropriately use the well-defined vocabulary terms of URIs used in all other Web-related standards, including the recent updates of RDF [4] and HTTP [5], and the newly published CoAP [6]. Where I would expect to see terms like \"URI Reference\" and \"IRI\", I see only \"URL\", which in the strictest sense would be incompatible with RDF's IRIs.","msgtype":"m.text"},"ts":1408376507000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hehehehehe","msgtype":"m.text"},"ts":1408376564000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And then talk about \"some legacy pages\" being broken in favor of RDF-based apps, as if the numbers were within even a few powers-of-ten of each other.","msgtype":"m.text"},"ts":1408376635000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://twitter.com/mikeal/status/501391405714268161","msgtype":"m.text"},"ts":1408377290000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith: I wonder when they notice we dropped DTDs","msgtype":"m.text"},"ts":1408379457000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: that's how we implement ES6 at Mozilla it seems","msgtype":"m.text"},"ts":1408379477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Although we wouldn't call HTML HTML5)","msgtype":"m.text"},"ts":1408379498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, it's not the most informed tweet, but its heart is in the right place.","msgtype":"m.text"},"ts":1408379514000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Whenever I make nice cleanup to DOM it's somewhat upsetting all my hard work is just going to be copypasted to /TR/dom/. So far there's been no benefit from this fork...","msgtype":"m.text"},"ts":1408379661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Arguably TR/encoding/ had some benefit, although not sure whether it was worth the cost, probably not","msgtype":"m.text"},"ts":1408379685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: dfn.js seems to sometimes overwrite dfnReturnLink with a link to the chapter","msgtype":"m.text"},"ts":1408379788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"file a bug, i'm off tools work until i get the script stuff done","msgtype":"m.text"},"ts":1408379874000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(i figured i'd spent enough time without progress for a while!)","msgtype":"m.text"},"ts":1408379897000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that semantic-web e-mail is awesome","msgtype":"m.text"},"ts":1408379960000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"though I'm not aware of any such documents\"","msgtype":"m.text"},"ts":1408379964000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"can/should we try to get these in the 420 branch?","msgtype":"m.text"},"ts":1408380152000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"uh - oops","msgtype":"m.text"},"ts":1408380162000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"What does /TR/encoding give?","msgtype":"m.text"},"ts":1408381204000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: got some review from people who otherwise might not have cared","msgtype":"m.text"},"ts":1408381510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: if I'm being optimistic","msgtype":"m.text"},"ts":1408381523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: did they add bugs to /TR/dom/ ?","msgtype":"m.text"},"ts":1408381641000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"mostly confusion, perhaps some subsetting, not sure","msgtype":"m.text"},"ts":1408381748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1408383577000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ES6 module loader doesn't support incremental loading, either","msgtype":"m.text"},"ts":1408383585000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"which means it won't work for HTML imports","msgtype":"m.text"},"ts":1408383590000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ah yeah, just a promise...","msgtype":"m.text"},"ts":1408383681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is kind of sad","msgtype":"m.text"},"ts":1408383698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i suppose I can make 'fetch' return straight away for html imports","msgtype":"m.text"},"ts":1408383817000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but i can't incrementally add dependencies then","msgtype":"m.text"},"ts":1408383831000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: is any browser vendor interested in reconciling all these systems btw?","msgtype":"m.text"},"ts":1408383869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: I haven't seen many emails from implementers in these threads :/","msgtype":"m.text"},"ts":1408383890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"are there are browser vendors interested in implementing two separate dependency systems?","msgtype":"m.text"},"ts":1408383938000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"actually i guess it's ok","msgtype":"m.text"},"ts":1408384162000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it doesn't need to return straight away","msgtype":"m.text"},"ts":1408384175000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it can just create it incrementally in \"fetch\"","msgtype":"m.text"},"ts":1408384182000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"translate\" would and \"instantiate\" would be no-ops","msgtype":"m.text"},"ts":1408384212000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"this assumes we can add dependencies on the fly, of course","msgtype":"m.text"},"ts":1408384220000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: CSS doesn't parse incrementally, right?","msgtype":"m.text"},"ts":1408386053000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"at least, not visibly","msgtype":"m.text"},"ts":1408386059000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1408386061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1408386063000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Well...","msgtype":"m.text"},"ts":1408386068000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"uh oh","msgtype":"m.text"},"ts":1408386097000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Actually, not sure.  Some impls *might* start applying rules as they come off the wire.","msgtype":"m.text"},"ts":1408386098000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wait, applying rules incrementally?","msgtype":"m.text"},"ts":1408386112000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i just meant parsing exposed to the dom","msgtype":"m.text"},"ts":1408386120000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Oh, no, definitely not.  Stylesheet is all or nothing.","msgtype":"m.text"},"ts":1408386134000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"applying rules incrementally seems rather ungood","msgtype":"m.text"},"ts":1408386136000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok good","msgtype":"m.text"},"ts":1408386138000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Merging all the thread responses together really did make it impossible to follow.","msgtype":"m.text"},"ts":1408386199000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's fine to do when you're responding to a collection of independent months-old things, but not when you're replying to your own threads that are currently active.","msgtype":"m.text"},"ts":1408386229000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Totally breaks threading. :/","msgtype":"m.text"},"ts":1408386235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, seems that way","msgtype":"m.text"},"ts":1408386280000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the list seems to the throttling me though","msgtype":"m.text"},"ts":1408386297000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Weird.","msgtype":"m.text"},"ts":1408386305000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there's at least two e-mails i've sent that haven't made it to the list","msgtype":"m.text"},"ts":1408386308000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"+1 to TabAtkins's feedback on not breaking threading","msgtype":"m.text"},"ts":1408386385000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and now i'm not receiving jjb's responses either","msgtype":"m.text"},"ts":1408386899000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i see them on http://esdiscuss.org/1","msgtype":"m.text"},"ts":1408386906000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"waah, the list software doesn't like me!","msgtype":"m.text"},"ts":1408386917000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"So.....","msgtype":"m.text"},"ts":1408387412000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Domenic: promise question","msgtype":"m.text"},"ts":1408387416000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Domenic: say you have promises #1 through #5, and you want to wait for all of them to be done before continuing","msgtype":"m.text"},"ts":1408387438000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Domenic: you can just make a new promise that's the \"all\" of those five promises, right?","msgtype":"m.text"},"ts":1408387450000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yes exactly","msgtype":"m.text"},"ts":1408387459000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ok. Now what if you later discover that actually #3 isn't needed, so you just want to depend on #1, #2, #4, and #5. Also, you need to add #6. How do you update the promise?","msgtype":"m.text"},"ts":1408387482000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yeah, at that point you have to write your own combinator","msgtype":"m.text"},"ts":1408387520000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Notably, if 1,2,3,4,5 all came back, you can't add #6","msgtype":"m.text"},"ts":1408387534000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"since once a promise has settled it no longer changes state","msgtype":"m.text"},"ts":1408387544000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sure, if it's already resolved then whatever","msgtype":"m.text"},"ts":1408387549000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so here's my problem","msgtype":"m.text"},"ts":1408387556000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i already have this All promise. the ES6 module loader makes it for me.","msgtype":"m.text"},"ts":1408387570000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I need to dynamically modify it later.","msgtype":"m.text"},"ts":1408387577000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"modify it?","msgtype":"m.text"},"ts":1408387589000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"One way I can think of is making #3 a \"proxy\" promise. So that if you determine you need #3 after all, you resolve the proxy with #3. But if you don't want it, you resolve it with undefined or something.","msgtype":"m.text"},"ts":1408387644000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Not sure about adding latter...","msgtype":"m.text"},"ts":1408387682000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i can't control #3 either, that's also created by the ES6 module loader","msgtype":"m.text"},"ts":1408387759000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and it's a real promise, it might be hte \"#6\" of another \"all\" promise, or whatever","msgtype":"m.text"},"ts":1408387778000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"e.g. if someone tweaks the dependencies so that A depends on D instead of C, and B depends on C instead of D.","msgtype":"m.text"},"ts":1408387798000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm confused by what is meant by wanting to modify the promise ._>","msgtype":"m.text"},"ts":1408387818000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: i just explained it abve?","msgtype":"m.text"},"ts":1408387921000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"caitp: see where i said \"So.....\" and the next four lines from me","msgtype":"m.text"},"ts":1408387948000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sounds like something like the \"some\" approach vs all","msgtype":"m.text"},"ts":1408387990000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but not exactly","msgtype":"m.text"},"ts":1408387997000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yeah, I mean, I don't think this is really an issue where promises can give you what you want inherently; you need the spec patched to allow you to do a custom combinator instead of all()","msgtype":"m.text"},"ts":1408388032000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah, that was my assumption","msgtype":"m.text"},"ts":1408388065000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"pity","msgtype":"m.text"},"ts":1408388066000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"complicated flow control has always kind of sucked with that particular abstraction, but it's doable","msgtype":"m.text"},"ts":1408388275000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but, for what it's worth, you don't really need the promise spec patched in order to implement that or talk about it in a whatwg spec","msgtype":"m.text"},"ts":1408388474000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: not the promise spec, the module loader spec","msgtype":"m.text"},"ts":1408388651000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"if the module loader as written isn't really implementable because they're too specific about how it needs to work, that sounds like a bug in harmony :> but otherwise it sounds like an implementation detail that could be solved any number of ways","msgtype":"m.text"},"ts":1408388719000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's implementable fine, the problem is i want to support use cases it doesn't handle","msgtype":"m.text"},"ts":1408388774000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"like dynamically changing the dependencies","msgtype":"m.text"},"ts":1408388785000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"right - it assumes that the dependency graph is static","msgtype":"m.text"},"ts":1408388806000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"the linkage graph is static, to be more precise","msgtype":"m.text"},"ts":1408389177000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"how would you much such a graph dynamic though? is what I'm failing to see","msgtype":"m.text"},"ts":1408389995000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"even using the import/load methods of Reflect.Loader, wouldn't evaluation of the scripts be deferred until each static module is loaded?","msgtype":"m.text"},"ts":1408390022000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"s/much/make/","msgtype":"m.text"},"ts":1408390040000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"zenparsing: we're probably gonna need to fix that","msgtype":"m.text"},"ts":1408390898000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"caitp: see es-discuss","msgtype":"m.text"},"ts":1408390908000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_ in a ideal world, might it make more sense to have the host (HTML) define a dependency system and let the embedded scripting language hook into that?  instead of the other way round?","msgtype":"m.text"},"ts":1408391077000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"in an ideal world, HTML and the scripting language would be one coherent thing and we'd have one dependency system","msgtype":"m.text"},"ts":1408391111000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but in a world where we have design barriers, i don't think it's particularly important which side hooks into which","msgtype":"m.text"},"ts":1408391146000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so long as the implementors don't have to implement two :-)","msgtype":"m.text"},"ts":1408391154000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so your issue is that you want the context which uses html imports to be aware of when the imported html's script modules are loaded, and have a way to access the loaded modules?","msgtype":"m.text"},"ts":1408391447000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie_ does the ES side consider this unification important (yet)?","msgtype":"m.text"},"ts":1408391532000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"btw, i like your \"foo/\" => \"foo/default.js\" idea","msgtype":"m.text"},"ts":1408391656000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"not in favour of index.js? :p","msgtype":"m.text"},"ts":1408391713000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: something like that","msgtype":"m.text"},"ts":1408391751000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zenparsing: dunno, none of them are really replying","msgtype":"m.text"},"ts":1408391772000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zenparsing: but i'm assuming the implementors don't want to implement two dependency systems","msgtype":"m.text"},"ts":1408391788000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: you around?","msgtype":"m.text"},"ts":1408393502000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"caitp: maybe an override to the default \"index.<some extension\"","msgtype":"m.text"},"ts":1408393575000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"Hi !","msgtype":"m.text"},"ts":1408393826000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"anyone here ?","msgtype":"m.text"},"ts":1408393981000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1408394032000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"ok I'm new to irc, i'm testing it","msgtype":"m.text"},"ts":1408394059000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1408394061000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"welcome","msgtype":"m.text"},"ts":1408394071000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1408394077000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"there's some people here","msgtype":"m.text"},"ts":1408394092000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what's going on here on this channel ?","msgtype":"m.text"},"ts":1408394094000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"right now, not much!","msgtype":"m.text"},"ts":1408394103000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but generally we chat about web standards that we're implementing or speccing","msgtype":"m.text"},"ts":1408394115000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or testing","msgtype":"m.text"},"ts":1408394120000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or reviewing","msgtype":"m.text"},"ts":1408394122000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok I found this channel on a tutorial on how to use irc","msgtype":"m.text"},"ts":1408394146000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"but i'm not into whatever you're saying","msgtype":"m.text"},"ts":1408394172000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"sounds like chinese to me :)","msgtype":"m.text"},"ts":1408394180000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1408394196000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what tutorial?","msgtype":"m.text"},"ts":1408394200000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"http://kernelmeltdown.org/blog/how-to-set-up-irc-using-hexchat-beginners-walkthrough/","msgtype":"m.text"},"ts":1408394214000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"and","msgtype":"m.text"},"ts":1408394226000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"http://code.tutsplus.com/tutorials/irc-is-back-heres-your-starter-guide--net-31369","msgtype":"m.text"},"ts":1408394235000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"oh man, you found an exciting channel","msgtype":"m.text"},"ts":1408394312000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"really how exciting is it ?","msgtype":"m.text"},"ts":1408394365000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"Sleepyvic: feel free to sit around here if you wish, but you can also type /msg alis help list   and follow the instructions there to help find other channels.","msgtype":"m.text"},"ts":1408394373000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"No i'm gonna look for another channel","msgtype":"m.text"},"ts":1408394429000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"take care guys","msgtype":"m.text"},"ts":1408394435000,"senderName":"Sleepyvic","senderId":"Sleepyvic@irc"},
{"content":{"body":"oh man, you guys almost caught a fresh one","msgtype":"m.text"},"ts":1408394494000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so close.","msgtype":"m.text"},"ts":1408394498000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(s)he'll get caught in the interwebs. It is all seeing after all.","msgtype":"m.text"},"ts":1408394540000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"I just submitted a comment on the second article suggesting that #whatwg be taken off the list of \"awesome channels for web developers\".","msgtype":"m.text"},"ts":1408394600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"where else are they gonna hang out? the web development community is so tiny","msgtype":"m.text"},"ts":1408394914000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: not according to the numerous one-offs of channels (and thats just on freenode).","msgtype":"m.text"},"ts":1408395009000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"TabAtkins: oh? i thought it was pretty good that we'd get exposed to web devs","msgtype":"m.text"},"ts":1408395046000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":":","msgtype":"m.text"},"ts":1408395053000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1408395063000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"It was in a list of channels where it's appropriate to ask \"how do I web?\" questions, of which this is not one.","msgtype":"m.text"},"ts":1408395079000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I emit a lot of sarcasm, boogyman, it takes practice to notice it thoguh","msgtype":"m.text"},"ts":1408395083000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"also a lot of typos.","msgtype":"m.text"},"ts":1408395090000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie_: anything important?","msgtype":"m.text"},"ts":1408395786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"exit","msgtype":"m.text"},"ts":1408395792000,"senderName":"charl","senderId":"charl@irc"},
{"content":{"body":"bah sorry, wrong window :)","msgtype":"m.text"},"ts":1408395805000,"senderName":"charl","senderId":"charl@irc"},
{"content":{"body":"And typo!","msgtype":"m.text"},"ts":1408395815000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: just curious about the new fetch apis","msgtype":"m.text"},"ts":1408395818000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: nothing urgen","msgtype":"m.text"},"ts":1408395826000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"t","msgtype":"m.text"},"ts":1408395827000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: anything unclear in the draft?","msgtype":"m.text"},"ts":1408395837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: I haven't tried figuring out the <img>.request thing yet, there's an open bug now, but there seem to be some tricky bits since both HTML attributes and some object would control request state, which is always icky (see e.g. .style)","msgtype":"m.text"},"ts":1408395880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: My first question was going to be: what's with the Request() constructor taking both a Request and a RequestInit","msgtype":"m.text"},"ts":1408395894000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: yeah, that's the source of my interest.","msgtype":"m.text"},"ts":1408395914000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: mostly I'm curious about whether you're going to be exposing dependency tree info and priority info for HTTP2","msgtype":"m.text"},"ts":1408395931000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: (both of those are mutable during the request, iirc)","msgtype":"m.text"},"ts":1408395949000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: the idea behind passing in a request is for service workers","msgtype":"m.text"},"ts":1408395955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: (so not just at init time)","msgtype":"m.text"},"ts":1408395956000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: e.g. you have fetchEvent.request and then you pass that to fetch() or a cache.add(); you would then use RequestInit to modify some stuff if any","msgtype":"m.text"},"ts":1408395988000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, ok","msgtype":"m.text"},"ts":1408396012000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: my idea for things mutable during the fetch was to have methods on Request that invoke some cross-process action","msgtype":"m.text"},"ts":1408396035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so why does the other form of \"new Request()\" take a URL and a dict? why not the URL in the dict?","msgtype":"m.text"},"ts":1408396039000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: a URL is required, everything else is optional","msgtype":"m.text"},"ts":1408396080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(well everything else can have sensible defaults)","msgtype":"m.text"},"ts":1408396102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aah","msgtype":"m.text"},"ts":1408396112000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so anyway, you're thinking we'd expose a .request object?","msgtype":"m.text"},"ts":1408396133000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and that would have like img.request.changePriority(25) ?","msgtype":"m.text"},"ts":1408396144000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"at a high-level, yes, at a low-level I'm not sure how it'll work yet","msgtype":"m.text"},"ts":1408396158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't know enough about HTTP2's dependency stuff to have useful comments on that","msgtype":"m.text"},"ts":1408396160000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah, something like that","msgtype":"m.text"},"ts":1408396161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for priorities anyway","msgtype":"m.text"},"ts":1408396169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1408396170000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and queryPriority() or something I guess with promises","msgtype":"m.text"},"ts":1408396186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so the UA is the one who would create that Request","msgtype":"m.text"},"ts":1408396194000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah, the spec for the <img> element would set it up","msgtype":"m.text"},"ts":1408396212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so logically, we could have src=\"\" and src-request-init=\"{ priority: 25; ... }\"","msgtype":"m.text"},"ts":1408396218000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and whenever you would create the Request, you'd actually pass that in","msgtype":"m.text"},"ts":1408396231000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1408396231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no race, which is nice","msgtype":"m.text"},"ts":1408396237000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well, there's a race","msgtype":"m.text"},"ts":1408396240000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but there's a well-defined time at which it is used","msgtype":"m.text"},"ts":1408396245000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so interop should be ok","msgtype":"m.text"},"ts":1408396250000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah, as long as we define the task and such","msgtype":"m.text"},"ts":1408396260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and then after that the attribute would be pointless","msgtype":"m.text"},"ts":1408396269000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that might be good yes","msgtype":"m.text"},"ts":1408396277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"do you know the bug# or have a search keyword i can find the bug with?","msgtype":"m.text"},"ts":1408396279000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I was wondering what to do if someone modified Request, that was the tricky bit","msgtype":"m.text"},"ts":1408396288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or accessed .request and then set a crossorigin attribute","msgtype":"m.text"},"ts":1408396298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well presumably once the request is in flight it's mostly immutable, no?","msgtype":"m.text"},"ts":1408396311000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: https://www.w3.org/Bugs/Public/show_bug.cgi?id=26533","msgtype":"m.text"},"ts":1408396318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"other than, like, the priority or whatever HTTP2 lets you chagne","msgtype":"m.text"},"ts":1408396320000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: currently Request is mostly immutable actually","msgtype":"m.text"},"ts":1408396331000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lgtm","msgtype":"m.text"},"ts":1408396339000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: so yeah, depending on the specifics of the HTML side it might all work out fine","msgtype":"m.text"},"ts":1408396354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: there were some requests to make it more mutable before the fetch happens so you could modify things in the service worker more easily","msgtype":"m.text"},"ts":1408396379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: but there's already various modes for at least the Headers object so we can always shield things off","msgtype":"m.text"},"ts":1408396395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh creating the request doesn't triger it?","msgtype":"m.text"},"ts":1408396400000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: no","msgtype":"m.text"},"ts":1408396413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1408396416000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"how do you actually trigger it?","msgtype":"m.text"},"ts":1408396420000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you pass a Request to fetch()","msgtype":"m.text"},"ts":1408396422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which returns a promise for a Response","msgtype":"m.text"},"ts":1408396431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should we be creating the Request object earlier then? for <img> and co?","msgtype":"m.text"},"ts":1408396432000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well yeah, that's the open question","msgtype":"m.text"},"ts":1408396443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but then you get into the problem of .request vs setting crossorigin","msgtype":"m.text"},"ts":1408396456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems to me like it'd be saner to only do it once you do the fetch","msgtype":"m.text"},"ts":1408396458000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I hadn't figured out a good story there","msgtype":"m.text"},"ts":1408396461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, commented on the bug","msgtype":"m.text"},"ts":1408396695000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"cool, ttyl","msgtype":"m.text"},"ts":1408396835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"later","msgtype":"m.text"},"ts":1408396918000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yt?","msgtype":"m.text"},"ts":1408398676000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: here now","msgtype":"m.text"},"ts":1408406231000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Domenic: you around?","msgtype":"m.text"},"ts":1408406315000,"senderName":"Hixie_","senderId":"Hixie_@irc"}
]