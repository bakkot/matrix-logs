[
{"content":{"body":"hello y'all","msgtype":"m.text"},"ts":1476692390000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"morning zcorpan","msgtype":"m.text"},"ts":1476692498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"did i miss anything interesting last week? :-)","msgtype":"m.text"},"ts":1476692605000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: we might almost be done with synthetic click events","msgtype":"m.text"},"ts":1476693308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: but it hasn't landed yet, so I guess you didn't miss that","msgtype":"m.text"},"ts":1476693329000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks, checking now","msgtype":"m.text"},"ts":1476693510000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://github.com/w3c/push-api/issues/211 “ We sort of assume that the browser is at some point going to start enforcing origin isolation, but never really point out the place where that happens.”","msgtype":"m.text"},"ts":1476698257000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I think https://github.com/whatwg/dom/pull/342 looks ok.  (I'm still  not too used to review spec changes though).","msgtype":"m.text"},"ts":1476704664000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"It is still a bit unclear to me why we need so much special casing there though.","msgtype":"m.text"},"ts":1476704679000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I mean when (post) default handling for click isn't really different to other default handling events. It just happens with untrusted events too","msgtype":"m.text"},"ts":1476704763000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: per spec the handling of non-click events does not happen as part of dispatch","msgtype":"m.text"},"ts":1476704826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know","msgtype":"m.text"},"ts":1476704833000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"and that is casing this special casing with click","msgtype":"m.text"},"ts":1476704844000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"causing","msgtype":"m.text"},"ts":1476704848000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I think","msgtype":"m.text"},"ts":1476704856000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1476704868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: changing the appcache stuff is feeling really pointless now","msgtype":"m.text"},"ts":1476708605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dominicc: all the default action stuff there is about showing UI","msgtype":"m.text"},"ts":1476708614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: something all UAs have removed I believe since it's rather bad","msgtype":"m.text"},"ts":1476708627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: so did we decide that click() should set composed?","msgtype":"m.text"},"ts":1476710612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: it apparently sets view as well","msgtype":"m.text"},"ts":1476710617000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure if we decided, but I think it should be composed","msgtype":"m.text"},"ts":1476710654000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JakeA: re http://logs.glob.uno/?c=freenode%23whatwg&s=13+Oct+2016&e=13+Oct+2016#c1007958 need to escape <!-- <script> also (or just any < )","msgtype":"m.text"},"ts":1476711053000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Cheers! That's what I'm doing now. It's also what the Ember people do","msgtype":"m.text"},"ts":1476711080000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: re http://logs.glob.uno/?c=freenode%23whatwg&s=12+Oct+2016&e=12+Oct+2016#c1007866 , probably https://webcompat.com/","msgtype":"m.text"},"ts":1476711683000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Merged jyasskin's open dictionaries (records).","msgtype":"m.text"},"ts":1476719215000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: \\o/","msgtype":"m.text"},"ts":1476719224000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Oooh cool","msgtype":"m.text"},"ts":1476720733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Now bikeshed / idlparser need patches and we can start fixing specs","msgtype":"m.text"},"ts":1476720771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: plz file a bug","msgtype":"m.text"},"ts":1476721269000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: I have a fever and the odds of my doing anything right now are low :P","msgtype":"m.text"},"ts":1476721279000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Sure!","msgtype":"m.text"},"ts":1476721726000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I imagine that hallucinating gsnedders will be an awesome source of code","msgtype":"m.text"},"ts":1476722561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: …","msgtype":"m.text"},"ts":1476723135000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"iank___ write the worklet spec?","msgtype":"m.text"},"ts":1476724131000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"is trying to understand https://drafts.css-houdini.org/worklets/#dom-worklet-import 6.1.2 of that algorithm","msgtype":"m.emote"},"ts":1476724173000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"oh, I see","msgtype":"m.text"},"ts":1476724617000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"this is one of the most complicated piece of spec I've seen for awhile... all this fetch taking a callback function in spec level text","msgtype":"m.text"},"ts":1476724657000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Yeah, script loading is getting rather complicated","msgtype":"m.text"},"ts":1476724773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe there's some way of refactoring it that we haven't thought about, but satisfying workers / shared workers / service workers / worklets is hard","msgtype":"m.text"},"ts":1476724809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but the idea with 'Fetch a module script tree' is that module will be loaded and any dependencies and each fetch will use the callback provided by the caller?","msgtype":"m.text"},"ts":1476725021000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: think so, Domenic would know for sure","msgtype":"m.text"},"ts":1476725073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: annevk: yep, that's the idea. The callback is optional; there is a reasonable default. But worklets need to maintain their own cache thingy.","msgtype":"m.text"},"ts":1476726392000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: why do they need to have their own cache?","msgtype":"m.text"},"ts":1476728150000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: I don't remember, but it seemed plausible at the time. iank___ will know. I guess a non-normative note in the spec explaining would be good.","msgtype":"m.text"},"ts":1476728382000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm I guess it's kind of outlined in https://drafts.css-houdini.org/worklets/#module-responses-map","msgtype":"m.text"},"ts":1476728406000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Without it the modules would be reloaded every time a worklet is re-instantiated","msgtype":"m.text"},"ts":1476728420000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: very similar to service workers in that respect","msgtype":"m.text"},"ts":1476731062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm I wonder if we could let them bring their own module map","msgtype":"m.text"},"ts":1476731507000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, hmm, we kind of already do","msgtype":"m.text"},"ts":1476731511000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If their settings object specifies a shared module map, they'd be good to go","msgtype":"m.text"},"ts":1476731520000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Filed https://github.com/w3c/css-houdini-drafts/issues/324","msgtype":"m.text"},"ts":1476731868000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"service workers actually require the hook, e.g. to set the skip service worker flag, redirect mode to error, and so on.","msgtype":"m.text"},"ts":1476731936000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"for fetching urls that redirect (say site.com/docs/ which 302 redirects to site.com/docs/v1.2.3) the fetch will by default follow but that means the page that loads is site.com/docs/ and it doesn't redirect to site.com/docs/v2.1.3) if I set the fetch to \"manual\" I can't see where the request was redirected to so I can't replace it with a Response.redirect(). Is there a way to have a fetch redirect without getting the full redirected response (comparing","msgtype":"m.text"},"ts":1476734493000,"senderName":"jdalton","senderId":"jdalton@irc"},
{"content":{"body":" the uri to fetch vs the response.url and then replacing with a redirect) ?","msgtype":"m.text"},"ts":1476734493000,"senderName":"jdalton","senderId":"jdalton@irc"},
{"content":{"body":"hey there! is there any sensible way to figure out who added a particular section the the spec, since blame via github isn't really an option?","msgtype":"m.text"},"ts":1476737333000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"},
{"content":{"body":"Command-line blame?","msgtype":"m.text"},"ts":1476737431000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"sure, but that would require cloning the repo","msgtype":"m.text"},"ts":1476737476000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"},
{"content":{"body":"particularly I'm looking for insight on https://html.spec.whatwg.org/multipage/interaction.html#focusing-steps - namely if <body> is considered a focusable area","msgtype":"m.text"},"ts":1476737515000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"},
{"content":{"body":"Domenic & smaug the basic idea is that a user agent can create and destroy worklet global scopes at any time.  But when we do so we want them to be \"consistent\" with the other contexts. I.e. they have had exactly the same script run in them.","msgtype":"m.text"},"ts":1476738097000,"senderName":"iank___","senderId":"iank___@irc"},
{"content":{"body":"iank___: and the stays alive forever?","msgtype":"m.text"},"ts":1476738126000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"cache","msgtype":"m.text"},"ts":1476738130000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"the cache","msgtype":"m.text"},"ts":1476738134000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"for the lifetime of the page at least.","msgtype":"m.text"},"ts":1476738162000,"senderName":"iank___","senderId":"iank___@irc"},
{"content":{"body":"you only really need it if you are planning on killing the contexts or creating new ones at some arbitrary point.","msgtype":"m.text"},"ts":1476738203000,"senderName":"iank___","senderId":"iank___@irc"},
{"content":{"body":"rodneyrehm: just clone the repo man, it's a great excuse to go do something else while git is churning :)","msgtype":"m.text"},"ts":1476738208000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"It doesn't even take that long, really. ^_^","msgtype":"m.text"},"ts":1476738267000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"darobin: cloning at 29% ~70KBit/s (Hotel WiFi), while watching Madam Secretary ;)","msgtype":"m.text"},"ts":1476738287000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"},
{"content":{"body":"TabAtkins: it can if your network isn't all that great","msgtype":"m.text"},"ts":1476738325000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"rodneyrehm: enjoy!","msgtype":"m.text"},"ts":1476738328000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Yeah, 70kbps is, uh, not exactly great.","msgtype":"m.text"},"ts":1476738339000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the only thing missing here is modem dial-up sounds ;)","msgtype":"m.text"},"ts":1476738502000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"},
{"content":{"body":"did you do a shallow clone? That helps a lot.","msgtype":"m.text"},"ts":1476738892000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"unless that's the default, no. googling shallow clone now ;)","msgtype":"m.text"},"ts":1476738977000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"},
{"content":{"body":"Not for blame though?","msgtype":"m.text"},"ts":1476738988000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Unless git caches that information in some way I am unaware of","msgtype":"m.text"},"ts":1476739000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh right lol","msgtype":"m.text"},"ts":1476739042000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that would in fact defeat the purpose","msgtype":"m.text"},"ts":1476739047000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"good to know `--depth 1` anyway :)","msgtype":"m.text"},"ts":1476739072000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"},
{"content":{"body":"ok, so that probably could've gone quicker… https://github.com/whatwg/html/commit/f96b1997 is the commit I was looking for","msgtype":"m.text"},"ts":1476741925000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"},
{"content":{"body":"but now you're equipped for future spelunking!","msgtype":"m.text"},"ts":1476742667000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"terinjokes: \\o/","msgtype":"m.text"},"ts":1476743666000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"your original whatwg/console issue #3 to make web developers lives better has now almost-fully percolated into the ecosystem :D. Only Edge is the holdout.","msgtype":"m.text"},"ts":1476743698000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1476744324000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"TabAtkins: does this index seem correct to you? The duplicate (data), (data...) seems strange to me... https://console.spec.whatwg.org/#index-defined-here","msgtype":"m.text"},"ts":1476744510000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think something about the \"...data\" is confusing it.","msgtype":"m.text"},"ts":1476744624000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's not a valid signature, so something's going a little bit wonky and generating two `lt` values, one with \"data...\" and one with \"data\". Dunno what the first is about.","msgtype":"m.text"},"ts":1476744675000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In the middle of some complex edits, so will load that up in a bit; please file an issue so I don't forget.","msgtype":"m.text"},"ts":1476744791000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"OK cool","msgtype":"m.text"},"ts":1476744924000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: I forgot how to make a <h4> that is also a definition. <h4 id=\"clear\" method for=\"console\">clear()</h4> isn't working. Halp?","msgtype":"m.text"},"ts":1476745211000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: dfn-type","msgtype":"m.text"},"ts":1476745329000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I mean, you probably have to use dfn-type=\"method\" instead of just method.","msgtype":"m.text"},"ts":1476745353000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"that did it; thanks!","msgtype":"m.text"},"ts":1476745405000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You really shouldn't have to do that, tho - I'm staring at that code right now.","msgtype":"m.text"},"ts":1476745434000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It explicitly looks for <dfn> or <hN>, then checks them for attributes with the dfn-type names, and sets data-dfn-type appropriately.","msgtype":"m.text"},"ts":1476745476000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: What's the outerHTML you get from the earlier code?","msgtype":"m.text"},"ts":1476745499000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: outerHTML looks correct, but the Web IDL autolinker couldn't find it","msgtype":"m.text"},"ts":1476745551000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Wait, no, it can","msgtype":"m.text"},"ts":1476745570000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I must have messed something else up","msgtype":"m.text"},"ts":1476745578000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Heh, kk, phew.","msgtype":"m.text"},"ts":1476745589000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic, annevk: I just pushed what *should* just be an internal rename, affecting only internal stuff and error messages, but if you suddenly get link failures or new messages about statuses, let me know.","msgtype":"m.text"},"ts":1476747671000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I switched internal terminology from referring to specs/links as \"ED\" or \"TR\" to instead be \"current\" and \"snapshot\".)","msgtype":"m.text"},"ts":1476747696000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Good to know!","msgtype":"m.text"},"ts":1476747801000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"No tests changed, so fingers crossed that nothing changes in production either.","msgtype":"m.text"},"ts":1476747824000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's the dream :D","msgtype":"m.text"},"ts":1476748086000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Okay, now that that yak's shaved, time to figure out wtf I'm doing defaulting the requested ref status to the spec's status and not letting link-defaults override that. >_<","msgtype":"m.text"},"ts":1476748252000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this sounds relevant to my interests","msgtype":"m.text"},"ts":1476748495000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Probably not - you only work with current-status specs anyway. But it fucks with people trying to prefer a snapshot link while publishing a current spec.","msgtype":"m.text"},"ts":1476748573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: fyi, there's another PR for custom elements testing: https://github.com/w3c/web-platform-tests/pull/3968","msgtype":"m.text"},"ts":1476748591000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"But sure, I'm trying to untangle this spaghetti-code mess of an autolinker.","msgtype":"m.text"},"ts":1476748597000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So it'll eventually be relevant to your interests.","msgtype":"m.text"},"ts":1476748608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well I was hoping it would fix issues like https://github.com/tabatkins/bikeshed/issues/837","msgtype":"m.text"},"ts":1476748618000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Probably not!","msgtype":"m.text"},"ts":1476748634000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"qq","msgtype":"m.text"},"ts":1476748672000,"senderName":"Domenic","senderId":"Domenic@irc"}
]