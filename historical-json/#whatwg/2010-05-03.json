[
{"content":{"body":" I have strings of numbers that I must match against patterns. The patterns are represented as nested lists of numbers.","msgtype":"m.text"},"ts":1272856140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" Each list of which requires one, zero or more, or one or more numbers to be matched from a set of numbers, either in sequence or in any order depending on the list.","msgtype":"m.text"},"ts":1272856141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" So for example, a pattern could be \"sequence(1, one-of(2, sequence(20, 21)), zero-or-one-of(3, 4), one-or-more-of(5, 6, one-of(7, 8), 9)\".","msgtype":"m.text"},"ts":1272856142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" The sequence 1,2,4,8,9 would match it, as would 1,20,21,5,6,7,9, but 1,2,7,8,9 would not, and nor would 1,20,3,4,9.","msgtype":"m.text"},"ts":1272856143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" The question is, what's a good way to represent these patterns in memory that is both fast to evaluate and reasonably memory efficient?","msgtype":"m.text"},"ts":1272856144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The quickest way to evaluate them seems to be to compute every match and then form a state machine tree to walk down, but that is pathalogical in some common cases.","msgtype":"m.text"},"ts":1272856145000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"For example one-or-more-of(one-or-more-of(1,2,3),one-or-more-of(4,5,6),one-or-more-of(7,8,9)) has 495 permutations if I worked it right.","msgtype":"m.text"},"ts":1272856146000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I tried looking up things like \"how to compile regular expressions\" but it's all about how to use them, not how to compile them.","msgtype":"m.text"},"ts":1272856147000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe just keep a set of positions within your tree","msgtype":"m.text"},"ts":1272857280000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and scan the input updating that set after each number","msgtype":"m.text"},"ts":1272857281000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"depending on your workload, you could compile it to a nondeterministic finite state machine and minimize the number of states using standard algorithms, but that adds quite a lot of complexity and may not perform any better","msgtype":"m.text"},"ts":1272857460000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1272857700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1272857760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, did you come across Russ Cox's articles on compiling regular expressions?","msgtype":"m.text"},"ts":1272857880000,"senderName":"doublec","senderId":"doublec@irc"},
{"content":{"body":"eg: http://swtch.com/~rsc/regexp/regexp3.html","msgtype":"m.text"},"ts":1272857881000,"senderName":"doublec","senderId":"doublec@irc"},
{"content":{"body":"i did not, will read, thanks","msgtype":"m.text"},"ts":1272857882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: isn't that effectively a regular expression?","msgtype":"m.text"},"ts":1272858720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1272858721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm pretty sure your language is a regular language","msgtype":"m.text"},"ts":1272858722000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hence my looking up stuff on compiling regexps","msgtype":"m.text"},"ts":1272858723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in which case, my suggestion would be to express the problem in a form in which you can use an out-of-the-box regexp engine","msgtype":"m.text"},"ts":1272858724000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"doublec's url got me something more useful though","msgtype":"m.text"},"ts":1272858725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, that might be a good idea","msgtype":"m.text"},"ts":1272858726000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"part of the goal here is to learn more about how to write this kind of thing, though","msgtype":"m.text"},"ts":1272858780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you really want to hand-code something, a DFA would be most efficient for matching","msgtype":"m.text"},"ts":1272858781000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1272858782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though it could be costly to compute up front","msgtype":"m.text"},"ts":1272858783000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I've seen implementations that do lazy NFA-to-DFA conversion, but that is complicated","msgtype":"m.text"},"ts":1272858784000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in this case, that's turns out to not be an issue","msgtype":"m.text"},"ts":1272858785000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since the compilation step is far removed from the matching step","msgtype":"m.text"},"ts":1272858840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and only the latter is time-sensitie","msgtype":"m.text"},"ts":1272858841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ve","msgtype":"m.text"},"ts":1272858842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a DFA would be faster to match against than an NFA","msgtype":"m.text"},"ts":1272858843000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"you don't have to compute every match to make a state machine","msgtype":"m.text"},"ts":1272858960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1272858961000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"the only other thing you have to worry about is DFA size explosion","msgtype":"m.text"},"ts":1272858962000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"(otherwise you'd have a hell of a time compiling any regexp that uses the * operator)","msgtype":"m.text"},"ts":1272859020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the case i'm having the most trouble with when converting this to a state machine is the \"zero or more of the following, in any order: ...\" expression","msgtype":"m.text"},"ts":1272859320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(which i notice regular expressions don't really support)","msgtype":"m.text"},"ts":1272859321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(but which is quite important for my application)","msgtype":"m.text"},"ts":1272859322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't that just (A | B | C | D)* ?","msgtype":"m.text"},"ts":1272859380000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"sorry, i forgot to clarify: no duplicates","msgtype":"m.text"},"ts":1272859381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah right","msgtype":"m.text"},"ts":1272859382000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"in my original approach earlier today i was considering just mutating my state machine as i walked it","msgtype":"m.text"},"ts":1272859440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that doesn't work so well with either the back-tracking or \"following all states at once\" approaches","msgtype":"m.text"},"ts":1272859441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah you need 2^N states for that","msgtype":"m.text"},"ts":1272859500000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so a DFA is not going to work too well if you have more than a small number of alternatives","msgtype":"m.text"},"ts":1272859501000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yeah, that's been my conclusion too","msgtype":"m.text"},"ts":1272859502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zero or more with no duplicates shouldn't require 2^N states","msgtype":"m.text"},"ts":1272859740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it would be O(N^2) states","msgtype":"m.text"},"ts":1272859741000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"my N will be around 10 for many of these patterns","msgtype":"m.text"},"ts":1272859860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and many patterns will have several of these and/or nest them","msgtype":"m.text"},"ts":1272859861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"10^2 is not that big","msgtype":"m.text"},"ts":1272859920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"actually I guess I am oversimplifying things, since it's variable length, the number of states depends on the following operator","msgtype":"m.text"},"ts":1272860040000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in an NFA it would be O(N^2) for sure","msgtype":"m.text"},"ts":1272860041000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm confused","msgtype":"m.text"},"ts":1272860280000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"if you have N possible objects and you have to avoid duplicates, then at any given point in matching a string, you have to remember which subset of the N objects you have seen so far","msgtype":"m.text"},"ts":1272860340000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that's 2^N states","msgtype":"m.text"},"ts":1272860341000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"for a DFA","msgtype":"m.text"},"ts":1272860342000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"for zero-or-more (no duplicates) and N=3, i count 10 states","msgtype":"m.text"},"ts":1272861000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(not counting the terminal state)","msgtype":"m.text"},"ts":1272861001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for N=2 i count 3 states","msgtype":"m.text"},"ts":1272861060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"N=3 is just three N=2s with a state on the front","msgtype":"m.text"},"ts":1272861120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"assuming N=4 is four N=3s with a state on the front, that'd be 41 states for N=4","msgtype":"m.text"},"ts":1272861180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(this is for an NFA, obviously, since I'm ignoring whatever comes next)","msgtype":"m.text"},"ts":1272861240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(so one of the transitions at each state is to just move on to the next part of the NFA)","msgtype":"m.text"},"ts":1272861241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.research.att.com/~njas/sequences/A002627","msgtype":"m.text"},"ts":1272861420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that list gets way out of hand far too quickly","msgtype":"m.text"},"ts":1272861540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"N=8 -> 69281 states","msgtype":"m.text"},"ts":1272861541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"N=13, which is plausible for my application, would have 10699776686 states","msgtype":"m.text"},"ts":1272861542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what i need is a kind of NFA where i synthesis new states as i am walking it","msgtype":"m.text"},"ts":1272861720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that might work","msgtype":"m.text"},"ts":1272861721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes...","msgtype":"m.text"},"ts":1272862440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: How fast does this have to be?  Shouldn't be too hard to make an actual greedy backtracer out of what you've got.","msgtype":"m.text"},"ts":1272862441000,"senderName":"TabAtkins__","senderId":"TabAtkins__@irc"},
{"content":{"body":"well i have to convert it to a serialisable form anyway, might as well convert it to a state machine while i'm atit","msgtype":"m.text"},"ts":1272862560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Seems easier to just serialize something like you have above, and package it with your matcher.","msgtype":"m.text"},"ts":1272862561000,"senderName":"TabAtkins__","senderId":"TabAtkins__@irc"},
{"content":{"body":"*shrug*","msgtype":"m.text"},"ts":1272862562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just for fun","msgtype":"m.text"},"ts":1272862620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"All right.  I think that actually serializing it as a state machine won't be fun, though.  ^_^","msgtype":"m.text"},"ts":1272862680000,"senderName":"TabAtkins__","senderId":"TabAtkins__@irc"},
{"content":{"body":"But writing a matcher could be.","msgtype":"m.text"},"ts":1272862681000,"senderName":"TabAtkins__","senderId":"TabAtkins__@irc"},
{"content":{"body":"writing a state machine would be near-trivial if it wasn't for this particularly weird case","msgtype":"m.text"},"ts":1272862740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Wait a minute, the specs are written in html4.01","msgtype":"m.text"},"ts":1272868860000,"senderName":"theMadness","senderId":"theMadness@irc"},
{"content":{"body":" hi, is there a way to get canvas fallback working when JS is disable in Firefox ?","msgtype":"m.text"},"ts":1272869220000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"theMadness: Yeah, w3c doesn't yet allow their specs to be written in HTML5, and it's too much effort to write the WHATWG version in HTML5 and down-convert to HTML4 for the w3c version.","msgtype":"m.text"},"ts":1272871440000,"senderName":"TabAtkins___","senderId":"TabAtkins___@irc"},
{"content":{"body":"any tutorial explaining how to add link to a canvas text ?","msgtype":"m.text"},"ts":1272872700000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"TabAtkins__: actually the whatwg one is written in HTML5 and I have a script to down-convert it to HTML4 for the W3C","msgtype":"m.text"},"ts":1272873180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it takes out some of the examples that use HTML5","msgtype":"m.text"},"ts":1272873181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hm. I thought I'd heard you saying the opposite.  Shrug.","msgtype":"m.text"},"ts":1272873182000,"senderName":"TabAtkins__","senderId":"TabAtkins__@irc"},
{"content":{"body":"Hixie: I've finally got the draft75 websocket server working in node, and it's written in a way to also be able to easily work with draft76","msgtype":"m.text"},"ts":1272873240000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"(it's just a matter of sorting out the handshaking code)","msgtype":"m.text"},"ts":1272873241000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"Hixie: is draft76 going to become draft76 on the ieft site?","msgtype":"m.text"},"ts":1272873360000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"micheil: the ietf asked me to stop sending them updates because they couldn't cope with the volume of updates, so no idea","msgtype":"m.text"},"ts":1272873900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as far as i'm concerned, -75 is long dead","msgtype":"m.text"},"ts":1272873901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, righteo","msgtype":"m.text"},"ts":1272873902000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"if i'd still been sending updates, -76 would actually be like -90 or so by now","msgtype":"m.text"},"ts":1272873903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, -75 is still the one supported by chrome (and other clients), so it's the one I must have work","msgtype":"m.text"},"ts":1272873904000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"is there a way to see the changes made to the spec (like a git diff)","msgtype":"m.text"},"ts":1272873960000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"svn diffs of all the changes made to the whatwg specs are at http://html5.org/tools/web-apps-tracker","msgtype":"m.text"},"ts":1272873961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's no per-section breakdown","msgtype":"m.text"},"ts":1272874020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's just three sources to read the spec, so it sometimes gets confusing as to which one to conform to","msgtype":"m.text"},"ts":1272874021000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"well right now it's too early to be doing anything but experimental work, so it's not a big deal","msgtype":"m.text"},"ts":1272874022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, true, although, I'd like to be able to make my websocket server ready for when we do see a final version of the spec","msgtype":"m.text"},"ts":1272874080000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"in node, we've just added in support for things like http upgrade, so that when a client requests an upgrade (eg a websocket server), it can be handled appropriately, while still allowing a http server to function normally","msgtype":"m.text"},"ts":1272874200000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"http://www.w3.org/Bugs/Public/show_bug.cgi?id=8979 interesting WONTFIX","msgtype":"m.text"},"ts":1272874320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hi","msgtype":"m.text"},"ts":1272874500000,"senderName":"Traveler","senderId":"Traveler@irc"},
{"content":{"body":"Is there anything is the spec that disassociates form-associated elements from their forms when the form-associated elements are re-inserted into a document?","msgtype":"m.text"},"ts":1272877080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in particular, when the fragment created by the fragment parsing algorithm is inserted by the innerHTML setter","msgtype":"m.text"},"ts":1272877081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1272877140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this? http://www.whatwg.org/specs/web-apps/current-work/#dfnReturnLink-11","msgtype":"m.text"},"ts":1272877141000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"When a form-associated element's ancestor chain changes, e.g. because it or one of its ancestors was inserted or removed from a Document, then the user agent must reset the form owner of that element.\"","msgtype":"m.text"},"ts":1272877142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(dfnReturnLink are dynamic and not portable)","msgtype":"m.text"},"ts":1272877200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok. thanks","msgtype":"m.text"},"ts":1272877201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"see http://www.whatwg.org/specs/web-apps/current-work/complete.html#concept-form-association","msgtype":"m.text"},"ts":1272877202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's various other conditions that reset it","msgtype":"m.text"},"ts":1272877203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"next question: can the parser-created associations ever be observed in the fragment case? Maybe when createContextualFragement has been called but the fragment hasn't been inserted?","msgtype":"m.text"},"ts":1272877260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder if the parser-created associations should simply be turned off in the fragment case","msgtype":"m.text"},"ts":1272877320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"unless i made a pretty serious mistake, there's no way to observe innerHTML until after it's in the document","msgtype":"m.text"},"ts":1272877321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"createContextualFragment in anyone's spec yet?","msgtype":"m.text"},"ts":1272877380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that is, who should I bother about it?","msgtype":"m.text"},"ts":1272877381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what's createContextualFragment?","msgtype":"m.text"},"ts":1272877382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's a Mozilla/Netscape ad hoc API that got cloned by WebKit and (IIRC) Presto","msgtype":"m.text"},"ts":1272877440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh jeez","msgtype":"m.text"},"ts":1272877441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2009-March/018892.html","msgtype":"m.text"},"ts":1272877442000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"will you people stop making up new apis and implementing them widely","msgtype":"m.text"},"ts":1272877443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have enough trouble keeping track of the ones _i_ make up","msgtype":"m.text"},"ts":1272877444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, it's on DOMRange","msgtype":"m.text"},"ts":1272877445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1272877446000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well i expect i'll have to spec that one day","msgtype":"m.text"},"ts":1272877447000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but not any time soon","msgtype":"m.text"},"ts":1272877448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm. can a form be submitted if it hasn't been inserted into a document?","msgtype":"m.text"},"ts":1272877500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and if it can, do people do it?","msgtype":"m.text"},"ts":1272877501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"dunno, see the spec","msgtype":"m.text"},"ts":1272877502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what does it say?","msgtype":"m.text"},"ts":1272877503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't work if there's no associated browsing context","msgtype":"m.text"},"ts":1272877560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: in all browsers?","msgtype":"m.text"},"ts":1272877620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so yes?","msgtype":"m.text"},"ts":1272877621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but a fragment that hasn't been inserted still has an associated document which has a browsing context","msgtype":"m.text"},"ts":1272877622000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: looks like it can be submitted per spec","msgtype":"m.text"},"ts":1272877623000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1272877624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"makes sense i guess","msgtype":"m.text"},"ts":1272877625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which means that it theory there can be someone somewhere calling createContextualFragment with a malformed form and calling .submit() on it","msgtype":"m.text"},"ts":1272877680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/it/in/","msgtype":"m.text"},"ts":1272877681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"when i spec createContextFragment, it'll still be \"inserted into a document\"","msgtype":"m.text"},"ts":1272877682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I don't follow. Surely the fragment has an owner document but it's not inserted","msgtype":"m.text"},"ts":1272877740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"inserted into a document\" doesn't mean what it sounds like","msgtype":"m.text"},"ts":1272877800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's named that way because in most cases that's what happens","msgtype":"m.text"},"ts":1272877801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm actually i'm wrong","msgtype":"m.text"},"ts":1272877802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nevermind","msgtype":"m.text"},"ts":1272877803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i was thinking of xbl","msgtype":"m.text"},"ts":1272877804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think the spec for form controls should be changed to just refer to the home subtree changing","msgtype":"m.text"},"ts":1272877860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or something","msgtype":"m.text"},"ts":1272877861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i've not really paged any of this stuff in","msgtype":"m.text"},"ts":1272877862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i could be talking nonsense","msgtype":"m.text"},"ts":1272877863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"shepazu: any news on the SVG load event?","msgtype":"m.text"},"ts":1272878580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"how am I supposed to add link to a <canvas> ?","msgtype":"m.text"},"ts":1272878640000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"shepazu: I just realized that one thing to consider is whether to fire the SVG load event when <svg> is parsed in an innerHTML setter","msgtype":"m.text"},"ts":1272878641000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"how am I supposed to add link to a <canvas> ?","msgtype":"m.text"},"ts":1272879540000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"jstar-taiwan: use an onclick handler","msgtype":"m.text"},"ts":1272879660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, there is no native way to do this o_O ?","msgtype":"m.text"},"ts":1272879661000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"no, intentionally","msgtype":"m.text"},"ts":1272879900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jstar-taiwan: Note also http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#focus-management-0","msgtype":"m.text"},"ts":1272879901000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"if you want to have interactive graphics, use svg","msgtype":"m.text"},"ts":1272879902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or html","msgtype":"m.text"},"ts":1272879903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<canvas> is meant for scripted graphics","msgtype":"m.text"},"ts":1272879904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, but SVG is not supported correctly","msgtype":"m.text"},"ts":1272879905000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"jstar-taiwan: Where?","msgtype":"m.text"},"ts":1272879960000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben, IE","msgtype":"m.text"},"ts":1272879961000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"IE doesn't do canvas either","msgtype":"m.text"},"ts":1272879962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jstar-taiwan: http://code.google.com/p/svgweb/","msgtype":"m.text"},"ts":1272879963000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"I understand there is way to get SVG or other w3c standards to work on IE, but it's not native","msgtype":"m.text"},"ts":1272880140000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"IE doesn't support <canvas> either","msgtype":"m.text"},"ts":1272880141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Uh, my mail made it through to www-style.","msgtype":"m.text"},"ts":1272880320000,"senderName":"theMadness","senderId":"theMadness@irc"},
{"content":{"body":"Hixie, oh~ indeed I thought that IE8 add already a bit of support for it (i'm on linux)","msgtype":"m.text"},"ts":1272880380000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"Nope.","msgtype":"m.text"},"ts":1272880381000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"jstar-taiwan: Both svgweb and excanvas fake IE support with VML.","msgtype":"m.text"},"ts":1272880440000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: doesn't svgweb use Flash?","msgtype":"m.text"},"ts":1272880441000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh, yeah, sorry","msgtype":"m.text"},"ts":1272880500000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben, Hixie does inline SVG work on IE8 ??","msgtype":"m.text"},"ts":1272880560000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1272880561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SVG and canvas only work in firefox, webkit browsers, and opera","msgtype":"m.text"},"ts":1272880562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the ie9 preview has partial support for svg but no canvas","msgtype":"m.text"},"ts":1272880620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i speculate that some future ie9 preview will also have partial support for canvas","msgtype":"m.text"},"ts":1272880621000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Which is weird considering all the effort they are putting into making it a sort of directx thingie.","msgtype":"m.text"},"ts":1272880622000,"senderName":"theMadness","senderId":"theMadness@irc"},
{"content":{"body":"and considering canvas is a lot easier to implement","msgtype":"m.text"},"ts":1272880680000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"argh~ why do IE team take so much time to implement basic ~.~","msgtype":"m.text"},"ts":1272880800000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"anyway do you have a sample on how to add links to a <canvas> ?","msgtype":"m.text"},"ts":1272880860000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"if you're needing to add links to canvas you're almost certainly misusing canvas","msgtype":"m.text"},"ts":1272880920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm willing to provide an alternative to a  flash diagram","msgtype":"m.text"},"ts":1272880980000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"why not use svg?","msgtype":"m.text"},"ts":1272881040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, it's a kind of pie chart with label which display text when clicked","msgtype":"m.text"},"ts":1272881041000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"jstar-taiwan: svg works for that use case better","msgtype":"m.text"},"ts":1272881100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wanted to try <canvas> and thought it was better supported","msgtype":"m.text"},"ts":1272881101000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"canvas is more of a buzzword than svg, but for almost all non-game use cases svg is more appropriate","msgtype":"m.text"},"ts":1272881220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeap I tried it to know a bit more and it seem to bit another blob technology","msgtype":"m.text"},"ts":1272881460000,"senderName":"jstar-taiwan","senderId":"jstar-taiwan@irc"},
{"content":{"body":"hsivonen: I'm pretty sure I have written code that depends on submitting non-inserted forms","msgtype":"m.text"},"ts":1272881520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(unless it doesn't work in which case I haven't, obviously)","msgtype":"m.text"},"ts":1272881521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonder why http://software.hixie.ch/utilities/js/live-dom-viewer/saved/471 throws in opera","msgtype":"m.text"},"ts":1272881640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"also throws in firefox","msgtype":"m.text"},"ts":1272881700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"seems annoying to have to create a new event and copy all properties","msgtype":"m.text"},"ts":1272881820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: did you also use createContextualFragment with a malformed form?","msgtype":"m.text"},"ts":1272881940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"of course he did","msgtype":"m.text"},"ts":1272882000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and he put it in a library that was reused all over the place","msgtype":"m.text"},"ts":1272882001000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: No :p","msgtype":"m.text"},"ts":1272882060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: good :-)","msgtype":"m.text"},"ts":1272882061000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"still doesn't know what createContextualFragment does","msgtype":"m.emote"},"ts":1272882062000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I would say that prevents me from using it but the web is empirical evidence against that line of thought","msgtype":"m.text"},"ts":1272882120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it invokes the fragment parsing algorithm with a context node and a string to parse and returns a DocumentFragment","msgtype":"m.text"},"ts":1272882121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: it's like an innerHTML setter that gives you the fragment","msgtype":"m.text"},"ts":1272882122000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Doesn't it work to createElement a context element .innerHTML it and read the children?","msgtype":"m.text"},"ts":1272882180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Might not be such a clean API though","msgtype":"m.text"},"ts":1272882181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: createContextualFragment predates innerHTML in Gecko, IIRC","msgtype":"m.text"},"ts":1272882182000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: from the era when IEism were bad but creating own vendor-specific ad hoc APIs was OK","msgtype":"m.text"},"ts":1272882240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*IEisms","msgtype":"m.text"},"ts":1272882241000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1272882242000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'd have to reread the CVS logs, but IIRC the use case was something in Netscape Composer and the API was exposed to the Web as a side effect","msgtype":"m.text"},"ts":1272882360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"how disappointing, i thought the wine IE in crossover would use trident, but it uses gecko 1.8","msgtype":"m.text"},"ts":1272882480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"does ie throw if you click the border in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/471 ?","msgtype":"m.text"},"ts":1272882481000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh ie doesn't have dispatchEvent at all","msgtype":"m.text"},"ts":1272883020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The Key Points slide at http://www.robglidden.com/2009/09/how-to-fix-dtv-patent-pools/ is interesting","msgtype":"m.text"},"ts":1272887280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"looks like the TV people aren't too happy about MPEG encumberances, either","msgtype":"m.text"},"ts":1272887281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Rob Glidden sounds like an interesting person","msgtype":"m.text"},"ts":1272887520000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hmm. the fake Gtk menus in Opera 10.52 have the ancient bug that prevents diagonal mouse movement to a submenu","msgtype":"m.text"},"ts":1272888060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for Firefox and Chrome get this right in their fake Gtk menus","msgtype":"m.text"},"ts":1272888120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/for/both/","msgtype":"m.text"},"ts":1272888121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"doesn't Chrome use real Gtk menus?","msgtype":"m.text"},"ts":1272888180000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: possibly. I thought it used fake Gtk stuff, because the other controls don't look right at all and the title bar is in the uncanny valley","msgtype":"m.text"},"ts":1272888480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(specifically, the buttons in the title bar)","msgtype":"m.text"},"ts":1272888481000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, that's not really surprising. The fake UI approach causes problems on many platforms, but is unfortunately how things are being done for cross platform development.","msgtype":"m.text"},"ts":1272888600000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I've unsuccessfully argued against the fake UI approach before","msgtype":"m.text"},"ts":1272888660000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"the thing about browsers is that they have to go for the fake UI approach for Web content","msgtype":"m.text"},"ts":1272888720000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"looks like OO.o has the same bug","msgtype":"m.text"},"ts":1272888721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so given you have to tackle a lot of the hard fake UI problems anyway, it makes it that much more attractive for your actual browser UI","msgtype":"m.text"},"ts":1272888722000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, yes, for web content, fake UI is essential. But for browser chrome, I believe that only native UI will give optimal results.","msgtype":"m.text"},"ts":1272888780000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1272888781000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Lachy: It's better for the chrome to be consistent with the desktop than to be consistent with the browser content?","msgtype":"m.text"},"ts":1272888840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"another thing is that on Windows and X, the toolkits that give you \"real UI\" are pretty lame","msgtype":"m.text"},"ts":1272888841000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I guess people who don't use any applications other than their browser would prefer the latter","msgtype":"m.text"},"ts":1272888900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"there are a whole bunch of Mac bugs in both Firefox and Opera that seem to be caused by the fake UI, especially in the nightly builds.","msgtype":"m.text"},"ts":1272888901000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"at least, the ones you can access from C/C++","msgtype":"m.text"},"ts":1272888902000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"e.g. After having the browser open for a while, it becomes impossible to resize the window or to click and drag the window from any area of the chrome overlayed with the fake UI.","msgtype":"m.text"},"ts":1272888960000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I haven't seen that one","msgtype":"m.text"},"ts":1272889020000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: Just recompile Gecko in C++/CLI and then use WPF","msgtype":"m.text"},"ts":1272889080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"drop down, auto complete menus (e.g. address bar, search box, text fields) can start to only appear in a fixed position, and moving the window leaves them in place","msgtype":"m.text"},"ts":1272889081000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"those 2 bugs require browser restarts to fix","msgtype":"m.text"},"ts":1272889082000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Philip`: ho ho ho","msgtype":"m.text"},"ts":1272889083000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"they happen all the time on Snow Leopard","msgtype":"m.text"},"ts":1272889084000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I've seen that one","msgtype":"m.text"},"ts":1272889085000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"but dropdowns are an example where using \"real UI\" is super-problematic in Web content","msgtype":"m.text"},"ts":1272889086000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Safari's \"real UI\" version of dropdowns is quite unusable for Web content with a large number of options","msgtype":"m.text"},"ts":1272889140000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, they usually occur at the same time. So when you see the drop downs appear in the wrong place, try resizing the window or moving the window by dragging on status bar.","msgtype":"m.text"},"ts":1272889141000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"the checkboxes in fake Gtk menus in Opera look wrong, too","msgtype":"m.text"},"ts":1272889200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder how the Opera 10.52 fake Gtk widgets are drawn","msgtype":"m.text"},"ts":1272889260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, please file bugs about those issues","msgtype":"m.text"},"ts":1272889261000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"the pref window in Chrome looks like real Gtk","msgtype":"m.text"},"ts":1272889320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but the same window on Chrome OS looks generally terrible and Windows 95esque","msgtype":"m.text"},"ts":1272889321000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder how the Chrome pref window is implemented","msgtype":"m.text"},"ts":1272889380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"When content loads in an iframe, after any load events are fired within the content itself, the user agent must queue a task to fire a simple event named load at the iframe element.\"","msgtype":"m.text"},"ts":1272892800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What does it mean for content to load in an iframe?","msgtype":"m.text"},"ts":1272892801000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I presume any URL change apart from a same-document reference will cause content  to load","msgtype":"m.text"},"ts":1272892860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"If you set location.href with a fragment reference, should it be done sync or async (esp. wrt reading back the URI from script)?","msgtype":"m.text"},"ts":1272893460000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"IEBlog is really hit-and-miss, isn't it?  The last post was very informative.","msgtype":"m.text"},"ts":1272901860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I was particularly interested by: \"Microsoft receives back from MPEG-LA less than half the amount for the patent rights that it contributes because there are many other companies that provide the licensed functionality in content and products that sell in high volume. Microsoft pledged its patent rights to this neutral organization in order to make its rights broadly available under clear terms, not because it thought this might be a good rev","msgtype":"m.text"},"ts":1272901861000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"enue stream. We do not foresee this patent pool ever producing a material revenue stream, and revenue plays no part in our decision here. \"","msgtype":"m.text"},"ts":1272901862000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess my working theory at this point is that Microsoft and Apple are probably just following the advice of their lawyers, as they claim, not engaging in some corporate strategy.  Maybe Google supports Theora because Google is still ambitious and risk-taking at this point, and hasn't yet lapsed into megacorporate conservatism despite its size.","msgtype":"m.text"},"ts":1272902040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"We do try, AryehGregor.","msgtype":"m.text"},"ts":1272902100000,"senderName":"tabatkins","senderId":"tabatkins@irc"},
{"content":{"body":"AryehGregor: I don't think the \"they're making vast profits off the patent licensing\" theory was ever the most credible one for possible corporate strategy reasons for wanting MPEG-LA to win","msgtype":"m.text"},"ts":1272902220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What's more credible?  That open-source can't pay the fees?  Open-source projects are either backed by a company, which can pay the fees; or aren't, in which case they make no money and MPEG-LA doesn't care.","msgtype":"m.text"},"ts":1272902221000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"s/open-source/open source/","msgtype":"m.text"},"ts":1272902280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Small players in general (and new entrants to the market) can't pay the fees","msgtype":"m.text"},"ts":1272902281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I thought they were scaled somewhat reasonably.  Surely it's not in MPEG-LA's interest to discourage anyone from licensing?","msgtype":"m.text"},"ts":1272902282000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's obviously easier for big companies due to the cap, of course.","msgtype":"m.text"},"ts":1272902340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i dont really understand why browsers dont just use whatever codecs are on the system?  or do they, and its just a matter of how the browser supplements the codec collection?","msgtype":"m.text"},"ts":1272902341000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"Plus it is a real problem for open source becuase it menas that they have to distribute non-open-source components","msgtype":"m.text"},"ts":1272902342000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What do you mean?  There are open-source implementations of H.264, no?  Chrome uses ffmpeg, for example.","msgtype":"m.text"},"ts":1272902343000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: My understanding is that any web browser would effectively have to pay the same amount","msgtype":"m.text"},"ts":1272902344000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rektide: see roc's blog and roc's comment on the IE blog","msgtype":"m.text"},"ts":1272902400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Although that is not based on anything much","msgtype":"m.text"},"ts":1272902401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, maybe with a web browser you'd hit the cap very quickly . . .","msgtype":"m.text"},"ts":1272902402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"why not use gstreamer, and support everything?  there's a gstreamer-ffmpeg, for example.","msgtype":"m.text"},"ts":1272902403000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"IIRC it's a fee per unit distributed, and if you give copies away you'd have to pay a lot.","msgtype":"m.text"},"ts":1272902404000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"rektide, we don't want to support \"everything\", because in practice that means different browsers would support different things and we'd lose interoperability.","msgtype":"m.text"},"ts":1272902405000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Plus it means more poorly-tested code paths, larger executable size, etc.","msgtype":"m.text"},"ts":1272902460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, well, all major platforms except XP and Vista have H.264 codecs installed by default or readily available, AFAIK, so the browser might not have to pay anything at all.","msgtype":"m.text"},"ts":1272902461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: FWIW I don't consider source-avaliable components that you are prevented from redistributing to be \"open source\"","msgtype":"m.text"},"ts":1272902462000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(probably installed illegally on Linux, but again, nobody cares very much)","msgtype":"m.text"},"ts":1272902520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, no, they technically aren't open-source.  But in practice open-source people are resigned to having some not-fully-open-source components, unless you're rms.","msgtype":"m.text"},"ts":1272902521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: not caring is not a viable solution if you want linux to be successful","msgtype":"m.text"},"ts":1272902522000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Even Debian ships binary blobs in the kernel.","msgtype":"m.text"},"ts":1272902523000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hsivonen, distributions backed by a company with deep pockets can pay the fees.  Others will get ignored indefinitely.","msgtype":"m.text"},"ts":1272902580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Is MPEG-LA going to sue Debian?  (Not sure if Debian actually distributes H.264 codecs, to be fair.)","msgtype":"m.text"},"ts":1272902581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I am loathe to depend on the kindness of patent trolls to ignore people who can't legitimately pay.","msgtype":"m.text"},"ts":1272902582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, so am I.","msgtype":"m.text"},"ts":1272902583000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm talking purely pragmatically here.","msgtype":"m.text"},"ts":1272902584000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In addition, you're ignoring the middle case where people are profitable, but having to pay the licensing fees would cut their margins to thin to survive.","msgtype":"m.text"},"ts":1272902640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This discussion started with the suggestion that Microsoft had ulterior motives for supporting H.264 over Theora, beyond patent risk.","msgtype":"m.text"},"ts":1272902641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"How about just plain financial motives","msgtype":"m.text"},"ts":1272902642000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I don't think that trying to hurt open source is a plausible motive, because open source doesn't have much of a problem with H.264 *in practice*.","msgtype":"m.text"},"ts":1272902643000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Dashiva, those being?","msgtype":"m.text"},"ts":1272902644000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"binary blobs are about 1st party copyright or trade secret. h.264 is about 3rd party patents. totally different","msgtype":"m.text"},"ts":1272902700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Keeping small players out of the game","msgtype":"m.text"},"ts":1272902701000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"TabAtkins, I don't think MPEG-LA would go after anyone in that scenario, because it wouldn't be in their interest.","msgtype":"m.text"},"ts":1272902702000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Though, hurting Firefox in particular could be a valid reason, given their hardline stance on the matter.  Whereas supporting Theora would just give Apple decent reason to switch over too.","msgtype":"m.text"},"ts":1272902703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Dashiva, how does it keep small players out of the game?  OS X, Windows 7, and most Linux versions already include H.264 somehow, so browsers can just use those.","msgtype":"m.text"},"ts":1272902704000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Again, I think you're assuming far too much from a patent-troll organization.","msgtype":"m.text"},"ts":1272902760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MPEG-LA is not a patent troll.  Patent trolls are organizations that file for patents that are probably frivolous and that they won't ever use.","msgtype":"m.text"},"ts":1272902761000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"MPEG-LA organizes patents that are definitely not all frivolous, and which its members do use.","msgtype":"m.text"},"ts":1272902762000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Apparently that's not a viable solution according to anti-h264 arguments.","msgtype":"m.text"},"ts":1272902820000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva, I'm pretty sure I saw someone from Mozilla saying that if they supported H.264, they would indeed just use the system codec where available, and their reasons for not doing that were mainly idealistic.","msgtype":"m.text"},"ts":1272902821000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(not that I disagree with them, although at this point it seems like a lost cause)","msgtype":"m.text"},"ts":1272902880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: The entire codec arena is so fraught with patent peril that the situation is much more ambiguous than you describe.  Virtually *anything* you can write in the codec space is covered by a patent somewhere.","msgtype":"m.text"},"ts":1272902881000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, Gregory Maxwell of Xiph just wrote a fairly lengthy e-mail saying that that is exactly not the case.  It's only what MPEG-LA wants you to think.","msgtype":"m.text"},"ts":1272902882000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://lists.xiph.org/pipermail/theora/2010-April/003769.html","msgtype":"m.text"},"ts":1272902883000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"reads.","msgtype":"m.emote"},"ts":1272902940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In practice, H.264 has been used so widely for so many years by so many companies that any patent-holders would have been flushed out by now.","msgtype":"m.text"},"ts":1272902941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Even if they haven't been, then you'd expect them to join the MPEG-LA, not sue random companies licensing H.264.","msgtype":"m.text"},"ts":1272902942000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So it's pretty safe.","msgtype":"m.text"},"ts":1272902943000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Theora is hopefully safe, but it hasn't had the same level of exposure.","msgtype":"m.text"},"ts":1272903000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If Google goes a few more years without getting sued, it will look a lot more promising.","msgtype":"m.text"},"ts":1272903001000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The email makes a convincing case.  The fact that he framed it in terms of incentives makes it more believable to me.","msgtype":"m.text"},"ts":1272903060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's typical of him.  The \"being extremely convincing and well-thought-out\" thing, I mean.","msgtype":"m.text"},"ts":1272903120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I can tell you from personal experience that it is a terrible idea to argue with Greg Maxwell about anything.  You will not only lose, you will lose *horribly*.","msgtype":"m.text"},"ts":1272903121000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(he's involved in Wikipedia too)","msgtype":"m.text"},"ts":1272903122000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor, the MPEG-LA focusses on software patents, which are frivolous, and should never be patented.","msgtype":"m.text"},"ts":1272903123000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hehe.","msgtype":"m.text"},"ts":1272903124000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it just sucks that we have such broken patent systems around the world that permit software patents, either explicitly or through loop holes","msgtype":"m.text"},"ts":1272903180000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Yeah, but Aryeh's point about them not being a \"patent troll\" per se is still valid.  That's generally reserved for non-practicing patent-holding entities.","msgtype":"m.text"},"ts":1272903181000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, I'm not arguing against that. I know MPEG-LA aren't patent trolls","msgtype":"m.text"},"ts":1272903182000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy, it's not just software patents, it's lots of types of patents.  Most if not all are believed to be legitimate under current law.  That law should be changed, yes, but that doesn't make the patent suits frivolous.  A frivolous lawsuit is one that clearly has no basis in law, not one that has a basis in law you don't like.","msgtype":"m.text"},"ts":1272903183000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Kk.  Well, I agree with you, then.","msgtype":"m.text"},"ts":1272903184000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, if that's what you meant by frivolous, then fair enough","msgtype":"m.text"},"ts":1272903240000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Greg Maxwell is still technically Chief Research Coordinator at Wikimedia: http://wikimediafoundation.org/wiki/Resolution:Chief_Research_Coordinator","msgtype":"m.text"},"ts":1272903300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although I think the role is meaningless.","msgtype":"m.text"},"ts":1272903301000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(predating the time when Wikimedia had a substantial number of actual employees)","msgtype":"m.text"},"ts":1272903360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Philip`: how did you come across the obfuscation methods in your font optimizer?","msgtype":"m.text"},"ts":1272912240000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"me and ethan of fontsquirrel were just discussing them. really excellent.","msgtype":"m.text"},"ts":1272912300000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"paul_irish: I just tried deleting random stuff until finding that browsers rejected them and then went back a step and tried again","msgtype":"m.text"},"ts":1272912480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that's excellent. can you summarize what the POST table changes you make are?","msgtype":"m.text"},"ts":1272912540000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"ethan seemed to think this would conflict with the OTS sanitizing/security stuff that Chrome is doing.","msgtype":"m.text"},"ts":1272912541000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"paul_irish: They're just http://bitbucket.org/philip/font-optimizer/src/tip/obfuscate-font.pl#cl-76","msgtype":"m.text"},"ts":1272912600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i.e. keeping some minimum length, setting everything to 0, but setting the version field to 1 because otherwise Chrome didn't like it","msgtype":"m.text"},"ts":1272912660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(It's quite possible that Chrome might become stricter and reject it)","msgtype":"m.text"},"ts":1272912720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"cool. i'm going to attempt to write up these obfuscations up as a spec of sorts.. with the goal of foundries agreeing to license their work if implementers agree to this sort of level of protection.","msgtype":"m.text"},"ts":1272912780000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"(since it's probably totally invalid - the goal was to be invalid enough that e.g. Windows wouldn't let you install or view the font, but that it would still work in all the browsers I could test)","msgtype":"m.text"},"ts":1272912840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(If I remember correctly, it does break the font installation on Windows and OS X)","msgtype":"m.text"},"ts":1272912841000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(though obviously it's totally trivial for a tool to fix the font and make it readable again)","msgtype":"m.text"},"ts":1272912900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's a really groovy idea Philip`, paul_irish nice work :)","msgtype":"m.text"},"ts":1272912901000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"totally. Ethan actually had a variation of the name table technique, where he uses a unicode smiley face as the Name (instead of empty string).. this prevents installation on Mac","msgtype":"m.text"},"ts":1272912902000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"(It's a disgusting evil standards-violating hack, but that's okay)","msgtype":"m.text"},"ts":1272912903000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I like evil hacks.","msgtype":"m.text"},"ts":1272913080000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I guess you'd need some kind of statement from microsoft that they won't make their font importer start supporting those files","msgtype":"m.text"},"ts":1272913560000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Yeah, the font thing sounds bad (corrupting the files and assuming the OS will never support the coruppted file but browsers always will)","msgtype":"m.text"},"ts":1272920700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://www.ietf.org/mail-archive/web/hybi/current/msg01830.html - hmmm","msgtype":"m.text"},"ts":1272920940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wonder if i should send an email saying \"hi there, we're implementing complete.html#websocket over here\"","msgtype":"m.text"},"ts":1272921000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, I think that information would be appreciated","msgtype":"m.text"},"ts":1272921660000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1272921960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i hope webkit and mozilla are also tracking the latest version","msgtype":"m.text"},"ts":1272922020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Mozilla said they were holding off shipping anything untill it stabilised","msgtype":"m.text"},"ts":1272922080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1272922140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but they're not holding off implementation work, or are they?","msgtype":"m.text"},"ts":1272922141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Chrome has already shipped WebSocket, for the next Safari I am not sure whether we will disable it, and we're actively updating trunk to the latest version","msgtype":"m.text"},"ts":1272922200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"as in, there's patches in progress","msgtype":"m.text"},"ts":1272922201000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: ok, thanks","msgtype":"m.text"},"ts":1272922260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"othermaciej: any news on URL/url?","msgtype":"m.text"},"ts":1272922320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I have not done anything related to it","msgtype":"m.text"},"ts":1272922321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1272922322000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: http://hacks.mozilla.org/2010/04/websockets-in-firefox/","msgtype":"m.text"},"ts":1272922440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, zcorpan: in any case I think -76 is a big improvement over -75 in terms of security and ease of implementation for combo http/websocket servers","msgtype":"m.text"},"ts":1272922680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: Yeah. I'm not sure what the big problems with the WHATWG version are supposed to be, and whether they are real or not","msgtype":"m.text"},"ts":1272922800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think -76 has some good ease of implementation improvements, but I'm very dubious about the new handshake ","msgtype":"m.text"},"ts":1272922801000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"it does not work well with HTTP servers","msgtype":"m.text"},"ts":1272922802000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: what part doesn't work well?","msgtype":"m.text"},"ts":1272922803000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gregw: how is it a problem for HTTP servers? or rather, how is it more of a problem than the -75 version?","msgtype":"m.text"},"ts":1272922804000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"because of the non content data after the requests","msgtype":"m.text"},"ts":1272922860000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: The random bytes?","msgtype":"m.text"},"ts":1272922861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the IETF WG really wants the handshake to be HTTP compliant until the 101 is sent","msgtype":"m.text"},"ts":1272922920000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"those bytes break that","msgtype":"m.text"},"ts":1272922921000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: aren't those bytes effectively just a message body?","msgtype":"m.text"},"ts":1272922922000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Shouldn't the server have done the handoff to the WebSockets specific code by that point? (or treat them like a body)","msgtype":"m.text"},"ts":1272922923000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"they would be if there was a content length","msgtype":"m.text"},"ts":1272922924000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"I don't think Content-Length is required to send a request body","msgtype":"m.text"},"ts":1272922980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"It is in a persistent connection.","msgtype":"m.text"},"ts":1272922981000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"iirc Hixie argued that the random bytes are content after the upgrade","msgtype":"m.text"},"ts":1272922982000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and if we are HTTP complient other status codes might get sent back - like a 401 for authentication","msgtype":"m.text"},"ts":1272922983000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"zcorpan:  no he wants them to not be content","msgtype":"m.text"},"ts":1272923040000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"so they break HTTP servers... so they can't be \"tricked\" into doing a handshake","msgtype":"m.text"},"ts":1272923041000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: Are there examples of HTTP servers that cannot implement WebSockets due to this design","msgtype":"m.text"},"ts":1272923042000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the WebSocket connection can't be used as a persistent HTTP connection","msgtype":"m.text"},"ts":1272923043000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so Content-Length is not required","msgtype":"m.text"},"ts":1272923100000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that being said, if it was added, would that address your objection?","msgtype":"m.text"},"ts":1272923101000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sure - but then you might as well make it a header","msgtype":"m.text"},"ts":1272923102000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"simpler to implement","msgtype":"m.text"},"ts":1272923103000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"and I'm not sure that 101 can have a body","msgtype":"m.text"},"ts":1272923104000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"these bytes are in the request, not the response","msgtype":"m.text"},"ts":1272923160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"any request can have a body (other than GET or HEAD) IIRC","msgtype":"m.text"},"ts":1272923161000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there are more in the response","msgtype":"m.text"},"ts":1272923162000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"but actually the response ones are OK","msgtype":"m.text"},"ts":1272923163000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"as they are after the 101","msgtype":"m.text"},"ts":1272923164000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"so yeh - if the request ones can be made legal HTTP then I'm happy","msgtype":"m.text"},"ts":1272923165000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"so it sounds to me like nothing here breaks HTTP before the 101 response is sent","msgtype":"m.text"},"ts":1272923166000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I still think they are a little bit overkill","msgtype":"m.text"},"ts":1272923220000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"it does if you send something other than the 101","msgtype":"m.text"},"ts":1272923221000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"like a 401","msgtype":"m.text"},"ts":1272923222000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"or a 500","msgtype":"m.text"},"ts":1272923223000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"etc","msgtype":"m.text"},"ts":1272923224000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"what breaks http in that case?","msgtype":"m.text"},"ts":1272923225000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the random bytes will be a bad request","msgtype":"m.text"},"ts":1272923226000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"unless they are content of the request","msgtype":"m.text"},"ts":1272923280000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the client doesn't send a 401 though","msgtype":"m.text"},"ts":1272923281000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the client doesn't know whether it will get a 401","msgtype":"m.text"},"ts":1272923282000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so that can't possibly affect what is a valid http request","msgtype":"m.text"},"ts":1272923283000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"OK - let's flip this around... what's the problem with making it a completely legal HTTP request?","msgtype":"m.text"},"ts":1272923284000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"I believe it already is a completely legal HTTP request","msgtype":"m.text"},"ts":1272923285000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"It is, but the random bytes break the next request in the connection","msgtype":"m.text"},"ts":1272923340000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"if it isn't one, I would consider that a bug","msgtype":"m.text"},"ts":1272923341000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but there won't be a next request in the connection","msgtype":"m.text"},"ts":1272923342000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there can be if a 401 is sent","msgtype":"m.text"},"ts":1272923343000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"i thought the random bytes were there to make it harder to do a cross protocol attack or so","msgtype":"m.text"},"ts":1272923344000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the whole point of the first 8 bytes from the client after the upgrade is to make intermediaries who aren't goign to support websocket fail early","msgtype":"m.text"},"ts":1272923345000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the random bytes work just as well in a header","msgtype":"m.text"},"ts":1272923346000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"not for the purpose of breaking intermediaries","msgtype":"m.text"},"ts":1272923347000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Are clients already epected to deal with arbitary HTTP responses?","msgtype":"m.text"},"ts":1272923400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gregw: in the case of a 401, the client has to close the connection","msgtype":"m.text"},"ts":1272923401000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1272923402000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1272923403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my no was to jgraham","msgtype":"m.text"},"ts":1272923404000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the client is not allowed per spec to send another http request down the same connection that was used for an attempted WebSocket upgrade","msgtype":"m.text"},"ts":1272923460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but there is a reasonable level of support in the IETF WG to have that as an option","msgtype":"m.text"},"ts":1272923461000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"and those bytes make that impossible for little clear benefit","msgtype":"m.text"},"ts":1272923462000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"othermaciej:  why not - that is not compliant HTTP","msgtype":"m.text"},"ts":1272923463000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"what do you mean?","msgtype":"m.text"},"ts":1272923520000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the whole point is that before the 101, the connection is-a HTTP request","msgtype":"m.text"},"ts":1272923521000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the client can close its connection at any time","msgtype":"m.text"},"ts":1272923522000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so if client and server agree to use it as a persistent HTTP connection, they can do so","msgtype":"m.text"},"ts":1272923523000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the client is never an http client, it's a websocket client. From the client's perspective, it's always a WebSocket connection.","msgtype":"m.text"},"ts":1272923524000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tell me what HTTP conformance requirement is violated by closing the connection in response to a 401 (or any non-101 response)","msgtype":"m.text"},"ts":1272923525000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"It's only the server who thinks it's HTTP","msgtype":"m.text"},"ts":1272923526000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well you client might be, but there are other clients","msgtype":"m.text"},"ts":1272923527000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"an HTTP client isn't going to try to upgrade to WebSocket","msgtype":"m.text"},"ts":1272923580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and so there's no problem there either","msgtype":"m.text"},"ts":1272923581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there is the use-case that you want to try to do the upgrade, but also request some real content","msgtype":"m.text"},"ts":1272923582000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"so that if you can upgrade you do, if you can't you send some real content","msgtype":"m.text"},"ts":1272923583000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"no, there isn't","msgtype":"m.text"},"ts":1272923584000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and avoid another RTT","msgtype":"m.text"},"ts":1272923585000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"no browser is ever going to do that","msgtype":"m.text"},"ts":1272923586000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"neither the client protocol nor the JS cl\u001cient API support that use case","msgtype":"m.text"},"ts":1272923640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that is what the SPDY guys are interested in","msgtype":"m.text"},"ts":1272923641000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the SPDY guys aren't using websocket","msgtype":"m.text"},"ts":1272923642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you want to propose it, go ahead, but \"I want a new feature\" is very different from \"this breaks HTTP\"","msgtype":"m.text"},"ts":1272923643000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not yet","msgtype":"m.text"},"ts":1272923644000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the SPDY guys are never going to use websocket -- websocket is a completely inappropriate protocol for their use case","msgtype":"m.text"},"ts":1272923645000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway, we've had this debate before... I really am just saying that a lot of -76 is well accepted, but some parts are still being debated","msgtype":"m.text"},"ts":1272923646000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"running SPDY over WebSocket would be silly","msgtype":"m.text"},"ts":1272923647000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gregw: do you believe -76 has less consensus than -75?","msgtype":"m.text"},"ts":1272923700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think that lots of -76 has consensus, but that parts do not","msgtype":"m.text"},"ts":1272923701000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"that doesn't answer my question","msgtype":"m.text"},"ts":1272923702000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"why would running SPDY over websocket be silly? there is interest on the EITF WG list","msgtype":"m.text"},"ts":1272923703000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"-75 has consensus in as much as it reflects the implementations currently shipping","msgtype":"m.text"},"ts":1272923760000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"because SPDY doesn't need or want an additional framing layer","msgtype":"m.text"},"ts":1272923761000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think we all accept there are problems","msgtype":"m.text"},"ts":1272923762000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"but it has a framing layer","msgtype":"m.text"},"ts":1272923763000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the only implementation shipping -75 is Chrome and it's in the process of being rewritten to -76","msgtype":"m.text"},"ts":1272923764000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so why are we inventing 2 new framing layers that go over HTTP intermediaries","msgtype":"m.text"},"ts":1272923765000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"surely it would be best to come up with only 1","msgtype":"m.text"},"ts":1272923766000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"SPDY is not intended to go over HTTP intermediaries","msgtype":"m.text"},"ts":1272923767000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"othermaciej:  have a read of the list of impls on wikipedia","msgtype":"m.text"},"ts":1272923768000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"there are 10s","msgtype":"m.text"},"ts":1272923820000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: the non-browser impls can be upgraded much more readily than browsers, but that being said, has any of those implementors said they prefer -75 to -76?","msgtype":"m.text"},"ts":1272923821000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gregw: There are many server side implementations. But they are worthless without clients","msgtype":"m.text"},"ts":1272923822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well the IETF WG is pretty clear that HTTP compliance is a requirement - I guess it is debatable if -76 meets that or not","msgtype":"m.text"},"ts":1272923880000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"given that it takes about 4 hours to write a server-side implementation, i'm not surprised there are a lot of them","msgtype":"m.text"},"ts":1272923881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1272923882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm pretty sure all the client implementations listed in Wikipedia are going to upgrade to -76","msgtype":"m.text"},"ts":1272923883000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"-76 definitely does not meet the HTTP compliance requirement any *less* than -75","msgtype":"m.text"},"ts":1272923940000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(i mean, i've written at least 3 myself)","msgtype":"m.text"},"ts":1272923941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it definitely meets it more, and arguably meets it completely","msgtype":"m.text"},"ts":1272923942000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie:  so are impls less important that clients? ","msgtype":"m.text"},"ts":1272923943000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the HTTP compliance requirement isn't even a goal, IMHO.","msgtype":"m.text"},"ts":1272923944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gregw: server impls are far less important than clients, yes","msgtype":"m.text"},"ts":1272923945000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"obviously not here... but it is in the IETF WG","msgtype":"m.text"},"ts":1272924000000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"i'm in the IETF WG","msgtype":"m.text"},"ts":1272924001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as is maciej","msgtype":"m.text"},"ts":1272924002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway... I'm obviously not making my point here","msgtype":"m.text"},"ts":1272924003000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"so I'll leave you be","msgtype":"m.text"},"ts":1272924004000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"I'm not sure what's better about -75 than -76","msgtype":"m.text"},"ts":1272924005000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"no random bytes outside of the request","msgtype":"m.text"},"ts":1272924006000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"put them in a header and it would be a lot better","msgtype":"m.text"},"ts":1272924007000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"if it contains an actual regression on any requirement relative to -75, then I would see why you might not want to start with it","msgtype":"m.text"},"ts":1272924060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't recall a requirement that the handshake request must not have a body","msgtype":"m.text"},"ts":1272924061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"certainly that's not required for the \"http compliance\" requirement","msgtype":"m.text"},"ts":1272924120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm cool if they are a legal body","msgtype":"m.text"},"ts":1272924121000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"but they are not","msgtype":"m.text"},"ts":1272924122000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"-75 also blatantly doesn't meet that requirement","msgtype":"m.text"},"ts":1272924123000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"would still like examples of actual deployed HTTP servers that cannot cope with -76","msgtype":"m.emote"},"ts":1272924124000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"why are they not a legal body?","msgtype":"m.text"},"ts":1272924125000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"per HTTP, the eight bytes the client send are the first eight bytes of a second pipelined request","msgtype":"m.text"},"ts":1272924126000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can you point to a specific conformance requirement in the HTTP RFC that they violate?","msgtype":"m.text"},"ts":1272924127000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's intentional, the whole point is to break intermediaries who don't know websocket","msgtype":"m.text"},"ts":1272924128000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham:  it is more about being able to handle non 101 responses.  OK currently implemented, but there is interest in 401, 302's etc","msgtype":"m.text"},"ts":1272924180000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"Hixie: so HTTP doesn't allow a request body without Content-Length?","msgtype":"m.text"},"ts":1272924181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not for GET iirc","msgtype":"m.text"},"ts":1272924182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie:  +1","msgtype":"m.text"},"ts":1272924183000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the WebSocket request is a GET?","msgtype":"m.text"},"ts":1272924184000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(it doesn't allow a body at all for GET)","msgtype":"m.text"},"ts":1272924185000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1272924186000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes it does","msgtype":"m.text"},"ts":1272924187000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can set Content-LEngth with a GET","msgtype":"m.text"},"ts":1272924188000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and thus needs a content-length or chunking to have a body","msgtype":"m.text"},"ts":1272924189000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"(but nobody does it)","msgtype":"m.text"},"ts":1272924190000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1272924191000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"would sending a Content-Length be a problem?","msgtype":"m.text"},"ts":1272924192000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gregw: no the whole POINT is to cause the intermediaries to fail","msgtype":"m.text"},"ts":1272924193000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: yes, cos then intermediaries wouldn't fail","msgtype":"m.text"},"ts":1272924194000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it might cause some intermediaries to fail sometimes","msgtype":"m.text"},"ts":1272924240000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"from the point of view of the client, it's not HTTP at all, it's websocket the whole time","msgtype":"m.text"},"ts":1272924241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: do we have data showing that this makes unaware intermediaries fail early?","msgtype":"m.text"},"ts":1272924242000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"they will fail anyway becuause Upgrade is hop by hop","msgtype":"m.text"},"ts":1272924243000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"from the point of view of an HTTP server, it's an HTTP request followed by a bogus request","msgtype":"m.text"},"ts":1272924244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if the intermediary does not know about websocket, it will not forward the upgrade","msgtype":"m.text"},"ts":1272924245000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"(more so than anything else in the handshake)?","msgtype":"m.text"},"ts":1272924246000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"from the point of view of a WebSocket server, it's a WebSocket request","msgtype":"m.text"},"ts":1272924247000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unless it is a dumb byte copier","msgtype":"m.text"},"ts":1272924248000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"I'm not sure what the advantage is of adding the full complexity of HTTP to WebSockets rather than doing it at the application layer","msgtype":"m.text"},"ts":1272924300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in which case the random bytes will be copied","msgtype":"m.text"},"ts":1272924301000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"jgraham:  I'm not advocating that","msgtype":"m.text"},"ts":1272924302000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"from the point of view of an HTTP+WebSocket server, it's an HTTP request followed by the remainder of the data of what was actually a WebSocket request","msgtype":"m.text"},"ts":1272924303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: i'm aware of at least one intermediary that failed because of this, but i don't have non-anecdotal data yet","msgtype":"m.text"},"ts":1272924304000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie:  but if you send weboscket data before the 101, then you are not HTTP compliant","msgtype":"m.text"},"ts":1272924305000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: intermediaries don't follow the spec, they pass upgrades through unmodified","msgtype":"m.text"},"ts":1272924360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is a HTTP connection until the 101 is sent","msgtype":"m.text"},"ts":1272924361000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"Hixie: I guess non-anecdotal data would be what we need to determine if this mechanism is effective for its purpose","msgtype":"m.text"},"ts":1272924362000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if intermediaries pass the upgrade unchanged, then they will probaby copy the bytes as well","msgtype":"m.text"},"ts":1272924363000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"othermaciej: we have data showing that without this, the handshake \"succeeds\" in some double-digit number of cases but the first frame sent fails to make it through","msgtype":"m.text"},"ts":1272924364000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gregw: Allowing arbitary response codes seems like more complexity. Maybe not the full comlexity of HTTP","msgtype":"m.text"},"ts":1272924365000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"othermaciej: which is basically what this handshake does now","msgtype":"m.text"},"ts":1272924366000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or just make it legal HTTP as the IETF wants","msgtype":"m.text"},"ts":1272924367000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"jgraham:  that's only for consenting clients/servers. it is not a MUST requirement","msgtype":"m.text"},"ts":1272924420000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"if you want HTTP intermediaries to fail during the handshake request, why not use POST instead of GET and omit the Content-Length header, that would very likely trigger a 411 Length Required","msgtype":"m.text"},"ts":1272924421000,"senderName":"john_fallows","senderId":"john_fallows@irc"},
{"content":{"body":"Hixie: would it cause a problem to send the random bytes after the \"successful\" 101 response?","msgtype":"m.text"},"ts":1272924422000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham:  but if a client and server want to use BASIC or DIGEST auth, then why not let them use it?","msgtype":"m.text"},"ts":1272924423000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: Consenting serves, yes. I don't see how any client could avoid it","msgtype":"m.text"},"ts":1272924424000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"john_fallows: that's a neat idea","msgtype":"m.text"},"ts":1272924480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gregw: argument from authority has no effect here (invoking the IETF's name won't win you the argument)","msgtype":"m.text"},"ts":1272924481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham:  there is no need to follow a 401","msgtype":"m.text"},"ts":1272924482000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: especially since we are part of the IETF WG","msgtype":"m.text"},"ts":1272924483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just that the server will only allow clients that do connect","msgtype":"m.text"},"ts":1272924484000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"argument from authority shouldn't win in the IETF either","msgtype":"m.text"},"ts":1272924485000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: it doubles the RTT for the handshake","msgtype":"m.text"},"ts":1272924486000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gregw: That's the same as saying \"all clients need to implement it\"","msgtype":"m.text"},"ts":1272924487000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: what about john_fallows's POST idea?","msgtype":"m.text"},"ts":1272924488000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham:  well all the browsers have it already... so it's not a big deal","msgtype":"m.text"},"ts":1272924540000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"othermaciej:  that is still illegal HTTP","msgtype":"m.text"},"ts":1272924541000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"othermaciej: i don't think it would make a difference -- intermediaries appear to be pretty HTTP-stupid. But I'm happy to change it to POST if that makes people happier.","msgtype":"m.text"},"ts":1272924542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: but i don't think it'd make gregw happier","msgtype":"m.text"},"ts":1272924543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: would it be technically legal HTTP?","msgtype":"m.text"},"ts":1272924600000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gregw: I am unconvinced it is that simple, but have no experience with implementing a client","msgtype":"m.text"},"ts":1272924601000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie:  true.  I think it should be HTTP legal until the 101 is received","msgtype":"m.text"},"ts":1272924602000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"othermaciej: off-hand, no idea","msgtype":"m.text"},"ts":1272924603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I can't find any requirement to send Content-Length in a request","msgtype":"m.text"},"ts":1272924660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I guess I need to read the HTTP RFC more carefully","msgtype":"m.text"},"ts":1272924661000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"without something to indicate the content length, it is not legal","msgtype":"m.text"},"ts":1272924662000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: or if you have a cite for what conformance requirement is violated, that would help","msgtype":"m.text"},"ts":1272924663000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"are there other ways to make intermediaries fail while being legal http?","msgtype":"m.text"},"ts":1272924664000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah:","msgtype":"m.text"},"ts":1272924665000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej:  you need to look at RFC2616 in the section about marking body ends","msgtype":"m.text"},"ts":1272924666000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"\"For compatibility with HTTP/1.0 applications, HTTP/1.1 requests containing a message-body MUST include a valid Content-Length header field unless the server is known to be HTTP/1.1 compliant.\"","msgtype":"m.text"},"ts":1272924667000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"\"The presence of a message-body in a request is signaled by the inclusion of a Content-Length or Transfer-Encoding header field in the request's message-headers.\"","msgtype":"m.text"},"ts":1272924720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gregw: part of the reason you're not convincing me is that you're just saying \"you can't do X\" without giving me an alternative way of achieving the effect I'm attempting to achieve.","msgtype":"m.text"},"ts":1272924780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that's not a conformance requirement (and doesn't seem to quite match the server requirements)","msgtype":"m.text"},"ts":1272924781000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gregw: so you just feel like stop energy, you don't seem to be helping.","msgtype":"m.text"},"ts":1272924782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie:  true, but I don't think your solution works anyway, and I don't think it is actually possible","msgtype":"m.text"},"ts":1272924783000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"othermaciej: oh, good point","msgtype":"m.text"},"ts":1272924784000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"intermediairies will either be good or they will be stupid byte copiers","msgtype":"m.text"},"ts":1272924785000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"however, what I quoted is a MUST-level requirement for HTTP 1.1 clients","msgtype":"m.text"},"ts":1272924840000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"your proposal does not help with the later and is not needed for the former","msgtype":"m.text"},"ts":1272924841000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"othermaciej: so if the server is known to be compliant, that MUST doesn't apply","msgtype":"m.text"},"ts":1272924842000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: could the random content bytes piggyback on the packet for the first client message?","msgtype":"m.text"},"ts":1272924843000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"zcorpan:  but then it is either a content length or chunking","msgtype":"m.text"},"ts":1272924844000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"zcorpan: right - though connecting to a random server, you have no way to know","msgtype":"m.text"},"ts":1272924845000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"let me find the section....","msgtype":"m.text"},"ts":1272924846000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: evidence does not bear this out","msgtype":"m.text"},"ts":1272924847000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie:  then please publish the evidence","msgtype":"m.text"},"ts":1272924900000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"gregw: at least in section 4.4 Message Length, there doesn't seem to be a requirement to that effect","msgtype":"m.text"},"ts":1272924901000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gregw: we have double-digit-percentage numbers of connections in the test who passed through the Upgrade, but did not pass through the first frame","msgtype":"m.text"},"ts":1272924902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gregw: the data was sent to the hybi list","msgtype":"m.text"},"ts":1272924903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: right, but it seems reasonable to assume that a server that supports websockets isn't going to be an http/1.0 application","msgtype":"m.text"},"ts":1272924904000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.4","msgtype":"m.text"},"ts":1272924905000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"zcorpan: yes, but when JS in the browser initiates the connection, the browser doesn't know if the server actually supports websockets","msgtype":"m.text"},"ts":1272924960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"zcorpan: in fact the design of the handshake is set up so the browser can find out with good confidence whether the server does in fact support webscocket","msgtype":"m.text"},"ts":1272924961000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: (the client in that case is a websocket client, so it isn't bound to HTTP rules)","msgtype":"m.text"},"ts":1272924962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: indeed, except to the extent one accepts the requirement that servers should observe what looks like valid HTTP until they respond with a 101","msgtype":"m.text"},"ts":1272925020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie:  so you can make the first message of the websocket connect a check message","msgtype":"m.text"},"ts":1272925021000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"if a message is not quickly received, then the upgrade did not work","msgtype":"m.text"},"ts":1272925022000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"and you have fail fast","msgtype":"m.text"},"ts":1272925023000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the first message can be an application message if one is available, or some kind of noop ping","msgtype":"m.text"},"ts":1272925080000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"there is already talk about keep-alives and pings","msgtype":"m.text"},"ts":1272925081000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"so just send one immediately if there is no application message","msgtype":"m.text"},"ts":1272925082000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"that also separates out the attack protection mechanism (the random bytes) from the fast fail mechanism","msgtype":"m.text"},"ts":1272925140000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"othermaciej: well HTTP 1.1 servers can assume they are HTTP 1.1, so the 1.0 requirement doesn't apply","msgtype":"m.text"},"ts":1272925141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gregw: how can you do that without requiring an extra RTT?","msgtype":"m.text"},"ts":1272925142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well if you have an application message, you send that just as you would anyway","msgtype":"m.text"},"ts":1272925200000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"if you don't then send a ping","msgtype":"m.text"},"ts":1272925201000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"ok so the fail fast is not as fast","msgtype":"m.text"},"ts":1272925202000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the failure has one more RTT","msgtype":"m.text"},"ts":1272925203000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"but that's only for failures","msgtype":"m.text"},"ts":1272925204000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"that makes the client behaviour depnd on JS execution speed, which is an interop nightmare","msgtype":"m.text"},"ts":1272925205000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'd much rather do what we're doing now","msgtype":"m.text"},"ts":1272925260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no - the browser can send a ping immediately the 101 is received","msgtype":"m.text"},"ts":1272925261000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"wait, that won't work anyway","msgtype":"m.text"},"ts":1272925262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but what you are doing now is breaking HTTP and will cause all sorts of future problems","msgtype":"m.text"},"ts":1272925263000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the whole point is the API doesn't say it's connected until it's connected","msgtype":"m.text"},"ts":1272925264000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if we require a ping first, then there's an extra RTT before we're connected","msgtype":"m.text"},"ts":1272925320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't like adding more latency to the handshake","msgtype":"m.text"},"ts":1272925321000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that's a terrible solution","msgtype":"m.text"},"ts":1272925322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we're","msgtype":"m.text"},"ts":1272925323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not","msgtype":"m.text"},"ts":1272925324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"breaking","msgtype":"m.text"},"ts":1272925325000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"HTTP","msgtype":"m.text"},"ts":1272925326000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this isn't HTTP","msgtype":"m.text"},"ts":1272925327000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is until the 101 is sent","msgtype":"m.text"},"ts":1272925328000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"no, it's not","msgtype":"m.text"},"ts":1272925329000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's BS","msgtype":"m.text"},"ts":1272925330000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"plus, even if it was, as maciej has pointed out, it's not actually invalid","msgtype":"m.text"},"ts":1272925331000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you need to have a content length or chunking or one of the self limiting content types to have a content body","msgtype":"m.text"},"ts":1272925380000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"or you can close the connection... but that's not useful for a request","msgtype":"m.text"},"ts":1272925381000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"quote the spec that says that","msgtype":"m.text"},"ts":1272925440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"please","msgtype":"m.text"},"ts":1272925441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cite the MUST requirement","msgtype":"m.text"},"ts":1272925442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in section 4.4","msgtype":"m.text"},"ts":1272925443000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"there are only 5 ways","msgtype":"m.text"},"ts":1272925444000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"paste the sentence","msgtype":"m.text"},"ts":1272925445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and 1 does not apply, nor does 5","msgtype":"m.text"},"ts":1272925446000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"so you are left with 2, 3 or 4","msgtype":"m.text"},"ts":1272925447000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"4.4 is all server requirements","msgtype":"m.text"},"ts":1272925500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"except for the HTTP 1.0 compat requirement maciej pasted","msgtype":"m.text"},"ts":1272925501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which as noted isn't relevant here","msgtype":"m.text"},"ts":1272925502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no it is for any HTTP message","msgtype":"m.text"},"ts":1272925503000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"it's about how to receive the message","msgtype":"m.text"},"ts":1272925560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which in the case of a client-sent message, is a server-side requirement","msgtype":"m.text"},"ts":1272925561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's a HTTP message requirement","msgtype":"m.text"},"ts":1272925562000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"no, it's not","msgtype":"m.text"},"ts":1272925620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the random bytes will break a HTTP connection if the upgrade is not accepted","msgtype":"m.text"},"ts":1272925621000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"there's no HTTP connection in that case","msgtype":"m.text"},"ts":1272925622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the client will abort regardless of the response","msgtype":"m.text"},"ts":1272925623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1272925624000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"because the websocket spec requires it to","msgtype":"m.text"},"ts":1272925625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but you are not in websockets! the upgrade faile","msgtype":"m.text"},"ts":1272925680000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"but you are not in websockets! the upgrade failed","msgtype":"m.text"},"ts":1272925681000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"if you're not a websocket client, then you didn't send an upgrade request or the 8 random bytes","msgtype":"m.text"},"ts":1272925682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gregw: the client is always in websockets","msgtype":"m.text"},"ts":1272925683000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so you have a valid HTTP connection that should be able to be used without requirement for another RTT","msgtype":"m.text"},"ts":1272925684000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"you might be a client that can be websocket or can be something else","msgtype":"m.text"},"ts":1272925740000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the connection itself isn't HTTP or WebSockets or whatnot. That's a meaningless abstraction.","msgtype":"m.text"},"ts":1272925741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just bytes","msgtype":"m.text"},"ts":1272925742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it tries the upgrade, and if that does not work, keeps using HTTP","msgtype":"m.text"},"ts":1272925743000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"what matters is what the peers think is going on","msgtype":"m.text"},"ts":1272925744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there is no way to try an upgrade and continue using HTTP","msgtype":"m.text"},"ts":1272925745000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so you are going to require and extra RTT for all the apps that can't use Websocket","msgtype":"m.text"},"ts":1272925746000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"that's a violation of the websocket protocol","msgtype":"m.text"},"ts":1272925747000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just so they can try to use it","msgtype":"m.text"},"ts":1272925748000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"but until the 101, you are not in websockets","msgtype":"m.text"},"ts":1272925749000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"there's no other way to use the API","msgtype":"m.text"},"ts":1272925750000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you are in HTTP","msgtype":"m.text"},"ts":1272925751000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"the client is NEVER in HTTP","msgtype":"m.text"},"ts":1272925800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there are other clients than JS","msgtype":"m.text"},"ts":1272925801000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"those clients should use TCP","msgtype":"m.text"},"ts":1272925802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"websockets is irrelevant to those clients","msgtype":"m.text"},"ts":1272925803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well that's not what is happening out there","msgtype":"m.text"},"ts":1272925804000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"those clients do not need to send the 8 bytes","msgtype":"m.text"},"ts":1272925805000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they can do whatever they want to upgrade the server","msgtype":"m.text"},"ts":1272925806000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"some of them are called browsers!","msgtype":"m.text"},"ts":1272925807000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"you are not making any sense here","msgtype":"m.text"},"ts":1272925860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well that's a winning argument","msgtype":"m.text"},"ts":1272925861000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"l8r","msgtype":"m.text"},"ts":1272925862000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"FWIW it seems likely to me that non-browser clients for websockets will be used","msgtype":"m.text"},"ts":1272926100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Wouldn't they just connect directly with tcp without going via http?","msgtype":"m.text"},"ts":1272926160000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Because there is value in interacting with the websocket ecosystem outside the browser","msgtype":"m.text"},"ts":1272926161000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Dashiva: Connect to what?","msgtype":"m.text"},"ts":1272926162000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Assume some service is provided over websockets for browsers","msgtype":"m.text"},"ts":1272926163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And someone wants to develop a custom non-browser app that connets to exactly the same service","msgtype":"m.text"},"ts":1272926220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"then they couldn't use a general-purpose http client to talk to that service","msgtype":"m.text"},"ts":1272926640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but they want to be able to tunnel bidirectional communication through a HTTP infrastructure (eg firewalls, proxies and intermediaries)","msgtype":"m.text"},"ts":1272926700000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"plus browsers themselves might want to do websocket extensions","msgtype":"m.text"},"ts":1272926701000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"so the \"can't do it in JS, so can't do it at all\" argument is not that valid","msgtype":"m.text"},"ts":1272926760000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"I'm not suggesting a non-browser-client would be a general purpose HTTP client","msgtype":"m.text"},"ts":1272926761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It would be custom websockets code","msgtype":"m.text"},"ts":1272926762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I agree that this seems likely","msgtype":"m.text"},"ts":1272926763000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(this is why I would like the client side to be relatively simple to implement)","msgtype":"m.text"},"ts":1272926820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham:  I don't anybody disagrees with that","msgtype":"m.text"},"ts":1272926821000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"but that is not to say that we cannot have optional less simple solutions as well","msgtype":"m.text"},"ts":1272926880000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"I'm somewhat more willing to impose client-side complexity, because at least browser-hosted clients have to do what it takes to ensure security against cross-protocol attacks","msgtype":"m.text"},"ts":1272926881000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gregw: I don't really believe in optional features","msgtype":"m.text"},"ts":1272926940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"othermaciej: agreed that complexity for security is well justified","msgtype":"m.text"},"ts":1272926941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham:  but that says that websocket has to have an authentication system that will keep everybody happy for all the time","msgtype":"m.text"},"ts":1272927000000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"and compression that will last forever","msgtype":"m.text"},"ts":1272927001000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"jgraham:  but I agree that options have to be carefully thought out so they are not by default mandatory","msgtype":"m.text"},"ts":1272927002000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"but as a lot of websocket connections are going to be established from well featured HTTP clients to well featured HTTP servers, it seams very very strange to not let them use features like authentication","msgtype":"m.text"},"ts":1272927120000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"if they both wish","msgtype":"m.text"},"ts":1272927121000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"I don't think it is bad to allow for the possibility of future expansion ","msgtype":"m.text"},"ts":1272927360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I do think it is bad to have explicitly optional features","msgtype":"m.text"},"ts":1272927361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway bedtime","msgtype":"m.text"},"ts":1272927362000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gn","msgtype":"m.text"},"ts":1272927363000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"nn jgraham","msgtype":"m.text"},"ts":1272927364000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham:  guess I can agree with that.... which is why keeping the HTTP legal is good for future proofing","msgtype":"m.text"},"ts":1272927365000,"senderName":"gregw","senderId":"gregw@irc"},
{"content":{"body":"does anyone know of any places that depend on the components for html5 bugs?","msgtype":"m.text"},"ts":1272931080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so far i have:","msgtype":"m.text"},"ts":1272931140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" - bugs link on http://xn--74h.damowmow.com/","msgtype":"m.text"},"ts":1272931141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" - script that updates http://www.whatwg.org/issues/data.html?period=1","msgtype":"m.text"},"ts":1272931142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" - bug report form on the spec (file-bug.cgi)","msgtype":"m.text"},"ts":1272931143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" - various spec headers:","msgtype":"m.text"},"ts":1272931144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(6 files)","msgtype":"m.text"},"ts":1272931145000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and some stuff i use personally","msgtype":"m.text"},"ts":1272931146000,"senderName":"Hixie","senderId":"Hixie@irc"}
]