[
{"content":{"body":"What's the difference between \"Set the parser pause flag to true\" and \"Block the tokenizer for this instance of the HTML parser\"?","msgtype":"m.text"},"ts":1479559287000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: does the former not have some affect on script execution?","msgtype":"m.text"},"ts":1479560959000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: We \"block the tokenizer\" when waiting for the parsing-blocking script to finish loading,","msgtype":"m.text"},"ts":1479560987000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"so it's not like these scripts are going to execute themselves anyway.","msgtype":"m.text"},"ts":1479561000000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: um, do we spin the event loop at all? consider setTimeout(function{document.write(\"foo\")}, 100)","msgtype":"m.text"},"ts":1479561048000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I'm not sure how to consider that, and actually that makes me scared.","msgtype":"m.text"},"ts":1479561103000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: Does that even work?","msgtype":"m.text"},"ts":1479561233000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"What's the insertion point for a document.write call inside setTimeout?","msgtype":"m.text"},"ts":1479561251000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: Please tell me that's supposed to indirectly call document.open, otherwise my whole idea to avoid the concept of insertion point is useless. :(","msgtype":"m.text"},"ts":1479562010000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it adds it to the start of the input stream; it blows away the document if the parser has finished","msgtype":"m.text"},"ts":1479562053000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: if you have a parser blocking script, you can easily have the timeout run before the end of the parse","msgtype":"m.text"},"ts":1479562067000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"this is, admittedly, an edge case you probably don't need to care about","msgtype":"m.text"},"ts":1479562084000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1479562087000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I think I can avoid it anyway.","msgtype":"m.text"},"ts":1479562091000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(standard disclaimer: I haven't really looked at the script-enabled side of this in a long time and my memory of the details might be wrong)","msgtype":"m.text"},"ts":1479562110000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: If there is a parser blocking script, won't it rather add it at the end of the pending script input?","msgtype":"m.text"},"ts":1479562125000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"idk.","msgtype":"m.text"},"ts":1479562134000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm also on a train and not about to try and load the spec :)","msgtype":"m.text"},"ts":1479562143000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"After the input of past document.write() calls that was not yet processed.","msgtype":"m.text"},"ts":1479562146000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ok. :)","msgtype":"m.text"},"ts":1479562148000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: But if there is setTimeout(function{document.write(\"foo\")}, 100) while there is a parser blocking script, whether \"the parser pause flag\" is set or we have \"block the tokenizer for this instance\", it will not process and tokenize \"foo\", right?","msgtype":"m.text"},"ts":1479562302000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: not until unblocked","msgtype":"m.text"},"ts":1479562512000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Yeah I'm just trying to understand if there is a difference between the two. I don't see one.","msgtype":"m.text"},"ts":1479562550000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"AFAIU, the insertion point is undefined when there is a parsing-blocking script,","msgtype":"m.text"},"ts":1479563213000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"so I'm confused how can document.write adds anything to the input stream when called in setTimeout.","msgtype":"m.text"},"ts":1479563236000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"the event queue won't get spun till after the parser-blocking script has finished loading, but before the end of the parse","msgtype":"m.text"},"ts":1479563587000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: So timers won't run until the blocking script finishes loading, and by that time we will have set insertion point again, is that it?","msgtype":"m.text"},"ts":1479563911000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I think","msgtype":"m.text"},"ts":1479564127000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: OK","msgtype":"m.text"},"ts":1479564136000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: I can still avoid insertion points if that's correct.","msgtype":"m.text"},"ts":1479564144000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"WOOO","msgtype":"m.text"},"ts":1479564146000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: But at that point ignore-destructive-writes counter will be greater than 0, so document.write should just abort itself... The plot deepens.","msgtype":"m.text"},"ts":1479567988000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: you could try looking in wpt for tests for this?","msgtype":"m.text"},"ts":1479568206000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I don't even understand simpler tests hah.","msgtype":"m.text"},"ts":1479569089000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: jgraham wrote a lot of good tests for this sort of nonsense when Opera was implementing this","msgtype":"m.text"},"ts":1479569157000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Never mind, brainfarted.","msgtype":"m.text"},"ts":1479569158000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: hence I suspect there's decent tests","msgtype":"m.text"},"ts":1479569162000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Read \"If the insertion point is undefined and either the Document's ignore-opens-during-unload counter\" too fast,","msgtype":"m.text"},"ts":1479569179000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"and saw \"or\" instead of \"and\".","msgtype":"m.text"},"ts":1479569186000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That changes... a lot of things hah.","msgtype":"m.text"},"ts":1479569195000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"jarek, at 2016-11-18 09:31 UTC, zcorpan said: https://discourse.wicg.io/t/one-inch-is-not-an-inch/1228","msgtype":"m.text"},"ts":1479595650000,"senderName":"botie","senderId":"botie@irc"}
]