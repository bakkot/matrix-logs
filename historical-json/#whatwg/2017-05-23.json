[
{"content":{"body":"Domenic: briefly revisiting last night's conversation...since scripts \"optionally\" have a muted errors field (https://html.spec.whatwg.org/#muted-errors), does that mean that there really is no interop bug after all, because it isn't a \"requirement\" for browsers to mute errors from x-o scripts?","msgtype":"m.text"},"ts":1495505973000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: it is a req","msgtype":"m.text"},"ts":1495509770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: I think that just means it is not always set, could be clearer","msgtype":"m.text"},"ts":1495509824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok I see thanks annevk","msgtype":"m.text"},"ts":1495510299000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Would you consider a PR that either moves the word \"optionally\" down to the description as opposed to the title, or removes it altogether?","msgtype":"m.text"},"ts":1495510509000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I'm wondering if \"A flag which, if set, means\" covers the \"optionally\" aspect of setting that flag, while preserving its requirement of existing nevertheless","msgtype":"m.text"},"ts":1495510561000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1495523298000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"https://jsfiddle.net/3vx88jtj/1/","msgtype":"m.text"},"ts":1495523300000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"is this behavior standardized somewhere?","msgtype":"m.text"},"ts":1495523309000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"i.e. how canvas font sizes <1 are supposed to work with transforms?","msgtype":"m.text"},"ts":1495523328000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"domfarolino: yeah, a rewrite to a flag of sorts would make sense","msgtype":"m.text"},"ts":1495523562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: sorry for the late reply, missed your follow-up","msgtype":"m.text"},"ts":1495523581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ondras: Browsers are, in general, allowed to apply a minimum font size. See https://jsfiddle.net/3vx88jtj/2/","msgtype":"m.text"},"ts":1495523692000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Mine applies a min of 12px.)","msgtype":"m.text"},"ts":1495523709000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: based on my current experience (ff, chrome), the behavior is weird and inconsistent.","msgtype":"m.text"},"ts":1495523812000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"for instance, the resulting height is ~always the same, ff+chrome","msgtype":"m.text"},"ts":1495523838000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"for the whole input range of your fiddle","msgtype":"m.text"},"ts":1495523843000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but the letter spacing jumps rapidly","msgtype":"m.text"},"ts":1495523853000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"and chrome fixes the ctx.font value on a minimum of \"2px\" for the rightmost 1/3 of the slider","msgtype":"m.text"},"ts":1495523894000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"while still maintaining the proper size of the rendered result","msgtype":"m.text"},"ts":1495523908000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"=> chrome's .font getter returns different values than those that are actually applied","msgtype":"m.text"},"ts":1495523959000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"anyway, apparently rendering text to a (highly) scaled canvas seems to be a large amount of pain","msgtype":"m.text"},"ts":1495523999000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"damn.","msgtype":"m.text"},"ts":1495524002000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Ah, you might not have a meaningful min; mine blows up pretty quickly as soon as you start moving the slider to the right.","msgtype":"m.text"},"ts":1495524025000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"my height is constant, the width/letterspacing jumps in an unusable fashion","msgtype":"m.text"},"ts":1495524063000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Yeah, font renderers don't really work on arbitrary floats; they all round to various precisions at various spots.","msgtype":"m.text"},"ts":1495524103000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1495524114000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"sounds like I will have to cancel the transform for font rendering and compute it myself","msgtype":"m.text"},"ts":1495524132000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: when defining a method, is there an equivalent to ASSERT_UNREACHED()? Should I throw in cases that should not happen? (e.g. because callers should collapse potential-destination values to known values before they call the translation method)","msgtype":"m.text"},"ts":1495524818000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: see Infra, you can use Assert:","msgtype":"m.text"},"ts":1495525424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool, thx!","msgtype":"m.text"},"ts":1495525689000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"so something like \"Assert: this should never be reached.\"?","msgtype":"m.text"},"ts":1495525740000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: prolly better to assert before the branch","msgtype":"m.text"},"ts":1495526122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, makes sense","msgtype":"m.text"},"ts":1495526141000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Yeah, assert your preconditions.  Failling the assert is a spec error, not a runtime error.","msgtype":"m.text"},"ts":1495526150000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yoav: Assert: destination is not fetch or some such","msgtype":"m.text"},"ts":1495526152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If it's a runtime error, then you do indeed need to throw; asserts might be useful afterwards to remind the spec reader what values are left over.","msgtype":"m.text"},"ts":1495526187000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Asserts won't \"run\" after throw; throw terminates","msgtype":"m.text"},"ts":1495526496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, I mean like \"1. If |x| is a weird value, throw a TypeError. 2. Assert: |x| is a FooEnum value. 3. More stuff...\"","msgtype":"m.text"},"ts":1495526823000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1495526961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/fetch/pull/547","msgtype":"m.text"},"ts":1495527131000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: so getting back to HTML checking for the Encoding files, we want to run the checker if any .text files change or if the visualize.py file changes?","msgtype":"m.text"},"ts":1495527179000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's getting bikeshed errors regarding the linking of \"preload destination\". I'm not sure if it real errors or a bikeshed issue related to having a space as part of the linked term (there are other errors with space in them)","msgtype":"m.text"},"ts":1495527200000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"There's definitely nothign wrong with ahving spaces in a term.","msgtype":"m.text"},"ts":1495527336000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: .bs or visualize.py I suppose","msgtype":"m.text"},"ts":1495527353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: That said, I don't see \"preload destination\" in the ref database.","msgtype":"m.text"},"ts":1495527376000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: hmm yeah, also addition of txt I guess","msgtype":"m.text"},"ts":1495527378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or changes to the .txt files? I notice a recent commit that makes changes to them","msgtype":"m.text"},"ts":1495527422000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: that's probably because I just made it up and didn't know I should also add it to a ref database :)","msgtype":"m.text"},"ts":1495527431000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"also s/preload destination/potential destination/","msgtype":"m.text"},"ts":1495527457000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Oh! Jeez, no wonder I was confused when reading the PR. ^_^","msgtype":"m.text"},"ts":1495527475000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yoav: I can review later today, but I'd have the steps in opposite order; early return for fetch, then assert it's a destination, then return input","msgtype":"m.text"},"ts":1495527491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK, I'll reverse them","msgtype":"m.text"},"ts":1495527511000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"In the PR, you'll get a linking error because you're not defining a \"potential destination\" term; you're defining \"potential-destination\".","msgtype":"m.text"},"ts":1495527516000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: yeah I suppose","msgtype":"m.text"},"ts":1495527529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: doh!","msgtype":"m.text"},"ts":1495527538000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"TabAtkins: Still getting the error after deleting the \"-\"","msgtype":"m.text"},"ts":1495527592000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"...and replacing it with a space?","msgtype":"m.text"},"ts":1495527611000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1495527619000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Push the change; you shouldn't be having any trouble.","msgtype":"m.text"},"ts":1495527671000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yoav: I don't think it's worth having a dfn for that","msgtype":"m.text"},"ts":1495527691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: if you wanted to define such a term you'd define it as a superset of destination","msgtype":"m.text"},"ts":1495527755000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK, I'll remove it then","msgtype":"m.text"},"ts":1495527756000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Can replace it with just a |var| if you want the styling.","msgtype":"m.text"},"ts":1495527798000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: but we do need HTML to link to it later on. Can we do that without a dfn?","msgtype":"m.text"},"ts":1495527831000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1495527859000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: pushed the change in the mean time. I still see the error (but I'm sure I'm holding it wrong :D)","msgtype":"m.text"},"ts":1495527917000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I'm extremely confused by what's going on here.","msgtype":"m.text"},"ts":1495528287000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: confused by my patch, or by the error?","msgtype":"m.text"},"ts":1495528354000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: then you need to define it as a distinct type","msgtype":"m.text"},"ts":1495528452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The error.","msgtype":"m.text"},"ts":1495528476000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'll check more on this before bed, in heading to dinner now.","msgtype":"m.text"},"ts":1495528527000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Thanks :)","msgtype":"m.text"},"ts":1495528628000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: pointers to an example of defining as a distinct type?","msgtype":"m.text"},"ts":1495528651000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: see eg dfn of method","msgtype":"m.text"},"ts":1495528829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: X is \"fetch\" or a destination","msgtype":"m.text"},"ts":1495528852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: on mobile due to sick kid btw","msgtype":"m.text"},"ts":1495528871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hence poor latency","msgtype":"m.text"},"ts":1495528894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looking, and no worries RE latency. I know what it's like","msgtype":"m.text"},"ts":1495529006000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"TabAtkins: Split out the definition. Now I'm longer seeing the error","msgtype":"m.text"},"ts":1495529397000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: uploaded. Let me know what you think (when you have time)","msgtype":"m.text"},"ts":1495529431000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Oh shoot, I realize what's up with the error now.","msgtype":"m.text"},"ts":1495530205000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Looks like I don't special-case for=/ on a dfn to mean \"no for value\". So it was registering it with a for of /, which you can't actually specify on a link.","msgtype":"m.text"},"ts":1495530287000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"When you split out the definition, you also just removed the for attribute from the dfn, which resolved the issue.","msgtype":"m.text"},"ts":1495530368000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is a Bikeshed bug, tho.","msgtype":"m.text"},"ts":1495530386000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: OK, cool. Happy to find bikeshed bugs by doing things you normally wouldn't :D","msgtype":"m.text"},"ts":1495531032000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"does the fetch spec say something about what should happen when the promise returned by fetch is resolved, but there is no scheduled work on the event loop (and so technically, we don't enter a microtask checkpoint)?","msgtype":"m.text"},"ts":1495533613000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: HTML would say something about that, but that can't really happen, since fetch resolves the promise from a task","msgtype":"m.text"},"ts":1495533697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: in fact, promises never resolve without a task being involved","msgtype":"m.text"},"ts":1495535733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, found it","msgtype":"m.text"},"ts":1495536867000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"TabAtkins: while you're around and fixing BS bugs…","msgtype":"m.text"},"ts":1495549967000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: I'm having an issue where BS seems to rewrite an inline SVG","msgtype":"m.text"},"ts":1495549988000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: removing the namespace in the process, which then gets rejected by echidna's HTML validator.","msgtype":"m.text"},"ts":1495550035000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"if that is about the xlink:href vs href I fixed that in the HTML checker at the end of last week","msgtype":"m.text"},"ts":1495550123000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if it’s about some other error I can fix that too","msgtype":"m.text"},"ts":1495550143000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: how do you know this?","msgtype":"m.text"},"ts":1495550178000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"assuming it’s another case where the SVG changed the doc-confoormaces requirements in SVG2","msgtype":"m.text"},"ts":1495550190000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I have no idea. This thing displays is the limit of my understanding of namespaces in SVG","msgtype":"m.text"},"ts":1495550234000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"MikeSmith: can I point you to the error, BS source and output?","msgtype":"m.text"},"ts":1495550256000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"well as far as SVG checking I can make the checker do whatever creates the least problems for people trying to get real work done","msgtype":"m.text"},"ts":1495550263000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tobie: sure","msgtype":"m.text"},"ts":1495550266000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: source: https://github.com/w3c/sensors/blob/9335c1fa027fe309a3fd13b98914b7d479968252/index.bs#L735-L800","msgtype":"m.text"},"ts":1495550279000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"no version of the SVG spec has ever clearly stated actual doc-conformance requirements consistently anyway","msgtype":"m.text"},"ts":1495550316000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1495550319000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: echidna error: https://labs.w3.org/echidna/api/status?id=916cf371-4630-491c-abd6-c663b65e6bbd","msgtype":"m.text"},"ts":1495550333000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"looks again","msgtype":"m.emote"},"ts":1495550360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: validator error: https://validator.w3.org/nu/?doc=http://owl.w3.org//916cf371-4630-491c-abd6-c663b65e6bbd/Overview.html","msgtype":"m.text"},"ts":1495550362000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"MikeSmith: Bikeshed output of SVG: https://gist.github.com/tobie/d4a0e43cc7781fec2daa933674d099f5","msgtype":"m.text"},"ts":1495550434000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ah I think that is a bikeshed bug","msgtype":"m.text"},"ts":1495550458000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":" <svg height=\"79pt\" viewBox=\"0.00 0.00 351.00 78.51\" width=\"351pt\" xlink=\"http://www.w3.org/1999/xlink\" xmlns=\"http://www.w3.org/2000/svg\">","msgtype":"m.text"},"ts":1495550473000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yup: the namespaces are all gone","msgtype":"m.text"},"ts":1495550485000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I guess that should be xmlns:xlink=\"http://www.w3.org/1999/xlink\"","msgtype":"m.text"},"ts":1495550500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so yeah I can'","msgtype":"m.text"},"ts":1495550523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*I can’t really fix that in the checker","msgtype":"m.text"},"ts":1495550536000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because there is no “xlink” attribute defined anywhere","msgtype":"m.text"},"ts":1495550566000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Filing an issue against BS. Thanks for the help!","msgtype":"m.text"},"ts":1495550673000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1495550704000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins/MikeSmith: for reference: https://github.com/tabatkins/bikeshed/issues/1029","msgtype":"m.text"},"ts":1495551228000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"@jyasskin, @mounir, others: what are your thoughts on using \"user triggered activation\" as \"information about the user’s intent\" to determine whether to prompt or grant permission?","msgtype":"m.text"},"ts":1495552752000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Maybe @annevk also ^","msgtype":"m.text"},"ts":1495553626000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Here's the PR on this topic: https://github.com/w3c/sensors/pull/207","msgtype":"m.text"},"ts":1495553717000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: what other information do you have?","msgtype":"m.text"},"ts":1495554508000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's a good question.","msgtype":"m.text"},"ts":1495555049000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: It's very easy to trick a user into providing activation, so it's not a reliable way to infer intent. I like demanding it for permission prompts because it helps avoid a popup-by-surprise and possibly clickjacking, but even that's gotten objections for the case where the entire point of a URL is to use a certain permission.","msgtype":"m.text"},"ts":1495555460000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"tobie: I'm having trouble following the English in that PR. Is it just saying that some readings are only very slightly sensitive, so we don't need actual user consent to give them out, just evidence that the user has noticed the page?","msgtype":"m.text"},"ts":1495555578000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Ojan has been looking at some of that sort of feature for interventions. e.g. https://groups.google.com/a/chromium.org/d/topic/blink-dev/MRWIaGY4Txg/discussion for beforeunload and https://groups.google.com/a/chromium.org/d/topic/blink-dev/51WbTwn0M_Y/discussion for autoplaying audio","msgtype":"m.text"},"ts":1495555729000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I think the objection was more involved than that","msgtype":"m.text"},"ts":1495556668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: the objection was that if you don't persist the permission, the UX becomes really bad if the permission prompt effectively requires two interactions","msgtype":"m.text"},"ts":1495556712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: so by requiring user interaction, you effectively require persisting the permission","msgtype":"m.text"},"ts":1495556743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Was there an example of that badness for pages that weren't requesting on load?","msgtype":"m.text"},"ts":1495556753000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"e.g. it's probably a good thing to make foonews.com wait to ask for your location until after you've interacted.","msgtype":"m.text"},"ts":1495556822000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: so the sensitiveness of the readings is highly debatable AND depends on the kind of sensors","msgtype":"m.text"},"ts":1495556824000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: not sure, I wasn't too closely involved","msgtype":"m.text"},"ts":1495556857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I think it'd be totally reasonable for some sensors to decide that they lie in that intermediate-sensitivity region, but I'm uncomfortable saying that the activation conveys user intent.","msgtype":"m.text"},"ts":1495556960000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Or, I suppose, uncomfortable saying that it conveys intent to grant that particular sensor. It's intent to interact with the page.","msgtype":"m.text"},"ts":1495556996000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"tobie: I'll comment.","msgtype":"m.text"},"ts":1495557025000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: thank you","msgtype":"m.text"},"ts":1495557037000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: to answer your previous question, I don't think we have much info to determine user intent.","msgtype":"m.text"},"ts":1495557116000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I'm especially concerned about malicious use of motion sensors on drive-by sites.","msgtype":"m.text"},"ts":1495557163000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: you might have noticed that we're removing these sensors from Fx","msgtype":"m.text"},"ts":1495557254000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, jyasskin: I would considered tying sensor access to PWA installed status or similar. The use cases really involve app status, not drive-by websites.","msgtype":"m.text"},"ts":1495557271000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it's unclear if we'll add them back at this point, given that asking the user about them seems like a hard problem","msgtype":"m.text"},"ts":1495557283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the ambient light stuff.","msgtype":"m.text"},"ts":1495557285000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: but are you going to remove also the motion sensors?","msgtype":"m.text"},"ts":1495557304000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Installation definitely indicates user intent.","msgtype":"m.text"},"ts":1495557327000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I don't know","msgtype":"m.text"},"ts":1495557335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: I agree.","msgtype":"m.text"},"ts":1495557336000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: they have similar issues but much more interesting use cases (indoor navigation, gaming, WebVR, etc.)","msgtype":"m.text"},"ts":1495557354000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'm not a big fan of the whole PWA thing, it's not very webby","msgtype":"m.text"},"ts":1495557358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, it's much more webby than any of the previous iteration we've seen.","msgtype":"m.text"},"ts":1495557407000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: when you have time please check https://stackoverflow.com/questions/44121783/fetch-api-default-cross-origin-behavior/44125919#44125919 and comment/correct/answer","msgtype":"m.text"},"ts":1495557834000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jyasskin: filed https://github.com/w3c/sensors/issues/211","msgtype":"m.text"},"ts":1495557848000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: FWIW, an installed PWA is a bookmark with better UI. We couldn't infer intent from bookmarks because users tended to accumulate them indefinitely, but we think there's some pressure to \"uninstall\" PWAs that you're not using, since they clutter your launch screen, so we're more willing to infer intent from them.","msgtype":"m.text"},"ts":1495558475000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]