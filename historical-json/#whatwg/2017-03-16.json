[
{"content":{"body":"tobie: You're in a reasonable time zone, right? :) Do you have a few minutes to help me out with some IDLish questions?","msgtype":"m.text"},"ts":1489651090000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Morning","msgtype":"m.text"},"ts":1489651177000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mkwst: I can give it a try.","msgtype":"m.text"},"ts":1489651183000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Morning!","msgtype":"m.text"},"ts":1489651195000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I've got a flu, so bear with me if I'm slow at understanding things. :)","msgtype":"m.text"},"ts":1489651251000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I'm trying to do a better job explaining the extension model of https://w3c.github.io/webappsec-credential-management/. Today, it does very hand-wavey things in https://w3c.github.io/webappsec-credential-management/#request-credential (step 5 and beyond).","msgtype":"m.text"},"ts":1489651258000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I'd like them to be less hand-wavey.","msgtype":"m.text"},"ts":1489651263000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"As a short explanation:","msgtype":"m.text"},"ts":1489651281000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"`get()` accepts a dictionary that specifies what kind of objects the developer wants. `{ type1: true, type2: { long: 'list', of: 'filters' } }`.","msgtype":"m.text"},"ts":1489651337000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"The current spec converts from the dictionary keys to interfaces more or less by fiat.","msgtype":"m.text"},"ts":1489651399000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"And then does some weird things about walking the ancestor tree to figure out whether it can service a request for `type1` and `type2` at the same time.","msgtype":"m.text"},"ts":1489651420000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"And then switches on an interface type, which I'm not sure we can actually do. ;)","msgtype":"m.text"},"ts":1489651436000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://w3c.github.io/webappsec-credential-management/base.html attempts to clarify.","msgtype":"m.text"},"ts":1489651450000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://w3c.github.io/webappsec-credential-management/base.html#credential-internal-methods defines some internal methods on the interface object exposed by the IDL interface.","msgtype":"m.text"},"ts":1489651493000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"And https://w3c.github.io/webappsec-credential-management/base.html#algorithm-request tries to map the dictionary keys to interfaces by walking the interface objects.","msgtype":"m.text"},"ts":1489651544000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"step 5ish.","msgtype":"m.text"},"ts":1489651553000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(Sorry to everyone else in the channel who's probably not interested. ;) )","msgtype":"m.text"},"ts":1489651566000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: you can let IDL handle the initial parsing, and then you need to parse again based on the type parameter","msgtype":"m.text"},"ts":1489651725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: permissions has a similar setup","msgtype":"m.text"},"ts":1489651738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: maybe if enough copycats emerge the whole pattern can be uplifted to IDL somehow","msgtype":"m.text"},"ts":1489651760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Also personally I take interest in all things #whatwg :-p)","msgtype":"m.text"},"ts":1489651828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: sounds like you got all the info you needed and I can go back to sleep.","msgtype":"m.text"},"ts":1489651960000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I'm skimming through the permissions spec. It doesn't seem terribly clear to me.","msgtype":"m.text"},"ts":1489652264000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: https://w3c.github.io/permissions/#permissions-interface is the bit I think","msgtype":"m.text"},"ts":1489652319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I recommend asking jyasskin","msgtype":"m.text"},"ts":1489652324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll poke him. Thanks!","msgtype":"m.text"},"ts":1489652336000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: if you file an issue somewhere, I'm happy to give it a look too once my cognitive functions are back to normal.","msgtype":"m.text"},"ts":1489653276000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: I don’t understand https://github.com/html5lib/html5lib-tests/issues/89#issuecomment-287013694","msgtype":"m.text"},"ts":1489659783000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"isn’t the “content” string just some internal thing used for html5lib-tests?","msgtype":"m.text"},"ts":1489659841000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: there should be a line `|       content` after <template>","msgtype":"m.text"},"ts":1489659843000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"per spec?","msgtype":"m.text"},"ts":1489659857000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh the serializer?","msgtype":"m.text"},"ts":1489659873000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or what?","msgtype":"m.text"},"ts":1489659884000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well there is no actual spec for this. but i thought part of the point of parsetree was that it could be copy-pasted into html5lib-tests .dat files","msgtype":"m.text"},"ts":1489659906000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1489659919000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah I guess that’s true","msgtype":"m.text"},"ts":1489659928000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"make sense","msgtype":"m.text"},"ts":1489659942000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so yeah I can add that","msgtype":"m.text"},"ts":1489659945000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks :-)","msgtype":"m.text"},"ts":1489659957000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: sad external legacy Windows software is sad","msgtype":"m.text"},"ts":1489660892000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: I don't have anything smart to say to the node folks about that","msgtype":"m.text"},"ts":1489660914000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: thanks","msgtype":"m.text"},"ts":1489660917000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah. i still don't understand why he prefers utf-16 with BOM over utf-8 with BOM, though","msgtype":"m.text"},"ts":1489660931000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: does the external legacy thing grok UTF-8 with BOM?","msgtype":"m.text"},"ts":1489660951000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: he said that utf-8 without BOM is decoded as \"Ansi\", but didn't say anything about utf-8 with BOM. It appears he saw the \"Unicode\" label and decided to stick to that option","msgtype":"m.text"},"ts":1489661060000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I commented after all","msgtype":"m.text"},"ts":1489661090000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"goes back to removing UTF-16 output capability from Gecko","msgtype":"m.emote"},"ts":1489661123000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: pointer to this node issue?","msgtype":"m.text"},"ts":1489661737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/nodejs/node/issues/11767","msgtype":"m.text"},"ts":1489661764000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mkwst: we have a few HTTP auth tests for XMLHttpRequest","msgtype":"m.text"},"ts":1489662003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: if you actually remove that functionality those will all have to be adjusted somehow","msgtype":"m.text"},"ts":1489662020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I'd be somewhat surprised though if nobody relies on it in the wild","msgtype":"m.text"},"ts":1489662029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hrm?","msgtype":"m.text"},"ts":1489662073000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: Sorry, I'm missing context.","msgtype":"m.text"},"ts":1489662082000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I thought you were planning on making the user/password arguments to open() useless","msgtype":"m.text"},"ts":1489662150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: per https://github.com/whatwg/fetch/pull/465","msgtype":"m.text"},"ts":1489662167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I just posted a web-platform-tests PR fixing some authentication-related tests that uses that functionality, figured I'd let you know","msgtype":"m.text"},"ts":1489662198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Got it, sorry. Yes, I am planning to do that. Yes, it will require adjustments to tests. Yes, it might break things. The metrics look low enough that it's worth trying.","msgtype":"m.text"},"ts":1489662203000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Just took me a minute to page that back in, sorry. :)","msgtype":"m.text"},"ts":1489662229000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"The stable version of Chrome that's rolling out now has a deprecation message in the console for that kind of usage. Let's see who comes at me with pitchforks.","msgtype":"m.text"},"ts":1489662270000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: Mozilla's old tree management tools relied on it. TreeHerder doesn't, IIRC.","msgtype":"m.text"},"ts":1489663017000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: Around?","msgtype":"m.text"},"ts":1489663564000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yes","msgtype":"m.text"},"ts":1489663574000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://github.com/html5lib/html5lib-tests/pull/87/files#diff-80f44ad8658d9cc87ce967f7514ebf8dR227","msgtype":"m.text"},"ts":1489663604000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: How come the template element ends up with a plaintext child?","msgtype":"m.text"},"ts":1489663619000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: https://github.com/html5lib/html5lib-tests/issues/89","msgtype":"m.text"},"ts":1489663638000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Thanks!","msgtype":"m.text"},"ts":1489663653000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: Somehow couldn't find it.","msgtype":"m.text"},"ts":1489663658000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: I am wondering if should I emit “content” even for <template></template>","msgtype":"m.text"},"ts":1489663840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://github.com/html5lib/html5lib-tests/blob/27724be8d27a1232a8809a55f9c37b69706cb03e/tree-construction/template.dat#L33","msgtype":"m.text"},"ts":1489663904000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah OK good that makes things easier","msgtype":"m.text"},"ts":1489663933000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1489663935000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: https://checker.html5.org/parsetree/?parser=html5&content=%3C%21doctype+html%3E%3Ctemplate%3E%3Cplaintext%3Ea%3C%2Ftemplate%3Eb&submit=Print+Tree","msgtype":"m.text"},"ts":1489665319000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: sweet, thank you","msgtype":"m.text"},"ts":1489665371000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thanks for the heads-up","msgtype":"m.text"},"ts":1489665395000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: hsivonen you may find https://github.com/bspammer/vimcryption entertaining","msgtype":"m.text"},"ts":1489666085000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: heh","msgtype":"m.text"},"ts":1489671042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hum, so this stash thing in wptserve appears to be super unreliable","msgtype":"m.text"},"ts":1489674313000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"when I load a stylesheet that references and image that stashes something","msgtype":"m.text"},"ts":1489674331000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"and in the onload handler for the stylesheet (after checking via getComputedStyle to make sure the image was really loaded), and load the image via an xhr again, every few tries, it can't find anything stashed in the server","msgtype":"m.text"},"ts":1489674379000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jgraham: ^","msgtype":"m.text"},"ts":1489674826000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jochen__: Can you make a testcase for me to look at? We have some tests using it that I don't think are unreliable, but it could be broken","msgtype":"m.text"},"ts":1489674875000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mkwst: Sorry permissions wasn't clear.","msgtype":"m.text"},"ts":1489678030000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: Sorry I'm dumb! :)","msgtype":"m.text"},"ts":1489678049000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"It looks like it's binding things to strings, and it's just not clear to me how that's expected to work from a spec perspective.","msgtype":"m.text"},"ts":1489678081000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"But I read it quickly, so I likely missed something important.","msgtype":"m.text"},"ts":1489678089000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: Permissions says, here's a mapping of strings to dictionary types. The mapping is held in the base standard, but the dictionaries may be defined in the extension standards.","msgtype":"m.text"},"ts":1489678190000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"mkwst: That's to make it easier to read: you don't have to divine the entire universe of extensions to understand the code. You have the whole set in one place.","msgtype":"m.text"},"ts":1489678243000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"i.e. \"the set of interfaces whose inherited interfaces contain Credential.\" is a clever way to do the same thing, but I think it'll make the spec harder to follow.","msgtype":"m.text"},"ts":1489678280000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jgraham: https://github.com/w3c/web-platform-tests/pull/5160","msgtype":"m.text"},"ts":1489678286000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"The downside of the Permissions approach is that we have to keep updating the core spec, which is less compatible with the W3C's processes.","msgtype":"m.text"},"ts":1489678323000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: In my head, it's simpler, because it's pointing at concepts that exist in IDL, and I wanted to avoid making the spec a registry.","msgtype":"m.text"},"ts":1489678328000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Right, that.","msgtype":"m.text"},"ts":1489678330000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I think your wording is effective, but it's a COMEFROM label, which I try to avoid. :)","msgtype":"m.text"},"ts":1489678408000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"mkwst: Also, today's my day off for baby care, so I'll be around irregularly.","msgtype":"m.text"},"ts":1489678479000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"eh, if intercal can do it, it's ok","msgtype":"m.text"},"ts":1489678495000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jyasskin: I guess I see it as an implicit registry, but I totally get that it's confusing (and I'm not sure I'm using the right IDL language anyway).","msgtype":"m.text"},"ts":1489678518000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"jyasskin: Also also, go take care of a baby! They're cuter than me and need more attention. :)","msgtype":"m.text"},"ts":1489678543000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"We don't have a *good* way to do registries yet, so each author gets to pick their least-bad way.","msgtype":"m.text"},"ts":1489678582000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jochen__: OK, ,I'll take a look. Thanks","msgtype":"m.text"},"ts":1489678876000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jochen__: /referrer-policy/css-integration/external-stylesheet.html doesn't exist in that PR?","msgtype":"m.text"},"ts":1489680925000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"meh","msgtype":"m.text"},"ts":1489680969000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jgraham: updated the PR","msgtype":"m.text"},"ts":1489682156000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: Isn't the problem here just that images aren't critical subresources of stylesheets","msgtype":"m.text"},"ts":1489683809000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So when the load event fires the image hasn't necessarily put anything in the stash yet","msgtype":"m.text"},"ts":1489683835000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So your test is racy?","msgtype":"m.text"},"ts":1489683842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if you look at the console output, you'll see that the heightof the background-image is known before I even start the XHR","msgtype":"m.text"},"ts":1489683850000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"that means that the part of image.py the stashes (which happens before I even generate the image) should have completed","msgtype":"m.text"},"ts":1489683882000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: And yet the logging I have shows","msgtype":"m.text"},"ts":1489684145000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Took data from stash","msgtype":"m.text"},"ts":1489684146000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"application/json","msgtype":"m.text"},"ts":1489684146000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Put data in stash","msgtype":"m.text"},"ts":1489684146000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Generated image","msgtype":"m.text"},"ts":1489684146000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jochen__: that only means it knows the height of the div, not that it has loaded or painted the image","msgtype":"m.text"},"ts":1489684152000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Right, it's probably telling you your font size * line height","msgtype":"m.text"},"ts":1489684190000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the computed height of the div is totally unrelated to the image I'm pretty sure","msgtype":"m.text"},"ts":1489684284000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hum","msgtype":"m.text"},"ts":1489684291000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"zcorpan suggested to use that :)","msgtype":"m.text"},"ts":1489684299000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"is there a good way to wait for the image to be loaded?","msgtype":"m.text"},"ts":1489684326000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"I agree that gives you a good prior, but even zcorpan is wrong occasionally (it is rumored)","msgtype":"m.text"},"ts":1489684341000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"isn't entirely sure about behaviour around `content` property here","msgtype":"m.emote"},"ts":1489684342000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well and ::before is an extra layer of complexity","msgtype":"m.text"},"ts":1489684369000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so the content property makes it a replaced element, but pending the load of the image it has no intrinsic width/height","msgtype":"m.text"},"ts":1489684370000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so, uh, idk","msgtype":"m.text"},"ts":1489684414000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Anyway the server logs don't support the idea that the loads happen in the order you think","msgtype":"m.text"},"ts":1489684474000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"This is where you use test.step_yolo","msgtype":"m.text"},"ts":1489685025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean test.step_timeout","msgtype":"m.text"},"ts":1489685031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"test.make_intermittent would have been a good and accurate name","msgtype":"m.text"},"ts":1489685167000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"test.step_on_jugglinmike","msgtype":"m.text"},"ts":1489685222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What the what https://bugs.webkit.org/show_bug.cgi?id=25893","msgtype":"m.text"},"ts":1489700749000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(tales from the crypt of time)","msgtype":"m.text"},"ts":1489700756000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: food for thought, maybe... we have this new library for parsing and canonicalizing urls, and one of the things it does is pull apart parsing and canonicalization into separate steps... i wonder if you think that might be a good idea for the whatwg spec, or if conversely there's some reason why that approach is incorrect","msgtype":"m.text"},"ts":1489703200000,"senderName":"noah","senderId":"noah@irc"},
{"content":{"body":"see https://github.com/iipc/urlcanon/blob/master/python/urlcanon/parse.py and https://github.com/iipc/urlcanon/blob/master/python/urlcanon/canon.py","msgtype":"m.text"},"ts":1489703207000,"senderName":"noah","senderId":"noah@irc"},
{"content":{"body":"annevk: Is there anything particular you want us to tackle at the service worker f2f in terms of fetch? I'm going to 'present' the fetch control/cancelation stuff.","msgtype":"m.text"},"ts":1489707811000,"senderName":"JakeA","senderId":"JakeA@irc"}
]