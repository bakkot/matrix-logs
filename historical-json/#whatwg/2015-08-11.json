[
{"content":{"body":"MikeSmith: Any update on the CSS Validator repo migration?","msgtype":"m.text"},"ts":1439255160000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"ato?","msgtype":"m.text"},"ts":1439256625000,"senderName":"tripu","senderId":"tripu@irc"},
{"content":{"body":"tripu: Hi.","msgtype":"m.text"},"ts":1439257100000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"cvrebert: probably will get to it today","msgtype":"m.text"},"ts":1439257649000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: \\o/","msgtype":"m.text"},"ts":1439257671000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"\"You’ve been removed from the Web Platform Testing and Tools Pushers team on the World Wide Web Consortium organization.\" I wonder what I did","msgtype":"m.text"},"ts":1439269855000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: nothingーyou still have push perms","msgtype":"m.text"},"ts":1439270238000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that team was redundant","msgtype":"m.text"},"ts":1439270260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: is there a way to invoke the basic URL parser without a base URL in browsers, except indirectly? I tried setting <base href=\"url-to-parse\"> and then investing <a href=\"#\">.href, but it parsed url-to-parse relative to the page's \"real\" URL.","msgtype":"m.text"},"ts":1439270583000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I know you can do it with new URL(\"url-to-parse\") but I was wondering if there were another context I could try, especially one that isn't allowed to fail.","msgtype":"m.text"},"ts":1439270610000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: set <base> to about:blank","msgtype":"m.text"},"ts":1439270648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: roughly equivalent","msgtype":"m.text"},"ts":1439270653000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: not sure it works reliably in IE/Edge though","msgtype":"m.text"},"ts":1439270670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't seem to work in Chrome...","msgtype":"m.text"},"ts":1439270674000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1439270696000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: test:test seems to work in Chrome...","msgtype":"m.text"},"ts":1439270744000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh nice!","msgtype":"m.text"},"ts":1439270759000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://jsbin.com/someje/edit?html,console,output is fun","msgtype":"m.text"},"ts":1439270780000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"\" in Chrome, \"/\\\\example.jpg\" in Firefox, \"https://null.jsbin.com///example.jpg\" in IE11","msgtype":"m.text"},"ts":1439270868000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's as if all this code was written without a well-specified standard","msgtype":"m.text"},"ts":1439270938000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or worse, off of RFCs","msgtype":"m.text"},"ts":1439270943000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Firefox' output is correct, if you hit a fatal parse error you just return the input","msgtype":"m.text"},"ts":1439270987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(it's fatal since there's no base URL)","msgtype":"m.text"},"ts":1439270996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: how does it match Chrome?","msgtype":"m.text"},"ts":1439271082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Chrome matches when parsed with base URL","msgtype":"m.text"},"ts":1439271195000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Firefox matches without one","msgtype":"m.text"},"ts":1439271209000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh right, Firefox doesn't handle backslashes correctly yet","msgtype":"m.text"},"ts":1439271231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's an open bug on that","msgtype":"m.text"},"ts":1439271247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: for https://github.com/whatwg/loader/issues/62 I think ideally we end up with something similar to custom elements","msgtype":"m.text"},"ts":1439271377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: although I guess it's not quite lifecycle methods, but it's somewhat close","msgtype":"m.text"},"ts":1439271396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah yeah interesting parallel","msgtype":"m.text"},"ts":1439271435000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That argues for symbols at least","msgtype":"m.text"},"ts":1439271454000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith: https://blogs.oracle.com/maryanndavidson/entry/no_you_really_can_t seems like something you'd enjoy reading","msgtype":"m.text"},"ts":1439275582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1439275598000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: needs more photos","msgtype":"m.text"},"ts":1439276084000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but \"Bug bounties are the new boy band\" is good","msgtype":"m.text"},"ts":1439276090000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there should be a reverse bug-bounty thing, where if you try to get attention by claiming some product/spec has a security vulnerability and it turns out to not really be true, you have to give money to a community fund that then gets paid out to people who find real security vulnerabilities","msgtype":"m.text"},"ts":1439276259000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<<Otherwise everyone would hire a consultant to say (legal terms follow) “Nanny, nanny boo boo, big bad consultant can do X even if the customer can’t!”>>","msgtype":"m.text"},"ts":1439276301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The entire premise though of security by obscurity seems so wrong... I'm somewhat baffled this person is the CTO.","msgtype":"m.text"},"ts":1439276363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: actually, Chief Security Officer, right?","msgtype":"m.text"},"ts":1439276686000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and speaking of security by obscurity I notice that Oracle's state-of-the-art blogging tool identifies her as \"User701213-Oracle\" in the byline","msgtype":"m.text"},"ts":1439276775000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that inspires a lot of confidence","msgtype":"m.text"},"ts":1439276785000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"especially since the gist of the piece is basically \"Trust us, we know what we're doing.\"","msgtype":"m.text"},"ts":1439276822000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"abc.wtf is kinda funny","msgtype":"m.text"},"ts":1439280967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So what's this Alphabet thing?","msgtype":"m.text"},"ts":1439282031000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: most plausible explanation I saw was that it's a trick to pay less tax, but I don't understand US tax law so I don't really know if that's the real reason","msgtype":"m.text"},"ts":1439282433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: when a listener callback is executed (https://dom.spec.whatwg.org/#dispatching-events), is that calling a callback as per https://html.spec.whatwg.org/#clean-up-after-running-a-callback ?","msgtype":"m.text"},"ts":1439285607000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: this is the dust thing I mentioned","msgtype":"m.text"},"ts":1439285631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ahh ok","msgtype":"m.text"},"ts":1439285645000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: see the bugs blocking https://www.w3.org/Bugs/Public/show_bug.cgi?id=17713","msgtype":"m.text"},"ts":1439285674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Chrome's implementation performs a microtask checkpoint per listener, Firefox doesn't","msgtype":"m.text"},"ts":1439285687000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the idea though, is yes","msgtype":"m.text"},"ts":1439285690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: Firefox does too, just not for promises","msgtype":"m.text"},"ts":1439285706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ahh I see. I'll test this with mutation observers","msgtype":"m.text"},"ts":1439285781000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: are you using FirefoxNightly btw?","msgtype":"m.text"},"ts":1439285849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, will test that now","msgtype":"m.text"},"ts":1439285857000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: yeah, still wrong in Nightly","msgtype":"m.text"},"ts":1439286018000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hmm, I cannot find the bug in Nightly","msgtype":"m.text"},"ts":1439286028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://jsbin.com/zetoya/edit?console,output","msgtype":"m.text"},"ts":1439286055000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"click the blue square","msgtype":"m.text"},"ts":1439286068000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1439286140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Was display: -webkit-flexbox a thing?","msgtype":"m.text"},"ts":1439287323000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: some search results suggest display: -webkit-flex is","msgtype":"m.text"},"ts":1439287767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith, https://blog.mozilla.org/community/2015/08/10/firefox-40-new-contributors/","msgtype":"m.text"},"ts":1439292059000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: w00t","msgtype":"m.text"},"ts":1439292190000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wonder when do I start getting the royalty checks","msgtype":"m.text"},"ts":1439292214000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, can you add csswg-test to the testing teams on github?","msgtype":"m.text"},"ts":1439292524000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: which teams exactly?","msgtype":"m.text"},"ts":1439292555000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":" Web Platform Testing / Web Platform Testing and Tools Owners","msgtype":"m.text"},"ts":1439292583000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1439292702000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"done I think","msgtype":"m.text"},"ts":1439292706000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yep, thanks","msgtype":"m.text"},"ts":1439292720000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: https://html5.org/temp/fetch-newcontext.html","msgtype":"m.text"},"ts":1439294984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looks good. Why does imgset get an initiator?","msgtype":"m.text"},"ts":1439295325000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I can see why xslt-styles are their own thing, given the CSP rule, but why an initiator rather than type?","msgtype":"m.text"},"ts":1439295402000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you'd want type = \"xslt\"?","msgtype":"m.text"},"ts":1439295441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I opted for initiator since I expected \"xslt\" to maybe be removed at some point and initiator is not exposed","msgtype":"m.text"},"ts":1439295464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess it doesn't matter much either way...","msgtype":"m.text"},"ts":1439295475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's a good enough reason","msgtype":"m.text"},"ts":1439295485000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: \"imageset\" is needed for Mixed Content","msgtype":"m.text"},"ts":1439295495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and again, since initiator is not exposed...","msgtype":"m.text"},"ts":1439295503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ahh good point","msgtype":"m.text"},"ts":1439295515000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I take it audio/video/track have different enough requests to warrant their own type?","msgtype":"m.text"},"ts":1439295526000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"rather than just media","msgtype":"m.text"},"ts":1439295531000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I would expect them to have their own Accept header","msgtype":"m.text"},"ts":1439295541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: which is one of the things we use context for today","msgtype":"m.text"},"ts":1439295555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we also use context to enforce X-Content-Type-Options: nosniff for which we'd also need these distinguished","msgtype":"m.text"},"ts":1439295578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: would fetch's type become settable?","msgtype":"m.text"},"ts":1439295697000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't see how we could do that and use it as a security mechanism at the same time, unless we restrict how the response is used","msgtype":"m.text"},"ts":1439295763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, that follows. I guess there could be Request.asType('image', url, opts), but it only affects headers, not underlying type (or sets some kind of \"imitating type\")","msgtype":"m.text"},"ts":1439295894000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: this looks really good. Nice one.","msgtype":"m.text"},"ts":1439295968000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, I think for igrigorik's use cases we'd include an additional axis of sorts","msgtype":"m.text"},"ts":1439296012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: \"as type\" or \"pretend type\" or some such, that's simply not used for security","msgtype":"m.text"},"ts":1439296034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Makes sense","msgtype":"m.text"},"ts":1439296052000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"For <link rel=\"prefetch\"> etc, setting actual type should be fine, as only the correct type will get a cache match on that","msgtype":"m.text"},"ts":1439296112000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But fetch(request) should always be connect-src","msgtype":"m.text"},"ts":1439296169000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: does Chrome always use a browsing context for <object>?","msgtype":"m.text"},"ts":1439296960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: afaict Chrome does something different from Firefox","msgtype":"m.text"},"ts":1439296976000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know off the top of my head, I'll find someone to bug about that when SF wakes up. I'm not sure how I'd test that","msgtype":"m.text"},"ts":1439297043000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: When I click something on the page, how is the dispatch of the event queued? Is it a task?","msgtype":"m.text"},"ts":1439297072000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"actually, thought of a way to test the object thing","msgtype":"m.text"},"ts":1439297125000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I've been playing with http://software.hixie.ch/utilities/js/live-dom-viewer/ and <object data=document> vs <object data=image>","msgtype":"m.text"},"ts":1439297127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: for the latter contentDocument is null in Firefox, but in Chrome you still get a document","msgtype":"m.text"},"ts":1439297145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: In Firefox you only get a contentDocument if you do <a target=x href=image>...</a> against <object data=document name=x>","msgtype":"m.text"},"ts":1439297190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://jsbin.com/jeruku/edit?console,output - no contentDocument on this","msgtype":"m.text"},"ts":1439297266000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"click events don't get trapped either","msgtype":"m.text"},"ts":1439297276000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"whoa how is that different","msgtype":"m.text"},"ts":1439297376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Does it depend on whether or not you document.write() the <object> in Chrome?","msgtype":"m.text"},"ts":1439297410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: updated the bin. Looks the same","msgtype":"m.text"},"ts":1439297464000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If I start typing in that bin it really shouldn't try to sync your stuff from upstream","msgtype":"m.text"},"ts":1439297569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's super annoying","msgtype":"m.text"},"ts":1439297573000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh, I've stopped typing","msgtype":"m.text"},"ts":1439297600000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: see http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3589","msgtype":"m.text"},"ts":1439297675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and the difference in Chrome and Firefox","msgtype":"m.text"},"ts":1439297687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is bizarre","msgtype":"m.text"},"ts":1439297820000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I know, I was thinking we could require Chrome's behavior and always have a browsing context, but you've shown that Chrome doesn't always do that","msgtype":"m.text"},"ts":1439297860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And now I'm confused","msgtype":"m.text"},"ts":1439297869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: typemustmatch would do the trick though, right?","msgtype":"m.text"},"ts":1439297895000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: provided we defined the behavior and removed those <object> elements from being able to be targeted with <a target>...","msgtype":"m.text"},"ts":1439297945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can an object with typemustmatch and a non-document type still be navigated via <a target>?","msgtype":"m.text"},"ts":1439298010000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm not sure","msgtype":"m.text"},"ts":1439298020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That might be ok, because we still know before the response if it'll be a document or not","msgtype":"m.text"},"ts":1439298037000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, although I wonder if <object> will show its fallback content in case of a network error and whether it'll have a browsing context in that case...","msgtype":"m.text"},"ts":1439298206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I guess that's fine, it's equivalent to a hidden <iframe>, only the ones no longer part of the tree are bad","msgtype":"m.text"},"ts":1439298252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hah, I don't think I understand the processing model of object fallbacks, they don't seem to appear in the DOM","msgtype":"m.text"},"ts":1439298340000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That sounds like a bug","msgtype":"m.text"},"ts":1439298399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's certainly not what I expected","msgtype":"m.text"},"ts":1439298698000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"they definitely should be in the DOM!","msgtype":"m.text"},"ts":1439298759000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ah, I think they are, but devtool's representation is broken","msgtype":"m.text"},"ts":1439298855000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"http://output.jsbin.com/ganehi/quiet","msgtype":"m.text"},"ts":1439298860000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: is it explained anywhere that jobs and microtasks share the same queue?","msgtype":"m.text"},"ts":1439299802000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not yet","msgtype":"m.text"},"ts":1439299936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=25981","msgtype":"m.text"},"ts":1439299974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if we can work with bterlson on a better model","msgtype":"m.text"},"ts":1439300022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since awbjs wasn't too helpful","msgtype":"m.text"},"ts":1439300043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks for the link, exactly what I was looking for. https://esdiscuss.org/topic/the-initialization-steps-for-web-browsers#content-18 appears to be the closest to confirmation","msgtype":"m.text"},"ts":1439300391000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"And yeah, awbjs wasn't being too helpful in that thread","msgtype":"m.text"},"ts":1439300413000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think https://bugzilla.mozilla.org/show_bug.cgi?id=874571 and https://bugzilla.mozilla.org/show_bug.cgi?id=1169307 are the Firefox issues btw","msgtype":"m.text"},"ts":1439304012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cheers! I might get you to proofread this tomorrow if you have time","msgtype":"m.text"},"ts":1439304106000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: so does our broken microtask implementation block something significant?  looking for a way to prioritize it to get someone to work it","msgtype":"m.text"},"ts":1439304172000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: you can't promisify indexedDB https://github.com/w3c/IndexedDB/issues/27","msgtype":"m.text"},"ts":1439304231000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I wrote a promisified version of IDB, but it only works in Chrome due to the microtask thing https://github.com/jakearchibald/indexeddb-promised/blob/master/test/idb.js#L18","msgtype":"m.text"},"ts":1439304298000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you mean you can't write a polyfill that works?","msgtype":"m.text"},"ts":1439304370000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yep, there's no way to get a value & write a value within the same transaction, as promise callbacks happen too late","msgtype":"m.text"},"ts":1439304408000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"same goes for iterating over cursors","msgtype":"m.text"},"ts":1439304431000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hmm, I see... I'm not sure that's enough to raise the priority unfortunately... I guess we can ask bz when he returns from holiday","msgtype":"m.text"},"ts":1439304488000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: maybe we should write a bug about this specific problem... since not sure anyone will see it buried in the comments on the other bug","msgtype":"m.text"},"ts":1439304681000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: are you writing a patch for HTML?","msgtype":"m.text"},"ts":1439305333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: we could I guess","msgtype":"m.text"},"ts":1439305355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for what?","msgtype":"m.text"},"ts":1439305374000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you were asking for proofreading","msgtype":"m.text"},"ts":1439305386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ohh sorry, no, I'm writing an article on tasks microtasks & jobs. You mentioned the bugs right after I saw https://twitter.com/briankardell/status/631095683559387136 so thought you'd seen it","msgtype":"m.text"},"ts":1439305448000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah, I only saw your original tweet","msgtype":"m.text"},"ts":1439305500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: yay, thus proving my strategy of never actually writing anything in my blog post backlog, since other people will do so eventually anyway","msgtype":"m.text"},"ts":1439310060000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: can you emphasize how jobs are a stupid non-real-world abstraction that just make things complicated by pretending they're relevant. they make me angry.","msgtype":"m.text"},"ts":1439310092000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: JakeA: I filed https://bugzilla.mozilla.org/show_bug.cgi?id=1193394 specifically on the topic of promises and microtasks","msgtype":"m.text"},"ts":1439310096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: when can we fix awbjs mistakes? es-discuss does not make me hopeful","msgtype":"m.text"},"ts":1439310120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"give brian some time to settle in, and we'll see.","msgtype":"m.text"},"ts":1439310135000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: haha, so what should ECMAScript have done instead? Offered an API to the queue so microtasks could just use that?","msgtype":"m.text"},"ts":1439310254000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: just actually worked with the real-world concept of microtasks, IMO.","msgtype":"m.text"},"ts":1439310275000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: there seems to be an excellent opportunity for a \"Domenic is angry\" picture here","msgtype":"m.text"},"ts":1439310304000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Pretending there is this abstract separation of \"abstract job which could in theory be anything\" is silly when all engines intend to implement in the exact same way.","msgtype":"m.text"},"ts":1439310311000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"from your last blog post we know you are a wiz with photoshop...","msgtype":"m.text"},"ts":1439310319000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh dear","msgtype":"m.text"},"ts":1439310325000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1439310327000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I still never found out why I was on a slide at jqConf","msgtype":"m.text"},"ts":1439310343000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: I think the best would have been for ECMAScript to just do HostEnqueue(potential metadata, the task) and have some requirements around ordering for hosts","msgtype":"m.text"},"ts":1439310524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that would have covered the microtask listener behaviour automatically, since the stack would be empty between listener calls, so it'd do the right thing","msgtype":"m.text"},"ts":1439310583000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: wait, that's basically what ES does.","msgtype":"m.text"},"ts":1439310653000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: see the HTML ES6 integration bug for how much harder ES makes it","msgtype":"m.text"},"ts":1439310676000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(referenced above somewhere)","msgtype":"m.text"},"ts":1439310687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah right it tried to take over initialization somehow","msgtype":"m.text"},"ts":1439310712000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: ping https://github.com/tabatkins/bikeshed/issues/438#issuecomment-129662299","msgtype":"m.text"},"ts":1439312513000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: It strikes me that I might not have the id generation correct for dfn-headings.  I think the heading will generate an id first and then won't generate one as a dfn.","msgtype":"m.text"},"ts":1439313192000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I've heard of a technique called unit tests that might help in this kind of situation ;)","msgtype":"m.text"},"ts":1439313224000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I've heard of those, but I dont' think they're real.","msgtype":"m.text"},"ts":1439313284000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bterlson: would you say Edge has \"no public signals\" for Array.prototype.includes, or \"public support\"","msgtype":"m.text"},"ts":1439319996000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think the latter as I don't recall talking about it","msgtype":"m.text"},"ts":1439323649000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"bterlson: as in, no objections, so your default position for TC39-supported things is public support?","msgtype":"m.text"},"ts":1439323692000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"err, I meant former not latter","msgtype":"m.text"},"ts":1439323709000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"ah right ok","msgtype":"m.text"},"ts":1439323712000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there have been no public signals","msgtype":"m.text"},"ts":1439323714000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"BUT","msgtype":"m.text"},"ts":1439323715000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"can I make one now? ;)","msgtype":"m.text"},"ts":1439323719000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"yep!","msgtype":"m.text"},"ts":1439323723000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"do you need to link to something","msgtype":"m.text"},"ts":1439323725000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1439323726000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"chat logs should be fine :)","msgtype":"m.text"},"ts":1439323732000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"how is public support defined anyway?","msgtype":"m.text"},"ts":1439323756000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"saying \"yeah we'll implement that\" is sufficient?","msgtype":"m.text"},"ts":1439323770000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"yeah pretty much","msgtype":"m.text"},"ts":1439323798000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"because assuming Array.prototype.includes works on the web we will def implement it :-P","msgtype":"m.text"},"ts":1439323807000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"as distinct from \"that's a bad idea\" or \"we have no comment at this time and will leave you in suspense\"","msgtype":"m.text"},"ts":1439323816000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"no evidence yet to suggest it's a bad idea","msgtype":"m.text"},"ts":1439323831000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1439323835000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"i'll take it! :)","msgtype":"m.text"},"ts":1439323843000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1439323848000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1439323849000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"sigh the logs for this channel are over HTTP, so sad so sad.","msgtype":"m.text"},"ts":1439323914000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, I'm sure krijnhoetmer would be happy for you to pay for https ;)","msgtype":"m.text"},"ts":1439324561000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I'm happy to walk him through how to create a free cloudflare account.","msgtype":"m.text"},"ts":1439324580000,"senderName":"Domenic","senderId":"Domenic@irc"}
]