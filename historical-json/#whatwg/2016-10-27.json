[
{"content":{"body":"Domenic: about https://github.com/whatwg/html/pull/1958/files/cfb8f34614ec51ac16964d32c9c613e7c2e19b9d..cb322d90333b2362252df305360aa323a94f6e77 we can get the URL for the `origin` remote with just `git config remote.origin.url`","msgtype":"m.text"},"ts":1477529872000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is there any reason to avoid that?","msgtype":"m.text"},"ts":1477529881000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: nope that's way better","msgtype":"m.text"},"ts":1477529916000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1477529942000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: another question: about URLs for remotes for PR branches, is there a reason to favor or GH https URL over GH SSH URLs?","msgtype":"m.text"},"ts":1477530639000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I personally do not have my git environment set up right for auth to work with GH https URLs","msgtype":"m.text"},"ts":1477530682000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, i hear HTTPS is more secure, but i also hear the other way","msgtype":"m.text"},"ts":1477530683000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: OK","msgtype":"m.text"},"ts":1477530693000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well I just wonder which is more commonly used","msgtype":"m.text"},"ts":1477530701000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or if we can programatically detect which the user is actually set up for","msgtype":"m.text"},"ts":1477530732000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://help.github.com/articles/which-remote-url-should-i-use/","msgtype":"m.text"},"ts":1477530755000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1477530760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Also http://stackoverflow.com/questions/11041729/why-does-github-recommend-https-vs-ssh","msgtype":"m.text"},"ts":1477530768000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Shouldn't your Git config trick detect what is currently used?","msgtype":"m.text"},"ts":1477530792000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah “These URLs work everywhere--even if you are behind a firewall or proxy.”","msgtype":"m.text"},"ts":1477530808000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: yeah it will for the origin remote","msgtype":"m.text"},"ts":1477530826000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah but I get your point","msgtype":"m.text"},"ts":1477530832000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so yeah I can have it use for other added remotes whatever the protocol is used for the origin remote","msgtype":"m.text"},"ts":1477530881000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1477530889000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: one last question on the bash snippet for PR thing: any reason to avoid adding --track to the `git checkout` command?","msgtype":"m.text"},"ts":1477533107000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if I switch the advice to saying the local branch name should be prefixed with teh author name, then that --track will allow git to know how to map the local branch name o the remote branch name","msgtype":"m.text"},"ts":1477533173000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for fetching","msgtype":"m.text"},"ts":1477533177000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe git does that automatically?","msgtype":"m.text"},"ts":1477533313000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tests","msgtype":"m.emote"},"ts":1477533319000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yup nm, I see git does it automatically","msgtype":"m.text"},"ts":1477533403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: I'm mostly hands-off on mimesniff now, but I do recall seeing something recently about getting real mime types for fonts. annevk is more up-to-date on things than I am.","msgtype":"m.text"},"ts":1477546573000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"i suppose it's time i retrain my fingers to type => and const","msgtype":"m.text"},"ts":1477554681000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I got => down, but const/let not yet","msgtype":"m.text"},"ts":1477554756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i guess we need to fork live dom viewer also since a global const is still taken in the next edit, at least in chromium","msgtype":"m.text"},"ts":1477554831000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or global let","msgtype":"m.text"},"ts":1477554869000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So I need to rebase https://github.com/heycam/webidl/pull/205. Won't that totally ruin the reviews? Is there a better strategy?","msgtype":"m.text"},"ts":1477555366000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Is merge a better strategy now that we have squash in the GH interface?","msgtype":"m.text"},"ts":1477555551000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: not really, no, no","msgtype":"m.text"},"ts":1477555812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no, no to what?","msgtype":"m.text"},"ts":1477555830000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: three question marks, three answers","msgtype":"m.text"},"ts":1477555845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1477555861000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1477555873000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it's worth it though to ask again to make sure the rebase didn't go wrong","msgtype":"m.text"},"ts":1477555898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyone have an idea of what the median length of a URL query string is ignoring zero-length query strings?","msgtype":"m.text"},"ts":1477555956000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: yup","msgtype":"m.text"},"ts":1477555989000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"hsivonen: I don't recall ever seeing those kind of numbers","msgtype":"m.text"},"ts":1477556028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks.","msgtype":"m.text"},"ts":1477556050000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"tobie: you can't really avoid rebase / force push I think if you also want a linear commit history","msgtype":"m.text"},"ts":1477556122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: you can sometimes avoid it due to squashing, if you fix the thing it's breaking on in a new commit, but that's rather hairy","msgtype":"m.text"},"ts":1477556168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I'm going to give up on trying to find representative encoder workloads and am going to to the simplest thing, which is running the decoder workload in reverse","msgtype":"m.text"},"ts":1477556252000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if the workload is arbitrary, that workload qualifies","msgtype":"m.text"},"ts":1477556271000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(the decoder workload being the Wikipedia article for apple, the fruit)","msgtype":"m.text"},"ts":1477556299000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I pretty much only rebase, so I don't really know what the common outcome of merging in such cases is. Is it hairy?","msgtype":"m.text"},"ts":1477556338000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(apple, the fruit, was the most cross-culturally-relevant Wikipedia topic that I was able to think of)","msgtype":"m.text"},"ts":1477556410000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"tobie: I'm not super familiar with merging, other than that it always seems to mess up history and create super long sequences of commits","msgtype":"m.text"},"ts":1477556411000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(to find non-stub articles in various languages, that is)","msgtype":"m.text"},"ts":1477556423000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: oh, that, for sure. But with squashing in the UI, it's no longer an issue.","msgtype":"m.text"},"ts":1477556440000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yeah, though it's still a little ugly then as GitHub will create all these links if those other commits that are pulled in linked anywhere","msgtype":"m.text"},"ts":1477556481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: isn't the goal simply to be as fast or faster than Gecko's implementation for now?","msgtype":"m.text"},"ts":1477556508000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh--that's the part I had no experience with. Makes sense.","msgtype":"m.text"},"ts":1477556519000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"hsivonen: or have you set a higher bar for yourself?","msgtype":"m.text"},"ts":1477556535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: http://www.bitsnbites.eu/?p=221","msgtype":"m.text"},"ts":1477556560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm maybe that was not relevant to your question","msgtype":"m.text"},"ts":1477556621000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: I think as fast as uconv for decode (except ISO-2022-JP and UTF-16) and for UTF-16-to-UTF-8 encode is the minimum bar","msgtype":"m.text"},"ts":1477556638000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: even faster would be nice, though","msgtype":"m.text"},"ts":1477556671000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"tobie: see https://github.com/w3c/webvtt/pull/201","msgtype":"m.text"},"ts":1477556700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: that is, being faster than ICU and Windows would be good","msgtype":"m.text"},"ts":1477556734000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: since that'd mean being faster than other browsers","msgtype":"m.text"},"ts":1477556750000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: and another reason for folks to consider Rust","msgtype":"m.text"},"ts":1477556787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annoyingly, the Vietnamese article for apple is rather short","msgtype":"m.text"},"ts":1477556804000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Turkish, too","msgtype":"m.text"},"ts":1477556808000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but those are relevant languages to test, because they are SSE2-unfriendly","msgtype":"m.text"},"ts":1477556826000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(a language is SSE2-unfriendly, if it's a Latin-script language where an accented character occurs every 16 characters or more frequently)","msgtype":"m.text"},"ts":1477556872000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: try https://en.wikipedia.org/wiki/World_War_II","msgtype":"m.text"},"ts":1477557082000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I was trying to go for a non-controversial topic. it's rather sad if war is what's globally relevant","msgtype":"m.text"},"ts":1477557288000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: but yeah, WWII seems to have inspired longer articles than apple in e.g. various languages of India","msgtype":"m.text"},"ts":1477557358000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Food is slightly longer in Vietnamese","msgtype":"m.text"},"ts":1477557504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But World War II is indeed far more impressive length-wise","msgtype":"m.text"},"ts":1477557554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or you could use some API to download a lot more articles","msgtype":"m.text"},"ts":1477557598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i tried Love at first but it was short in Vietmanese :-(","msgtype":"m.text"},"ts":1477557621000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: oh, yeah, that's ugly.","msgtype":"m.text"},"ts":1477557998000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: hadn't thought about how that would add all the intermediary commits to the PR.","msgtype":"m.text"},"ts":1477558146000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"even basic elements like gold and iron have rather uneven Wikipedia articles","msgtype":"m.text"},"ts":1477558654000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"going with WWII seems very sad, but it might be the most even-length topic without putting too much effort into finding one :-(","msgtype":"m.text"},"ts":1477558687000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: if you want big files you can get abstract files in all langs from https://dumps.wikimedia.org/backup-index.html","msgtype":"m.text"},"ts":1477558780000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the latest ones for each lang are at URLs, e.g., https://dumps.wikimedia.org/zhwiki/latest/zhwiki-latest-abstract.xml","msgtype":"m.text"},"ts":1477558807000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but those are massive","msgtype":"m.text"},"ts":1477558829000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that one is 905.4 MB","msgtype":"m.text"},"ts":1477558832000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I don't want big files. I want a normal Wikipedia article in at least ar, el, en, he, ja, ko, ru, zh-cn, zh-tw, vi, tr, fr, de","msgtype":"m.text"},"ts":1477558864000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: bonus points for th, cs and pl","msgtype":"m.text"},"ts":1477558875000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Krinkle (who works on Mediawiki) might have some ideas","msgtype":"m.text"},"ts":1477558894000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: in fact, the WWII article may have the downside of being abnormally long","msgtype":"m.text"},"ts":1477558896000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1477558901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what I'm looking for is a Web-representative interleave of ASCII and non-ASCII","msgtype":"m.text"},"ts":1477558933000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1477558939000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Wikipedia is an actual top site, suitably licensed and has content in multiple languages","msgtype":"m.text"},"ts":1477558954000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"generating test cases using Google Translate doesn't work, because it injects its own markup, which messes up the natural interleave of ASCII and non-ASCII","msgtype":"m.text"},"ts":1477558980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the declaration of human rights doesn't work, because it has abnormally little markup","msgtype":"m.text"},"ts":1477559003000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"why not use just the home page of each lang?","msgtype":"m.text"},"ts":1477559025000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or some other stock page that the Wikipedia for each lang is guaranteed to have","msgtype":"m.text"},"ts":1477559055000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I was thinking an article would have a more representative interleave of ASCII and non-ASCII than the front page","msgtype":"m.text"},"ts":1477559080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: but I didn't think of policy stock pages","msgtype":"m.text"},"ts":1477559089000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1477559096000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"FWIW, I posted to Wikipedia Village Pump: https://en.wikipedia.org/wiki/Wikipedia:Village_pump_(technical)#Finding_representative_pages_in_various_languages","msgtype":"m.text"},"ts":1477564738000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: https://github.com/whatwg/html/issues/1954","msgtype":"m.text"},"ts":1477565013000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hsivonen: What about one of https://en.wikipedia.org/wiki/Wikipedia:Wikipedia_records#Articles","msgtype":"m.text"},"ts":1477565113000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: those seem like outliers instead of typical articles. also, it doesn't help with other languages","msgtype":"m.text"},"ts":1477566960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I commented on github regarding recursion","msgtype":"m.text"},"ts":1477566972000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder if there's a way to get non-minified sources from google docs","msgtype":"m.text"},"ts":1477567314000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: re https://github.com/heycam/webidl/pull/211, what about nullable types?","msgtype":"m.text"},"ts":1477568258000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I haven't seen [NewObject] used for something that returns either an object or null","msgtype":"m.text"},"ts":1477568346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so (DOMString or DOMException?) wouldn't be an object type","msgtype":"m.text"},"ts":1477568375000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I see, hmm, maybe requiring unions to contain object types is simpler for now","msgtype":"m.text"},"ts":1477568409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: bz prolly has thought this through already so might be easiest to just wait a little for him to wake up","msgtype":"m.text"},"ts":1477568440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: :)","msgtype":"m.text"},"ts":1477568452000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: Nice, thank you!","msgtype":"m.text"},"ts":1477571107000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: np","msgtype":"m.text"},"ts":1477571123000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i managed to crash the tab while writing that so i had to write it again :-P","msgtype":"m.text"},"ts":1477571164000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"smaug: feedback on https://github.com/whatwg/html/issues/1576 would be appreciated","msgtype":"m.text"},"ts":1477571174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Live DOM Viewer uses document.write itself, right?","msgtype":"m.text"},"ts":1477571297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: might not be the best way to test the limit","msgtype":"m.text"},"ts":1477571315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Nice. :D","msgtype":"m.text"},"ts":1477571338000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: I wonder if it's supposed to be 10 for Edge,","msgtype":"m.text"},"ts":1477571488000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"but they have an off by one error that makes it 11.","msgtype":"m.text"},"ts":1477571495000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: it does, yeah","msgtype":"m.text"},"ts":1477571570000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the numbers in my test may be confusing. i think the limit is the given number + 2","msgtype":"m.text"},"ts":1477571639000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, have a minute?","msgtype":"m.text"},"ts":1477573076000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1477573083000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, do you know off-hand if gecko/chrome are correct in this test case: https://github.com/servo/servo/issues/13944 ?","msgtype":"m.text"},"ts":1477573113000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: i believe they are correct. offsetHeight should flush layout (that's not actually defined yet though)","msgtype":"m.text"},"ts":1477573389000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: does Servo behave differently if the 'top' value is different?","msgtype":"m.text"},"ts":1477573417000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, oh, interesting, explicitly adding display: block helps","msgtype":"m.text"},"ts":1477573971000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i guess you found what the bug is then :-)","msgtype":"m.text"},"ts":1477574021000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I found enough to make it SEP :)","msgtype":"m.text"},"ts":1477574033000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"position: absolute should force a block-level box, should it not?","msgtype":"m.text"},"ts":1477574060000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1477574180000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://drafts.csswg.org/css-position/#dis-pos-flo","msgtype":"m.text"},"ts":1477574265000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"in this case at least; not for inline-table or \"others\" (not sure which those are)","msgtype":"m.text"},"ts":1477574335000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I took the permalink of your test,","msgtype":"m.text"},"ts":1477574418000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"and loaded data:text/html,... instead,","msgtype":"m.text"},"ts":1477574433000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"and indeed, it reported one more call.","msgtype":"m.text"},"ts":1477574439000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"heycam|away: can you add a link to the editor's draft at the top of https://github.com/heycam/webidl","msgtype":"m.text"},"ts":1477574837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"do we have any API that parses arbitrary JSON off the network anywhere?","msgtype":"m.text"},"ts":1477580532000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"fetch().then(|x| x.json())?","msgtype":"m.text"},"ts":1477580970000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't suppose that's what lambdas look like in JS","msgtype":"m.text"},"ts":1477580990000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"you can just hear the JS syntax nuts growling as they read this","msgtype":"m.text"},"ts":1477581050000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there's also an XMLHttpRequest one","msgtype":"m.text"},"ts":1477581553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you get to chose","msgtype":"m.text"},"ts":1477581557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: an XHR one?","msgtype":"m.text"},"ts":1477581967000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: oh, with .response","msgtype":"m.text"},"ts":1477581988000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"responseType = \"json\"","msgtype":"m.text"},"ts":1477582017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"used to be pretty cool","msgtype":"m.text"},"ts":1477582025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and it only supports utf-8","msgtype":"m.text"},"ts":1477582154000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"same for fetch()","msgtype":"m.text"},"ts":1477582269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there any way to detect support of <a ping>?","msgtype":"m.text"},"ts":1477582369000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"ping\" in document.createElement(\"a\"), theoretically","msgtype":"m.text"},"ts":1477582468000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"what does Fx say with the pref disabled?","msgtype":"m.text"},"ts":1477582584000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Anyone have examples of repeated initialisms in APIs? So far we have XMLHttpRequest (inconsistent), HTMLHRElement (consistent), RTCDTMFSender (consistent). I was hoping for some that are properties not just class names.","msgtype":"m.text"},"ts":1477589387000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: shouldn't the throw() in the fetch event promise.catch here trigger an interception failure? https://googlechrome.github.io/samples/service-worker/prefetch/service-worker.js","msgtype":"m.text"},"ts":1477589451000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I ask, because that service worker in chrome produces a \"page not found\" error page instead of the \"something went wrong\" page you normally get for a broken SW interception","msgtype":"m.text"},"ts":1477590596000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: the top level page for the SW is this: https://googlechrome.github.io/samples/service-worker/prefetch/index.html","msgtype":"m.text"},"ts":1477590611000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/url/commit/f20ad7efa8514ca88ceab0c3daad025ab0beb80e doesn't seem to have deployed :-/","msgtype":"m.text"},"ts":1477593660000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: done manually","msgtype":"m.text"},"ts":1477594339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I really wonder why this fails so often","msgtype":"m.text"},"ts":1477594368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The setup is super basic","msgtype":"m.text"},"ts":1477594377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: given a lt of \"becomes connected\" can Bikeshed figure out <a>become connected</a>, or should I add alternate lt=\"\"s?","msgtype":"m.text"},"ts":1477595670000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the latter, unfortunately.","msgtype":"m.text"},"ts":1477596250000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ah well","msgtype":"m.text"},"ts":1477596262000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"botie: ask rniwa if he's writing tests for the [CEReactions] on elements/document.close/etc.?","msgtype":"m.text"},"ts":1477596704000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1477596704000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"Does WebIDL specify what happens when you pass to a function an object with properties which aren't members of the dictionary said function expects as argument?","msgtype":"m.text"},"ts":1477596820000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"so namespace Bar { foo(optional Options options); } dictionary Options { DOMString a = \"test\"; }","msgtype":"m.text"},"ts":1477596961000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"and then: Bar.foo({ a: \"test\", b: 123 });","msgtype":"m.text"},"ts":1477596989000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Does this throw, is b ignored, or is this spec-dependant (and if so, are there best practices)?","msgtype":"m.text"},"ts":1477597058000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"b is ignored","msgtype":"m.text"},"ts":1477597258000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"tobie: The conversion from ES object to Web IDL dictionary is at https://heycam.github.io/webidl/#es-dictionary; as you can see it loops through the members of the dictionary doing a Get() for each one, but doesn't do any enumeration of the object in general","msgtype":"m.text"},"ts":1477597340000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess right now it does a [[Get]]; should be Get()","msgtype":"m.text"},"ts":1477597373000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh right, that's specific to the ES conversion. Makes sense. Thanks.","msgtype":"m.text"},"ts":1477597648000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: Yeah, I'm a little afraid of applying the conjugation code to non-final words. Possible, tho.","msgtype":"m.text"},"ts":1477597706000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It would mean an exponential (in the number of words) explosion in the number of combinations I try for every single autolink.","msgtype":"m.text"},"ts":1477597758000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I feel like just the first word would be a sweet spot. But I can see the difficulty yeah.","msgtype":"m.text"},"ts":1477597809000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I could be convinced by someone gradually accumulating some examples of failed conjugations in an issue.","msgtype":"m.text"},"ts":1477598144000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"People seem to just create a bunch of link-defaults","msgtype":"m.text"},"ts":1477598388000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think this is mostly HTML's fault","msgtype":"m.text"},"ts":1477598392000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Because people are used to creating giant link-default blocks for HTML","msgtype":"m.text"},"ts":1477598399000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so they just reach for link-defaults blocks whenever Bikeshed isn't working perfectly","msgtype":"m.text"},"ts":1477598412000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"For an enum default value meaning \"auto\", do people have opinions/precedents for whether we'd use `null` or `\"\"`?","msgtype":"m.text"},"ts":1477602249000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"missing default value of \"auto\"?","msgtype":"m.text"},"ts":1477602374000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"or invalid default value of \"auto\"?","msgtype":"m.text"},"ts":1477602387000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"It's an IDL enum, not a element attribute, so both I guess","msgtype":"m.text"},"ts":1477602849000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it doesn't quite feel right if you use \"null\" or \"\" for \"auto\"","msgtype":"m.text"},"ts":1477603019000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"because the syntax is obviously different, so intuitively to me, they mean different things","msgtype":"m.text"},"ts":1477603048000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"null means more like a value is missing","msgtype":"m.text"},"ts":1477603091000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"\"\" means this enum variant is the empty string, but the value isn't missing","msgtype":"m.text"},"ts":1477603120000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"what the empty string means will vary in different contexts though, so i'm not feeling too great about including it as an enum variant either","msgtype":"m.text"},"ts":1477603216000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"Domenic: https://fetch.spec.whatwg.org/#enumdef-requesttype","msgtype":"m.text"},"ts":1477604309000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ooh good one, thanks","msgtype":"m.text"},"ts":1477604327000,"senderName":"Domenic","senderId":"Domenic@irc"}
]