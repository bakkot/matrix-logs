[
{"content":{"body":"Hixie: is splitting text nodes during parsing something the HTML spec would be concerned about? WebKit stopped doing that while implementing HTML5, but looks like it was quite bad for performance","msgtype":"m.text"},"ts":1299283800000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"so we may have to reintroduce that","msgtype":"m.text"},"ts":1299283801000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"why is it bad for perf?","msgtype":"m.text"},"ts":1299283920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"extra allocation and copying, I would presume","msgtype":"m.text"},"ts":1299283980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"though I'm not sure what benchmark ap is looking at that convinces him it's an issue","msgtype":"m.text"},"ts":1299283981000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"why would one long string need more allocation and copying than more shorter strings?","msgtype":"m.text"},"ts":1299283982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: search and replace algorithms that create new nodes hit this (think about an algorithm that finds all e-mails with a regexp, and replaces them with <a> links)","msgtype":"m.text"},"ts":1299284040000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: it's not about WebKit own performance, but about performance of scripts and other clients","msgtype":"m.text"},"ts":1299284100000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"i don't understand why the number of DOM nodes needs to have any correlation to the number of allocations in the background, nor why editing fewer larger strings needs to be slower than more editing smaller strings.","msgtype":"m.text"},"ts":1299284160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah, I need to explain in more detail","msgtype":"m.text"},"ts":1299284161000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"just implement the DOM string as an interface on top of a string system that uses whatever is optimal for the platform","msgtype":"m.text"},"ts":1299284162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. if someone tries to splice something into the middle of a string, you can just have the DOM node be stored as two strings and an edit point","msgtype":"m.text"},"ts":1299284220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no need to move the original string at all","msgtype":"m.text"},"ts":1299284221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"etc","msgtype":"m.text"},"ts":1299284222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: say, you're processing a string line aaa&lt;ian⊙hc>bbb, and need to replace it with aaa<a href=\"mailto:ian⊙hc\">ian⊙hc</a>bbb","msgtype":"m.text"},"ts":1299284280000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: you have to split the text, and copy \"bbb\" into a new node","msgtype":"m.text"},"ts":1299284340000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: the larger nodes are, the more time it takes","msgtype":"m.text"},"ts":1299284341000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"only if your implementation of text nodes is naive","msgtype":"m.text"},"ts":1299284342000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you split the dom text nodes so that you have adjacent nodes in the dom, all you're going to do is break implementations that don't expect it","msgtype":"m.text"},"ts":1299284400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I can add to that that the strings are round tripped to a client via an API","msgtype":"m.text"},"ts":1299284401000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"s/implementations/pages/","msgtype":"m.text"},"ts":1299284402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: given that both Gecko and WebKit used to split, those pages were already broken","msgtype":"m.text"},"ts":1299284460000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"so e.g. if the dom nodes are [aaa&lt;ap@web] and [kit.org>bbb], pages will likely miss it entirely","msgtype":"m.text"},"ts":1299284461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you are talking about a pretty serious amount of sophistication for a CharacterData implementation here","msgtype":"m.text"},"ts":1299284462000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1299284520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'd rather browsers be sophisticated that rely on web page authors to be sophisticated :-)","msgtype":"m.text"},"ts":1299284521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or as others would say, the \"priority of constituencies\" puts authors ahead of browsers","msgtype":"m.text"},"ts":1299284522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: my priority here is to prevent real applications from freezing due to this change","msgtype":"m.text"},"ts":1299284580000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: I'm only working on a fix, and wanted to touch bas first, but it's pretty unlikely that we'll keep apps freezing until the desired level of sophistication is reached","msgtype":"m.text"},"ts":1299284640000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"thanks for the heads-up","msgtype":"m.text"},"ts":1299284700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ap: is there a web app that has an N^2 problem with growing text nodes?","msgtype":"m.text"},"ts":1299284701000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"giant run of plaintext I would guess?","msgtype":"m.text"},"ts":1299284760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: <rdar://problem/9013049>","msgtype":"m.text"},"ts":1299284761000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"othermaciej: in that case, it's also about memory use","msgtype":"m.text"},"ts":1299284762000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"ap: I shall comment internally, given the nature of that bug","msgtype":"m.text"},"ts":1299284880000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: I started using <xmp> today in Lists.  It makes my life easier.","msgtype":"m.text"},"ts":1299288660000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"what's xmp? :l","msgtype":"m.text"},"ts":1299288780000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Like <pre>, but you don't need to escape anything inside of it.","msgtype":"m.text"},"ts":1299288840000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":":o","msgtype":"m.text"},"ts":1299288841000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"So <xmp>To bold something, type <b>.</xmp> actually says what you'd expect.","msgtype":"m.text"},"ts":1299288842000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"can't find it in the html5 specs... or well... anywhere","msgtype":"m.text"},"ts":1299288900000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"It's in the \"obsolete elements\" section right now.","msgtype":"m.text"},"ts":1299288901000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"only found some old blog post which says it's deprecated","msgtype":"m.text"},"ts":1299288902000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1299288960000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Webkit, at least, actually supports <xmp> properly.  It's quite helpful when writing HTML examples","msgtype":"m.text"},"ts":1299288961000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"on my blog i'm using some input filter to get this kind of effect","msgtype":"m.text"},"ts":1299288962000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i always thought that this was a tad strange","msgtype":"m.text"},"ts":1299289020000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"For yourself, or for comments?","msgtype":"m.text"},"ts":1299289021000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"myself","msgtype":"m.text"},"ts":1299289022000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"(This does *not* protect you against code injection from comments.)","msgtype":"m.text"},"ts":1299289023000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Ok, yeah.","msgtype":"m.text"},"ts":1299289024000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I write my blog in markdown, so the code blocks in markdown automatically know to escape their contents when serializing to HTML.","msgtype":"m.text"},"ts":1299289025000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"well, i kinda like it and i always wanted something like that for my other technical documentation","msgtype":"m.text"},"ts":1299289080000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"right now i always search/replace < and >, but that's somewhat annoying","msgtype":"m.text"},"ts":1299289081000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"needless to say that it also makes the markup kinda ugly","msgtype":"m.text"},"ts":1299289082000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"You don't need to replace >, but you *do* need to replace &.","msgtype":"m.text"},"ts":1299289083000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"(> is safe everywhere except in unquoted attribute values)","msgtype":"m.text"},"ts":1299289140000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i replace <, &, and > (for symmetry) :>","msgtype":"m.text"},"ts":1299289141000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"is xmp something from html 3.x?","msgtype":"m.text"},"ts":1299289200000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"ah... 2.0 it seems","msgtype":"m.text"},"ts":1299289201000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I don't think there's any HTML spec in which it wasn't already deprecated","msgtype":"m.text"},"ts":1299289260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"also <plaintext> and <listing>... weird :)","msgtype":"m.text"},"ts":1299289261000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"does anyone know if the pseudo class :focus will allow styling of other elements based on that event or if it's only binded to the styling of that particular element?","msgtype":"m.text"},"ts":1299289262000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"there is still no way to specifiy the programming language of a <code> block, right?","msgtype":"m.text"},"ts":1299289320000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"oojacoboo: I don't understand what you mean.","msgtype":"m.text"},"ts":1299289321000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"aho: No way in HTML, yeah.","msgtype":"m.text"},"ts":1299289322000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: this is my selector that doesn't work... form.schweet li.help-tip input:focus + a.tipper","msgtype":"m.text"},"ts":1299289380000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"(Various javascript syntax-highlighting scripts recommend ways to mark it up.)","msgtype":"m.text"},"ts":1299289381000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"here is one that does... form.schweet li.help-tip:hover a.tipper","msgtype":"m.text"},"ts":1299289382000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"Okay.  There's nothing wrong with the former.  As long as the input is focused, and the rest of the structure is right, then it will work.","msgtype":"m.text"},"ts":1299289440000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: it doesn't :/","msgtype":"m.text"},"ts":1299289441000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"oojacoboo: I'd have to see your code.  There's nothing wrong with the selector, so you're doing something else wrong.","msgtype":"m.text"},"ts":1299289442000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"it's the most awkward thing I've seen","msgtype":"m.text"},"ts":1299289443000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"I wish I could get you the code, it's a massive application","msgtype":"m.text"},"ts":1299289500000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"ye, most of them use classes for that, but that's not quite right... i mean... there is zero semantic weight behind it. some micro format bs would work, i guess. but i'd prefer some regular attribute for that. i mean, <code> *is* for source code in *some* language","msgtype":"m.text"},"ts":1299289501000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"aho: Use data-src-lang or something.","msgtype":"m.text"},"ts":1299289502000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"right now, i'd use data-lang, yes ;)","msgtype":"m.text"},"ts":1299289560000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Although there is no formal way to indicate the language of computer code being marked up, authors who wish to mark code elements with the language used, e.g. so that syntax highlighting scripts can use the right rules, may do so by adding a class prefixed with \"language-\" to the element.","msgtype":"m.text"},"ts":1299289620000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"meep :>","msgtype":"m.text"},"ts":1299289621000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"TabAtkins_: am I wrong in assuming that the cursor doesn't have to be over the input for :focus to be triggered?","msgtype":"m.text"},"ts":1299289622000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"I thought the cursor sitting in an input kept the :focus event triggered","msgtype":"m.text"},"ts":1299289623000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"oojacoboo: Focus, for an input, is when the caret is in the input.","msgtype":"m.text"},"ts":1299289624000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"It has nothing to do with the mouse cursor.","msgtype":"m.text"},"ts":1299289680000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"strange...","msgtype":"m.text"},"ts":1299289681000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"Why is it strange?  That's what it means to \"focus\" an input.","msgtype":"m.text"},"ts":1299289682000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"there can be only one element with focus... if an element got focus it will receive keyboard input","msgtype":"m.text"},"ts":1299289683000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1299289684000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"the behavior I am seeing is very strange, that event handling is as expected","msgtype":"m.text"},"ts":1299289740000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"typically <tab> can be used to focus the next element and <shift>+<tab> jumps backwards","msgtype":"m.text"},"ts":1299289741000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"aho: right","msgtype":"m.text"},"ts":1299289742000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"clicking on some element also gives it focus","msgtype":"m.text"},"ts":1299289800000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"yea, I actually know how it works, just not experiencing it","msgtype":"m.text"},"ts":1299289801000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"oojacoboo: Can you get :focus to work on its own, like \"input:focus { outline: thick solid red; }\" ?","msgtype":"m.text"},"ts":1299289802000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: yes","msgtype":"m.text"},"ts":1299289803000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"that much is handled correctly","msgtype":"m.text"},"ts":1299289860000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"background-color, color, etc","msgtype":"m.text"},"ts":1299289861000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"oojacoboo: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/865","msgtype":"m.text"},"ts":1299289920000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"input:focus+label works in ff3.6... i just tried that","msgtype":"m.text"},"ts":1299289921000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"(completely useless, but yes, that works) :>","msgtype":"m.text"},"ts":1299289980000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"trying to see if something else is the culprit here","msgtype":"m.text"},"ts":1299289981000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"TabAtkins_: no clue, it seems to be working fine in the testcases where I try to replicate, clearly something else is going on... thanks for your help, if I find something I'll report back","msgtype":"m.text"},"ts":1299290460000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"No problem.","msgtype":"m.text"},"ts":1299290461000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Unrelated: A virus so big it gets viruses: http://arstechnica.com/science/news/2011/03/a-virus-so-large-it-gets-viruses.ars?utm_source=twitterfeed&utm_medium=twitter&utm_campaign=rss","msgtype":"m.text"},"ts":1299290462000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"would be nice if there would be something like focus, which bubbles up like hover :>","msgtype":"m.text"},"ts":1299291060000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"input:focus+label <- e.g. that kind of thing would be useful if i could write it the other way around","msgtype":"m.text"},"ts":1299291120000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"label:has-sibling(input:focus), someday...","msgtype":"m.text"},"ts":1299291121000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"but with some focus bubbling thingy i could do that via the wrapper","msgtype":"m.text"},"ts":1299291122000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":".whatever:focus-bubble-voodoo>label :>","msgtype":"m.text"},"ts":1299291180000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"putting the label after the text fields would work of course, but that makes positioning a nightmare","msgtype":"m.text"},"ts":1299291300000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"and of course you'd end up with pure nonsense if you look at it without css","msgtype":"m.text"},"ts":1299291301000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"input:focus^label (adjacent previous sibling, lol)","msgtype":"m.text"},"ts":1299291600000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"well, would be nice to have","msgtype":"m.text"},"ts":1299291601000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"it's also kinda funny how css ran out of special chars :>","msgtype":"m.text"},"ts":1299291602000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"aho that'd be awesome","msgtype":"m.text"},"ts":1299291780000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"input☺focus","msgtype":"m.text"},"ts":1299291840000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"input(ノ ゜Д゜)ノ 彡 ┻━┻focus","msgtype":"m.text"},"ts":1299291841000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"rage table flip combinator","msgtype":"m.text"},"ts":1299291842000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"input工工工ｴｴｴｴｴｴｪｪｪｪｪｪ(ﾟДﾟ)ｪｪｪｪｪｪｴｴｴｴｴｴ工工工focus","msgtype":"m.text"},"ts":1299291900000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1299291960000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"well, there aren't too many \"regular special characters\" left and even most of those which are currently used don't make any sense whatsoever","msgtype":"m.text"},"ts":1299292080000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"can use longer tokens where it's not ambiguous","msgtype":"m.text"},"ts":1299292140000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yea, :whatever(...) will always work, but that's kinda awful :>","msgtype":"m.text"},"ts":1299292141000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"input:focus:previous-adjacent-sibling(label){... uh hum...}","msgtype":"m.text"},"ts":1299292200000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"a::b->c@@d","msgtype":"m.text"},"ts":1299292201000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"as long as it doesn't devolve into the gnu regex absurdities like [:digit:] or whatever, heh","msgtype":"m.text"},"ts":1299292260000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"[href$=\".pdf\"]","msgtype":"m.text"},"ts":1299292261000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":":>","msgtype":"m.text"},"ts":1299292262000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"but to be honest, i only use a very small subset of css selectors/combinators for the things i currently build (with some architecture n stuff)","msgtype":"m.text"},"ts":1299292380000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"aho: honestly, you rarely need the special ones","msgtype":"m.text"},"ts":1299292620000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"I've built a very advanced application that uses a lot of css, and very rarely need special selectors","msgtype":"m.text"},"ts":1299292621000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"i do virtually everything with the child combinator","msgtype":"m.text"},"ts":1299292740000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"what do you mean?","msgtype":"m.text"},"ts":1299292741000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"the descendant one is only used for recursion :>","msgtype":"m.text"},"ts":1299292742000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":".this < .that","msgtype":"m.text"},"ts":1299292743000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":">","msgtype":"m.text"},"ts":1299292744000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1299292745000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"everything is a sub tree which can be plugged in any leaf of any other sub tree","msgtype":"m.text"},"ts":1299292800000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"works great so far","msgtype":"m.text"},"ts":1299292801000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"you can't always go up the DOM though","msgtype":"m.text"},"ts":1299292860000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"esp when you need pseudo classes","msgtype":"m.text"},"ts":1299292861000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"you cant go up or backwards with css","msgtype":"m.text"},"ts":1299292920000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"only down and forwards","msgtype":"m.text"},"ts":1299292921000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"yea, but what I mean is, you can't always target a parent","msgtype":"m.text"},"ts":1299292922000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"or use that parent rather, in the selection","msgtype":"m.text"},"ts":1299292923000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"(well, strictly speaking it's the other way around since selectors are evaluated from right to left) :>","msgtype":"m.text"},"ts":1299292924000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"of course i can","msgtype":"m.text"},"ts":1299292925000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"how can I do this then...","msgtype":"m.text"},"ts":1299292980000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"the markup is created that way from the very beginning","msgtype":"m.text"},"ts":1299292981000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"first structure, then markup/css","msgtype":"m.text"},"ts":1299292982000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"li:focus a.tipper {} where I have... <li><input /><a></a></li>","msgtype":"m.text"},"ts":1299292983000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"and not arbitrary markup which i then try to beat into submission via css :>","msgtype":"m.text"},"ts":1299292984000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"aho: of course, that's why I am saying I almost never have an issue","msgtype":"m.text"},"ts":1299293040000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"so long as you have control over the DOM, you are almost always ok","msgtype":"m.text"},"ts":1299293041000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"in that example I want to do something like... li(li a) < input:focus {}","msgtype":"m.text"},"ts":1299293100000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"obv that doesnt' make sense, but pass the event on the input to style down from the <li>","msgtype":"m.text"},"ts":1299293160000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"li isn't focusable by default","msgtype":"m.text"},"ts":1299293161000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"<li tabindex=\"0\" ...> makes it focusable","msgtype":"m.text"},"ts":1299293220000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"but that's all kinds of ugly :>","msgtype":"m.text"},"ts":1299293221000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"really??","msgtype":"m.text"},"ts":1299293222000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"is that legit","msgtype":"m.text"},"ts":1299293280000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"iirc not consistently supported","msgtype":"m.text"},"ts":1299293281000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, focus doesnt bubble up anyways","msgtype":"m.text"},"ts":1299293340000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1299293341000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"so, if some input inside that li got focus... then this one got the focus any nothing else gets it :>","msgtype":"m.text"},"ts":1299293342000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"*and","msgtype":"m.text"},"ts":1299293343000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"that's why i said it would be nice to have something like focus which bubbles up like hover :>","msgtype":"m.text"},"ts":1299293400000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"mmm yea, just saying it'd be nice to be able to have it bubble or, or hack that somehow","msgtype":"m.text"},"ts":1299293401000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"li < input:focus {}","msgtype":"m.text"},"ts":1299293402000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"you'd get something sorta like that, but how could you apply that to children of the li","msgtype":"m.text"},"ts":1299293460000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"people have complained about focus events not bubbling since forever, heh","msgtype":"m.text"},"ts":1299293461000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"obv not enough people ;)","msgtype":"m.text"},"ts":1299293520000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"oh it's mouseover/mouseout bubbling that i'm thinking of","msgtype":"m.text"},"ts":1299293640000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://www.isolani.co.uk/blog/standards/MicrosoftsAntiIe6Rhetoric","msgtype":"m.text"},"ts":1299312840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I pulled bug before the comment: http://html5.org/tools/web-apps-tracker","msgtype":"m.text"},"ts":1299315060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Renamed \"R\" to \"SVN\" and \"B\" to \"Bug\"","msgtype":"m.text"},"ts":1299315061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"better?","msgtype":"m.text"},"ts":1299315062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: FYI: https://bugzilla.mozilla.org/show_bug.cgi?id=638842","msgtype":"m.text"},"ts":1299328860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders, you there?","msgtype":"m.text"},"ts":1299333660000,"senderName":"foolip_","senderId":"foolip_@irc"},
{"content":{"body":"foolip_: Vaguely.","msgtype":"m.text"},"ts":1299334680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, I was going to ask how the spec section ids are generated, but then I found secid.py","msgtype":"m.text"},"ts":1299334681000,"senderName":"foolip_","senderId":"foolip_@irc"},
{"content":{"body":"gsnedders, although, now it looks like secid.py isn't actually used in anolis2, did I find the wrong code?","msgtype":"m.text"},"ts":1299335640000,"senderName":"foolip_","senderId":"foolip_@irc"},
{"content":{"body":"maybe the code is just invoked in some more roundabout way than actually importing secid and calling secid.Process...","msgtype":"m.text"},"ts":1299335700000,"senderName":"foolip_","senderId":"foolip_@irc"},
{"content":{"body":"There is some bug in Selections in Opera","msgtype":"m.text"},"ts":1299336660000,"senderName":"kukman","senderId":"kukman@irc"},
{"content":{"body":"http://jsfiddle.net/pEqeu/2/","msgtype":"m.text"},"ts":1299336661000,"senderName":"kukman","senderId":"kukman@irc"},
{"content":{"body":"and, if you click mouse anywhere else, space between numbers will be still selected","msgtype":"m.text"},"ts":1299336662000,"senderName":"kukman","senderId":"kukman@irc"},
{"content":{"body":"Could also name the SVN column HTML","msgtype":"m.text"},"ts":1299345780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"currently at HTML5944","msgtype":"m.text"},"ts":1299345781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Making HTML XML-valid then omit the xmlns because of a hate for namespaces? Huh?","msgtype":"m.text"},"ts":1299361020000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"http://tantek.com/2010/302/b1/xhtml-dead-long-live-xml-valid-html5","msgtype":"m.text"},"ts":1299361021000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"generally i tend not to take anyone seriously who uses the world \"fail\" in all caps","msgtype":"m.text"},"ts":1299361080000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"personally, i kinda like STOP EVERYTHING error handling :>","msgtype":"m.text"},"ts":1299361800000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i mean... gee... we are able to produce all kinds of well-formed formats. there is nothing magical about html which makes it impossible","msgtype":"m.text"},"ts":1299361860000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"aho: Why do you hate your users?","msgtype":"m.text"},"ts":1299361920000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"a broken image wont work","msgtype":"m.text"},"ts":1299361980000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"a broken archive wont work","msgtype":"m.text"},"ts":1299361981000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"a broken css file wont work","msgtype":"m.text"},"ts":1299361982000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"a broken js file wont work","msgtype":"m.text"},"ts":1299361983000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Sure they do","msgtype":"m.text"},"ts":1299361984000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"about as well as broken xml, yes","msgtype":"m.text"},"ts":1299362040000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"You use broken css files and images every day","msgtype":"m.text"},"ts":1299362041000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Same with JS files, for that matter","msgtype":"m.text"},"ts":1299362100000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"we're talking about non recoverable errors","msgtype":"m.text"},"ts":1299362101000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"\"not strictly correct\" != \"broken\"; if it works it's, by definition, not broken. heh","msgtype":"m.text"},"ts":1299362102000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not things like ASI","msgtype":"m.text"},"ts":1299362103000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"\"the image ... contains errors and cannot be displayed\" :>","msgtype":"m.text"},"ts":1299362160000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"zewt: Except that's how XML defines broken","msgtype":"m.text"},"ts":1299362161000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"well, try writing some junk into the header of a jpg file","msgtype":"m.text"},"ts":1299362162000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"see how that works","msgtype":"m.text"},"ts":1299362163000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1299362164000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"we're speaking english, not XML :P","msgtype":"m.text"},"ts":1299362220000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"aho: JPEGs aren't human-writable, so they can be a lot less forgiving","msgtype":"m.text"},"ts":1299362221000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"how about obj (wavefront) then?","msgtype":"m.text"},"ts":1299362280000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"technically it's human readable, too","msgtype":"m.text"},"ts":1299362281000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"don't know it","msgtype":"m.text"},"ts":1299362282000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's a text based model format","msgtype":"m.text"},"ts":1299362283000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"needless to say that things will go horribly wrong if you put some random junk data into one of those obj files :>","msgtype":"m.text"},"ts":1299362340000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"even readers for binary formats generally have to be forgiving of certain errors, when buggy software puts weird files in the wild; eg. reading AVIs is a serious pain","msgtype":"m.text"},"ts":1299362341000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, that's what html5 is kinda doing... it tries to specify this error handling","msgtype":"m.text"},"ts":1299362400000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"beforehand the result was just random","msgtype":"m.text"},"ts":1299362401000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"that's not any good, really :)","msgtype":"m.text"},"ts":1299362402000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"so yea, it should be either very strict and if it isn't the result should be predictable","msgtype":"m.text"},"ts":1299362403000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"the latter is of course a lot more complicated","msgtype":"m.text"},"ts":1299362460000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"there really should be a global vendor prefix registry which is maintained by browser vendors","msgtype":"m.text"},"ts":1299367980000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"the current state is somewhat troublesome","msgtype":"m.text"},"ts":1299367981000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"how so","msgtype":"m.text"},"ts":1299368040000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"like when things go unprefixed.. and what existing prefixed props are supported by each?","msgtype":"m.text"},"ts":1299368041000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"there are hundreds of prefixes and figuring out which one is still needed is pretty time consuming","msgtype":"m.text"},"ts":1299368042000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1299368043000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"hundreds of prefixes? i thought there were only 4 practical ones.. and then like ~14 that are in some spec somewhere.","msgtype":"m.text"},"ts":1299368100000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"like -moz-opacity was required for firefox <0.9 and it's completely ignored since 3.5","msgtype":"m.text"},"ts":1299368101000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I got history info on http://peter.sh/experiments/vendor-prefixed-css-property-overview/ which I plan to do things with","msgtype":"m.text"},"ts":1299368160000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"mozilla and google are (and will be) documenting that on the MDC","msgtype":"m.text"},"ts":1299368161000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"the primary problem is that gecko and webkit can be automated, whereas Opera and Microsoft cannot","msgtype":"m.text"},"ts":1299368162000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"(I did e-mail them)","msgtype":"m.text"},"ts":1299368163000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"http://code.google.com/p/cssmin/source/browse/tags/version-2.0/cssmin.php","msgtype":"m.text"},"ts":1299368220000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"line 386 and up","msgtype":"m.text"},"ts":1299368221000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Peter-: Automated in what way?","msgtype":"m.text"},"ts":1299368222000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Both Gecko as WebKit maintain a single file in which all properties are available","msgtype":"m.text"},"ts":1299368280000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"where is that file?","msgtype":"m.text"},"ts":1299368281000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"havent seen it on mdc","msgtype":"m.text"},"ts":1299368282000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I fetch them every three hours, parse the files into individual properties and update my db","msgtype":"m.text"},"ts":1299368283000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"it also feeds the rss feed","msgtype":"m.text"},"ts":1299368284000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"http://hg.mozilla.org/mozilla-central/raw-file/tip/layout/style/nsCSSPropList.h","msgtype":"m.text"},"ts":1299368340000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"http://trac.webkit.org/export/0/trunk/Source/WebCore/css/CSSPropertyNames.in","msgtype":"m.text"},"ts":1299368341000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"Right, so it's just a bi-product of them being open-source.","msgtype":"m.text"},"ts":1299368342000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ahm... ok... pulling it out of the source directly","msgtype":"m.text"},"ts":1299368343000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"hoped there was some json file or even xml or whatever","msgtype":"m.text"},"ts":1299368344000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Opera doesn't maintain a single (or conveniently accessible) list. Microsoft has a few pages on MSDN which list all, but usually with a 3/4 month delay","msgtype":"m.text"},"ts":1299368345000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"I do have a json","msgtype":"m.text"},"ts":1299368400000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"linky? :)","msgtype":"m.text"},"ts":1299368401000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"http://peter.sh/data/vendor-prefixed-css.php","msgtype":"m.text"},"ts":1299368460000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"hero!","msgtype":"m.text"},"ts":1299368461000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1299368462000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I have code (and data) for such lists on all properties (including non-prefixed ones) per browser version somewhere too, but I *really* need to finish that sometime soon","msgtype":"m.text"},"ts":1299368580000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"would be cool if that would end up in some official place (i.e. some place which can be actually found by anyone)","msgtype":"m.text"},"ts":1299368640000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"what were you searching for to attempt to find it?","msgtype":"m.text"},"ts":1299368641000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"'List CSS Style Properties' ?","msgtype":"m.text"},"ts":1299368700000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"Peter-: FWIW, publishing a complete list of properties supported for any Presto version should be trivial","msgtype":"m.text"},"ts":1299368760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"paul_irish, me? i look most of them up on mdc and i crosschecked that IE stuff with msdn. that's about it.","msgtype":"m.text"},"ts":1299368880000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1299368881000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"didn't know where else to look","msgtype":"m.text"},"ts":1299368882000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"gsnedders, would be awesome :)","msgtype":"m.text"},"ts":1299368940000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"gsnedders, I requested it late last year but never got a reply. The presto docs are complete, but the properties are listed all over the place","msgtype":"m.text"},"ts":1299368941000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"that makes it hard to automate","msgtype":"m.text"},"ts":1299368942000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"Peter-: I can quite trivially send you a .txt file with one property per line","msgtype":"m.text"},"ts":1299369000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"soo... only microsoft is missing then eh? :)","msgtype":"m.text"},"ts":1299369001000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"gsnedders, that'd be great","msgtype":"m.text"},"ts":1299369002000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"Peter-: Do you want multiple versions or just latest?","msgtype":"m.text"},"ts":1299369003000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, just the latest will do. My e-mail address is peter⊙lc","msgtype":"m.text"},"ts":1299369060000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"gsnedders, thank you!","msgtype":"m.text"},"ts":1299369061000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"Peter-, got some twitter account? (would like to be up to date on this heh) :>","msgtype":"m.text"},"ts":1299369180000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"aho, I'm @beverloo. I don't really have an ETA, but it surely is high on my list :)","msgtype":"m.text"},"ts":1299369240000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"twitter stalkers++","msgtype":"m.text"},"ts":1299369241000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"why does <progress> have .form?","msgtype":"m.text"},"ts":1299369242000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ah yea, twiter already told me several times to stalk you, too :)","msgtype":"m.text"},"ts":1299369300000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Cool :-). I'm off to bed for now, night","msgtype":"m.text"},"ts":1299369360000,"senderName":"Peter-","senderId":"Peter-@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1299369361000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"ah, hmm, nm","msgtype":"m.text"},"ts":1299369420000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"er, no, I don't still get it","msgtype":"m.text"},"ts":1299369480000,"senderName":"smaug____","senderId":"smaug____@irc"}
]