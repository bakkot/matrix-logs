[
{"content":{"body":"Domenic: hmm yeah","msgtype":"m.text"},"ts":1434586997000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I'm just trusting that tool of Chris's is testing what it seems to be testing (because too lazy to try testing it directly right now)","msgtype":"m.text"},"ts":1434587090000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm busy reading through the now-finally-not-a-private-repo-any-more wasm stuff","msgtype":"m.text"},"ts":1434587129000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"after weeks of luring on the #webassembly IRC channel and trying to reverse-engineer from check-in comments that commit bot posts there","msgtype":"m.text"},"ts":1434587195000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*lurking","msgtype":"m.text"},"ts":1434587214000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: re: encodings - https://encoding.spec.whatwg.org/#names-and-labels","msgtype":"m.text"},"ts":1434587361000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1434587495000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"depends on context, but if it's not in the table the result is \"failure\" - which means depends on context","msgtype":"m.text"},"ts":1434587589000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: I guess annevk needs to update the \"utf-8\" row in that table to say \"also any string that's not a name or label for any other encoding listed in this table\"","msgtype":"m.text"},"ts":1434587598000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for html, it's still good ol' windows-1252","msgtype":"m.text"},"ts":1434587599000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1434587613000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jsbell: so is http://www.lookout.net/test/charsets/iana-charset-support/ not showing what it seems to be showing?","msgtype":"m.text"},"ts":1434587649000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or are all UAs just not conforming on this?","msgtype":"m.text"},"ts":1434587673000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm now that I say that out loud I realize already know that HTML parsers fall back to windows-1252","msgtype":"m.text"},"ts":1434587746000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ugh, contentDocument.charset/characterSet is a whole nother set of aliases/logic...","msgtype":"m.text"},"ts":1434587748000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"drafts reply to Chris Weber","msgtype":"m.emote"},"ts":1434587801000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sees that jsbell already beat him to it","msgtype":"m.emote"},"ts":1434587825000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, I was missing context so I'm not sure I'm helping.","msgtype":"m.text"},"ts":1434587852000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"hrm, those aliases aren't as bad as I remember apparently: https://github.com/w3c/web-platform-tests/blob/master/encoding/resources/encodings.js","msgtype":"m.text"},"ts":1434587889000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"TabAtkins: +1 to the meta element in SVG. that would save a lot of insanity.","msgtype":"m.text"},"ts":1434588097000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"that, and link, would make my life easier writing reftests","msgtype":"m.text"},"ts":1434588129000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yeah, we want it for a few other things, too, like declaring SVG Params (the ability to set a CSS custom property via a query parameter).","msgtype":"m.text"},"ts":1434588142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, <link> too.","msgtype":"m.text"},"ts":1434588154000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but it would need us to finally come up with a plan for supporting these from-HTML elements without duplicating them in the SVG namespace","msgtype":"m.text"},"ts":1434588164000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(a plan that everyone can live with, that is; we've had a couple of plans...)","msgtype":"m.text"},"ts":1434588185000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"The only \"issue\" is that in an XML syntax you need to specify the HTML namespace for them.","msgtype":"m.text"},"ts":1434588207000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Note that we're now finally actively looking into just using the foreign-content parser for standalone SVG. More than just talk, finally.)","msgtype":"m.text"},"ts":1434588233000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(That would avoid the need; HTML elements would just be given the HTML namespace automatically.)","msgtype":"m.text"},"ts":1434588257000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, is that Blink experimenting with using HTML parser for standalone SVG documents?","msgtype":"m.text"},"ts":1434588302000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1434588309000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"do you have a link for any discussion/announcement?","msgtype":"m.text"},"ts":1434588320000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Not yet, just internal discussions. We're throwing around some use-counters right now.","msgtype":"m.text"},"ts":1434588334000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok. look forward to hearing the outcomes.","msgtype":"m.text"},"ts":1434588356000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(Attempting to eliminate XML from our engine entirely, if possible.  We only need it for SVG, XHR.responseXML, and XSLT.)","msgtype":"m.text"},"ts":1434588364000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Moving SVG to the HTML parser would be easy and better for authors (consistent syntax), XHR we'll see if we can move to a simplistic parser like XML5 or similar. XSLT, lol I dunno.","msgtype":"m.text"},"ts":1434588410000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought you already were going to just implement XSLT in JS","msgtype":"m.text"},"ts":1434588436000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"That's vaguely the plan, yeah.","msgtype":"m.text"},"ts":1434588505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: re: (the ability to set a CSS custom property via a query parameter). <-- What's the use-case? Why would you want the client to control the aesthetics of your app?","msgtype":"m.text"},"ts":1434588580000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"boogyman: SVG images that can have colors/etc set at time of use.  <img src=\"logo.svg?main-color=blue\">","msgtype":"m.text"},"ts":1434588613000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You have to pre-declare which properties are Params, to prevent arbitrary screwing around.","msgtype":"m.text"},"ts":1434588647000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah rektide","msgtype":"m.text"},"ts":1434590750000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it didn't take you long","msgtype":"m.text"},"ts":1434590764000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://groups.google.com/d/msg/emscripten-discuss/k-egXO7AkJY/GLqWCJCPnqwJ","msgtype":"m.text"},"ts":1434590786000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you need one of those signs man","msgtype":"m.text"},"ts":1434590794000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"The End is Near\"","msgtype":"m.text"},"ts":1434590851000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Does someone know why DocumentFragment doesn't support innerHTML? It looks only Element support it.","msgtype":"m.text"},"ts":1434598004000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"The context is https://code.google.com/p/chromium/issues/detail?id=497175  . I am wondering how ShadowRoot.innerHTML should behave.","msgtype":"m.text"},"ts":1434598419000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"hayato: there was a thread a few years back, let me find it","msgtype":"m.text"},"ts":1434599829000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hayato: https://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0663","msgtype":"m.text"},"ts":1434599849000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Thank you!","msgtype":"m.text"},"ts":1434599876000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"lots of support from blink people, here's some from Moz... https://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0670.html","msgtype":"m.text"},"ts":1434599981000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Here's some from rniwa... https://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0675.html","msgtype":"m.text"},"ts":1434599999000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"this one outlines some of the hard cases... https://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0766.html","msgtype":"m.text"},"ts":1434600049000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"<a> is a problem, SVG vs. HTML https://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0812.html","msgtype":"m.text"},"ts":1434600132000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so in conclusion, people like it, but edge cases are probably hard","msgtype":"m.text"},"ts":1434600176000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I don't think you should consider my comment in 2011 as endorsement from WebKit project","msgtype":"m.text"},"ts":1434600603000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: since i was working for Google at the time.","msgtype":"m.text"},"ts":1434600611000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"haha right, ok","msgtype":"m.text"},"ts":1434600631000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(note that i would necessarily oppose to this particular proposal)","msgtype":"m.text"},"ts":1434600689000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: were you speaking on behalf of yourself or the company?","msgtype":"m.text"},"ts":1434600695000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"boogyman: in public-webapps, I was a representative of Google until October 2012.","msgtype":"m.text"},"ts":1434600861000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"boogyman: now I'm a representative of Apple","msgtype":"m.text"},"ts":1434600898000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1434600908000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"boogyman: do I speak on behalf of my employer? probably not.","msgtype":"m.text"},"ts":1434600921000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"boogyman: do my opinions change based on goals/needs of my employer? absolutely.","msgtype":"m.text"},"ts":1434600948000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Understood. classic User v Business model for making decisions.","msgtype":"m.text"},"ts":1434601053000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"yeah, each company has its own priority and rightly so.","msgtype":"m.text"},"ts":1434601093000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: yeah, there's no defaulting to utf-8","msgtype":"m.text"},"ts":1434604204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I don't know what Chris's test is doing","msgtype":"m.text"},"ts":1434605089000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: when can you review the new URL tests?","msgtype":"m.text"},"ts":1434605407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in a few hours","msgtype":"m.text"},"ts":1434605422000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks!","msgtype":"m.text"},"ts":1434605428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I might create some more today, and I'm super bad with git","msgtype":"m.text"},"ts":1434605438000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I'd rather not get a bunch of merge conflicts","msgtype":"m.text"},"ts":1434605450000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1434605463000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I reckon I can get to it within 1 hour","msgtype":"m.text"},"ts":1434605481000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: gedaan","msgtype":"m.text"},"ts":1434609378000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: sugoi","msgtype":"m.text"},"ts":1434610125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/commit/2717ed0b937d4612bd18261559bd0dd7800fba96 this looks really bad... SRI fixes shouldn't affect all those files...","msgtype":"m.text"},"ts":1434610526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or is that just how bad merges go? How do we know that did not overwrite any other work? Seems impossible to review...","msgtype":"m.text"},"ts":1434610557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah that stuff is all because Joel flubbed and ended up with a branch merge tin that PR","msgtype":"m.text"},"ts":1434610724000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"unfortunately with git that's a very easy mistake to make","msgtype":"m.text"},"ts":1434610746000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it's not hard to unwind","msgtype":"m.text"},"ts":1434610760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"But how do we know nothing bad happened?","msgtype":"m.text"},"ts":1434610761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can look at the commits separately","msgtype":"m.text"},"ts":1434610784000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though he should probably re-submit another PR with the same commits minus that merge","msgtype":"m.text"},"ts":1434610817000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or I can do it for him and he can clone the branch I make","msgtype":"m.text"},"ts":1434610849000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well all the commits already went into master","msgtype":"m.text"},"ts":1434610862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1434610867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps there should be some tighter control on who can do the final commits so the whole thing makes a bit more sense","msgtype":"m.text"},"ts":1434610891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah christ you're right","msgtype":"m.text"},"ts":1434610907000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I thought he had committed to a branch","msgtype":"m.text"},"ts":1434610924000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah that's .. not so great","msgtype":"m.text"},"ts":1434610938000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but we can still unwind it","msgtype":"m.text"},"ts":1434610945000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I've started doing things the Domenic-way for my repos so you don't even get merge commits","msgtype":"m.text"},"ts":1434610994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: about tighter control we have a soft policy that nobody should commit any of their own changes to master","msgtype":"m.text"},"ts":1434611001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I just attribute authorship through --author although that's rather cumbersome","msgtype":"m.text"},"ts":1434611006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah that works too","msgtype":"m.text"},"ts":1434611024000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I want GitHub to support an author field in their client","msgtype":"m.text"},"ts":1434611032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So I can just use @domenic or some such","msgtype":"m.text"},"ts":1434611051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've never used their client","msgtype":"m.text"},"ts":1434611058000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I just use the git comment","msgtype":"m.text"},"ts":1434611066000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*command","msgtype":"m.text"},"ts":1434611069000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I should learn to use that","msgtype":"m.text"},"ts":1434611075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Main problem with the command line and me is multiline stuff","msgtype":"m.text"},"ts":1434611088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"man I hope Joel did all that by mistake. I mean as far as committing it master","msgtype":"m.text"},"ts":1434611103000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well and remembering all the silly parameters","msgtype":"m.text"},"ts":1434611108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Brad reviewed that PR, but it didn't have those branch merges in it when he reviewed it","msgtype":"m.text"},"ts":1434611180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what probably should have better happened is that Brad just pushed the merge button in the github UI after he reviewed it","msgtype":"m.text"},"ts":1434611212000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what seems to have happened instead is that Joel committed the branch merges after Brad had reviewed it, then Joel pushed that","msgtype":"m.text"},"ts":1434611258000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, nothing fatal","msgtype":"m.text"},"ts":1434611268000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: also, web-platform-tests has a lot of old branches","msgtype":"m.text"},"ts":1434611566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I assume not all of those are active anymore","msgtype":"m.text"},"ts":1434611574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: could we maybe kill some of them?","msgtype":"m.text"},"ts":1434611579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I will right now","msgtype":"m.text"},"ts":1434611982000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"kill some","msgtype":"m.text"},"ts":1434611992000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Maybe https://bugzilla.mozilla.org/show_bug.cgi?id=1170774#c4 should be documented on the wiki","msgtype":"m.text"},"ts":1434612006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Amount of WHATWG Standards is slowly growing","msgtype":"m.text"},"ts":1434612020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"may a hundred flowers bloom","msgtype":"m.text"},"ts":1434612567000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and a hundred schools of thought contend","msgtype":"m.text"},"ts":1434612587000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: deleted all the old branches I safely could","msgtype":"m.text"},"ts":1434612992000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"many of the remaining ones were either created by jgraham or Ms2ger and have no associated PR so they would need to check and see if it's a branch they're planning to work again on ever or not","msgtype":"m.text"},"ts":1434613069000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: btw one of those branches-in-limbo is yours, https://github.com/w3c/web-platform-tests/tree/encoding-and-css","msgtype":"m.text"},"ts":1434613105000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"with https://github.com/w3c/web-platform-tests/commit/02ac3d372060393f4c0a6a0f29a95dd9f0ee8fda","msgtype":"m.text"},"ts":1434613133000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wonder if we should require owners to setup 2-factor auth... https://github.com/orgs/whatwg/people","msgtype":"m.text"},"ts":1434615280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: yeah I know, I was hoping someone would take that over","msgtype":"m.text"},"ts":1434615307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: but despite all the talk from the i18n WG, nothing much materialized","msgtype":"m.text"},"ts":1434615336000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well it's not doing any harm so you could just leave it","msgtype":"m.text"},"ts":1434615337000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: no comment 😆","msgtype":"m.text"},"ts":1434615368000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we need a template for that sentence","msgtype":"m.text"},"ts":1434615378000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"despite all the talk from [aaa], nothing much materialized\"","msgtype":"m.text"},"ts":1434615409000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1434617191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's that skeleton meme...","msgtype":"m.text"},"ts":1434617241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you have a preference about https://bugzilla.mozilla.org/show_bug.cgi?id=1165851#c41 ? I'm trying to measure something here, but what do you think the most likely end-state of the spec will be?","msgtype":"m.text"},"ts":1434621687000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: my preference is 1 as well","msgtype":"m.text"},"ts":1434621720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: I have good hopes that's fine, smaug____ seems to think otherwise","msgtype":"m.text"},"ts":1434621733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is just very weird API if it can't be used with SVG","msgtype":"m.text"},"ts":1434621776000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: ok, so if I'm to measure differences, it's exactly what the spec currently says, plus a \"lowercase localName if the document is an HTML document\" as part of createAttribute?","msgtype":"m.text"},"ts":1434621792000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I'd then make setAttributeNode to throw with SVG elements in html documents","msgtype":"m.text"},"ts":1434621797000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: there's still createAttributeNS and setAttribute","msgtype":"m.text"},"ts":1434621809000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1434621838000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: what end state do you think would be better?","msgtype":"m.text"},"ts":1434621851000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"but attributes are rarely in any namespace, so I wouldn't expect the API user to remember that *NS should be used with SVG","msgtype":"m.text"},"ts":1434621864000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"of course no one should use Attr nodes","msgtype":"m.text"},"ts":1434621873000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I don't think making any method throw improves the status quo","msgtype":"m.text"},"ts":1434621917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"from the code I've found, people are already assuming that case doesn't matter with createAttribute, doing things like createAttribute(\"frameBorder\")","msgtype":"m.text"},"ts":1434621919000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"smaug____: perhaps making setAttribute() more magical to recognize SVG attributes would","msgtype":"m.text"},"ts":1434621933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, it would make it clear that if #1 is taken, createAttribute is totally broken with svg","msgtype":"m.text"},"ts":1434621963000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(and MathML too)","msgtype":"m.text"},"ts":1434621971000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"philipj: but case does matter on SVG","msgtype":"m.text"},"ts":1434621994000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"we could rather than lowercase all the things also recognize https://html.spec.whatwg.org/multipage/syntax.html#adjust-svg-attributes","msgtype":"m.text"},"ts":1434621995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: it's not totally broken with SVG","msgtype":"m.text"},"ts":1434622009000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: yes, but I found zero cases of SVG attribute together with createAttribute","msgtype":"m.text"},"ts":1434622010000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"smaug____: it works just fine for most SVG usage","msgtype":"m.text"},"ts":1434622014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: even more so for MathML","msgtype":"m.text"},"ts":1434622032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, smaug____, how about modifying Attr.localName inside setAttributNode?","msgtype":"m.text"},"ts":1434622045000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"smaug____: there's only one MathML attribute that's not lowercase","msgtype":"m.text"},"ts":1434622046000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: that's prolly only feasible if Attr's are not really nodes","msgtype":"m.text"},"ts":1434622086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least there's an element around in that case","msgtype":"m.text"},"ts":1434622087000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: why?","msgtype":"m.text"},"ts":1434622150000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"the number of non-lowercase doesn't matter, if there is just one. Either the API should work with SVG and MathML, or it shouldn't. The buggy \"works occasionally, if you remember to not use it with camelCase attributes\" sounds rather horrible to me","msgtype":"m.text"},"ts":1434622157000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"philipj: never mind, might be okay either way, but also somewhat magical","msgtype":"m.text"},"ts":1434622171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: that might work","msgtype":"m.text"},"ts":1434622180000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so, preserve case, but when setAttributeNode is called on html element in html document, lowercase?","msgtype":"m.text"},"ts":1434622204000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: sure, it's a bit odd, but technically it doesn't seem very hard","msgtype":"m.text"},"ts":1434622205000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"smaug____: yes","msgtype":"m.text"},"ts":1434622214000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I wouldn't really use setAttribute() most of the time anyway... Most attributes have a dedicated getter/setter pair you can use instead","msgtype":"m.text"},"ts":1434622225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"assuming that no createAttribute() hack works out, would the next best thing be to lowercase input in all other setters and do case-insensitive lookups in getters, removers, and hasAttribute?","msgtype":"m.text"},"ts":1434622398000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"No case-insensitive lookup, please","msgtype":"m.text"},"ts":1434622440000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: is there another way if a createAttribute() fix doesn't work out? Just trying to figure out what's interesting to measure so we only have to wait for one release cycle","msgtype":"m.text"},"ts":1434622496000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: yeah, but we should do createAttribute()","msgtype":"m.text"},"ts":1434622500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really care if that makes it impractical for some SVG usage, it shouldn't be used anyway","msgtype":"m.text"},"ts":1434622519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well I can get behind that. will it fly in Gecko code review, smaug____?","msgtype":"m.text"},"ts":1434622547000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I don't now understand the proposal","msgtype":"m.text"},"ts":1434622788000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: annevk may correct me, but simply to convert localName to lowercase when createAttribute(localName) is called in an HTML document","msgtype":"m.text"},"ts":1434622844000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"so #1","msgtype":"m.text"},"ts":1434622865000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1434622869000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"which doesn't work with svg","msgtype":"m.text"},"ts":1434622871000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1434622876000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"so will it fly?","msgtype":"m.text"},"ts":1434622891000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I'd rather take \"preserve case, but when setAttributeNode is called on html element in html document, lowercase\"","msgtype":"m.text"},"ts":1434622906000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"philipj: though, if telemetry shows that Attrs are never used with svg, then #1 would be fine. Horrible, broken API, but easy to implement","msgtype":"m.text"},"ts":1434622953000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: that seems like a weirder API since currently names are immutable for all nodes in the DOM","msgtype":"m.text"},"ts":1434622973000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: ok, so if the telemtry requested in https://bugzilla.mozilla.org/show_bug.cgi?id=1175031 shows that virtually no calls createAttribute() with non-lowercase input and then attaches that to a non-HTML document, it's OK?","msgtype":"m.text"},"ts":1434623047000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"+one","msgtype":"m.text"},"ts":1434623055000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"non-HTML element I mean","msgtype":"m.text"},"ts":1434623075000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"at least I'd have hard time to object the behavior then :)","msgtype":"m.text"},"ts":1434623092000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"philipj: non-HTMLElement","msgtype":"m.text"},"ts":1434623120000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not document","msgtype":"m.text"},"ts":1434623122000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the worrisome case is svg in HTML document","msgtype":"m.text"},"ts":1434623133000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I assume createAttribute won't lowercase ever in non-html documents","msgtype":"m.text"},"ts":1434623151000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: right, that would be overkill","msgtype":"m.text"},"ts":1434623161000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"it would be very easy to measure how often setAttribute is called on an SVG element in an HTML document and the attr.localName is not lowercase","msgtype":"m.text"},"ts":1434623183000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"some other ideas would require tracking the source of the Attr object which seems less fun","msgtype":"m.text"},"ts":1434623199000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"or perhaps non-HTMLElement instead of SVGElement to be slightly more conservative","msgtype":"m.text"},"ts":1434623261000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"beverloo: can you tell me where IsIPv4Char is defined within http://src.chromium.org/viewvc/chrome/trunk/src/url/ perhaps?","msgtype":"m.text"},"ts":1434625909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Google's URL code is so much more complicated than that of Apple... I wonder what happened","msgtype":"m.text"},"ts":1434625932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://code.google.com/p/chromium/codesearch#chromium/src/url/url_canon_internal.h&q=IsIPv4Char&sq=package:chromium&type=cs&l=65","msgtype":"m.text"},"ts":1434625938000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"That viewer is so much better!","msgtype":"m.text"},"ts":1434625967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which maps to: https://code.google.com/p/chromium/codesearch#chromium/src/url/url_canon_internal.cc&q=kSharedCharTypeTable&sq=package:chromium&type=cs&l=110","msgtype":"m.text"},"ts":1434625971000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"It's got a search function too :) https://cs.chromium.org","msgtype":"m.text"},"ts":1434626019000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"So that kind of matches what I expected, but doesn't really explain why 100x.0.0.0 ends up as a normal host name and not as a failure...","msgtype":"m.text"},"ts":1434626144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess there's some rather arbitrary rulings when something becomes IPv4, \"broken\", or \"not IPv4\"...","msgtype":"m.text"},"ts":1434626189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hey! Anyone happens to know why in \"<img src width='100*'>\" the width is ignored?","msgtype":"m.text"},"ts":1434636999000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: because of https://html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-integers","msgtype":"m.text"},"ts":1434637193000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: What I see is that * is special cased","msgtype":"m.text"},"ts":1434637292000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"e.g. \"200^\" is not ignored","msgtype":"m.text"},"ts":1434637306000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"that is then a bug","msgtype":"m.text"},"ts":1434637338000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"checks the implementation","msgtype":"m.emote"},"ts":1434637348000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"http://jsbin.com/fonidicohi/edit?html,output","msgtype":"m.text"},"ts":1434637349000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"That's what I see in Blink","msgtype":"m.text"},"ts":1434637358000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Oh, in Firefox it is not being special cased","msgtype":"m.text"},"ts":1434637417000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I got a feeling this whole area needs a cleanup","msgtype":"m.text"},"ts":1434637441000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"special cased in WebKit as well","msgtype":"m.text"},"ts":1434637473000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: Gecko is doing something against the current spec","msgtype":"m.text"},"ts":1434637636000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"in your test I see $ and * giving the same behavior","msgtype":"m.text"},"ts":1434637653000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"both those are ignored","msgtype":"m.text"},"ts":1434637660000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yoav: and blink special cases * somehow","msgtype":"m.text"},"ts":1434637686000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yeah, in Blink/WebKit, only * drops the entire int","msgtype":"m.text"},"ts":1434637702000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"anything else after the digits is being ignored","msgtype":"m.text"},"ts":1434637719000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: any idea why * is such special case?","msgtype":"m.text"},"ts":1434637742000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"files a Gecko bug anyhow","msgtype":"m.emote"},"ts":1434637753000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Don't old-style frames use that?","msgtype":"m.text"},"ts":1434637757000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"My question exactly :D","msgtype":"m.text"},"ts":1434637761000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I think I'll add use counters and try to rip that out if possible","msgtype":"m.text"},"ts":1434637821000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"and '%' too, for that matter (I doubt that would work though)","msgtype":"m.text"},"ts":1434637835000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Ms2ger: Frames where using it inside their `width` attributes?","msgtype":"m.text"},"ts":1434638871000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"In the CSS nesting spec, I can use a cartesian product to tie together the parent and child selectors. However, once parent references are involved, I’m lost. Any ideas?","msgtype":"m.text"},"ts":1434640959000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"yoav: you might want to compare with parseInt()","msgtype":"m.text"},"ts":1434641502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see an explicit special casing for '*' before parsing the integer","msgtype":"m.text"},"ts":1434641756000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1434641830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's totally weird. I'll try counting occurrences and kill it with fire if it's not common (and it shouldn't be since it'd have been a compat issue with Firefox)","msgtype":"m.text"},"ts":1434642090000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I guess it's frame parsing code reused because someone was lazy","msgtype":"m.text"},"ts":1434642305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: so we'll restrict the Cache API on time?","msgtype":"m.text"},"ts":1434642323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: wondering whether or not to ask that on the intent to ship thread...","msgtype":"m.text"},"ts":1434642335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finds https://bugzilla.mozilla.org/show_bug.cgi?id=1175138","msgtype":"m.emote"},"ts":1434642364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I am currently planning to do a partial restriction and then implement the full restriction later... what do you think?","msgtype":"m.text"},"ts":1434642365000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah that sounds fine","msgtype":"m.text"},"ts":1434642374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: we need to see if we can restrict SharedWorker somehow","msgtype":"m.text"},"ts":1434642394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chrome is already shipping caches on http I think... although maybe its just in beta","msgtype":"m.text"},"ts":1434642396000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: my partial restriction will just be a scheme check to start","msgtype":"m.text"},"ts":1434642415000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https:// or localhost (or app: for fxos I guess)","msgtype":"m.text"},"ts":1434642438000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: what if SharedWorker created from a secure context could never be accessed from an insecure context?","msgtype":"m.text"},"ts":1434642500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: and only such a SharedWorker gets the goodness?","msgtype":"m.text"},"ts":1434642511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not sure... seems like we need a spec issue on whatever repo defines SharedWorker","msgtype":"m.text"},"ts":1434642533000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that is, the secure context would just add to the scope of a SharedWorker","msgtype":"m.text"},"ts":1434642536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTML defines SharedWorker, but this needs to be monkey patched first","msgtype":"m.text"},"ts":1434642551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll file a bug on \"POWER\" I guess","msgtype":"m.text"},"ts":1434642560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, I can add to your issue: https://github.com/w3c/webappsec/issues/406","msgtype":"m.text"},"ts":1434642597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yea, chrome shipping caches on window in 43... so I believe it allows caches to be used in non-trusted already","msgtype":"m.text"},"ts":1434642616000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"^shipping^shipped","msgtype":"m.text"},"ts":1434642622000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"bah","msgtype":"m.text"},"ts":1434642627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Was sleevi sleeping?","msgtype":"m.text"},"ts":1434642636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And Joel? And Chris?","msgtype":"m.text"},"ts":1434642656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yea... just tried it in the console in chrome release and it worked","msgtype":"m.text"},"ts":1434642716000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://github.com/w3c/webappsec/issues/406#issuecomment-113199509 has my proposal for truly secure shared workers","msgtype":"m.text"},"ts":1434642825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is the bit about frame parsing needing to special case '*' defined somewhere?","msgtype":"m.text"},"ts":1434642976000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"should be","msgtype":"m.text"},"ts":1434642994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/rendering.html#frames-and-framesets","msgtype":"m.text"},"ts":1434643017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1434643031000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-a-list-of-dimensions","msgtype":"m.text"},"ts":1434643042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's only used for frames","msgtype":"m.text"},"ts":1434643071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Whoa whoa whoa","msgtype":"m.text"},"ts":1434649399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Let mathInt be the mathematical integer value that is represented by Z in radix-R notation, using the letters A-Z and a-z for digits with values 10 through 35.\"","msgtype":"m.text"},"ts":1434649404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's not very Allen-style...","msgtype":"m.text"},"ts":1434649414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I'm going to steal that as it seems wonderfully short","msgtype":"m.text"},"ts":1434649439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Strictly speaking it doesn't define which digit maps to which symbol","msgtype":"m.text"},"ts":1434649762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I would be happy with better language. Was just looking for some inspiration for the IPv4 thingie","msgtype":"m.text"},"ts":1434649880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder where TC39 is with progress on value objects http://wiki.ecmascript.org/doku.php?id=strawman:value_objects","msgtype":"m.text"},"ts":1434650585000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://github.com/tc39/ecma262 has a better overview","msgtype":"m.text"},"ts":1434650628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I think you want https://github.com/dslomov-chromium/typed-objects-es7","msgtype":"m.text"},"ts":1434650647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: and maybe the SIMD stuff","msgtype":"m.text"},"ts":1434650666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Whoa... (0x4334234).toString(33) is undefined. JavaScript is cutting a lot of corners","msgtype":"m.text"},"ts":1434650934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"to be fair, I'm not sure we actually use base 33 very often in practice","msgtype":"m.text"},"ts":1434651612000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but wait, no, any radix between 2 and 36 is supposed to do the right thing and not be undefined >_-","msgtype":"m.text"},"ts":1434651742000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(26231474015353).toString(31)","msgtype":"m.text"},"ts":1434652230000,"senderName":"deltab","senderId":"deltab@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1434655098000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/WebAssembly/design/pull/195 \"You'll have to join the W3C Community Group before we can [correct the link].\"","msgtype":"m.text"},"ts":1434659028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's a new level of absurdity right there","msgtype":"m.text"},"ts":1434659036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe you could just nudge someone whose already in the group?","msgtype":"m.text"},"ts":1434659615000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"annevk: wow","msgtype":"m.text"},"ts":1434659682000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wait it's worse https://github.com/WebAssembly/design/pull/199","msgtype":"m.text"},"ts":1434660376000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"azakai makes a good point though?","msgtype":"m.text"},"ts":1434660610000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"they might as well lock all issues then","msgtype":"m.text"},"ts":1434660978000,"senderName":"JoWie","senderId":"JoWie@irc"}
]