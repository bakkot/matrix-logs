[
{"content":{"body":"TabAtkins: the XML-disallows-<-in-attr-values things causes problems in Bikeshed?","msgtype":"m.text"},"ts":1459903295000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or somewhere else?","msgtype":"m.text"},"ts":1459903302000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"No, it causes problems in *my head* because I was editting WebIDL's index.xml file and wtf","msgtype":"m.text"},"ts":1459903316000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1459903323000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Bikeshed doesn't go anywhere near XML.","msgtype":"m.text"},"ts":1459903330000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"count me relieved","msgtype":"m.text"},"ts":1459903340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"krijn: hey sorry, I totally forget, going to set up irc-logs.html5.org now","msgtype":"m.text"},"ts":1459921341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"forgot, even","msgtype":"m.text"},"ts":1459921346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks! Haven't had time myself either though","msgtype":"m.text"},"ts":1459921395000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"krijn: okay, it's added to your account, might take a couple minutes","msgtype":"m.text"},"ts":1459921477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krijn: you'll have to add HSTS headers yourself btw","msgtype":"m.text"},"ts":1459921497000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: we got some PRs formalizing the HTML parser language; is that something you have time for to look through?","msgtype":"m.text"},"ts":1459925782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: https://github.com/whatwg/html/pull/993 and https://github.com/whatwg/html/pull/994","msgtype":"m.text"},"ts":1459925800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: might also be of interest to you? Forgot if you wrote an HTML parser or not","msgtype":"m.text"},"ts":1459925830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I maintain h5e with SimonSapin.","msgtype":"m.text"},"ts":1459925896000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: yay","msgtype":"m.text"},"ts":1459927200000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"remembers writing to the mailing list about this ages ago","msgtype":"m.emote"},"ts":1459927221000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: I assume you're sleeping, right? :)","msgtype":"m.text"},"ts":1459930717000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: if this is about the PR, I can probably do the final review","msgtype":"m.text"},"ts":1459930755000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's about CSP hooks for ECMAScript.","msgtype":"m.text"},"ts":1459930778000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues/271#issuecomment-198084014","msgtype":"m.text"},"ts":1459930789000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: something unclear?","msgtype":"m.text"},"ts":1459930847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just don't know the relationship between HTML concepts and ECMAScript concepts.","msgtype":"m.text"},"ts":1459930877000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Is a \"realm\" a settings object?","msgtype":"m.text"},"ts":1459930885000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Or a global object?","msgtype":"m.text"},"ts":1459930893000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: they're 1:1","msgtype":"m.text"},"ts":1459930893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: those are also 1:1","msgtype":"m.text"},"ts":1459930900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: https://html.spec.whatwg.org/multipage/webappapis.html#global-object","msgtype":"m.text"},"ts":1459930933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The way I read that, an environment settings object has a realm. I'm missing the way to get from a realm to its settings object.","msgtype":"m.text"},"ts":1459931058000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Does a realm have a \"relevant settings object\" or something similar?","msgtype":"m.text"},"ts":1459931068000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Oh. `[[HostDefined]]`?","msgtype":"m.text"},"ts":1459931095000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yeah","msgtype":"m.text"},"ts":1459931226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I recommend using the terms HTML defines, in this case, \"the Realm's settings object\"","msgtype":"m.text"},"ts":1459931265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yup. I see that now. Thanks for the link!","msgtype":"m.text"},"ts":1459931277000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: If you have a second for another n00b ECMA question:","msgtype":"m.text"},"ts":1459931694000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: sure","msgtype":"m.text"},"ts":1459931708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Given spec text like \"Perform ? HostEnsureCanCompileStrings(the current Realm Record, evalRealm).\", what is the expected implementation?","msgtype":"m.text"},"ts":1459931714000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"return abruptly\"","msgtype":"m.text"},"ts":1459931719000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1459931721000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"return normally with some value?","msgtype":"m.text"},"ts":1459931752000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: that means you can throw or just return","msgtype":"m.text"},"ts":1459931793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: if you throw it'll stop at that step basically","msgtype":"m.text"},"ts":1459931804000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: and rethrow the exception","msgtype":"m.text"},"ts":1459931812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: if you return it'll proceed to the next step","msgtype":"m.text"},"ts":1459931844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok. I think I understand, thanks!","msgtype":"m.text"},"ts":1459931863000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"If forbidden, then throw a ... exception.","msgtype":"m.text"},"ts":1459931914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Otherwise, then return.","msgtype":"m.text"},"ts":1459931921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That could also be just \"Return.\" I suppose","msgtype":"m.text"},"ts":1459931935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"More bikeshed, you don't need the second step, just the throw step","msgtype":"m.text"},"ts":1459931971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is it weird for unsigned long to be nullable? (input.selectionStart)","msgtype":"m.text"},"ts":1459933255000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: Is https://github.com/w3c/webappsec-csp/pull/66 more or less reasonable? If so, I'll put together an HTML patch that wires up an implementation of HostEnsureCanCompileStrings to the new method defined in CSP.","msgtype":"m.text"},"ts":1459933636000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"zcorpan: a bit, cannot just return 0?","msgtype":"m.text"},"ts":1459933641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that doesn't distinguish it from when it applies. -1 maybe?","msgtype":"m.text"},"ts":1459933682000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mkwst: I think you can omit step 3","msgtype":"m.text"},"ts":1459933696000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: normally is not really a thing","msgtype":"m.text"},"ts":1459933714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok. The language in ECMA262 made it sound like a thing.","msgtype":"m.text"},"ts":1459933735000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I'll whip up an HTML patch, then. Thanks.","msgtype":"m.text"},"ts":1459933793000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: a normal completion is, but don't think that's needed hete","msgtype":"m.text"},"ts":1459933799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"here","msgtype":"m.text"},"ts":1459933803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: that would not be unsigned","msgtype":"m.text"},"ts":1459933826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right so i'd change it to long","msgtype":"m.text"},"ts":1459933854000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe long long while at it?","msgtype":"m.text"},"ts":1459933892000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: not sure if it matters enough to change types for, can't developers use the type attribute instead?","msgtype":"m.text"},"ts":1459933893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: changing the type seems trivial that can be changed at the same time as not throwing an exception on getting","msgtype":"m.text"},"ts":1459933975000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I guess it'd be best to discuss with an implementer","msgtype":"m.text"},"ts":1459934099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems unnecessary to me, but I don't care strongly","msgtype":"m.text"},"ts":1459934123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, -1 is a horrible sentinel value, though","msgtype":"m.text"},"ts":1459934337000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"there's also that setting it forwards to setSelectionRange whose arguments are unsigned long","msgtype":"m.text"},"ts":1459934514000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"-1 is used as a sentinel for HTMLProgressElement","msgtype":"m.text"},"ts":1459946540000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"A React dev recently contacted me about cases where there's a lack of mutable property <-> attribute correspondence; I think <progress> is one of them","msgtype":"m.text"},"ts":1459946576000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I told him to put together a list and post an issue so hopefully we'll get an exhaustive list soon","msgtype":"m.text"},"ts":1459946587000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe that is what this is discussing I dunno I went to IRC first after waking up instead of email","msgtype":"m.text"},"ts":1459946607000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: no link type for pseudo-classes it seems? just use dfn? that's what selectors4 seems to do","msgtype":"m.text"},"ts":1459960080000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: They're type=selector. Bikeshed has some CSS-specific type-detection if there's no type manually specified.","msgtype":"m.text"},"ts":1459960111000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(In other words, the rule \"a dfn without a type is automatically type=dfn\" is not *strictly* true.)","msgtype":"m.text"},"ts":1459960132000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(This is well-documented in the <dfn> docs, tho.)","msgtype":"m.text"},"ts":1459960163000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ok. When I try to add an external anchor that is type: selector, and reference it using '':defined'', it links but doesn't get the fancy curly quotes around it","msgtype":"m.text"},"ts":1459960224000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Those come from the stylesheet; they're generated content.","msgtype":"m.text"},"ts":1459960303000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Y'all's stylesheet doesn't add it.","msgtype":"m.text"},"ts":1459960321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah ok cool","msgtype":"m.text"},"ts":1459960351000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: do you prefer markdown style lists in DOM, or <li><p>, or <li>? Omit closing tags I assume, if the latter?","msgtype":"m.text"},"ts":1459960424000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: <li><p>, it's a bit inconsistent now though","msgtype":"m.text"},"ts":1459960447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sounds good","msgtype":"m.text"},"ts":1459960456000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it's pretty much the same style as HTML, except I keep inline elements unwrapped","msgtype":"m.text"},"ts":1459960477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"unwrapped\"?","msgtype":"m.text"},"ts":1459960500000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: and I omit closing tags, though sometimes not since I'm getting used to editing HTML...","msgtype":"m.text"},"ts":1459960501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: without newlines inside","msgtype":"m.text"},"ts":1459960506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm ok","msgtype":"m.text"},"ts":1459960509000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: makes it much easier to search for important terms if you don't have to use \\s+ all the time","msgtype":"m.text"},"ts":1459960537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah fair","msgtype":"m.text"},"ts":1459960549000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: is there a way for anchors to provide alternate linking texts? https://github.com/tabatkins/bikeshed/blob/master/docs/definitions-autolinks.md#providing-custom-definitions seems to imply no","msgtype":"m.text"},"ts":1459961055000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm, so the reason service workers exposing client closure is okay, is because they don't use message ports: https://lists.w3.org/Archives/Public/public-whatwg-archive/2013Oct/0004.html","msgtype":"m.text"},"ts":1459961273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MessagePort is both super nice and super nasty","msgtype":"m.text"},"ts":1459961293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Provide multiple text: values under a single url:.","msgtype":"m.text"},"ts":1459961297000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ah right of course, thanks","msgtype":"m.text"},"ts":1459961308000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: hmm, cloning purposefully doesn't go through append an attribute, i.e. purposefully doesn't trigger mutation observers or similar? I wonder if it should trigger attributeChangedCallback...","msgtype":"m.text"},"ts":1459963538000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it seems like it should","msgtype":"m.text"},"ts":1459963545000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: are you sure that's purposeful?","msgtype":"m.text"},"ts":1459964429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not sure. Will probably be a thing to investigate after we finish this initial PR","msgtype":"m.text"},"ts":1459964454000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess it might not be observable currently","msgtype":"m.text"},"ts":1459964468000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"since you can't run code during cloning","msgtype":"m.text"},"ts":1459964479000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so you can't set up a mutation observer or mutation event listener on the new element","msgtype":"m.text"},"ts":1459964492000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think Hixie_ did at some point have feedback that it needed to be atomic","msgtype":"m.text"},"ts":1459964528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As if the new element had all the attributes at once, just like the parser, but I've never really been able to figure out why","msgtype":"m.text"},"ts":1459964546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK I think it's just a wording bug actually. It says \"Append copyAttribute to copy’s attribute list.\" But \"Append\" links to \"append an attribute\" which does the list-appending itself, plus the mutation record stuff","msgtype":"m.text"},"ts":1459964731000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So I'll just remove \"'s attribute lits\"","msgtype":"m.text"},"ts":1459964746000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there's elements that do different things when their attributes are set vs when they are created","msgtype":"m.text"},"ts":1459964767000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"e.g. look at the crazy shit form elements do","msgtype":"m.text"},"ts":1459964781000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: ah, okay, I'll study those at some point","msgtype":"m.text"},"ts":1459964803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or img, e.g. consider what happens if you set src then set srcset then set crossorigin","msgtype":"m.text"},"ts":1459964826000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"vs setting them all at once","msgtype":"m.text"},"ts":1459964829000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"maybe img defers the load enough that it's not an issue","msgtype":"m.text"},"ts":1459964840000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but in principle you see what i mean","msgtype":"m.text"},"ts":1459964845000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i forget the details of which ones do it which way","msgtype":"m.text"},"ts":1459964852000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yeah, it's understandable and browsers do have an \"allAttributesSetCallback\"","msgtype":"m.text"},"ts":1459964896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So they can have created weirdness","msgtype":"m.text"},"ts":1459964920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: annevk: does each document loaded in a window get a new environment settings object?  so if doc 1 navigates to doc 2 in the same window, they get separate environment settings objects?","msgtype":"m.text"},"ts":1459966374000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: no","msgtype":"m.text"},"ts":1459966413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: settings objects are 1:1 with globals","msgtype":"m.text"},"ts":1459966434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and globals aren't created for each document?","msgtype":"m.text"},"ts":1459966454000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I recently tried to clarify those things a bit: https://html.spec.whatwg.org/multipage/webappapis.html#global-object","msgtype":"m.text"},"ts":1459966457000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: globals are not 1:1 with documents, per the second note at https://html.spec.whatwg.org/multipage/browsers.html#browsing-context","msgtype":"m.text"},"ts":1459966494000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: they mostly are, maybe you meant something else with window? Browsing context?","msgtype":"m.text"},"ts":1459966495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I am wondering if doc 1 navigates to doc 2 within a window... do you get a new browsing context","msgtype":"m.text"},"ts":1459966586000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"the spec seems to say \"if the browser is configured to\" do that, then yes","msgtype":"m.text"},"ts":1459966599000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, unless doc1 was the initial about:blank document","msgtype":"m.text"},"ts":1459966608000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1459966614000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"you said browsing context not global","msgtype":"m.text"},"ts":1459966620000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so browsing context basically represents \"a tab\"","msgtype":"m.text"},"ts":1459966627000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it lives for a long time","msgtype":"m.text"},"ts":1459966631000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's what things like session history and such are associated with","msgtype":"m.text"},"ts":1459966637000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well I really care about global... but I thought you said global was 1:1 to browsing context","msgtype":"m.text"},"ts":1459966644000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ah, no, sorry if we gave you that impression","msgtype":"m.text"},"ts":1459966671000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the answer to \"do you get a new global\" is \"yes, except for the initial about:blank navigation\"","msgtype":"m.text"},"ts":1459966686000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maybe I should just ask my real question","msgtype":"m.text"},"ts":1459966694000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"this part of the SW spec: https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#dfn-service-worker-client-id","msgtype":"m.text"},"ts":1459966699000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"says to create a new unique value when the environment settings objects is created","msgtype":"m.text"},"ts":1459966712000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\"Although typically objects cannot be accessed across origins, the web platform would not be true to itself if it did not have some legacy exceptions to that rule that the web depends upon.\" lol","msgtype":"m.text"},"ts":1459966725000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"wtf does that mean for a window where you are navigating between documents","msgtype":"m.text"},"ts":1459966729000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it means that on navigation, unless it is navigation from the initial about:blank, a new unique value/environment settings object will be created","msgtype":"m.text"},"ts":1459966765000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1459966776000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: thanks!","msgtype":"m.text"},"ts":1459966782000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1459966788000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i personally put the point at which i learned about the non-1:1ness of windows and documents as the point where my life started down a very different path","msgtype":"m.text"},"ts":1459966828000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: like the movie Pi?","msgtype":"m.text"},"ts":1459966913000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm, haven't seen that one","msgtype":"m.text"},"ts":1459966938000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"http://www.imdb.com/title/tt0138704/?ref_=fn_al_tt_1","msgtype":"m.text"},"ts":1459967102000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\"Although WindowProxy is named as a \"proxy\", it does not do polymorphic dispatch on its target's internal methods as a real proxy would, due to a desire to reuse machinery between WindowProxy and Location objects. As long as the Window object remains an ordinary object this is unobservable and can be implemented either way.\"","msgtype":"m.text"},"ts":1459967663000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"annevk: ^ what exactly is meant by \"proxy\" and \"real proxy\" and \"as a real proxy would\"?","msgtype":"m.text"},"ts":1459967678000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: a \"real\" proxy supposedly would invoke _O_.[[GetPrototypeOf]]","msgtype":"m.text"},"ts":1459967766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: we use OrdinaryGetPrototypeOf(_O_)","msgtype":"m.text"},"ts":1459967781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: so code can be reused between WindowProxy and Location","msgtype":"m.text"},"ts":1459967796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what is _O_ there?","msgtype":"m.text"},"ts":1459967801000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: an object","msgtype":"m.text"},"ts":1459967807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm still confused","msgtype":"m.text"},"ts":1459967859000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"annevk: WindowProxy is an exotic object, and it has custom [[GetPrototypeOf]] and other internal method definitions: right, or wrong?","msgtype":"m.text"},"ts":1459967886000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: it matters when the object being proxied is exotic, but since Window is not, it doesn't","msgtype":"m.text"},"ts":1459967902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: that's correct","msgtype":"m.text"},"ts":1459967912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: so sometimes WindowProxy invokes Ordinary* methods with the Window object, rather than invoking the [[*]] methods on the Window object","msgtype":"m.text"},"ts":1459967957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: because that allows WindowProxy and Location to share code","msgtype":"m.text"},"ts":1459967974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: I'd be happy to improve that sentence if you have suggestions btw, though file an issue at https://github.com/whatwg/html as I won't get to it now","msgtype":"m.text"},"ts":1459968010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for my immediate purpose, simply knowing [[GetPrototypeOf]] isn't the ordinary definition is enough","msgtype":"m.text"},"ts":1459968055000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"annevk: but I might take you up on that later, 'cause jorendorff and I are a bit confuzzled by the language as it is right now","msgtype":"m.text"},"ts":1459968075000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"annevk: although bz is edumacating me on this as we speak, if I switch back to that IRC-tab","msgtype":"m.text"},"ts":1459968091000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"so who knows whether anything *really* truly should be changed","msgtype":"m.text"},"ts":1459968102000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1459968103000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: the quote you gave is a note, so maybe just ignore that and see if the rest makes sense","msgtype":"m.text"},"ts":1459968104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: I do think Gecko as is has some bugs","msgtype":"m.text"},"ts":1459968116000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: though I don't recall which","msgtype":"m.text"},"ts":1459968128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess in my particular case, the global's immutable prototype chain means my particular question-to-answer is only a perf difference and nothing more","msgtype":"m.text"},"ts":1459968187000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"(what I'm doing, is implementing Object.setPrototypeOf's aborting its loop to check for prototype chains, when an object with non-ordinary [[GetPrototypeOf]] is encountered)","msgtype":"m.text"},"ts":1459968218000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"(but you can't have a cycle because of the immutability, so saying ordinary/not here just means you either abort the loop early, or you keep looping through the last several things on the chain)","msgtype":"m.text"},"ts":1459968255000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"is there an abstract operation defined for non-ordinary?","msgtype":"m.text"},"ts":1459968283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds a little magical","msgtype":"m.text"},"ts":1459968289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: basically this is all step 8c(i) in https://tc39.github.io/ecma262/#sec-ordinarysetprototypeof","msgtype":"m.text"},"ts":1459968320000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"also, if that's the same-origin issue leaking cross-origin stuff I didn't really follow that","msgtype":"m.text"},"ts":1459968327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there isn't an abstract operation; there probably should be, but there isn't","msgtype":"m.text"},"ts":1459968338000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"SpiderMonkey's going to implement it as an abstract operation, for sure","msgtype":"m.text"},"ts":1459968355000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"oh wow, some actual prose","msgtype":"m.text"},"ts":1459968364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"interesting primitive","msgtype":"m.text"},"ts":1459968371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the idea is objects without proxies on their prototype chains, will never have cyclic prototypes","msgtype":"m.text"},"ts":1459968402000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"annevk: but once you can have a proxy on the chain, the potential for cycles (that can't be simply legislated away) is unavoidable","msgtype":"m.text"},"ts":1459968423000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"var obj; var p = new Proxy({}, { getPrototypeOf() { return obj; } }); obj = Object.create(p);","msgtype":"m.text"},"ts":1459968465000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"obj's prototype is |p|, |p|'s prototype when observed is |obj|, and you can't really prevent it any good way","msgtype":"m.text"},"ts":1459968492000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"so non-cyclic is only enforced when the \"ordinary\" [[GetPrototypeOf]] is the only thing in sight","msgtype":"m.text"},"ts":1459968512000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Domenic: yt?","msgtype":"m.text"},"ts":1459974187000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: kinda, a meeting starts in 3 minutes","msgtype":"m.text"},"ts":1459974356000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I commented on https://github.com/whatwg/dom/pull/204","msgtype":"m.text"},"ts":1459974369000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: merging custom elements / shadow DOM into DOM / HTML will make it impossible for me to follow","msgtype":"m.text"},"ts":1459974383000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: can we at least update the existing doc to up to the point where we agreed yesterday?","msgtype":"m.text"},"ts":1459974453000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: why is that? custom elements is basically baked. (i agree on shadow dom)","msgtype":"m.text"},"ts":1459974470000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: not really.","msgtype":"m.text"},"ts":1459974486000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: we don't want type extensions","msgtype":"m.text"},"ts":1459974490000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: only updates left are the extended attribute thing, and patching the specs seems better than maintaining a giant list","msgtype":"m.text"},"ts":1459974494000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: sure, but you agreed that it's in the spec","msgtype":"m.text"},"ts":1459974499000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: we didn't.","msgtype":"m.text"},"ts":1459974505000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: you can ignore them just as well in dom/html as you can in custom elements","msgtype":"m.text"},"ts":1459974514000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: anyway, more practical matter is that it's going to be a lot harder to figure out what has changed since the last meeting","msgtype":"m.text"},"ts":1459974540000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: nothing has changed.","msgtype":"m.text"},"ts":1459974554000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I mean last F2F","msgtype":"m.text"},"ts":1459974565000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: compare the custom elements spec to the DOM/HTML specs.","msgtype":"m.text"},"ts":1459974592000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: this whole bureaucracy between W3C and WHATWG is uttrly insane","msgtype":"m.text"},"ts":1459974594000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: I'm saying that's a lot harder because everything has moved around :(","msgtype":"m.text"},"ts":1459974628000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I don't think this is about what organization. I think this is about upstreaming vs. maintaining a separate document full of monkeypatches.","msgtype":"m.text"},"ts":1459974629000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: sure, but it moved around when it was all in one document anyway","msgtype":"m.text"},"ts":1459974637000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: and I'm saying that we should maintain a separate document for now","msgtype":"m.text"},"ts":1459974646000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: otherwise, I don't think I can meaningfully give further feedback on the API","msgtype":"m.text"},"ts":1459974662000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: in any reasonable timeframe","msgtype":"m.text"},"ts":1459974669000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: OK, well, I am not interested in maintaining that document, especially since it's just an index of \"please insert this sentence in this part of the other spec\"","msgtype":"m.text"},"ts":1459974670000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gtg meeting, bbiab","msgtype":"m.text"},"ts":1459974709000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: back. I really don't think this is a big deal. What are your concrete concerns with putting things in the specs they're monkeypatching, instead of maintaining a monkeypatch document?","msgtype":"m.text"},"ts":1459976112000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: I agree that shadow DOM needs more time to bake, but custom elements is in good shape.","msgtype":"m.text"},"ts":1459976148000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'd like to see all the things related to custom elements in one place so that I can update the implementation in WebKit","msgtype":"m.text"},"ts":1459976155000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: if the thing you're working got merged, it's probably faster for me to just start from scratch than to try to update things.","msgtype":"m.text"},"ts":1459976198000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: because I'm going to miss something somewhere","msgtype":"m.text"},"ts":1459976213000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: or maybe I can find some colleague of mine who can figure that out.","msgtype":"m.text"},"ts":1459976230000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: but I'm really done dealing with all these W3C/WHATWG shenanigans","msgtype":"m.text"},"ts":1459976254000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: maybe it would help to note that https://rawgit.com/w3c/webcomponents/15a203c8393aef0df7223ab1d43406aa11a7e71e/spec/custom/index.html is still available. The only differences in the \"upstream\" patches are typo fixes and editorial stuff","msgtype":"m.text"},"ts":1459976258000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: you can follow any further revisions as they land (but as I said, I don't anticipate many)","msgtype":"m.text"},"ts":1459976276000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: again, I don't think this is about organizations. If we landed these in the DOM4/HTML5.1 forks it wouldn't change the nature of your complaint","msgtype":"m.text"},"ts":1459976306000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: and I'd object to that change.","msgtype":"m.text"},"ts":1459976323000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I'm still trying to understand why. Because you're going to miss something somewhere? But how, since there's no changes to miss in the initial important, and subsequent changes are obvious commits in the commit history?","msgtype":"m.text"},"ts":1459976361000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: would it be helpful if we prefixed all custom elements related commits with \"Custom elements:\"?","msgtype":"m.text"},"ts":1459976372000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: I'd even be willing to email you every time I made such a commit if you're really concerned.","msgtype":"m.text"},"ts":1459976388000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: well, the thing is, I'm not going to look at every single commit","msgtype":"m.text"},"ts":1459976395000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: I'm going to look at the spec.","msgtype":"m.text"},"ts":1459976408000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: oh ok, great, then what's the issue?","msgtype":"m.text"},"ts":1459976418000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: but now the spec will be scattered across multiple places in DOM","msgtype":"m.text"},"ts":1459976423000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: and it's going to be the impossible for me to figure out which concepts, steps, and algorithms are relevant for custom elements","msgtype":"m.text"},"ts":1459976447000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I think I have just the thing you for","msgtype":"m.text"},"ts":1459976463000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"*for you","msgtype":"m.text"},"ts":1459976466000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"one sec","msgtype":"m.text"},"ts":1459976467000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: http://services.w3.org/htmldiff?doc1=https%3A%2F%2Fdom.spec.whatwg.org%2F&doc2=https%3A%2F%2Fraw.githubusercontent.com%2Fwhatwg%2Fdom%2Fcustom-elements%2Fdom.html perfect","msgtype":"m.text"},"ts":1459976517000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: same \"all the patches are obvious\" experience as before, one spec instead of monkeypatches.","msgtype":"m.text"},"ts":1459976534000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: well, but this diff is going to include all other DOM spec changes in the future, no?","msgtype":"m.text"},"ts":1459976693000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: nope! it's pegged to the custom elements changes.","msgtype":"m.text"},"ts":1459976706000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so it'll show and only show all future custom elements changes?","msgtype":"m.text"},"ts":1459976859000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yep!","msgtype":"m.text"},"ts":1459976876000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh, cool. this is great!","msgtype":"m.text"},"ts":1459976884000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yay \\o/","msgtype":"m.text"},"ts":1459976894000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i'll try to work on something similar for html, will be a bit tricky given htmldiff fails on singlepage but we can make it work","msgtype":"m.text"},"ts":1459976928000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"easy first pass is just maintain a list of links to a few multipage diffs","msgtype":"m.text"},"ts":1459976954000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, diff on multi-page urls will be just fine","msgtype":"m.text"},"ts":1459977042000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: did we fix the problem that cross-section linking doesn't work in multi-page docs?","msgtype":"m.text"},"ts":1459977068000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I made a slight correction to the diff URL to make it keep working after merge. I added the updated URL to https://github.com/whatwg/dom/wiki.","msgtype":"m.text"},"ts":1459977165000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: cross-section linking works, but the dfn popups do not work yet :(","msgtype":"m.text"},"ts":1459977177000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that popup is what I was talking about","msgtype":"m.text"},"ts":1459977283000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yeah :(. it's high priority on the tooling to-fix list, MikeSmith was looking into it a bit.","msgtype":"m.text"},"ts":1459977326000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ears burning","msgtype":"m.text"},"ts":1459977371000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1459977376000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah need to step back and re-think that really","msgtype":"m.text"},"ts":1459977417000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I implemented cross-document linking for those popups previously, years ago, in the python splitter we were using at the time","msgtype":"m.text"},"ts":1459977563000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"R.I.P. Anolis","msgtype":"m.text"},"ts":1459977590000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1459977597000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it worked then, what I made, but it increased the build time by 20 times or more","msgtype":"m.text"},"ts":1459977621000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1459977655000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"so I think we really need to have something that doesn’t make a massive hit to build time","msgtype":"m.text"},"ts":1459977659000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1459977740000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"this would be a great project for a code contributor who wanted to help out with the effort","msgtype":"m.text"},"ts":1459977741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"^ that sounds like a great way for something to not get done, sadly","msgtype":"m.text"},"ts":1459977762000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i would be ok with increased build times if you could turn off multipage generation during development","msgtype":"m.text"},"ts":1459977782000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OK yeah","msgtype":"m.text"},"ts":1459977807000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"given how fast the build is and how carefully Hixie_ designed it to be that way, I would feel really bad about going in their and just tanking it naively","msgtype":"m.text"},"ts":1459977927000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway I need to make time to try it myself, to see if what I imagine might work","msgtype":"m.text"},"ts":1459977989000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think users would be OK with a popup for a particular term taking some time to generate on the client side the first time they want to look at the refs for that term, if it gets cached on the client side after that","msgtype":"m.text"},"ts":1459978121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think a typical use case is that users only look at a few terms, but they look at those again and again","msgtype":"m.text"},"ts":1459978160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at least that is the usage pattern I follow when I am trying to figure out something or trace something around the spec when I am using the popups to walk through it","msgtype":"m.text"},"ts":1459978224000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in other news I see we may be headed for some drama when getting the shadow-dom and custom-elements stuff folded into HTML and the DOM spec where it seems like everybody agrees they should end up","msgtype":"m.text"},"ts":1459978353000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well the people who care about getting it specified in the right way at least, instead of keeping the spec separate for non-technical reasons","msgtype":"m.text"},"ts":1459978403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"by which I don’t mean rniwa because I can totally understand his POV on this as an implementor","msgtype":"m.text"},"ts":1459978513000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rniwa: but if you think it’s premature to be moving those back to the HTML and DOM specs now, when would you imagine it would time? what would need to change before it was time for them to quit being separate monkeypatch specs","msgtype":"m.text"},"ts":1459978564000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: well, it looks like the diff Domenic sent me suffices my needs","msgtype":"m.text"},"ts":1459978684000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"oh OK","msgtype":"m.text"},"ts":1459978701000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well I was just looking at your comment at https://github.com/whatwg/dom/pull/204#issuecomment-206545194","msgtype":"m.text"},"ts":1459978714000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: my concern with monolithical spec is really about having to understand/read everything even if you're interested in a super small subset of it","msgtype":"m.text"},"ts":1459978730000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"so you are saying you have changed your mind after chatting with Domenic","msgtype":"m.text"},"ts":1459978732000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1459978739000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ya","msgtype":"m.text"},"ts":1459978760000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: not so much that I changed my mind. It's more that there was a solution to the problem I had","msgtype":"m.text"},"ts":1459978778000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: maybe drop a comment on that pull request to reflect that?","msgtype":"m.text"},"ts":1459978784000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"MikeSmith: I would be still opposed if we didn't have http://services.w3.org/htmldiff?doc1=https%3A%2F%2Fdom.spec.whatwg.org%2F&doc2=https%3A%2F%2Fraw.githubusercontent.com%2Fwhatwg%2Fdom%2Fcustom-elements%2Fdom.html","msgtype":"m.text"},"ts":1459978786000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1459978787000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: just done that","msgtype":"m.text"},"ts":1459978791000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hober: ^","msgtype":"m.text"},"ts":1459978795000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1459978798000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1459978799000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1459978808000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I don't think making readers of the spec wait longer for the sake of shorter build time is a good tradeoff though","msgtype":"m.text"},"ts":1459978837000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: since most people are readers","msgtype":"m.text"},"ts":1459978860000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: we can probably build the cross-reference index separately asynchronously though","msgtype":"m.text"},"ts":1459978882000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"bingo","msgtype":"m.text"},"ts":1459978891000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and yeah it is bad to make readers take the performance hit","msgtype":"m.text"},"ts":1459978921000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"performance is a PITA","msgtype":"m.text"},"ts":1459978928000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Moore’s Law and such just need to move faster :)","msgtype":"m.text"},"ts":1459978965000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: soon, people will be complaining about how HTML5 spec won't load fast enough in their contact lenses LOL","msgtype":"m.text"},"ts":1459979021000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hahah","msgtype":"m.text"},"ts":1459979030000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"honestly another concern any time I attempt a major coding project is just the fear of being laughed at and pointed at by y’all when you see the naiveté of my code","msgtype":"m.text"},"ts":1459979148000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"aww <3","msgtype":"m.text"},"ts":1459979229000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith: FWIW the things I've seen you do with Bash have me in awe, or maybe a little terror.","msgtype":"m.text"},"ts":1459979244000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1459979364000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the secret to coding in bash is that you have to either pretend you’re under the influence of psychoactive chemicals, or to actually be under the influence of psychoactive chemicals","msgtype":"m.text"},"ts":1459979455000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or to just be psychotic","msgtype":"m.text"},"ts":1459979467000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://gottsusa.files.wordpress.com/2015/04/img_1364-bison-and-sign.jpg","msgtype":"m.text"},"ts":1459979576000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"MikeSmith: Bikeshed was literally my intro \"let's teach myself Python!\" project.","msgtype":"m.text"},"ts":1459979667000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"My skills have obviously gone up a ton in the process, but naive code is never a problem. ^_^","msgtype":"m.text"},"ts":1459979685000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic, annevk, hayato: fyi, anttik is implementing the correct display: contents semantics for slot element in https://bugs.webkit.org/show_bug.cgi?id=149439","msgtype":"m.text"},"ts":1459979949000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: pretty exciting :)","msgtype":"m.text"},"ts":1459980059000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1459980178000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: hey I think I have actually met those bison during some of my trips, back in my Tatanka Yotanka days. I think the reason they don’t want them doing psychoactive substances is that they start to talk some crazy talk and you can only understand it if you also are tripping","msgtype":"m.text"},"ts":1459980260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: Bikeshed is a pretty impressive first Python project","msgtype":"m.text"},"ts":1459980295000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It was less impressive originally.  Also, I'm a pretty good coder in general, and Python's not too dissimilar from JS, so a lot of my style knowledge could transfer over.","msgtype":"m.text"},"ts":1459980342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so I think you would love Free Pascal coding and I have just the project that would get you an opportunity for fun :) Free Pascal is pretty much just like Python and JS except for the places where it is not","msgtype":"m.text"},"ts":1459980543000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Noooope","msgtype":"m.text"},"ts":1459980557000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1459980570000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"pascal was my second high level programming language, after basic","msgtype":"m.text"},"ts":1459982415000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I went TI-83 Basic => C++ => Java => Lisp => JS => Python","msgtype":"m.text"},"ts":1459982883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Now I accidentally have a good working knowledge of Haskell due to reading papers.","msgtype":"m.text"},"ts":1459982898000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh sorry, PHP between Lisp and JS there.","msgtype":"m.text"},"ts":1459982914000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What's the name for the list of elements you can tab thru?","msgtype":"m.text"},"ts":1459983427000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: \"control group\" ?","msgtype":"m.text"},"ts":1459983619000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I'm just going for \"tabbing through the document's focusable elements\"","msgtype":"m.text"},"ts":1459983639000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"Each focusable area belongs to a single control group...\"","msgtype":"m.text"},"ts":1459983674000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"hayato: yt?","msgtype":"m.text"},"ts":1459984254000,"senderName":"rniwa","senderId":"rniwa@irc"}
]