[
{"content":{"body":"jgraham: https://critic.hoppipolla.co.uk/r/1592 prod prod","msgtype":"m.text"},"ts":1406117178000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I'm pretty sure that string concatenation in python isn't n**2 at least for small strings","msgtype":"m.text"},"ts":1406117366000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: only in CPython","msgtype":"m.text"},"ts":1406117385000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: in PyPy string concatenation is because it can't do refcounting hacks","msgtype":"m.text"},"ts":1406117409000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: and it doesn't use anything like ropes","msgtype":"m.text"},"ts":1406117419000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It could just overallocate memory, surely?","msgtype":"m.text"},"ts":1406117435000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, is that the refcounting hack?","msgtype":"m.text"},"ts":1406117468000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: the refcounting hack is that it calls realloc and reuses the object when refcount == 1","msgtype":"m.text"},"ts":1406117553000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(PyPy, Jython, etc. don't refcount)","msgtype":"m.text"},"ts":1406117577000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"'When an author uses a new metadata name not defined by either this specification or the Wiki page, conformance checkers should offer to add the value to the Wiki, with the details described above, with the \"proposed\" status.'","msgtype":"m.text"},"ts":1406118031000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That sounds very much like a UI requirement.","msgtype":"m.text"},"ts":1406118040000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is annevk on vacation perhaps?","msgtype":"m.text"},"ts":1406118286000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"jgraham: so I want the treewalker stuff in master so I can use it more sanely for the sanitizer changes, and rewrite the sanitizer tests to assert the tree and not the specific serialization","msgtype":"m.text"},"ts":1406118435000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: I mean I can just merge it into the branch but then critic will show it as further changes to be reviewed again","msgtype":"m.text"},"ts":1406118458000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"foolip: Yes","msgtype":"m.text"},"ts":1406121634000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: I can't review and have lunch at the same time :p","msgtype":"m.text"},"ts":1406121649000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I feel like it's later than that. tbf, also being at EuroPython doesn't help given timezone diff. :)","msgtype":"m.text"},"ts":1406121893000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: yeah, conformance checkers have personally told me that they don't want to offer to add stuff to the wiki","msgtype":"m.text"},"ts":1406121954000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: people talk to you? weird.","msgtype":"m.text"},"ts":1406121997000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"they talk about me, then other people tell me what they said","msgtype":"m.text"},"ts":1406122024000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: unacceptable, but thanks :)","msgtype":"m.text"},"ts":1406122729000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Hixie: ok, it's updated to the latest thing that awb has sent me","msgtype":"m.text"},"ts":1406122967000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"however what he sent me does not have the same version number as the latest pdf, hence the qualification","msgtype":"m.text"},"ts":1406122987000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"(my scripts work from the source .docx file, not the .pdf. If I had known awb wouldn't publish it anywhere, I would have started with the pdf)","msgtype":"m.text"},"ts":1406123035000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"which spec defines Selection these days","msgtype":"m.text"},"ts":1406127336000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"found","msgtype":"m.text"},"ts":1406128087000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jorendorff: wow, he writes the spec in word?","msgtype":"m.text"},"ts":1406129486000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jorendorff: that's pretty unusual, for a web spec :-)","msgtype":"m.text"},"ts":1406129495000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1406129498000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"fml","msgtype":"m.text"},"ts":1406129502000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"fml?","msgtype":"m.text"},"ts":1406129682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jorendorff: anyway, thanks!","msgtype":"m.text"},"ts":1406129687000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you're welcome","msgtype":"m.text"},"ts":1406129743000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Has there been any attempt to make EventTarget constructible & inheritable?","msgtype":"m.text"},"ts":1406130312000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"what would that mean?","msgtype":"m.text"},"ts":1406130362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"class Whatever extends EventTarget - to get addEventListener etc on a custom object","msgtype":"m.text"},"ts":1406130413000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"is afraid that Object.observe is now the preferred way to do so","msgtype":"m.emote"},"ts":1406130459000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"EventTarget being used only by DOM citizens which inherit from some HTMLElement or so","msgtype":"m.text"},"ts":1406130485000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Loads of non-elements use EventTarget","msgtype":"m.text"},"ts":1406130511000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"XHR, EventSource, WebSockets","msgtype":"m.text"},"ts":1406130543000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"FileReader, yes","msgtype":"m.text"},"ts":1406130550000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but I would say that those are not full EventTarget impls, because their events lack what makes DOM events unique - capturing and bubbling through the tree","msgtype":"m.text"},"ts":1406130588000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"new XMLHttpRequest() instanceof EventTarget === true","msgtype":"m.text"},"ts":1406130642000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"bravo Haakon https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/Tosujr59Akg/YV1NbFqYF2wJ","msgtype":"m.text"},"ts":1406130773000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: ah, i see. i think that's been suggested before, but i'm not aware of a plan to do it.","msgtype":"m.text"},"ts":1406135003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JakeA: in practice it doesn't really give you much, i mean, implementing addEventListener() isn't much hardship :-)","msgtype":"m.text"},"ts":1406135040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does anyone know where the ES spec defines how to interpret the subscripts on productions?","msgtype":"m.text"},"ts":1406135055000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, found it in 5.1.5, nevermind","msgtype":"m.text"},"ts":1406135100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I guess, but it feels wasteful writing code or brining in a library to do something that's already in the platform","msgtype":"m.text"},"ts":1406141573000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it's like 10 lines of code, but sure","msgtype":"m.text"},"ts":1406142628000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=18026 (comment 11 responds to your comment 10)","msgtype":"m.text"},"ts":1406144426000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: (more selectors stuff)","msgtype":"m.text"},"ts":1406144433000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: are you having SVN trouble, or why \"Change may be delayed a few more days\"?","msgtype":"m.text"},"ts":1406146711000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"i'm trying to track down a bug in my pipeline","msgtype":"m.text"},"ts":1406146725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"2nd guess is new section splitter","msgtype":"m.text"},"ts":1406146726000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"which only manifests when i run the fully optimised build under the profiler on the full spec","msgtype":"m.text"},"ts":1406146740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"compiling with all optimisations takes an ungodly amount of time","msgtype":"m.text"},"ts":1406146763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"running things under the profiler takes an ungodly amount of time","msgtype":"m.text"},"ts":1406146772000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the spec is giant","msgtype":"m.text"},"ts":1406146781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i'm having to make one slight change, then run the pipeline, then get back to it two giant ungoldly amounts of times later to see the result","msgtype":"m.text"},"ts":1406146806000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's... taking a while","msgtype":"m.text"},"ts":1406146810000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so far i have it narrowed down to two specific functions which if i make inline, i get a crash, and if i don't, i don't get a crash.","msgtype":"m.text"},"ts":1406146905000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"out of curiosity, what's the compiler and profiler involved here?","msgtype":"m.text"},"ts":1406146906000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"freepascal and valgrind","msgtype":"m.text"},"ts":1406146914000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are we talking C code?","msgtype":"m.text"},"ts":1406146914000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"there's pascal code involved in producing the spec?","msgtype":"m.text"},"ts":1406146932000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"there is now! :-D","msgtype":"m.text"},"ts":1406146938000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1406146944000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"freepascal, specifically","msgtype":"m.text"},"ts":1406146952000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is a rather modern language with generics and operator overloads and class references and interfaces and so on","msgtype":"m.text"},"ts":1406146979000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as opposed to \"pascal\"","msgtype":"m.text"},"ts":1406146987000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you have your tools in public, in case you get hit by a bus or if other spec editors want to make Hixie-style specs?","msgtype":"m.text"},"ts":1406147010000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"not yet, but it's still in progress","msgtype":"m.text"},"ts":1406147123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i dunno if this bug is something i'm doing, like stomping on the stack or something, or if it's just a compiler bug, but either way, it's hugely annoying...","msgtype":"m.text"},"ts":1406147617000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are you using the memory tool from valgrind as well?","msgtype":"m.text"},"ts":1406147668000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"that should tell you if you're messing up the stack at least","msgtype":"m.text"},"ts":1406147689000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"(I think)","msgtype":"m.text"},"ts":1406147693000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I've never written anything freepascal so my tips are pretty useless :)","msgtype":"m.text"},"ts":1406147726000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Pretty sure Hixie using FreePascal is basically trolling the world ;) \"what's the language that is least likely to get contributions, based on the combined factors of unpopularity and uncoolness\"","msgtype":"m.text"},"ts":1406147966000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"getting contributions wasn't even on my list :-)","msgtype":"m.text"},"ts":1406148062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"foolip: just callgrind so far, but yeah, i should run the memory tool, good point","msgtype":"m.text"},"ts":1406148088000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: You don't say :p","msgtype":"m.text"},"ts":1406148118000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"maybe use GNU RCS as revision control to please the crowd further","msgtype":"m.text"},"ts":1406148175000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Well he's already using SVN…","msgtype":"m.text"},"ts":1406148207000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"when i started this, svn was cutting edge :-P","msgtype":"m.text"},"ts":1406148219000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not my fault you kids keep changing source control system like it's a flavour of the month ice cream :-P","msgtype":"m.text"},"ts":1406148238000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we can't help ourselves :/","msgtype":"m.text"},"ts":1406148260000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Surely trying to profile the code in Callgrind is just going to tell you that 98% of the time is spent in the Callgrind instrumentation","msgtype":"m.text"},"ts":1406148415000,"senderName":"Philip`_","senderId":"Philip`_@irc"},
{"content":{"body":"Philip`_: :-P","msgtype":"m.text"},"ts":1406148480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"likes 'perf' since it generally works and isn't slow (though the UI is kind of terrible)","msgtype":"m.emote"},"ts":1406148492000,"senderName":"Philip`_","senderId":"Philip`_@irc"},
{"content":{"body":"Philip`_: actually callgrind was really helpful in finding hotspots","msgtype":"m.text"},"ts":1406148494000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"svn is an interesting case stufy in …something. Very early they set out their stall and said \"all we want to be is a better CVS\". For a few years, people praised them both for their pragmatic goals and the fact that they achieved them. Then a couple of projects came along with the idea that \"a better CVS\" was fundamentally the wrong design and very quickly ate svn's lunch.","msgtype":"m.text"},"ts":1406148501000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`_: i had used gprof but it was useless (sampling missed all the interesting bits)","msgtype":"m.text"},"ts":1406148519000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: how long does the tool take to run on the full spec under normal conditions?","msgtype":"m.text"},"ts":1406148706000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"are we talking minutes?","msgtype":"m.text"},"ts":1406148713000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"a few seconds","msgtype":"m.text"},"ts":1406148746000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't know the exact time, i ran into this bug while running it under the profiler so i could clean out low-hanging fruit before measuring the current time","msgtype":"m.text"},"ts":1406148785000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that sounds pretty quick given the size of the input","msgtype":"m.text"},"ts":1406148850000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"making it quicker was one of my main goals","msgtype":"m.text"},"ts":1406148875000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"foolip: good call on suggesting using memcheck","msgtype":"m.text"},"ts":1406149980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"me discovers https://github.com/kmcallister/html5ever","msgtype":"m.text"},"ts":1406152053000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: did that reveal the problem?","msgtype":"m.text"},"ts":1406152805000,"senderName":"foolip","senderId":"foolip@irc"}
]