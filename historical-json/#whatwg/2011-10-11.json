[
{"content":{"body":"erlehmann: so you do what you think is correct in comments.cgi, but remove *all* markup in strictly_filtered_comments.cgi","msgtype":"m.text"},"ts":1318291200000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"intredasting.","msgtype":"m.text"},"ts":1318291201000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: or say that you're hosting widgets on your site","msgtype":"m.text"},"ts":1318291202000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"erlehmann: you want the widgets to be able to run script","msgtype":"m.text"},"ts":1318291260000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i'll still just use html5lib and think i am filtering absolutely, entirely correctly in that case.","msgtype":"m.text"},"ts":1318291261000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: but not if you can't sandbox them","msgtype":"m.text"},"ts":1318291262000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"that i understand.","msgtype":"m.text"},"ts":1318291263000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: then you'd let the first src filter out all scripts, but the second would be allowed to run scripts","msgtype":"m.text"},"ts":1318291264000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"erlehmann: if you're trusting your filtering, then would you ever need sandbox at all?","msgtype":"m.text"},"ts":1318291320000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"erlehmann: i.e. isn't HTML4 working fine for you?","msgtype":"m.text"},"ts":1318291321000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"still, that's not the graceful degradation i know. it is â€¦ something else. i hope i'll never need it.","msgtype":"m.text"},"ts":1318291322000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"last i checked, there was no html4lib ;)","msgtype":"m.text"},"ts":1318291323000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"but yes.","msgtype":"m.text"},"ts":1318291324000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: well then, if what exists already is good enough for you, then i think we're done here :)","msgtype":"m.text"},"ts":1318291380000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"we are. but now i understand why you did not just filter damn everything.","msgtype":"m.text"},"ts":1318291381000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"(which i, for the record, would do, if i were that unsure of my filtering capabilities.)","msgtype":"m.text"},"ts":1318291440000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"a friend made a wiki and is so paranoid, even internal functions check their assertions about the arguments.","msgtype":"m.text"},"ts":1318291441000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"that is properly paranoid.","msgtype":"m.text"},"ts":1318291442000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"sicking: sure, in that use case you'd want to use something different in both cases. But most use cases will be <iframe sandbox src=\"something-i-think-is-safe-regardless\"></iframe>","msgtype":"m.text"},"ts":1318291560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(s/most/many/, certainly)","msgtype":"m.text"},"ts":1318291561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: then put the same url in both attributes","msgtype":"m.text"},"ts":1318291680000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: as soon as we do that you're back to your original problem","msgtype":"m.text"},"ts":1318291681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the default-closed behavior is really hard to get for on-domain resources","msgtype":"m.text"},"ts":1318291740000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"sicking: i.e. that it is easy to write markup that looks fine, until you start thinking about browsers that don't implement @sandbox","msgtype":"m.text"},"ts":1318291741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do you mean?","msgtype":"m.text"},"ts":1318291742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"its really hard to host things on-domain and not have them be used against you","msgtype":"m.text"},"ts":1318291743000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"e.g., by Java or Flash","msgtype":"m.text"},"ts":1318291744000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"one thing you can do is to set a Content-Disposition: attachment","msgtype":"m.text"},"ts":1318291800000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Flash will respect that","msgtype":"m.text"},"ts":1318291801000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i haven't tested Flash recently","msgtype":"m.text"},"ts":1318291802000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"it turns out that sandbox is pretty useful even without text/html-sandbox","msgtype":"m.text"},"ts":1318291803000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"well if we are assuming that anything same-domain is guaranteed to be unsandboxable when viewed directly, we might as well require that src=\"\" be cross-origin if sandbox=\"\" is specified","msgtype":"m.text"},"ts":1318291860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but then that makes a lot of sandbox=\"\" rather pointless","msgtype":"m.text"},"ts":1318291861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a very common way to use it is with an about:blank iframe","msgtype":"m.text"},"ts":1318291862000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"which you sandbox","msgtype":"m.text"},"ts":1318291863000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and then fill up with stuff","msgtype":"m.text"},"ts":1318291920000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"ok. so on the short-term, what i'm hearing is that we shoudl drop text/html-sandboxed like microsoft suggests","msgtype":"m.text"},"ts":1318291921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and on the medium term there might be additional changes that would be useful?","msgtype":"m.text"},"ts":1318291980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in the medium term, i want to convince someone to implement seamless","msgtype":"m.text"},"ts":1318292100000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1318292101000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Hixie: and disable the ability to have same-origin sandboxes?","msgtype":"m.text"},"ts":1318292400000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"that's the medium term question","msgtype":"m.text"},"ts":1318292401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i recommend posting on the whatwg list about it","msgtype":"m.text"},"ts":1318292460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so what are the use cases when sandbox is useful? Assuming the aweful fallback in older browsers?","msgtype":"m.text"},"ts":1318292461000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"(we'd have to drop allow-same-origin if we did that)","msgtype":"m.text"},"ts":1318292462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well like i said, defense-in-depth is a huge use case","msgtype":"m.text"},"ts":1318292520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wouldn't that make it cover the same usecases as CSP then?","msgtype":"m.text"},"ts":1318292521000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"CSP is far too complex for most authors who have just one domain to use, imho","msgtype":"m.text"},"ts":1318292580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"CSP lets you completely disable scripting","msgtype":"m.text"},"ts":1318292581000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"which would seem like the main usecase for sandbox","msgtype":"m.text"},"ts":1318292582000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"if we're only talking about defence in depth","msgtype":"m.text"},"ts":1318292640000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i dunno that i'd say it's the main use case","msgtype":"m.text"},"ts":1318292641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"might be an important use case in the defence in depth subset of the use cases","msgtype":"m.text"},"ts":1318292642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but then so's preventing form submission","msgtype":"m.text"},"ts":1318292643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and disallowing frame navigation","msgtype":"m.text"},"ts":1318292644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and blocking plugins...","msgtype":"m.text"},"ts":1318292645000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"CSP is so complex that i see abarth asking about it :-P","msgtype":"m.text"},"ts":1318292700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, so assume a world where browsers implement CSP, convince me as a browser author what additional use cases would be covered by @sandbox","msgtype":"m.text"},"ts":1318292701000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: CSP is crazy complex","msgtype":"m.text"},"ts":1318292760000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"its very hard for authors to use","msgtype":"m.text"},"ts":1318292761000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i've been spending a bunch of time with early adopters to understand the snags they run into","msgtype":"m.text"},"ts":1318292762000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"sicking: oh, the use cases are really different","msgtype":"m.text"},"ts":1318292763000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"sicking: if CSP was implemented and easy to use, it might obviate many use cases for same-origin sandbox=\"\"","msgtype":"m.text"},"ts":1318292764000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: though not any of the cross-origin ones","msgtype":"m.text"},"ts":1318292765000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: CSP is for restricting your own content.  sandbox is for restricting other people's content","msgtype":"m.text"},"ts":1318292820000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: i'm listening...","msgtype":"m.text"},"ts":1318292821000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: but so far it does not seem that CSP is going to be easy to use, so...","msgtype":"m.text"},"ts":1318292822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: here's a real example","msgtype":"m.text"},"ts":1318292823000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"yay","msgtype":"m.text"},"ts":1318292824000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"you've got a RSS feed that you've fetched via CORS","msgtype":"m.text"},"ts":1318292825000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and you want to show it to the user in a nice pretty form","msgtype":"m.text"},"ts":1318292880000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"you send it into a sandboxed iframe","msgtype":"m.text"},"ts":1318292881000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and make a nice presentation of it","msgtype":"m.text"},"ts":1318292882000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i love that microsoft's suggestion regarding what to do with the warning is just 'In section 4.8.2 \"The iframe element,\" remove the text \"Warning! It is important that the server serve the user-provided HTML using the text/html-sandboxed MIME type so that if the attacker convinces the user to visit that page directly, the page doesn't run in the context of the site's origin, which would make the user vulnerable to any attack found in the page.\"'","msgtype":"m.text"},"ts":1318292883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that works really well with @sandbox and isn't really doable with CSP","msgtype":"m.text"},"ts":1318292884000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"they don't suggest changing it or anything, just removing it","msgtype":"m.text"},"ts":1318292885000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"abarth: what's the fallback story for old browsers?","msgtype":"m.text"},"ts":1318292886000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"in the actual case, it didn't matter because it's a browser extension that does this","msgtype":"m.text"},"ts":1318292940000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"in the case of a web site, you can probably have a lower fidelity rendering of the RSS feed","msgtype":"m.text"},"ts":1318292941000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"or take some security risks","msgtype":"m.text"},"ts":1318292942000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"or wait a few years and then tell the 1% of legacy UAs that they're screwed","msgtype":"m.text"},"ts":1318293000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"abarth: i'm much more interested in building features for websites than extensions","msgtype":"m.text"},"ts":1318293001000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sure, i just mentioned that case","msgtype":"m.text"},"ts":1318293002000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"because its a place where this got used this past week","msgtype":"m.text"},"ts":1318293003000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: so the concern is that the RSS markup would contain onclick attributes or <script> elements","msgtype":"m.text"},"ts":1318293060000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"abarth: ?","msgtype":"m.text"},"ts":1318293120000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"the RSS feed contains HTML","msgtype":"m.text"},"ts":1318293121000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"e.g., the contents of the posts","msgtype":"m.text"},"ts":1318293122000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1318293123000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"and you don't want the content to call alert()","msgtype":"m.text"},"ts":1318293124000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"for example","msgtype":"m.text"},"ts":1318293180000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"because that's annoying","msgtype":"m.text"},"ts":1318293181000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"so it seems you're screwed if you inject that into a about:blank iframe","msgtype":"m.text"},"ts":1318293182000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so you don't want script to run","msgtype":"m.text"},"ts":1318293183000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"since that can run any script","msgtype":"m.text"},"ts":1318293184000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"what this guy was actually doing","msgtype":"m.text"},"ts":1318293185000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"was using a data URL","msgtype":"m.text"},"ts":1318293186000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and i advised him to just add the sandbox attribute","msgtype":"m.text"},"ts":1318293240000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"to his iframe","msgtype":"m.text"},"ts":1318293241000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and everything worked great","msgtype":"m.text"},"ts":1318293242000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"he was a very happy customer :)","msgtype":"m.text"},"ts":1318293243000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i don't understand how it would work great in the fallback situation","msgtype":"m.text"},"ts":1318293244000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i.e. when the browser doesn't support sandbox","msgtype":"m.text"},"ts":1318293245000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"let me phrase it this way: it seems to me that @sandbox has such a terrible fallback story for browsers that don't support @sandbox, that I'm not sure that we'll want to implement it in firefox and thus encourage it's usage on the web","msgtype":"m.text"},"ts":1318293300000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"well, for example, we could just how the text of the posts","msgtype":"m.text"},"ts":1318293301000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"instead of the HTML formating","msgtype":"m.text"},"ts":1318293302000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i think there's a word missing there?","msgtype":"m.text"},"ts":1318293360000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"s/how/show","msgtype":"m.text"},"ts":1318293361000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1318293362000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"its seems like you could make the same argument about CSP","msgtype":"m.text"},"ts":1318293420000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: so the idea is that webdevelopers are responsible for checking that @sandbox is supported, and use a completely different codepath if it's not","msgtype":"m.text"},"ts":1318293421000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"abarth: certainly","msgtype":"m.text"},"ts":1318293422000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"abarth: CSP is explicitly a defence-in-depth mechanism","msgtype":"m.text"},"ts":1318293423000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"there are two choices","msgtype":"m.text"},"ts":1318293424000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"1) proceed as before and live with any additional risk","msgtype":"m.text"},"ts":1318293425000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: i was under the impression that @sandbox wasn't intended to be just defence-in-depth","msgtype":"m.text"},"ts":1318293426000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"2) check if its supported and do something else if its not","msgtype":"m.text"},"ts":1318293427000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"this discussion has made me more confused about whether it is or not :)","msgtype":"m.text"},"ts":1318293480000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"that's option (2), but option (1) exists too","msgtype":"m.text"},"ts":1318293481000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"well, consider the Secure attribute on cookies","msgtype":"m.text"},"ts":1318293482000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"is that defense in depth or is that a security measure?","msgtype":"m.text"},"ts":1318293483000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"what about browsers that don't support the Secure attribute?","msgtype":"m.text"},"ts":1318293484000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"are there any such browsers?","msgtype":"m.text"},"ts":1318293540000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"there were at one point in time","msgtype":"m.text"},"ts":1318293541000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"we'll be asking the same question about @sandbox in a few years","msgtype":"m.text"},"ts":1318293542000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i'm not sure we made good decisions at that point in time :)","msgtype":"m.text"},"ts":1318293543000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"put another way,","msgtype":"m.text"},"ts":1318293544000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"what's a site supposed to do with browsers that don't support WebGL ?","msgtype":"m.text"},"ts":1318293600000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"use a different code path?","msgtype":"m.text"},"ts":1318293601000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"sicking: sandbox=\"\" is intended exclusively for defence in depth for now. It will eventually be usable for other things as well.","msgtype":"m.text"},"ts":1318293602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just because this is a security feature doesn't mean all the hard things about introducing new features go away","msgtype":"m.text"},"ts":1318293603000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"but yes, in a sense the Secure attribute is defense-in-depth. Though we know that MITM is easier than what was thought","msgtype":"m.text"},"ts":1318293604000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ok, then you probably believe that every security feature is defense-in-depth","msgtype":"m.text"},"ts":1318293660000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"except maybe TLS :-)","msgtype":"m.text"},"ts":1318293661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's teh fallback for https:// ? :-)","msgtype":"m.text"},"ts":1318293720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"possibly. I'm a not huge fan of \"security features\" since most of them are patching mistakes of the past","msgtype":"m.text"},"ts":1318293721000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"but they are obviously needed","msgtype":"m.text"},"ts":1318293722000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"\"firefox developer not fan of security features\" :-P","msgtype":"m.text"},"ts":1318293780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"abarth: i'd just much rather that we fell back to a closed situation than an open situation","msgtype":"m.text"},"ts":1318293781000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: falling back to a closed situation would be great, but falling back to nothing is not fallback, it's just the feature not being supported and the site being broken in old UAs","msgtype":"m.text"},"ts":1318293782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"abarth: it seems very likely to me that people will do <iframe src=\"completely_untrusted_contents.cgi\" sandbox>","msgtype":"m.text"},"ts":1318293840000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i don't think there's any way to do that securely","msgtype":"m.text"},"ts":1318293841000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"regardless of the design","msgtype":"m.text"},"ts":1318293842000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"if a site does <iframe src=\"completely_untrusted_contents.cgi\" sandbox> they have far better problems than fallback","msgtype":"m.text"},"ts":1318293843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"even in completely compliant UAs they'll still get owned","msgtype":"m.text"},"ts":1318293844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since you can just point a user to a page on another domain with that same iframe without sandbox=\"\"","msgtype":"m.text"},"ts":1318293900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and boom, you run script on the victim origin","msgtype":"m.text"},"ts":1318293901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that was the idea behind text/html-sandboxed, which i've just removed from the spec and replaced with warnings saying to use a different origin for untrusted content","msgtype":"m.text"},"ts":1318293902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so it seems to make sense to me to make <iframe src=\"same-origin/comments.cgi\" sandbox=\"...\"> refuse to load the iframe?","msgtype":"m.text"},"ts":1318294140000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"would you block src=\"about:blank\" too?","msgtype":"m.text"},"ts":1318294141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"good question","msgtype":"m.text"},"ts":1318294200000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i'd say no","msgtype":"m.text"},"ts":1318294320000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"since you can't do the thing of \"use another site to navigate the user directly to the url thus avoiding the sandbox\"","msgtype":"m.text"},"ts":1318294321000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: if you block that then you completely prevent the use case adam brought up earlier","msgtype":"m.text"},"ts":1318294500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: of being able to generate a file on the fly that has scripting disabled","msgtype":"m.text"},"ts":1318294501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yup","msgtype":"m.text"},"ts":1318294502000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ok so... that's bad","msgtype":"m.text"},"ts":1318294560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you'll note that I said \"no\" above","msgtype":"m.text"},"ts":1318294561000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"oh, sorry, i misunderstood","msgtype":"m.text"},"ts":1318294562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i thought you meant no, it wouldn't work :-)","msgtype":"m.text"},"ts":1318294563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Random sidenote - we found a better term than \"superior parent\": \"originating element\"","msgtype":"m.text"},"ts":1318294564000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sicking: if you don't block it, then what stops someone from just redirecting the page to a same-origin url?","msgtype":"m.text"},"ts":1318294620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: redirecting about:blank?","msgtype":"m.text"},"ts":1318294621000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: i have no idea what either of those terms mean :-) are they xbl-related things?","msgtype":"m.text"},"ts":1318294622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: \"originating element\" sounds like something to do with the origin policy?","msgtype":"m.text"},"ts":1318294623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: as in, you insert an <iframe sandbox> then you document.write() into it a \"<meta http-equiv=refresh content=0;URL=local.html\">","msgtype":"m.text"},"ts":1318294680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but with my quotes not screwed up","msgtype":"m.text"},"ts":1318294681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: then it's a new load, so you'd block that","msgtype":"m.text"},"ts":1318294682000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ew","msgtype":"m.text"},"ts":1318294740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Dude, \"superior parent\" comes from css3-content, to refer to a pseudo-elements \"parent\".","msgtype":"m.text"},"ts":1318294741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"brb need to find power","msgtype":"m.text"},"ts":1318294742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you want different policies depending on if it's the first document or the second document to be loaded in an iframe?","msgtype":"m.text"},"ts":1318294743000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: the current mechanism (not sandbox-specific) handles src=\"\" differently than normal in-frame page loads","msgtype":"m.text"},"ts":1318295100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: huh??","msgtype":"m.text"},"ts":1318295160000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: in what way?","msgtype":"m.text"},"ts":1318295161000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: the src=\"\" attribute loads go through the \"process the iframe attributes\" algorithm first","msgtype":"m.text"},"ts":1318295220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: the normal loads don't do anything iframe-specific","msgtype":"m.text"},"ts":1318295221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so you can have an <iframe sandbox src=\"...> which contains a document that isn't sandboxed?","msgtype":"m.text"},"ts":1318295280000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"with proper quotes :)","msgtype":"m.text"},"ts":1318295281000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: maybe i didn't understand you proposal though; are you saying that we should block any page loads that have the same origin if the browsing context's sandboxed origin browsing context flag is set?","msgtype":"m.text"},"ts":1318295282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: no","msgtype":"m.text"},"ts":1318295283000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: the sandboxing is a feature of the browsing context","msgtype":"m.text"},"ts":1318295284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: aaah","msgtype":"m.text"},"ts":1318295340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: not sure \"originating element\" works since it's not necessarily an element, is it?","msgtype":"m.text"},"ts":1318295341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: as someone who had forgotten what either term meant, i have to say, both terms seemed equally opaque to me just now","msgtype":"m.text"},"ts":1318295342000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the way it seems to me, we should block any same-origin loads if the browsing context is sandboxed","msgtype":"m.text"},"ts":1318295400000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: or let me rephrase","msgtype":"m.text"},"ts":1318295401000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: the way it seems to me, we should block any loads where the loaded document is same-origin with the parent document, if the browsing context is sandboxed","msgtype":"m.text"},"ts":1318295402000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: that would block about:blank.","msgtype":"m.text"},"ts":1318295640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i assume by \"is sandboxed\" you mean specifically the case of it having the sandboxed origin browsing context flag, not all sandboxing)","msgtype":"m.text"},"ts":1318295700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: no, i meant all sandboxing, per the discussion we just had it seems that sandboxing is useless for same-origin loads","msgtype":"m.text"},"ts":1318296720000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: i guess i don't consider about:blank as a \"load\". But if it is considered a load then add an exception for that","msgtype":"m.text"},"ts":1318296780000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"well like i said, there's a difference in handling for initial loads and subsequent loads","msgtype":"m.text"},"ts":1318296900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the initial load of src=\"\" (empty) and src=\"about:blank\" (normalised) is handled specially in the \"process the iframe attributes\" algorithm","msgtype":"m.text"},"ts":1318296901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"subsequent loads of about:blank are handled in the navigation algorithm","msgtype":"m.text"},"ts":1318296902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it would seem crazy to not allow about:blank to navigate to about:blank, say","msgtype":"m.text"},"ts":1318296960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure, so exclude all about:blank loads","msgtype":"m.text"},"ts":1318297020000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i just said that would be crazy :-P","msgtype":"m.text"},"ts":1318297200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh by exlude you mean allow?","msgtype":"m.text"},"ts":1318297201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"man i'm confused","msgtype":"m.text"},"ts":1318297202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this really seems like adding really obscure complexity to the platform to me","msgtype":"m.text"},"ts":1318297260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are we going to do the same for CSP?","msgtype":"m.text"},"ts":1318297261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't see the difference","msgtype":"m.text"},"ts":1318297262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"CSP is totally different","msgtype":"m.text"},"ts":1318297680000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"it applies to all loads, no matter how they happen","msgtype":"m.text"},"ts":1318297681000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"how is that different?","msgtype":"m.text"},"ts":1318297682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"via sandboxed iframes, non-sandboxed iframes or page navigation","msgtype":"m.text"},"ts":1318297683000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"only in new UAs","msgtype":"m.text"},"ts":1318297684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just like text/html-sandboxed","msgtype":"m.text"},"ts":1318297740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, CSP is strictly defense-in-depth","msgtype":"m.text"},"ts":1318297860000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"that's different from the same-origin issue with sandboxes though","msgtype":"m.text"},"ts":1318297861000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sanbdox is strictly defense-in-depth too.","msgtype":"m.text"},"ts":1318297862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i have to go now. ttyl :-)","msgtype":"m.text"},"ts":1318297920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, ttyl","msgtype":"m.text"},"ts":1318297921000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i recommend e-mailing the whatwg list to get others in the loop","msgtype":"m.text"},"ts":1318297922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie or abarth: What should we reference for the definition of URL in CSS?  We're currently referring to RFC 3986.","msgtype":"m.text"},"ts":1318298460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie or abarth: Our current definition is at http://dev.w3.org/csswg/css3-values/#urls","msgtype":"m.text"},"ts":1318298640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie, sicking: yt?","msgtype":"m.text"},"ts":1318299120000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins, CSS URL values are parsed the same as in HTML","msgtype":"m.text"},"ts":1318306380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, though UTF-8 is enforced, just like in XMLHttpRequest","msgtype":"m.text"},"ts":1318306440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, 3986 is wrong, but there's not really a good replacement at the moment","msgtype":"m.text"},"ts":1318306441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think we should just put everything into the URL specification","msgtype":"m.text"},"ts":1318306442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"API, syntax, etc.","msgtype":"m.text"},"ts":1318306443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ping","msgtype":"m.text"},"ts":1318309080000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hey sicking","msgtype":"m.text"},"ts":1318309140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i don't understand your email regarding the CORS change","msgtype":"m.text"},"ts":1318309141000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"annevk: can you give an example scenario which you're proposing should change","msgtype":"m.text"},"ts":1318309142000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"you xhr to from a to b","msgtype":"m.text"},"ts":1318309200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"b doe set-cookie","msgtype":"m.text"},"ts":1318309201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"withCredentials is true","msgtype":"m.text"},"ts":1318309202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does*","msgtype":"m.text"},"ts":1318309203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"b also fails the sharing check","msgtype":"m.text"},"ts":1318309204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gecko/WebKit set the cookie","msgtype":"m.text"},"ts":1318309205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"fails the sharing check\" === \"doesn't set access-control-allow-origin to the 'correct' value\"?","msgtype":"m.text"},"ts":1318309260000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"a similar situation with <img crossorigin> is not supposed to set a cookie","msgtype":"m.text"},"ts":1318309261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sicking, for instance, or does not include the header","msgtype":"m.text"},"ts":1318309262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sicking, does not include the credentials header","msgtype":"m.text"},"ts":1318309263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1318309264000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hmm.. why doesn't HTML5 simply defer to CORS on this?","msgtype":"m.text"},"ts":1318309320000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i'm not sure how to implement this in Gecko...","msgtype":"m.text"},"ts":1318309321000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"by the time the response gets to the CORS code, the networking library has already set the cookie","msgtype":"m.text"},"ts":1318309322000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so i guess we don't follow the HTML5 spec on this, if it indeed demands that behavior","msgtype":"m.text"},"ts":1318309323000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"HTML says","msgtype":"m.text"},"ts":1318309380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"For the purposes of the calling algorithm, the user agent must act as if there was a fatal network error and no resource was obtained.\"","msgtype":"m.text"},"ts":1318309381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no resource obtained means no cookie","msgtype":"m.text"},"ts":1318309382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"depends on what \"the calling algorithm\" refers to","msgtype":"m.text"},"ts":1318309383000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"does it refer to the <img> algorithm which downloads and parses an image?","msgtype":"m.text"},"ts":1318309440000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"fetch","msgtype":"m.text"},"ts":1318309441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we could also change HTML I suppose","msgtype":"m.text"},"ts":1318309500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which layers of the ISO layer model does \"fetch\" include?","msgtype":"m.text"},"ts":1318309501000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"it just seems slightly saner to not alter cookies","msgtype":"m.text"},"ts":1318309502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ISO?","msgtype":"m.text"},"ts":1318309503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OSI","msgtype":"m.text"},"ts":1318309560000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"still no clue :)","msgtype":"m.text"},"ts":1318309620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so the algorithm defined in the HTML spec also never sets the UAs cookies. So aborting the algorithm wouldn't seem to affect whether cookies are set","msgtype":"m.text"},"ts":1318309621000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/OSI_model","msgtype":"m.text"},"ts":1318309622000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"fetch sets cookies","msgtype":"m.text"},"ts":1318309623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we should define CORS and fetch in one spec really","msgtype":"m.text"},"ts":1318309680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but you know, lots of work refactoring those two","msgtype":"m.text"},"ts":1318309681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, yes","msgtype":"m.text"},"ts":1318309740000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"it'll still be hard to implement this, since it means violating the HTTP layer model","msgtype":"m.text"},"ts":1318309741000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i.e. you can't use a plain HTTP library to do the load","msgtype":"m.text"},"ts":1318309800000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i do sort of understand/like the idea. It'll just be very hacky to implement","msgtype":"m.text"},"ts":1318309801000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"a plain HTTP library does not do cookies","msgtype":"m.text"},"ts":1318309802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well.. i guess that's a matter of definition","msgtype":"m.text"},"ts":1318309860000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ours does","msgtype":"m.text"},"ts":1318309861000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"if cookies are part of HTTP, so is CORS","msgtype":"m.text"},"ts":1318309862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aaah, so whatever Gecko's HTTP library does is plain :)","msgtype":"m.text"},"ts":1318309863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't expect we're the only ones to put cookies into the http library","msgtype":"m.text"},"ts":1318309920000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"for Opera it's no problem either way","msgtype":"m.text"},"ts":1318309921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for any browser it makes a lot of sense to have a layer that you can call into which does http including cookies and cache","msgtype":"m.text"},"ts":1318309922000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"that same library should prolly do CORS though","msgtype":"m.text"},"ts":1318309980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"given the potentially CORS-enabled fetching stuff","msgtype":"m.text"},"ts":1318309981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: arguably, but that'll require more refactoring than spec changes ;-)","msgtype":"m.text"},"ts":1318309982000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"annevk: i guess I'm fine with it if other browsers agree. Would be nice to have a more understandable email to the group though.","msgtype":"m.text"},"ts":1318309983000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking, I emailed a reply to myself explaining it more clearly (hopefully)","msgtype":"m.text"},"ts":1318310280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, 1323 unread public-html mails. wonder if there's anything worth reading in there...","msgtype":"m.text"},"ts":1318310760000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hey","msgtype":"m.text"},"ts":1318310820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"look who's back","msgtype":"m.text"},"ts":1318310821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"here now","msgtype":"m.text"},"ts":1318310940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's up","msgtype":"m.text"},"ts":1318310941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hi annevk","msgtype":"m.text"},"ts":1318311000000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(and sicking, from before!)","msgtype":"m.text"},"ts":1318311001000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: thanks! I sent a reply. I generally think I agree with the change, though I have no idea when we'd be able to implement :(","msgtype":"m.text"},"ts":1318311060000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"annevk: our network library has this very silly policy of not having any security code in it.","msgtype":"m.text"},"ts":1318311061000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"annevk: We've abandoned the policy, but it's a slow process to change","msgtype":"m.text"},"ts":1318311120000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, HTML applies a slightly stricter set of rules to CORS with respect to cookies","msgtype":"m.text"},"ts":1318311121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is unintentional if so","msgtype":"m.text"},"ts":1318311122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me check","msgtype":"m.text"},"ts":1318311180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, but we like it","msgtype":"m.text"},"ts":1318311181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if darin actually made a bad decision!?!","msgtype":"m.emote"},"ts":1318311182000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, it's the bit about completely ignoring the response resource if the resource sharing check fails","msgtype":"m.text"},"ts":1318311183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cookies get set in step 6.3 of the fetch algorithm","msgtype":"m.text"},"ts":1318311184000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"For the purposes of the calling algorithm, the user agent must act as if there was a fatal network error and no resource was obtained.\"","msgtype":"m.text"},"ts":1318311240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if there's no resource, there's no cookies","msgtype":"m.text"},"ts":1318311241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that happnes long after the cookies are set","msgtype":"m.text"},"ts":1318311242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh really?","msgtype":"m.text"},"ts":1318311300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm assuming you're talking about a potentially CORS-enabled fetch  right?","msgtype":"m.text"},"ts":1318311301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1318311302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1318311303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which case do you mean then","msgtype":"m.text"},"ts":1318311304000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh yes","msgtype":"m.text"},"ts":1318311305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1318311306000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<img crossorigin> for instance","msgtype":"m.text"},"ts":1318311307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so assume mode = Use Credentials","msgtype":"m.text"},"ts":1318311308000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we start the algorithm","msgtype":"m.text"},"ts":1318311309000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"step 1 calls CORS \"cross-origin request\", section 7.1 of CORS","msgtype":"m.text"},"ts":1318311360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"step 2 of that calls the \"simple cross-origin request\"","msgtype":"m.text"},"ts":1318311361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"section 7.1.4 of CORS","msgtype":"m.text"},"ts":1318311362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"step 1 of that calls \"make a request steps\"","msgtype":"m.text"},"ts":1318311363000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in section 7.1.7 of CORS","msgtype":"m.text"},"ts":1318311364000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that calls \"fetch\" in HTML","msgtype":"m.text"},"ts":1318311420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh but it has the block cookies flag set","msgtype":"m.text"},"ts":1318311421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1318311422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok then <img crossorigin> never sets cookies one way or the other currently","msgtype":"m.text"},"ts":1318311423000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1318311424000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: when does XHR set cookies?","msgtype":"m.text"},"ts":1318311540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"block cookies is only set if credentials is false","msgtype":"m.text"},"ts":1318311720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but credentials is true here","msgtype":"m.text"},"ts":1318311721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you said assume mode = Use Credentials","msgtype":"m.text"},"ts":1318311722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"XHR sets cookies whenever \"fetch\" does","msgtype":"m.text"},"ts":1318311723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"really need to merge CORS and fetch and I really do not want to","msgtype":"m.text"},"ts":1318311780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can't we have some Google code projects on specs next time that is up?","msgtype":"m.text"},"ts":1318311781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Google Summer of Code I meant","msgtype":"m.text"},"ts":1318311782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or a NaNo(WebSpec)Mo","msgtype":"m.text"},"ts":1318311900000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1318311901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1318311902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so if credentials is true","msgtype":"m.text"},"ts":1318311903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then let me continue:","msgtype":"m.text"},"ts":1318311904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that calls \"fetch\" in HTML","msgtype":"m.text"},"ts":1318311905000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"fetch\" then does the stuff, gets to step 6","msgtype":"m.text"},"ts":1318311906000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"step 6.3 sets cookies","msgtype":"m.text"},"ts":1318311960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then fetch starts firing tasks","msgtype":"m.text"},"ts":1318311961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks like you should be calling \"fetch\" with the synchronous flag set btw","msgtype":"m.text"},"ts":1318312020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"either that or talk about getting the data from the tasks it fires","msgtype":"m.text"},"ts":1318312021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but anyway","msgtype":"m.text"},"ts":1318312022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ignoring that","msgtype":"m.text"},"ts":1318312023000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"back to \"simple cross-origin request\"","msgtype":"m.text"},"ts":1318312024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it goes into the \"otherwise\" branch, which calls \"resource sharing check\"","msgtype":"m.text"},"ts":1318312025000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"section 7.2 of CORS","msgtype":"m.text"},"ts":1318312080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"step 1 sees no  Access-Control-Allow-Origin header values so it returns fail","msgtype":"m.text"},"ts":1318312081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so back to \"simple cross-origin request\"; it calls the \"network error steps\"","msgtype":"m.text"},"ts":1318312082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in 7.1.7","msgtype":"m.text"},"ts":1318312083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that sets cross-origin request status to /network error/","msgtype":"m.text"},"ts":1318312084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and aborts \"simple cross-origin request\"","msgtype":"m.text"},"ts":1318312140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so we're back to \"cross-origin request\", which just returns since it's finished too","msgtype":"m.text"},"ts":1318312141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so, we're back to the HTML spec's \"potentially CORS-enabled fetch\"","msgtype":"m.text"},"ts":1318312200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"second branch, step 2. That waits for the CORS cross-origin request status to have a value, which it does","msgtype":"m.text"},"ts":1318312201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so then step 3","msgtype":"m.text"},"ts":1318312202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"goes through the first branch, since it's not \"success\"","msgtype":"m.text"},"ts":1318312203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"all the tasks are discarded, and it returns a fatal network error","msgtype":"m.text"},"ts":1318312204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but the cookies are already set","msgtype":"m.text"},"ts":1318312205000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since they were set way back when before CORS was checked","msgtype":"m.text"},"ts":1318312260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"here ends my story","msgtype":"m.text"},"ts":1318312261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1318312560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why o_O?","msgtype":"m.text"},"ts":1318312620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"complicated :)","msgtype":"m.text"},"ts":1318312800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you wrote most of it! :-P","msgtype":"m.text"},"ts":1318312801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah I guess we should do new Text()","msgtype":"m.text"},"ts":1318315020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"prolly should revert the overloading change and start with that","msgtype":"m.text"},"ts":1318315080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"still not really sure of the new EVERYTHING() plan","msgtype":"m.text"},"ts":1318315081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"new HTMLDivElement() is so ugly","msgtype":"m.text"},"ts":1318315082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"new Div() would be kind of neat","msgtype":"m.text"},"ts":1318315083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"new HTMLUnknownElement()","msgtype":"m.text"},"ts":1318315084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"new HTML*Element() in general just doesn't work","msgtype":"m.text"},"ts":1318315085000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so alex thinks it should work and should just result in a useless object","msgtype":"m.text"},"ts":1318315140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I'm not sure what the point of that is","msgtype":"m.text"},"ts":1318315200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah i pretty strongly disagree with alex on this issue","msgtype":"m.text"},"ts":1318315201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"new HTMLDivElement() is indeed ugly","msgtype":"m.text"},"ts":1318315380000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I would like new Element(\"div\")","msgtype":"m.text"},"ts":1318315381000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"that returns a non-Element object?","msgtype":"m.text"},"ts":1318315440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"don't think it matters too much that the return type is something more specific than Element -- it at least is a kind of Element","msgtype":"m.text"},"ts":1318315441000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1318315442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think \"Element\" is nice and short enough","msgtype":"m.text"},"ts":1318315443000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Element.create is pretty short too","msgtype":"m.text"},"ts":1318315444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but not as :)","msgtype":"m.text"},"ts":1318315445000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"node.append([\"div\"]) would be even shorter","msgtype":"m.text"},"ts":1318315500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see some emails on www-dom","msgtype":"m.text"},"ts":1318315501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I agree with Alex that we should encourage constructors where possible, it's just that I don't know that forcing spec writers to specify constructor behaviour on everything is the best (or most polite) way to do that","msgtype":"m.text"},"ts":1318315502000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"we can just add [NoConstructor] everywhere until the concrete proposals arrive","msgtype":"m.text"},"ts":1318315560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"guess so","msgtype":"m.text"},"ts":1318315561000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"or we can skip the make work and wait for the latter","msgtype":"m.text"},"ts":1318315562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"still seems kinda rude for webidl to force that","msgtype":"m.text"},"ts":1318315563000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I was being sarcastic","msgtype":"m.text"},"ts":1318315564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think what we have now is good and people should make concrete proposals for constructors where they are needed","msgtype":"m.text"},"ts":1318315620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sarcasm with no indicating punctuation!","msgtype":"m.text"},"ts":1318315621000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if we end up with constructors everywhere, we can make them optional","msgtype":"m.text"},"ts":1318315622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam, the horror!","msgtype":"m.text"},"ts":1318315680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"next you claim it's inaccessible","msgtype":"m.text"},"ts":1318315681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think the json-like description of elements is kinda crazy, personally","msgtype":"m.text"},"ts":1318315682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"crazy-neat?","msgtype":"m.text"},"ts":1318315683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"many people write helper functions to do that json-like thing","msgtype":"m.text"},"ts":1318315740000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"crazy ugly and incomprehensible","msgtype":"m.text"},"ts":1318315800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm a bit wary of potential confusion over whether it sets js properties, dom attributes, magic with onfoo handlers, etc.","msgtype":"m.text"},"ts":1318315801000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if we're going that route, please for the love of kittens just use E4X or something similar","msgtype":"m.text"},"ts":1318315802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ha","msgtype":"m.text"},"ts":1318315803000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"E4X yeah right","msgtype":"m.text"},"ts":1318315980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam, ah yeah, guess we'll end up with attributes and on* as event handlers","msgtype":"m.text"},"ts":1318315981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if we do it","msgtype":"m.text"},"ts":1318315982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1318315983000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hopefully as separate arguments?","msgtype":"m.text"},"ts":1318316040000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i.e. not intermingled on the one object passed in?","msgtype":"m.text"},"ts":1318316041000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"that was the idea initially, but is that really worth it?","msgtype":"m.text"},"ts":1318316042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno, it just rubs me the wrong way somehow, treating /^on/ attributes differently","msgtype":"m.text"},"ts":1318316100000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(do we have any non event listener attributes that begin with \"on\"?)","msgtype":"m.text"},"ts":1318316101000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"don't think so","msgtype":"m.text"},"ts":1318316160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even if we don't, I wouldn't like to rule out such attributes because Element.create or whatever would treat them as event names after the \"on\"","msgtype":"m.text"},"ts":1318316220000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"\"1emu = 1pt/12700\"","msgtype":"m.text"},"ts":1318316280000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I would've expected an emu to be a kind of large unit","msgtype":"m.text"},"ts":1318316281000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam, given that X is going to be optimized for web platform elements I do not think that's a problem","msgtype":"m.text"},"ts":1318316520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but then I'm still not sure whether we should do X (e.g. Element.create) at all, plus all the other various DOM methods ojan is proposing","msgtype":"m.text"},"ts":1318316640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably skimmed past that email","msgtype":"m.emote"},"ts":1318316700000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"\"modifying the DOM WAS: Node append\"","msgtype":"m.text"},"ts":1318316701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam, so the one thing we need for that is unbounded dictionaries","msgtype":"m.text"},"ts":1318317300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1318317360000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam, so there's still a defined processing order and everything","msgtype":"m.text"},"ts":1318317361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just avoided adding that until there were concrete needs for it","msgtype":"m.text"},"ts":1318317362000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1318317363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would be great if we could discuss these proposals with various implementors","msgtype":"m.text"},"ts":1318317480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems pretty clear authors want some simplified way of doing things","msgtype":"m.text"},"ts":1318317481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(is that not what the www-dom discussion is achieving?)","msgtype":"m.text"},"ts":1318317482000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"everyone has their own convenience method / templating system","msgtype":"m.text"},"ts":1318317483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, though I'm missing sicking / othermaciej","msgtype":"m.text"},"ts":1318317484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, it is tough to standardise a templating system -- it's almost entirely a syntax debate","msgtype":"m.text"},"ts":1318317485000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"actually, not sicking","msgtype":"m.text"},"ts":1318317540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I do think that if we want to simplify the DOM having element templates would be huge step","msgtype":"m.text"},"ts":1318317541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and keeps people from using innerHTML which has all the badness of string concatenation","msgtype":"m.text"},"ts":1318317600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well hopefully keeps them away from it, no guarantees","msgtype":"m.text"},"ts":1318317601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sprintf","msgtype":"m.text"},"ts":1318317602000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the biggest problem with innerHTML is the lack of compile-time syntax checking","msgtype":"m.text"},"ts":1318317603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the array stuff gives you that to some extent","msgtype":"m.text"},"ts":1318317780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"prolly about as far as E4X","msgtype":"m.text"},"ts":1318317781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes but it's 10x as verbose","msgtype":"m.text"},"ts":1318317782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and uglier than Element.create()","msgtype":"m.text"},"ts":1318317783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1318317784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<div class=\"test\"/>","msgtype":"m.text"},"ts":1318317840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"[\"div\", {class:\"test\"}]","msgtype":"m.text"},"ts":1318317841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not too bad","msgtype":"m.text"},"ts":1318317842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"uh huh","msgtype":"m.text"},"ts":1318317843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I just some more sarcasm without punctuation :)","msgtype":"m.text"},"ts":1318317900000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"*detected some","msgtype":"m.text"},"ts":1318317901000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1318317902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you write </div> instead you even save a character","msgtype":"m.text"},"ts":1318317903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's <div><p><span>TEST</span></p></div> in your syntax?","msgtype":"m.text"},"ts":1318317960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I find the purely arrays/strings/object literals too hard to read","msgtype":"m.text"},"ts":1318317961000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1318317962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"even though I'm guilty of writing functions like that for my own purposes","msgtype":"m.text"},"ts":1318317963000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"because I hate to use so many method calls :)","msgtype":"m.text"},"ts":1318317964000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i use duct tape for private use, too. i wouldn't try to sell a product made with duct tape.","msgtype":"m.text"},"ts":1318318020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so I wonder, without having written out an example, if a small amount of verbosity like requiring new Element(\"div\", { class: \"test\" }) rather than just using an array with a string in first position to mean the tag name, would help make it more readable","msgtype":"m.text"},"ts":1318318021000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"[\"div\", [\"p\", [\"span\", \"TEST\"]]]","msgtype":"m.text"},"ts":1318318022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it wins again","msgtype":"m.text"},"ts":1318318080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1318318081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wins is so not the word i was going to use","msgtype":"m.text"},"ts":1318318082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1318318083000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"burn","msgtype":"m.text"},"ts":1318318560000,"senderName":"jacobolu_","senderId":"jacobolu_@irc"},
{"content":{"body":"I'm not sure","msgtype":"m.text"},"ts":1318318620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: you don't think having some kind of structured way to write these that's not a string would be helpful?","msgtype":"m.text"},"ts":1318318621000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"I'm not the one who claimed \"10x as verbose\"","msgtype":"m.text"},"ts":1318318622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jacobolus: i absolutely think it would be helpful","msgtype":"m.text"},"ts":1318318623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jacobolus: i think E4X would be the way to go","msgtype":"m.text"},"ts":1318318624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jacobolus: or, within JS itself, nested Element.create() calls","msgtype":"m.text"},"ts":1318318625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh. I'm not very familiar w/ e4x","msgtype":"m.text"},"ts":1318318626000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"wait, you just write xml inline w/ the javascript?","msgtype":"m.text"},"ts":1318318680000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"annevk: not 10x longer, just 10x more verbose","msgtype":"m.text"},"ts":1318318681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ick","msgtype":"m.text"},"ts":1318318682000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"I think a structured way to write these things is good, it's just that using only [] and {} as the delimiters makes it far from readable","msgtype":"m.text"},"ts":1318318683000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I would happily sacrifice some conciseness for readability","msgtype":"m.text"},"ts":1318318684000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: there's way more punctuation going on in ways that really make it very hard to work out what's going on","msgtype":"m.text"},"ts":1318318685000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: e.g. \"foo\", \"foo\" should never be able to represent an element containing a text node","msgtype":"m.text"},"ts":1318318740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: that's just batty","msgtype":"m.text"},"ts":1318318741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"easily envisages calls to this Element.create ending with ]]]}]]]}]});","msgtype":"m.emote"},"ts":1318318742000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, hmm, at the end of the array you have either other elements or text nodes; I don't think it's too bad","msgtype":"m.text"},"ts":1318318800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would be nice if the whatwg mailing list software included an Archived-At header (probably someone has requested this before)","msgtype":"m.text"},"ts":1318318801000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, you do have to know the model of course, otherwise it is indeed kind of hard","msgtype":"m.text"},"ts":1318318802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam, lots of people have","msgtype":"m.text"},"ts":1318318803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam, I was planning on writing some intermediary script at one point, but never did","msgtype":"m.text"},"ts":1318318860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my idea was passing he Message-ID after some URL that would have some kind of lookup and do redirects","msgtype":"m.text"},"ts":1318318920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the*","msgtype":"m.text"},"ts":1318318921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: tell dreamhost :-(","msgtype":"m.text"},"ts":1318318980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk, oh yeah, like w3.org/mid/...","msgtype":"m.text"},"ts":1318318981000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: good APIs are intuitive","msgtype":"m.text"},"ts":1318318982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not exactly less or more intuitive than the Element.create proposal","msgtype":"m.text"},"ts":1318319040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or new Event()","msgtype":"m.text"},"ts":1318319041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: what's an intuitive DOM creation/query/manipulation API in your view?","msgtype":"m.text"},"ts":1318319160000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"annevk: as an extreme example, I would say Element.create(\"div\", {title: \"bar\"}, [\"Hello\"]); is more intuitive than Element.create([\"div\", {title: \"bar\"}, [\"Hello\"]]);, because in the latter one there's one argument, and it's not clear that one array's values mean different things, whereas in the former it's clear that the arguments mean different things, and it seems obvious that an element creation method would start with an element name, and you can work out the","msgtype":"m.text"},"ts":1318319161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jacobolus: well, an intuitive creation one would be:  var mydiv = <div/>;","msgtype":"m.text"},"ts":1318319162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but just making that a string in a simple function is just as good at that point, ISTM","msgtype":"m.text"},"ts":1318319220000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"(i wouldn't take anything from E4X other than the element literals, fwiw)","msgtype":"m.text"},"ts":1318319221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jacobolus: strings aren't syntax-checked","msgtype":"m.text"},"ts":1318319222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"syntax-checked by whom?","msgtype":"m.text"},"ts":1318319223000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"the compiler","msgtype":"m.text"},"ts":1318319224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jacobolus: consider the difference between  var mytree = <p><i>hello</b> world</p>;  and  var mytree = \"<p><i>hello</b> world</p>\";","msgtype":"m.text"},"ts":1318319280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jacobolus: how long do you think it would take to catch those two errors?","msgtype":"m.text"},"ts":1318319281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so then a question... how do you make it dynamic?","msgtype":"m.text"},"ts":1318319282000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"i.e. if I want to stick some custom stuff in halfway through","msgtype":"m.text"},"ts":1318319283000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"for the first one, i'd say about 1 second to catch it, and about 3 seconds to fix it. for the second, it might never get caught, but it's probably measured in weeks or months.","msgtype":"m.text"},"ts":1318319284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"E4X had a mechanism for that","msgtype":"m.text"},"ts":1318319340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"something like  var name = 'jacobolus'; var mydiv = <div>Hello {name}</div>;","msgtype":"m.text"},"ts":1318319341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1318319342000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"so why couldn't you just make it a function w/ some name","msgtype":"m.text"},"ts":1318319400000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"(you can test it in mozilla, it ships with e4x)","msgtype":"m.text"},"ts":1318319401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a function?","msgtype":"m.text"},"ts":1318319402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and pass in a string","msgtype":"m.text"},"ts":1318319403000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"and then have tooling","msgtype":"m.text"},"ts":1318319404000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"strings aren't syntax checked","msgtype":"m.text"},"ts":1318319405000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would do the syntax checing","msgtype":"m.text"},"ts":1318319406000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"*checking","msgtype":"m.text"},"ts":1318319407000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"that could easily be done in e.g. a text editor, linter, etc.","msgtype":"m.text"},"ts":1318319408000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"not as easily as \"the compiler won't run the code while it's broken\"","msgtype":"m.text"},"ts":1318319460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the difference is enough that nobody does what you're suggesting","msgtype":"m.text"},"ts":1318319461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they do for regexps in python, as one example","msgtype":"m.text"},"ts":1318319462000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"maybe python developers are better than js developers?","msgtype":"m.text"},"ts":1318319520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1318319521000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"are there any people who have written descriptive praises of E4X?","msgtype":"m.text"},"ts":1318319580000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"descriptive praises?","msgtype":"m.text"},"ts":1318319581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i.e. is there some testimonial I can read about how nice it was to deal with?","msgtype":"m.text"},"ts":1318319582000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"with like, specific problems it solved and so forth?","msgtype":"m.text"},"ts":1318319583000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"i dunno, probably","msgtype":"m.text"},"ts":1318319584000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"most commentary was about how it sucks","msgtype":"m.text"},"ts":1318319640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because just at first glance my guess is that I sort of wouldn't like it","msgtype":"m.text"},"ts":1318319641000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"the suckitude being mostly related to the bits i haven't talked about :-)","msgtype":"m.text"},"ts":1318319642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(it tried to solve too much imho)","msgtype":"m.text"},"ts":1318319643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway, i gotta go","msgtype":"m.text"},"ts":1318319644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bed time","msgtype":"m.text"},"ts":1318319645000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1318319646000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"I wonder if there are any DSLs embedded in other languages for XML manipulation that are particularly elegant","msgtype":"m.text"},"ts":1318319700000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"some lisp macros or some such","msgtype":"m.text"},"ts":1318319701000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"or I guess just for creating complex structured data with attributes and descendants at each level","msgtype":"m.text"},"ts":1318319760000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"wouldn't necessarily have to be based around xml","msgtype":"m.text"},"ts":1318319761000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"annevk: FWIW, I like your thing :)","msgtype":"m.text"},"ts":1318319820000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"Is webcam support in Opera 12 going to be WebRTC or something else?","msgtype":"m.text"},"ts":1318322700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. Opera 12 doesn't have license legal stuff for Google's WebRTC code on the about page at least","msgtype":"m.text"},"ts":1318324860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is there some documentation about what kind of webcam integration Opera 12 has?","msgtype":"m.text"},"ts":1318324920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"considering how portable Opera is, I'm a bit surprised Opera isn't using clang already on Mac: http://my.opera.com/desktopteam/blog/2011/09/28/mac-compiler-js-performance","msgtype":"m.text"},"ts":1318325100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, it's not Google code","msgtype":"m.text"},"ts":1318325640000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"opera 12 has webrtc support?","msgtype":"m.text"},"ts":1318326060000,"senderName":"doublec","senderId":"doublec@irc"},
{"content":{"body":"foolip: what's the feature?","msgtype":"m.text"},"ts":1318326120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"foolip: that is, what's the webcam integration feature? still upload via <input type=file>? WebRTC? something else?","msgtype":"m.text"},"ts":1318326121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, I really don't know, but I assume it's in anticipation of future features that need it (WebRTC)","msgtype":"m.text"},"ts":1318326240000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: ok. I was wondering about https://twitter.com/#!/ComputerActive/status/123663408133451776 which was retweeted by @opera","msgtype":"m.text"},"ts":1318326300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm, yeah, I'm not sure what the sales pitch is, AFAICT you can do things like \"augmented reality\" now, for what it's worth","msgtype":"m.text"},"ts":1318326360000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"on mobile at least, on desktop I don't think we have device orientation events :)","msgtype":"m.text"},"ts":1318326361000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I haven't verified, but IIRC, Firefox has device orientation events on laptops","msgtype":"m.text"},"ts":1318326420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"though having to tilt the whole laptop might not be as good UI as tilting a phone","msgtype":"m.text"},"ts":1318326480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm just guessing though","msgtype":"m.text"},"ts":1318326481000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"orientation events worked for me in firefox on my macbook","msgtype":"m.text"},"ts":1318326482000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://news.ycombinator.com/item?id=3096398 is interesting. especially Brendan's follow-up at the bottom of the page","msgtype":"m.text"},"ts":1318326540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: indeed","msgtype":"m.text"},"ts":1318327140000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what blog post of alex does Brendan mean?","msgtype":"m.text"},"ts":1318327260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know. I'm guessing http://infrequently.org/2011/09/google-the-future-of-javascript/","msgtype":"m.text"},"ts":1318327320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, afaik Opera 12 allows displaying the feed of a device camera via <video> (which you can then manipulate using <canvas>)","msgtype":"m.text"},"ts":1318327800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok.","msgtype":"m.text"},"ts":1318327860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: are there docs on how to do that from Web content?","msgtype":"m.text"},"ts":1318327861000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think we implemented getUserMedia()","msgtype":"m.text"},"ts":1318327920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there was a labs build with that a while ago","msgtype":"m.text"},"ts":1318327921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://my.opera.com/core/blog/2011/03/23/webcam-orientation-preview","msgtype":"m.text"},"ts":1318327922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"instead of URL.createObjectURL() we currently allow directly assigning a Stream object to <video>.src instead; I think that's the only deviation","msgtype":"m.text"},"ts":1318327980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's just to let people play around a little bit","msgtype":"m.text"},"ts":1318327981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1318328340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the new features in http://www.w3.org/2011/09/games/ look rather reasonable except for the hardware performance score","msgtype":"m.text"},"ts":1318328640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"surely each per-sensitive app needs to run its own benchmark to find out the perf that's relevant to the app","msgtype":"m.text"},"ts":1318328700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Yeah, that sounds like a bad idea","msgtype":"m.text"},"ts":1318328760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if the app uses requestAnimationFrame, it should be able to detect if the fps is bad and try throttle down whatever slow stuff it does","msgtype":"m.text"},"ts":1318328940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"though that might not help. I tried the WebGL aquarium in Firefox on Galaxy S II and the level of detail had no bearing on the frame rate","msgtype":"m.text"},"ts":1318329000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm guessing the frame rate was terrible due to something like readbacks from the GPU","msgtype":"m.text"},"ts":1318329001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"where is Ms2ger","msgtype":"m.text"},"ts":1318337040000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk5: is the plan to move onfoo idl properties to DOM[4/web/Core/Math.random()] ?","msgtype":"m.text"},"ts":1318337100000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: you called?","msgtype":"m.text"},"ts":1318338360000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"Ms3ger--","msgtype":"m.text"},"ts":1318338420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Postfix, so it would still return Ms3ger","msgtype":"m.text"},"ts":1318338421000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"(I should note that I stole that joke from someone in #jsapi)","msgtype":"m.text"},"ts":1318338480000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"Ms3ger: just about the thing I asked from annevk5","msgtype":"m.text"},"ts":1318338540000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"onfoo properties","msgtype":"m.text"},"ts":1318338541000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"whether those are going to DOM[4/web/Core/Math.random()]","msgtype":"m.text"},"ts":1318338542000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it's been argued they should be","msgtype":"m.text"},"ts":1318338600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, DOMWeb","msgtype":"m.text"},"ts":1318338601000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"makes a lot of sense in Dutch","msgtype":"m.text"},"ts":1318338602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so probably not a good name","msgtype":"m.text"},"ts":1318338603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk++","msgtype":"m.text"},"ts":1318338604000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"Anyway, not sure about the specific attributes","msgtype":"m.text"},"ts":1318338660000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"It might be good to move the infrastructure to DOM4, though","msgtype":"m.text"},"ts":1318338661000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"annevk: Ms3ger: I was just wondering the right component for http://www.w3.org/Bugs/Public/show_bug.cgi?id=14428 It could be DOM or HTML or WebIDL, I guess. I picked up the last one","msgtype":"m.text"},"ts":1318338900000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is happy to let heycam figure out what to do","msgtype":"m.emote"},"ts":1318338960000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"Also, welcome back, heycam!","msgtype":"m.text"},"ts":1318338961000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"goes off again","msgtype":"m.emote"},"ts":1318339020000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"ttyl","msgtype":"m.text"},"ts":1318339021000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"yeah, I'm pretty happy for other people to figure out how event handlers should work before we include them","msgtype":"m.text"},"ts":1318339022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, why can't I find the spec for innerHTML anymore?","msgtype":"m.text"},"ts":1318344660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you're not looking carefully? http://html5.org/specs/dom-parsing.html","msgtype":"m.text"},"ts":1318344780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh you made a whole new spec for it. You know that will confuse the hell out of people, right?","msgtype":"m.text"},"ts":1318344840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you always predict doom","msgtype":"m.text"},"ts":1318344900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1318344901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder where this person gets his ideas about Mozilla http://news.ycombinator.com/item?id=3094880","msgtype":"m.text"},"ts":1318350480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"open bytecode stantard is ok","msgtype":"m.text"},"ts":1318350540000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"i remeber http://code.google.com/p/chromium/issues/detail?id=64290","msgtype":"m.text"},"ts":1318350660000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"hsivonen: Cynicism untempered by reality?","msgtype":"m.text"},"ts":1318350780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1318350840000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"GOOD MORNING DGLAZKOV","msgtype":"m.text"},"ts":1318351020000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"all caps. Excellent choice.","msgtype":"m.text"},"ts":1318351080000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"i really put in the effort for the cause of html5","msgtype":"m.text"},"ts":1318351081000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"I wonder if I'm reading too much into Opera's PR language when I observe that they don't say \"Flash\" when they've added Flash support","msgtype":"m.text"},"ts":1318351140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it looks like an attempt to downplay Flash as something that users are aware of","msgtype":"m.text"},"ts":1318351141000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: are they bundling flash now?","msgtype":"m.text"},"ts":1318351142000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"timeless: no, but on desktop, they are automating installation at least on Windows, IIRC","msgtype":"m.text"},"ts":1318351200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"timeless: this is about the latest Opera Mobile release, though, which added Flash support on Honeycomb","msgtype":"m.text"},"ts":1318351201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"apparently the way Flash presents itself to NPAPI is different in Android 2.x and 3.x","msgtype":"m.text"},"ts":1318351260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sandboxing related perhaps?","msgtype":"m.text"},"ts":1318351320000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1318351380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: the guy writing that blog post is not an Opera employee btw (but I think the blog is official)","msgtype":"m.text"},"ts":1318351381000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"We get random strangers to write our PR stuff? :)","msgtype":"m.text"},"ts":1318351500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: neither random nor stranger I think, but yea... :D","msgtype":"m.text"},"ts":1318351501000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"I agree that it's hard to see which posts are and which posts aren't official at Opera's","msgtype":"m.text"},"ts":1318351560000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"jgraham: nokia did","msgtype":"m.text"},"ts":1318351561000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"we had contractors responsible for the official nokia connections or whatever it was blog","msgtype":"m.text"},"ts":1318351562000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"is the XHR error flag exposed to scripts?","msgtype":"m.text"},"ts":1318352940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"looks like Gecko returns xhr.status == 0 for non-HTTP requests :-(","msgtype":"m.text"},"ts":1318353120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Should http://www.whatwg.org/specs/web-apps/current-work/multipage/fetching-resources.html#fetch say something about caching","msgtype":"m.text"},"ts":1318353660000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"especially, in which case is loading from browser cache ok, and in which case it isn't","msgtype":"m.text"},"ts":1318353780000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"What's the story with &apos;?  What's the newest browser that doesn't support it?","msgtype":"m.text"},"ts":1318353960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"IE6, at least?","msgtype":"m.text"},"ts":1318354020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Apparently IE7 also?","msgtype":"m.text"},"ts":1318354021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"uses &#39; instead","msgtype":"m.emote"},"ts":1318354080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, I pushed the innerHTML change, with a single escaping function defined as you requested.","msgtype":"m.text"},"ts":1318354140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(am also looking at pushing other changes)","msgtype":"m.text"},"ts":1318354200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hasather: What blog post?","msgtype":"m.text"},"ts":1318354380000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, that one.~","msgtype":"m.text"},"ts":1318354620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"finds that 50% of total time in Chrome is in format_value now","msgtype":"m.emote"},"ts":1318354621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"is increasingly doubting the open-web nature of even the Dart to JS compiler.","msgtype":"m.emote"},"ts":1318354980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is it any worse than GWT?","msgtype":"m.text"},"ts":1318355040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"At a high-level it appears better, but looking into it it seems worse.","msgtype":"m.text"},"ts":1318355100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hasn't looked into it","msgtype":"m.emote"},"ts":1318355101000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"doubts the utility of \"let's introduce yet another language\", though","msgtype":"m.emote"},"ts":1318355102000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, yeah. Sure. But it's really a bit too late for me to start bitching about that nowâ€¦","msgtype":"m.text"},"ts":1318355160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: It avoids the browser sniffing, but is supported on fewer browsers, and without any given reason (or bug reports)â€¦","msgtype":"m.text"},"ts":1318355220000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"supported on\" meaning \"actually works on\" or \"is tested on\"?","msgtype":"m.text"},"ts":1318355221000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I believe the latter. Though it makes me the doubt the former.","msgtype":"m.text"},"ts":1318355280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Testing is hardly that expensive.","msgtype":"m.text"},"ts":1318355281000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Testing is very expensive if you do enough of it.","msgtype":"m.text"},"ts":1318355282000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If there's no browser-sniffing of any kind, all browsers should be able to work just by making sure they follow what other browsers do, right?","msgtype":"m.text"},"ts":1318355283000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For a company like Google, with the amount of resources already thrown at Dart, it's cheap.","msgtype":"m.text"},"ts":1318355284000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Even compared to the benefit, taking market shares into account?","msgtype":"m.text"},"ts":1318355340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Except that at least the Dart website (haven't looked to see if that uses Dart though, FWIW) breaks if we fix DOM 3 Events compliance bug to move inline with Fx/WebKit.","msgtype":"m.text"},"ts":1318355341000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: IE has a non-negilable marketshare. We have enough marketshare that they care about us enough in GWT.","msgtype":"m.text"},"ts":1318355400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And our JS impl really should be good enough that it should work fine.","msgtype":"m.text"},"ts":1318355401000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So the cost of supporting Carakan should be ~0.","msgtype":"m.text"},"ts":1318355402000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Provided they actually follow ES5 in their impl and don't rely upon things where V8/SM intend on changing behaviour for it.","msgtype":"m.text"},"ts":1318355460000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Same with Chakra, really.","msgtype":"m.text"},"ts":1318355520000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Omitting the two JS engines that nowadays probably have the best support for ES5 isâ€¦ odd.","msgtype":"m.text"},"ts":1318355521000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"To say the least.","msgtype":"m.text"},"ts":1318355522000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, supporting an extra browser is cheap if all your tests are automated.","msgtype":"m.text"},"ts":1318355580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And I'd hope they are.","msgtype":"m.text"},"ts":1318355581000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"For a language converter, yeah.","msgtype":"m.text"},"ts":1318355640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"what's the deal with WebM support in Opera Mobile for Android? Earlier, I was told Opera Mobile supported WebM from 2.3 onwards","msgtype":"m.text"},"ts":1318356240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I just tested the latest release on Android 3.1 and it supported H.264 but not WebM","msgtype":"m.text"},"ts":1318356300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Is it possible for window.parent to change?","msgtype":"m.text"},"ts":1318356720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hsivonen: I believe we just use the system video decoder, so whatever that supports.","msgtype":"m.text"},"ts":1318356721000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I mean, for the same script to see different values at different times?","msgtype":"m.text"},"ts":1318356722000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For the same window object?","msgtype":"m.text"},"ts":1318356723000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: hrm","msgtype":"m.text"},"ts":1318356724000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"I'd think it should be impossible, but I wanted to check.","msgtype":"m.text"},"ts":1318356780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"if a browser implements a user friendly version of <pop-frame-out-as-window-out","msgtype":"m.text"},"ts":1318356781000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"but i don't think that exists anywhere","msgtype":"m.text"},"ts":1318356782000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"gsnedders: maybe I should remove the advice that Opera Mobile supports WebM on Android, then","msgtype":"m.text"},"ts":1318356840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders: because it sucks to tell people it does if it doesn't","msgtype":"m.text"},"ts":1318356900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: We should support it.","msgtype":"m.text"},"ts":1318356901000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"at least Firefox supports it consistently even if performance is unusable","msgtype":"m.text"},"ts":1318356902000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"has no Android 2.3.3+ device to test on","msgtype":"m.emote"},"ts":1318356903000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is it worthwhile to support it if performance is unusable?","msgtype":"m.text"},"ts":1318356960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"well, at least I should edit the page not to suggest Opera 11+ users to install Opera as a remedy to WebM non-support","msgtype":"m.text"},"ts":1318357020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Isn't it better in that case to fall back to the next source, if any?","msgtype":"m.text"},"ts":1318357021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: unclear","msgtype":"m.text"},"ts":1318357022000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. which reminds me that I haven't tested it with layers acceleration","msgtype":"m.text"},"ts":1318357023000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I saw someone saying Mobile 11.5 at least had better WebM perf than Firefox on some Android device.","msgtype":"m.text"},"ts":1318357080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: do you have an n900?","msgtype":"m.text"},"ts":1318357081000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"wonders which version Android is used for Nitdroid","msgtype":"m.emote"},"ts":1318357140000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"timeless: No. HTC Legend.","msgtype":"m.text"},"ts":1318357141000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the perf sucks even with layers acceleration enabled :-(","msgtype":"m.text"},"ts":1318357200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: What device are you testing on, and on what Android version?","msgtype":"m.text"},"ts":1318357260000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And what version of Mobile?","msgtype":"m.text"},"ts":1318357261000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Samsung Galaxy Tab 10.1, Android 3.1 (latest build available), Opera Mobile 11.50 (the one released today)","msgtype":"m.text"},"ts":1318357320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"AryehGregor: re window.parent, you should talk with dimich on #webkit about this. There's a thing called \"magic iframe\" in WebKit, which _may_ make window.parent change","msgtype":"m.text"},"ts":1318357321000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov, I suspect that for my use-case it's not the end of the world if it changes in crazy circumstances.","msgtype":"m.text"},"ts":1318357380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hsivonen: What page were you using for testing?","msgtype":"m.text"},"ts":1318357381000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: k","msgtype":"m.text"},"ts":1318357382000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"gsnedders: http://webm.html5.org/","msgtype":"m.text"},"ts":1318357383000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: eh, we appear to have https://bugs.opera.com/wizard/mobile now, so can you just file a bug?","msgtype":"m.text"},"ts":1318357384000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"a friend on another channel reports that WebM doesn't work in GSII in Opera Mobile 11.x","msgtype":"m.text"},"ts":1318357385000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders: ok","msgtype":"m.text"},"ts":1318357440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'll make sure it gets attention, because that is /bad/ it doesn't work.","msgtype":"m.text"},"ts":1318357441000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: oh, the playback support is there. canPlayType is wrong","msgtype":"m.text"},"ts":1318357560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"FAIL","msgtype":"m.text"},"ts":1318357561000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: That may be down to YouTube breaking if canPlayType is right, AIUI","msgtype":"m.text"},"ts":1318357562000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(I wish I was joking)","msgtype":"m.text"},"ts":1318357620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"even worse","msgtype":"m.text"},"ts":1318357680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders: ANDMEX-3236","msgtype":"m.text"},"ts":1318357740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"Enabling only webM audio for Android 2.3.3+ Video doesn't work well and causes Android media server to crash.\"","msgtype":"m.text"},"ts":1318357741000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Does anyone have any tips on how to speed up layout of a 40,000-row table?","msgtype":"m.text"},"ts":1318357800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So, uh, we seem to have it disabled because Android's WebM impl is unstable","msgtype":"m.text"},"ts":1318357801000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Heheh, I like how in response to Dart people are again saying there should be a generic bytecode, \"to avoid the cost of parsing\", totally ignoring a large part of the cost is validating it, which will remain true for any bytecode.","msgtype":"m.text"},"ts":1318358460000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The only real gain is a few fewer bytes to process, but the same number of tokens, pretty muchâ€¦","msgtype":"m.text"},"ts":1318358461000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: Also, Dart->JS compiler's output does UA sniff and blocks everything that isn't Chrome, Safari, or Firefox.","msgtype":"m.text"},"ts":1318358580000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: They only talk about removing the UA block on IE9.","msgtype":"m.text"},"ts":1318358581000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Seriously?  That's massively lame.","msgtype":"m.text"},"ts":1318358582000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: So Opera is totally fucked.","msgtype":"m.text"},"ts":1318358583000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Along with every other minor browser that uses WebKit or whatever but happens not to look like one of the major browsers.","msgtype":"m.text"},"ts":1318358640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(although probably all of those pretend to be a major browser)","msgtype":"m.text"},"ts":1318358641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So Google care enough about us to give us however-many-million-dollars per year, but not enough to actually support us.","msgtype":"m.text"},"ts":1318358700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's independent people making different decisions.","msgtype":"m.text"},"ts":1318358701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: um","msgtype":"m.text"},"ts":1318359180000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1318359240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i don't think we pretend to be a major browser","msgtype":"m.text"},"ts":1318359241000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"seems to recall getting crappy content","msgtype":"m.emote"},"ts":1318359242000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"You probably just get broken content in sites that whitelist browsers, then.","msgtype":"m.text"},"ts":1318359243000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"oh cute","msgtype":"m.text"},"ts":1318359360000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"we claim to be Safari :)","msgtype":"m.text"},"ts":1318359361000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"So does Chrome, kind of.","msgtype":"m.text"},"ts":1318359362000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And Safari claims to be Mozilla, as does everyone else.","msgtype":"m.text"},"ts":1318359363000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"UA strings are fun.","msgtype":"m.text"},"ts":1318359364000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i thought Opera or IE stopped claiming to be Gecko","msgtype":"m.text"},"ts":1318359365000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"annevk5 heycam|away: If HTMLDivElement is really ugly, but \"new Div()\" is probably too short, what about semi-namespacing?  \"new HTML.Div()\"?","msgtype":"m.text"},"ts":1318359420000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"HTMLDivElement is really ugly","msgtype":"m.text"},"ts":1318359421000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"It still claims to be Mozilla, right?","msgtype":"m.text"},"ts":1318359422000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think that might be a good way to expose CSS value constructors in a short manner as well.","msgtype":"m.text"},"ts":1318359423000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"HTML.Div() sounds nice.","msgtype":"m.text"},"ts":1318359600000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"maybe html.Div()?","msgtype":"m.text"},"ts":1318359601000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"breaks out his shed painting overalls","msgtype":"m.emote"},"ts":1318359602000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"darn, ie9 still claims to be mozilla/5","msgtype":"m.text"},"ts":1318359603000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"sobs","msgtype":"m.emote"},"ts":1318359604000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"who knows about microdata well?","msgtype":"m.text"},"ts":1318360140000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, well, Hixie designed it . . . but a bunch of other people here know about it too.","msgtype":"m.text"},"ts":1318360200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you ask your question, it will probably be answered.","msgtype":"m.text"},"ts":1318360201000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1318360202000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"would an element with itemscope and itemtype considered to be an top-level item even if there are some item-scope element that refers to that element via itemref?","msgtype":"m.text"},"ts":1318360260000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: the spec says \"An item is a top-level microdata item if its element does not have an itemprop attribute.\"","msgtype":"m.text"},"ts":1318360740000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"cygri: on the other hand, it also says \"Items that are not part of others are called top-level microdata items.\"","msgtype":"m.text"},"ts":1318360800000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"The latter sounds non-normative.","msgtype":"m.text"},"ts":1318360801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"note that itemref doesn't actually refer to items, despite its name. it just imports any property-value pairs on the target or its descendants","msgtype":"m.text"},"ts":1318360802000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"Is it in a normative section?","msgtype":"m.text"},"ts":1318360803000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"cygri: ah, that's good point.","msgtype":"m.text"},"ts":1318360804000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"cygri: but what if we had an ancestor with itemscope?","msgtype":"m.text"},"ts":1318360860000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah. it also sounds slighly wrong","msgtype":"m.text"},"ts":1318360861000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"cygri: e.g. <div itemscope>hello<span itemscope itemtype=\"~~\">","msgtype":"m.text"},"ts":1318360862000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I don't think span should be considered as the top-level microdata items in this case","msgtype":"m.text"},"ts":1318360863000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"or maybe top-level isn't really top-level","msgtype":"m.text"},"ts":1318360920000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"according to the spec it is top-level","msgtype":"m.text"},"ts":1318360921000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"huh...","msgtype":"m.text"},"ts":1318360922000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"even if we had <div itemscope itemtype=\"~~\">hello<span itemscope itemtype=\"~~\"><b itemprop=\"~~\"> ?","msgtype":"m.text"},"ts":1318360923000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"as AryehGregor said, the section you quoted is non-normative","msgtype":"m.text"},"ts":1318360924000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"cygri: but in this case, div's item will contain b's content, right?","msgtype":"m.text"},"ts":1318360980000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"cygri: so we'll have two top-level items in this case?","msgtype":"m.text"},"ts":1318360981000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"cygri_: ?","msgtype":"m.text"},"ts":1318361160000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"what?","msgtype":"m.text"},"ts":1318361161000,"senderName":"cygri_","senderId":"cygri_@irc"},
{"content":{"body":"cygri: did you get my last question?","msgtype":"m.text"},"ts":1318361220000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"cygri: if we had <div itemscope itemtype=\"~~\">hello<span itemscope itemtype=\"~~\"><b itemprop=\"~~\">","msgtype":"m.text"},"ts":1318361221000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"cygri: would we have two top-level items?","msgtype":"m.text"},"ts":1318361222000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"is on a bus. internet not good","msgtype":"m.emote"},"ts":1318361223000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"that looks like two top-level items to me","msgtype":"m.text"},"ts":1318361280000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"cygri: ok, thanks","msgtype":"m.text"},"ts":1318361281000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yw!","msgtype":"m.text"},"ts":1318361282000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"AryehGregor: regarding the -webkit-user-modify, the most important users are AIR and Inspector","msgtype":"m.text"},"ts":1318365060000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"What's AIR?","msgtype":"m.text"},"ts":1318365120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: but I've seen some users in the public Web","msgtype":"m.text"},"ts":1318365121000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: Adobe's new Web authoring tool","msgtype":"m.text"},"ts":1318365122000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: http://www.adobe.com/products/air.html","msgtype":"m.text"},"ts":1318365123000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1318365124000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: we can probably ask them to use contenteditable instead","msgtype":"m.text"},"ts":1318365125000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Well, I don't like all these features being exposed permanently with vendor prefixes, but I guess there are more important things to worry about.","msgtype":"m.text"},"ts":1318365126000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: well, at least we don't expose user-modify :)","msgtype":"m.text"},"ts":1318365180000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"in fact, that's the whole point of vendor-prefixing it, right?","msgtype":"m.text"},"ts":1318365181000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"so that we can kill the feature from the standard","msgtype":"m.text"},"ts":1318365182000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Well, it's much better than non-vendor-prefixed, yes.","msgtype":"m.text"},"ts":1318365183000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"without breaking the whole web","msgtype":"m.text"},"ts":1318365184000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: tables in email++","msgtype":"m.text"},"ts":1318365780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1318366020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm sure i'll get told it's inaccessible","msgtype":"m.text"},"ts":1318366021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or i would if it was in public-html","msgtype":"m.text"},"ts":1318366022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you'd be surprised how often i got told that my ascii art sig was a travesty and an insult to accessibility tool users everywhere","msgtype":"m.text"},"ts":1318366080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: It would be less confusing to me if you didn't try to conflate the term \"binding\" and \"component\".  We've been trying to distinguish the terms for ease of discussion such that \"component\" implies permanence and \"binding\" implies decoration.","msgtype":"m.text"},"ts":1318366140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the terms mean the same thing, and have since 1997 or so","msgtype":"m.text"},"ts":1318366141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm not surprised. It wouldn't be so funny if accessibility advocates hadn't been responsible for the most confusing, inaccessible email I have ever received on a standards mailing list","msgtype":"m.text"},"ts":1318366142000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah, tell me about it","msgtype":"m.text"},"ts":1318366143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Which is why we've been trying to distinguish them.  ^_^","msgtype":"m.text"},"ts":1318366200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: trying to take terms that mean the same thing and distinguish them after more than 15 years of them meaning the same thing is pointless. use new terms. :-)","msgtype":"m.text"},"ts":1318366201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: Those implications aren't at all clear from the names, so I wouldn't try that","msgtype":"m.text"},"ts":1318366202000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: \"presentation transient binding\" and \"semantic API-defining binding\", for instance","msgtype":"m.text"},"ts":1318366260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Those are horrible!","msgtype":"m.text"},"ts":1318366261000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're long, is all.","msgtype":"m.text"},"ts":1318366262000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's what I said.","msgtype":"m.text"},"ts":1318366320000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can kill either of the two modifiers on both.","msgtype":"m.text"},"ts":1318366321000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins: (i wasn't even aware that there were two concepts until i suggested there were a few e-mails ago, btw, and i'd no idea that there was any attempt to redefine the terms until today)","msgtype":"m.text"},"ts":1318366322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: No wonder you've been so confused, then.  We've been talking solely about permanent bindings forever.","msgtype":"m.text"},"ts":1318366323000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah stop that.","msgtype":"m.text"},"ts":1318366380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What?  Why?","msgtype":"m.text"},"ts":1318366381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"because the two problems have almost identical solution spaces and it is pointless to ignore one of the two problems when designing the solution","msgtype":"m.text"},"ts":1318366382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But they dont'!  They're so different!","msgtype":"m.text"},"ts":1318366383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"they're almost identical","msgtype":"m.text"},"ts":1318366384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's two differences","msgtype":"m.text"},"ts":1318366440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"see my most recent e-mail with the table","msgtype":"m.text"},"ts":1318366441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"One changes the prototype chain, exposes public API.  One can be swapped on-and-off because it makes no lasting changes.","msgtype":"m.text"},"ts":1318366442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's it","msgtype":"m.text"},"ts":1318366443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's the changes","msgtype":"m.text"},"ts":1318366444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Two\" differences underscores the magnitude of the differences.","msgtype":"m.text"},"ts":1318366445000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't think you mean \"underscores\" but i agree with what you actually said, even if it's not what you meant :-)","msgtype":"m.text"},"ts":1318366446000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/underscores/understates/","msgtype":"m.text"},"ts":1318366500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the differences are nearly trivial. XBL2 could be adopted to separating them with barely a dozen edits.","msgtype":"m.text"},"ts":1318366501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I... don't know how to respond to that, except by saying \"No\".","msgtype":"m.text"},"ts":1318366502000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"let me know when you have a more coherent answer :-)","msgtype":"m.text"},"ts":1318366560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"You're wrong\"?","msgtype":"m.text"},"ts":1318366561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"maybe you can explain how?","msgtype":"m.text"},"ts":1318366562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The ideal API for permanently changing something is a decent bit different from the ideal API for adding a swappable decorator.","msgtype":"m.text"},"ts":1318366620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure. One is is=\"foo\" and the other is binding: foo;","msgtype":"m.text"},"ts":1318366621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you're not suggesting that shadow trees would need to be defined differently, or that event handlers for one would look different than for the other, right?","msgtype":"m.text"},"ts":1318366680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Shadow trees should use the same definition mechanism, obviously.  Binding event listeners may look different.  Exposing further API beyond that would definitely look different, since you can't do it at all in the decorator case.","msgtype":"m.text"},"ts":1318366740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: just excluding certain features in one case doesn't make it look different, just excludes certain features","msgtype":"m.text"},"ts":1318367280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbiab lunch","msgtype":"m.text"},"ts":1318367281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ponders the philosophy of testing features that depend on one another","msgtype":"m.emote"},"ts":1318370640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you can't test one feature because an unrelated feature is buggy or unsupported, should the test pass or fail?","msgtype":"m.text"},"ts":1318370641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If it fails, you're putting a lot of weight on possibly minor bugs in features that other features happen to depend on.","msgtype":"m.text"},"ts":1318370642000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If it passes, that takes more effort to handle, and also you penalize browsers for fixing bugs in features that other features depend on (because their score can only go down).","msgtype":"m.text"},"ts":1318370700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(for the dependent tests, that is)","msgtype":"m.text"},"ts":1318370701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's a failure, because you've failed to run the test.","msgtype":"m.text"},"ts":1318370760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I guess it should generally fail, unless there's some way to avoid the bug in the underlying feature.","msgtype":"m.text"},"ts":1318370761000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Unless the test is simply not applicable.","msgtype":"m.text"},"ts":1318370762000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, if you can easily work around the underlying bug, I think you should.","msgtype":"m.text"},"ts":1318370820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like WebKit throws WrongDocumentError if you try to set a range's endpoint to a node that's in another document from the one you created the range in.","msgtype":"m.text"},"ts":1318370821000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So when creating ranges for tests, other than in setStart/setEnd tests, I make sure that I call createRange() on the ownerDocument of the intended endpoints.","msgtype":"m.text"},"ts":1318370880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Otherwise that one minor bug would create zillions of spurious failures in unrelated features.","msgtype":"m.text"},"ts":1318370881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You can always have it as a separate prereq function, and group results into pass, fail, prereq failed","msgtype":"m.text"},"ts":1318370940000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That doesn't really solve the problem.  It just obscures it.","msgtype":"m.text"},"ts":1318371000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"discovers that the Range tests all seem to be broken, since no one adjusted the relative URLs to testharness.js","msgtype":"m.emote"},"ts":1318371001000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"goes to fix","msgtype":"m.emote"},"ts":1318371002000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: You should avoid unnecessarily depending on features that you aren't explicitly trying to test","msgtype":"m.text"},"ts":1318371360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"On the other hand, IE seemingly doesn't let you create Ranges whose boundary points don't descend from a Document.","msgtype":"m.text"},"ts":1318371361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But you should always be conservative about handing out \"pass\"","msgtype":"m.text"},"ts":1318371420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So if I have a test that starts by creating such a range, what am I supposed to do?","msgtype":"m.text"},"ts":1318371421000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In that case, I have to fail it.","msgtype":"m.text"},"ts":1318371422000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Yes. They have a bug. They will fix the bug and the test will pass","msgtype":"m.text"},"ts":1318371423000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"there isn't a problem unless you are creating unnecessary dependencies","msgtype":"m.text"},"ts":1318371480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Now, WebKit/Opera mangle ranges when you do addRange(), so the range that winds up in the actual selection might not have the same boundary points as the one you gave to addRange().  In that case, when testing collapseToStart(), do I just test that whatever range ends up there gets collapsed to the start?  Or do I decide that's not really what I'm testing, if the range is substantially different from the one I put in, so I fail them?","msgtype":"m.text"},"ts":1318371540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Judgement call","msgtype":"m.text"},"ts":1318371541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What if they don't put any range in at all, so they wind up with a Selection that has no ranges?  Do I just test that they throw an exception, or do I fail them because that has no relationship to what I'm supposed to be testing?","msgtype":"m.text"},"ts":1318371542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"is ambivalent about this one","msgtype":"m.emote"},"ts":1318371543000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think I would prefer to be a bit conservative and always check that you have the right range","msgtype":"m.text"},"ts":1318371600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"thinks he'll let it slide if there winds up being some Range present, but not if there's no Range, because then you could pass all the tests if addRange() and collapseToStart() were both no-ops","msgtype":"m.emote"},"ts":1318371601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, that means WebKit fails almost every single test, even though its collapseToStart() implementation seems to be almost completely correct.","msgtype":"m.text"},"ts":1318371602000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Well that doesn't seem ideal","msgtype":"m.text"},"ts":1318371660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Opera fails every test anyway, because its Selection implementation is broken beyond comprehension)","msgtype":"m.text"},"ts":1318371661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But maybe it will motivate them to fix the bug :)","msgtype":"m.text"},"ts":1318371662000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: But if you can't construct an environment to test that in, then how do you know it's almost completely correct?","msgtype":"m.text"},"ts":1318371663000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, because it does add a range, just not the one I specified.  And then it collapses the range it did add correctly.","msgtype":"m.text"},"ts":1318371720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Then should you not assert that it adds the range it does add correctly, regardless of what that is?","msgtype":"m.text"},"ts":1318371780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, yeah, that's what I'm doing.","msgtype":"m.text"},"ts":1318371781000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which means WebKit should pass?","msgtype":"m.text"},"ts":1318371782000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1318371783000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Then I'm confused.","msgtype":"m.text"},"ts":1318371840000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Okay, so now Gecko passes everything because it's actually correct, Opera fails everything because it's actually completely broken, WebKit fails about half the tests because it doesn't add any range at all in some cases, and IE fails almost all the tests because it genuinely has a bug in collapseToStart/End.","msgtype":"m.text"},"ts":1318371960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Seems good to me.","msgtype":"m.text"},"ts":1318371961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Are we actually that broken? The fact we manage to work with most sites tends to suggest we're not /that/ broken.","msgtype":"m.text"},"ts":1318372320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, it could be some artifact of my test setup.  I tend to find that addRange() routinely does nothing in Opera.","msgtype":"m.text"},"ts":1318372380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So the selection remains empty.","msgtype":"m.text"},"ts":1318372381000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I suspect it has something to do with Opera deciding the range I give it isn't visible or something.","msgtype":"m.text"},"ts":1318372382000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, authors in real life commonly deal with user-created selections and don't use addRange at all.","msgtype":"m.text"},"ts":1318372440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But obviously tests can't do that.","msgtype":"m.text"},"ts":1318372441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: what is this range bug you're describing?","msgtype":"m.text"},"ts":1318372442000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, WebKit fails lots of Selection tests because addRange() doesn't add the same range it's given, it normalizes it.  As we've discussed.","msgtype":"m.text"},"ts":1318372443000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: ah I see.","msgtype":"m.text"},"ts":1318372500000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"gsnedders, http://dvcs.w3.org/hg/editing/raw-file/tip/selecttest/collapseToStartEnd.html","msgtype":"m.text"},"ts":1318372501000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"rniwa, but there are two other tests here that fail for a different reason (not \"Sanity check\"), didn't look into it closely: http://dvcs.w3.org/hg/editing/raw-file/tip/selecttest/collapseToStartEnd.html","msgtype":"m.text"},"ts":1318372560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Where's the spec, again?","msgtype":"m.text"},"ts":1318372980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, it's wandered around a bit, but is now part of the editing spec.  http://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#selections","msgtype":"m.text"},"ts":1318372981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Okay, so addRange only does something if the range is not detached (in the DOM) and is collapsed.","msgtype":"m.text"},"ts":1318373100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It only works if the range is collapsed?","msgtype":"m.text"},"ts":1318373160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Wha?","msgtype":"m.text"},"ts":1318373161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Not detached I understand, although it's not per spec.","msgtype":"m.text"},"ts":1318373162000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But collapsed?","msgtype":"m.text"},"ts":1318373163000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"How are you supposed to create non-collapsed selections, then?","msgtype":"m.text"},"ts":1318373164000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Don't ask me. I'm just reading the code. :)","msgtype":"m.text"},"ts":1318373165000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Do you have tests for isCollapsed? That may helpâ€¦","msgtype":"m.text"},"ts":1318373280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, if you can suggest a sane way to create non-collapsed selections, I'm willing to add the workaround to my selection tests.","msgtype":"m.text"},"ts":1318373281000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I haven't tested isCollapsed yet, but if I did, it would consist of making a bunch of selections with addRange() and then checking isCollapsed, so it would still break in Opera.","msgtype":"m.text"},"ts":1318373340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, Opera seems to not be adding even collapsed non-detached selections when I do addRange(), in my collapseToStart/End tests.","msgtype":"m.text"},"ts":1318373341000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"All the nodes that are detached are named detached* in the test names, or foreign* for a foreign document, or xml* for a foreign XML document.","msgtype":"m.text"},"ts":1318373400000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: webkit supports setPosition","msgtype":"m.text"},"ts":1318373700000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: and setBaseAndExtent methods","msgtype":"m.text"},"ts":1318373701000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: perhaps you may want to standardize either","msgtype":"m.text"},"ts":1318373702000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: Hmm.","msgtype":"m.text"},"ts":1318373760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: I'm fairly certain you're hitting some weird edge-case bug.","msgtype":"m.text"},"ts":1318376160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or at least, I'm utterly confused. :)","msgtype":"m.text"},"ts":1318376161000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"rniwa, those are totally redundant with collapse()/extend().  WebKit should get rid of them, IMO.","msgtype":"m.text"},"ts":1318376460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't want to standardize them when they're not useful at all and just clutter an API that's already redundant.","msgtype":"m.text"},"ts":1318376520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: not sure. setPosition seems useful when you want to set a collapsed selection","msgtype":"m.text"},"ts":1318376521000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, how does it differ from collapse()?","msgtype":"m.text"},"ts":1318376522000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: it seems too verbose to create a range and then remove all ranges and then add new range","msgtype":"m.text"},"ts":1318376523000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: hm... collapse takes node and index?","msgtype":"m.text"},"ts":1318376580000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, yes, but I only do that because IE doesn't support extend().  collapse()+extend() is only two lines.","msgtype":"m.text"},"ts":1318376581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"rniwa, Selection.collapse does.  Not to be confused with the totally different Range.collapse.","msgtype":"m.text"},"ts":1318376582000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"gsnedders, yeah, my tests are probably hitting some kind of edge case.  I remember once before I tried debugging Opera test failures and found that moving the nodes I was selecting to the top of the document somehow fixed it.","msgtype":"m.text"},"ts":1318376640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Could it have something to do with the fact that the nodes are created and then selected without any repaints/event loop spins in between?","msgtype":"m.text"},"ts":1318376700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Since selections in Opera are somewhat visual.","msgtype":"m.text"},"ts":1318376701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"No, doesn't seem to be it.","msgtype":"m.text"},"ts":1318376702000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, if you find an explanation, let me know.","msgtype":"m.text"},"ts":1318376703000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'd be happy to work around the bugs, since sometimes it's useful to see what Opera does.","msgtype":"m.text"},"ts":1318376760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(although I'm unlikely to change the spec solely because Opera does something, given the relevant market shares, it can still sometimes provide useful insight)","msgtype":"m.text"},"ts":1318376761000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I know vaguely what's going on in the code, but no idea how it gets into that state","msgtype":"m.text"},"ts":1318376762000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't think it's just one issue, though.  I get the impression that Opera's Selection implementation is sulky and likes to throw its hands in the air and give up if it gets slightly confused.","msgtype":"m.text"},"ts":1318376820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The thing that's making addRange a no-op has nothing to do with the selection impl, though","msgtype":"m.text"},"ts":1318376880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What does it have to do with?  The Range implementation?","msgtype":"m.text"},"ts":1318376881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Far lower-level window management stuff.","msgtype":"m.text"},"ts":1318376940000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1318376941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So it's tied to display and not just the DOM?","msgtype":"m.text"},"ts":1318376942000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"WebKit seems to be like that too.","msgtype":"m.text"},"ts":1318376943000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1318376944000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1318376945000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(Or at least I don't think so.)","msgtype":"m.text"},"ts":1318376946000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"asks on IRC as to why it's in that state bug expects no answer until tomorrow","msgtype":"m.emote"},"ts":1318377000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: Possibly because the tests run on load and before the document is visible.","msgtype":"m.text"},"ts":1318377060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, they run before load.","msgtype":"m.text"},"ts":1318377061000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But so does my minimal test case, which works.","msgtype":"m.text"},"ts":1318377062000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"s/on load/while loading/ was what I meant, really","msgtype":"m.text"},"ts":1318377120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: Possibly a race-condition as to when it first displays the frame.","msgtype":"m.text"},"ts":1318377121000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Would make sense.","msgtype":"m.text"},"ts":1318377122000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(As for what's visible, well, I'd say ask the person why wrote that comment, but I don't know how you can ask someone who is dead (Geir). :))","msgtype":"m.text"},"ts":1318377300000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm guessing it means the obvious thing.","msgtype":"m.text"},"ts":1318377301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1318377302000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(Nothing apart from the obvious thing really makes sense)","msgtype":"m.text"},"ts":1318377480000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]