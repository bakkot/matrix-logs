[
{"content":{"body":"Would it be possible to get a user account for the WHATWG wiki?","msgtype":"m.text"},"ts":1418651650000,"senderName":"fresco","senderId":"fresco@irc"},
{"content":{"body":"I'm planning to add the citation_* meta tags to the MetaExtensions page (or at least propose them on the discussion page)","msgtype":"m.text"},"ts":1418651683000,"senderName":"fresco","senderId":"fresco@irc"},
{"content":{"body":"There may be resistance to adding them as they duplicate DC meta tags in some cases, but they are in wide use and are recommended for use by Google Scholar https://www.google.com/intl/en/scholar/inclusion.html#indexing (which is the closest thing to a specification that exists for them)","msgtype":"m.text"},"ts":1418651817000,"senderName":"fresco","senderId":"fresco@irc"},
{"content":{"body":"fresco: what username and email do you want for the account?","msgtype":"m.text"},"ts":1418652107000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"fresco: the documentation at https://www.google.com/intl/en/scholar/inclusion.html#indexing is better than we have for 90% of the stuff that's already registered","msgtype":"m.text"},"ts":1418654538000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and those citation_* values to me see a lot easier to read than the DC things","msgtype":"m.text"},"ts":1418654619000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and if Google Scholar actually consumes the citation_* stuff and does something with it, that all sounds good","msgtype":"m.text"},"ts":1418654669000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I've added a note to the discussion page as well, as some of them - although being widely used - are not formally documented anywhere","msgtype":"m.text"},"ts":1418654781000,"senderName":"fresco","senderId":"fresco@irc"},
{"content":{"body":"yep, just now read that too","msgtype":"m.text"},"ts":1418654815000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks for taking time to add this stuff","msgtype":"m.text"},"ts":1418654825000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll get it pushed out to the w3c validator later today or tomorrow","msgtype":"m.text"},"ts":1418654847000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Brilliant, thanks Mike","msgtype":"m.text"},"ts":1418654904000,"senderName":"fresco","senderId":"fresco@irc"},
{"content":{"body":"TabAtkins: Didn't realise docment.fonts.check wouldn't accept \"helvetica\", and it had to be \"10px helvetica\" or something like that. Why is the size needed?","msgtype":"m.text"},"ts":1418658109000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the spec says to parse as the 'font' property, which requires a size. i don't know the reasoning here though","msgtype":"m.text"},"ts":1418658842000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yeah, followed the spec there. I never really understood why font: requires it either, but seems to make even less sense in the JS API","msgtype":"m.text"},"ts":1418658901000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It's not like you can use a different font for different sizes","msgtype":"m.text"},"ts":1418658938000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(is it?)","msgtype":"m.text"},"ts":1418658942000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"no, you can't","msgtype":"m.text"},"ts":1418658996000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: 'font' requires it to disambiguate font-family from the other properties iirc","msgtype":"m.text"},"ts":1418659079000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ahh ok, guess the same reason applies to the JS api","msgtype":"m.text"},"ts":1418659120000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but you can use different fonts for different weights at least","msgtype":"m.text"},"ts":1418659123000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"feels like a hack though","msgtype":"m.text"},"ts":1418659125000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1418659126000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"is the API shipped anywhere?","msgtype":"m.text"},"ts":1418659331000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, it's in Chrome stable","msgtype":"m.text"},"ts":1418659349000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk (if youâ€™re reading logs): http://l0.cm/encodings/table/","msgtype":"m.text"},"ts":1418659353000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"JakeA: The parsing of 'font' is complicated and stupid, but the rules ar enecessary.","msgtype":"m.text"},"ts":1418661140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The size is the last component before the name, and it's distinguishable from all the preceding values, so you can tell when you've hit it, and when you have to switch to the \"collect all the tokens and try to parse them as a font-family name\" part of the property.","msgtype":"m.text"},"ts":1418661198000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because the font-family part, stupidly, allows idents, numbers, and dimensions.","msgtype":"m.text"},"ts":1418661215000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Now, for check(), the font-family name isn't enough - you want to know that the *bold* face of your font is loaded, for example.  So you need the whole font shorthand. But that means you have to include the completely worthless font-size in there, which is confusing and annoying, but unavoidable.","msgtype":"m.text"},"ts":1418661289000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is just one of the CSS mistakes from before we knew better.  (In particular, we now know that all values coming from the outside world should be strings in the CSS syntax, because we can't predict how they'll parse.  We just ran into that with lang values again.)","msgtype":"m.text"},"ts":1418661341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hi","msgtype":"m.text"},"ts":1418661883000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"is anybody working on the next version of Touch Events spec?","msgtype":"m.text"},"ts":1418661909000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"TabAtkins: Makes sense. It's a shame, but unavoidable unless .check has stricter parsing (which would break over use cases)","msgtype":"m.text"},"ts":1418662065000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yup.","msgtype":"m.text"},"ts":1418662085000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"The W3C Web Events Working Group was closed on 5 November 2013, having successfully published the Touch Events specification as a Recommendation. More advanced work on touch, pointer and mouse events continues in the Pointer Events Working Group.\"","msgtype":"m.text"},"ts":1418662195000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"^ is this still actual? Both Google and Apple made it clear they will never implement pointer events","msgtype":"m.text"},"ts":1418662223000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"s/never/unlikely","msgtype":"m.text"},"ts":1418662303000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"My impression is that the problem with touch/pointer interaction standardisation is that several players are actively working against standardisation","msgtype":"m.text"},"ts":1418662370000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So I'm not sure that it really matters which group is doing the work (or not)","msgtype":"m.text"},"ts":1418662416000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I could be wrong though, I don't really follow it","msgtype":"m.text"},"ts":1418662433000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The situation is... complicated, but sure, that's not a totally inaccurate characterization.","msgtype":"m.text"},"ts":1418662472000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Google is cherry-picking some stuff from the Pointer Events spec (like touch-action and navigator.maxTouchPoints are implemented)","msgtype":"m.text"},"ts":1418662636000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"I would really prefer to have everything defined in one place","msgtype":"m.text"},"ts":1418662739000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"jgraham: what do you mean specifically by \"working against standardisation\"? Apple and its patent claims?","msgtype":"m.text"},"ts":1418662915000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"I don't mean anything specifically","msgtype":"m.text"},"ts":1418662931000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There are some link relations in https://tools.ietf.org/html/rfc5829 that I'd like to add to http://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions so they can be used in HTML. Would that be appropriate?","msgtype":"m.text"},"ts":1418664134000,"senderName":"fresco","senderId":"fresco@irc"},
{"content":{"body":"They are already included in https://www.iana.org/assignments/link-relations/link-relations.xhtml","msgtype":"m.text"},"ts":1418664176000,"senderName":"fresco","senderId":"fresco@irc"},
{"content":{"body":"fresco: Seems reasonable.","msgtype":"m.text"},"ts":1418666130000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you around?  I now get a stack traceback.","msgtype":"m.text"},"ts":1418671142000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"man what","msgtype":"m.text"},"ts":1418671167000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AttributeError: 'ExtendedAttribute' object has no attribute 'arguments'","msgtype":"m.text"},"ts":1418671168000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Man what.","msgtype":"m.text"},"ts":1418671173000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"$ man what","msgtype":"m.text"},"ts":1418671188000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"No manual entry for what","msgtype":"m.text"},"ts":1418671188000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Okay, I'll check this out. I tested this on a simple example that should have matched your stuff. :(","msgtype":"m.text"},"ts":1418671189000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is gonna install a man entry for \"what\" that just says \"lol i dunno\"","msgtype":"m.emote"},"ts":1418671209000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, good, this isn't realted to stringifiers at all, it's something new in the updated widlparser.","msgtype":"m.text"},"ts":1418671712000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rubys: Okay, fixed, sorry. Exercising a new code path.","msgtype":"m.text"},"ts":1418671992000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1418672007000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: There's now some definitional errors, is all.  Define href as an attribute, not a stringifier.","msgtype":"m.text"},"ts":1418672007000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bugs happen. what matters is that the maintainers are responsive.  And you have been VERY responsive.  THANKS!","msgtype":"m.text"},"ts":1418672035000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"And later, when you're defining \"stringifier\" itself for URLSearchParams, instead do a \"dfn\" type definition for \"stringification behavior\".","msgtype":"m.text"},"ts":1418672068000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is not yet documented, but it's what's needed to link up with the plain \"stringifier;\" syntax.","msgtype":"m.text"},"ts":1418672083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<dfn dfn for=URLSearchParams>stringification behavior</dfn>","msgtype":"m.text"},"ts":1418672113000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"now I'm back to:","msgtype":"m.text"},"ts":1418672150000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"FATAL ERROR: Functions/methods must end with () in their linking text, got 'href'.","msgtype":"m.text"},"ts":1418672152000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I presume that's because I haven't done the change above?","msgtype":"m.text"},"ts":1418672162000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Yup.","msgtype":"m.text"},"ts":1418672179000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: perhaps it would be easier if you were to make a pull request?","msgtype":"m.text"},"ts":1418672182000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Sure, one sec. I've got it building cleanly now.","msgtype":"m.text"},"ts":1418672196000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1418672347000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"desperately needs to document how to dfn/link to stringifiers; the four different syntax forms make this very confusing.","msgtype":"m.emote"},"ts":1418672429000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"on a call, just a sec","msgtype":"m.emote"},"ts":1418672446000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"also wants to spend some time converting all your IDL links to the {{foo}} shorthand.","msgtype":"m.emote"},"ts":1418672810000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I wont' do that this week, as this is a fantasai work week.","msgtype":"m.text"},"ts":1418672820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mathiasbynens: I had seen that before, wasn't quite sure what to do with it","msgtype":"m.text"},"ts":1418678661000,"senderName":"annevk","senderId":"annevk@irc"}
]