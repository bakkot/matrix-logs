[
{"content":{"body":"hi people.  are there ecmascript objects that stringify in non-default ways, apart from window.location and window.getSelection()?","msgtype":"m.text"},"ts":1198889400000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"one can always override toString...","msgtype":"m.text"},"ts":1198889460000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"yeah.  i'm wondering what other (host) objects do that.  (or perhaps stringify in a different way, e.g. by having a different [[DefaultValue]] method.)","msgtype":"m.text"},"ts":1198889520000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: in WebKit, Range and HTMLAnchorElement also have custom toString methods (though not sure if that is necessary or correct)","msgtype":"m.text"},"ts":1198890360000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"javascript:alert(document.links[0]) on most pages will show the result","msgtype":"m.text"},"ts":1198890420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok, thanks","msgtype":"m.text"},"ts":1198890421000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: looks like Mozilla does at least the HTMLAnchorElement one as well (serializing as its own href)","msgtype":"m.text"},"ts":1198890600000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah i just noticed.  maybe the spec should say something?","msgtype":"m.text"},"ts":1198890601000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: it's also possible that there are more classes in WebKit which serialize in a custom way, but do it too obscurely for my simple search to find","msgtype":"m.text"},"ts":1198890602000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(I found Selection, Location, Range and HTMLAnchorElement)","msgtype":"m.text"},"ts":1198890660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(ie7 also does the HTMLAnchorElement thing)","msgtype":"m.text"},"ts":1198890661000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I suspect serializing anchors that way is needed for compatibility, so yes, HTML5 should probably say something","msgtype":"m.text"},"ts":1198890720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Gecko appears to have custom toStrings for HTMLAnchorElements and HTMLAreaElements, Range, Selection","msgtype":"m.text"},"ts":1198891080000,"senderName":"gavin__","senderId":"gavin__@irc"},
{"content":{"body":"and some CSSOM related objects that I don't really know about","msgtype":"m.text"},"ts":1198891140000,"senderName":"gavin__","senderId":"gavin__@irc"},
{"content":{"body":"othermaciej's caveat applies","msgtype":"m.text"},"ts":1198891141000,"senderName":"gavin__","senderId":"gavin__@irc"},
{"content":{"body":"thanks gavin__","msgtype":"m.text"},"ts":1198891200000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I didn't find Location because its magical, for example","msgtype":"m.text"},"ts":1198891201000,"senderName":"gavin__","senderId":"gavin__@irc"},
{"content":{"body":"how's the magic implemented there?","msgtype":"m.text"},"ts":1198891202000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well it's magic for reasons other than having a custom tostring","msgtype":"m.text"},"ts":1198891203000,"senderName":"gavin__","senderId":"gavin__@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1198891260000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh, actually I'm wrong","msgtype":"m.text"},"ts":1198891261000,"senderName":"gavin__","senderId":"gavin__@irc"},
{"content":{"body":"I just missed it","msgtype":"m.text"},"ts":1198891262000,"senderName":"gavin__","senderId":"gavin__@irc"},
{"content":{"body":"http://lxr.mozilla.org/seamonkey/source/dom/src/base/nsLocation.cpp#979","msgtype":"m.text"},"ts":1198891263000,"senderName":"gavin__","senderId":"gavin__@irc"},
{"content":{"body":"wonders if [[DefaultValue]] is ever overridden in imlementations","msgtype":"m.emote"},"ts":1198891320000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok now IE is just TRYING to fail these tests","msgtype":"m.text"},"ts":1198898520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i finally found something that EVERY BROWSER EXCEPT IE failed","msgtype":"m.text"},"ts":1198898521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i added it to acid3","msgtype":"m.text"},"ts":1198898580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and now it fails in IE, because IE handles code in eval() differently from code in a js block","msgtype":"m.text"},"ts":1198898581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so IE still fails every test","msgtype":"m.text"},"ts":1198898582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"EVEN THE ONES I ADDED SPECIFICALLY TO GIVE IT A NON-ZERO STARTING SCORE","msgtype":"m.text"},"ts":1198898583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1198898640000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Hixie: code in eval() is supposed to be treated differently from code in a JS block in some ways","msgtype":"m.text"},"ts":1198902360000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sadly Acid3 seems to have borked again... oh well","msgtype":"m.text"},"ts":1198902361000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"and we're now 92%!","msgtype":"m.text"},"ts":1198902362000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"huaazh","msgtype":"m.text"},"ts":1198902363000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"othermaciej: different how?","msgtype":"m.text"},"ts":1198903500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sadly the HMTL5 spec does not support your form.elements.length == form.elements testcase.  http://bugs.webkit.org/show_bug.cgi?id=16656","msgtype":"m.text"},"ts":1198907580000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"unless I missed something in my reading thereof","msgtype":"m.text"},"ts":1198907581000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"FIXED","msgtype":"m.text"},"ts":1198907640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1198907641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fixed","msgtype":"m.text"},"ts":1198907642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that was a typo","msgtype":"m.text"},"ts":1198907643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i meant to test form.elements.length against form.length","msgtype":"m.text"},"ts":1198907644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh good.  well, I just sent an email about it :)","msgtype":"m.text"},"ts":1198909740000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: said email contained a list of all WebKit bugs re: Acid3","msgtype":"m.text"},"ts":1198909741000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"which I imagine you will find interesting :)","msgtype":"m.text"},"ts":1198909742000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1198909743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"goes to look at why the latest Acid3 file causes webkit to fail completely","msgtype":"m.emote"},"ts":1198909800000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"ah, it's fixed again, good","msgtype":"m.text"},"ts":1198909801000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"except now we're 88% instead of 91% :(","msgtype":"m.text"},"ts":1198909802000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"teehee","msgtype":"m.text"},"ts":1198909920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you know of any bugs in safari or mozilla that i should test?","msgtype":"m.text"},"ts":1198909921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, XHTML support is riddled w/ bugs :)","msgtype":"m.text"},"ts":1198909980000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"embedding bugs are a big deal for me","msgtype":"m.text"},"ts":1198909981000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: I really think the test could benefit from using something like these: http://trac.webkit.org/projects/webkit/browser/trunk/LayoutTests/fast/js/resources/js-test-pre.js","msgtype":"m.text"},"ts":1198909982000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"i mean DOM or JS things","msgtype":"m.text"},"ts":1198909983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for making it easier to debug","msgtype":"m.text"},"ts":1198909984000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: I'll think about it next time I'm sorting through old bugs","msgtype":"m.text"},"ts":1198910040000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"you mean reporting something more than the test number?","msgtype":"m.text"},"ts":1198910041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not sure exactly what one would need to report","msgtype":"m.text"},"ts":1198910042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: breaking the ifs down into single tests","msgtype":"m.text"},"ts":1198910043000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"instead of if (foo || bar || baz) fail!","msgtype":"m.text"},"ts":1198910100000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"it could be","msgtype":"m.text"},"ts":1198910101000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"assert(!foo);","msgtype":"m.text"},"ts":1198910102000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"assert(!bar)","msgtype":"m.text"},"ts":1198910103000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"etc","msgtype":"m.text"},"ts":1198910104000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"and have assert thrown an exception or something?","msgtype":"m.text"},"ts":1198910105000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i could i guess","msgtype":"m.text"},"ts":1198910106000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1198910107000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"and then the wrapper could catch it","msgtype":"m.text"},"ts":1198910108000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"seems tdious","msgtype":"m.text"},"ts":1198910109000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it would certainly make debugging easier. to have things be single-line.  but maybe it's not worth it","msgtype":"m.text"},"ts":1198910110000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"it could throw an exception containing the assertion text.","msgtype":"m.text"},"ts":1198910160000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"which would allow you to report things better","msgtype":"m.text"},"ts":1198910161000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"then only the first bit that fails would be run","msgtype":"m.text"},"ts":1198910162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but again, maybe not worth it","msgtype":"m.text"},"ts":1198910163000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"but i guess that's ok","msgtype":"m.text"},"ts":1198910164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(of each test)","msgtype":"m.text"},"ts":1198910220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, you obviously have lots of time to play with differnet methods for differnet tests","msgtype":"m.text"},"ts":1198910221000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"perhaps you'll find one you like better than the current","msgtype":"m.text"},"ts":1198910280000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"from a debugging standpoint, watching for when \"ok\" turns false, and then checking each part of an if () clause can be a bit tedius","msgtype":"m.text"},"ts":1198910281000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1198910282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"goes back to debugging the latest build","msgtype":"m.emote"},"ts":1198910283000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"how do i distinguish a DOMException object from a string thrown by 'throw' in a spec-compliant way that works in IE?","msgtype":"m.text"},"ts":1198910460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ha!  it looks like test 56 is impossible to pass.  You never set ok to true! :)","msgtype":"m.text"},"ts":1198910520000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"assumes he meant to initialize ok to true","msgtype":"m.emote"},"ts":1198910580000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"fixed","msgtype":"m.text"},"ts":1198910581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie++ # for testing reserved words!","msgtype":"m.text"},"ts":1198910582000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: that was one thing I *really* wanted to see moz fix","msgtype":"m.text"},"ts":1198910583000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"any others?","msgtype":"m.text"},"ts":1198910640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or rather.. to see all browsers agree on","msgtype":"m.text"},"ts":1198910641000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"i have no idea how to handle this exception thing","msgtype":"m.text"},"ts":1198910642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: can't you grab the prototype off of an object in IE?","msgtype":"m.text"},"ts":1198910643000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: or maybe .toNumber() the exception?","msgtype":"m.text"},"ts":1198910644000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"is there a spec that guarantees either of those do anything sane for DOMException? (specifically, a spec that was in CR or better in 2004)","msgtype":"m.text"},"ts":1198910700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll just throw an object with a 'message' property","msgtype":"m.text"},"ts":1198910760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that works everywhere","msgtype":"m.text"},"ts":1198910761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm amused that test 85 is the only test ie can pass","msgtype":"m.text"},"ts":1198910820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not especially targetting IE either","msgtype":"m.text"},"ts":1198910821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm really only worrying about mozilla and safari bugs, by and large","msgtype":"m.text"},"ts":1198910822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(except for things other people have told me to test)","msgtype":"m.text"},"ts":1198910880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(like ie's attribute mess)","msgtype":"m.text"},"ts":1198910881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it woudl appear that the 30s are misnumbered in comment","msgtype":"m.text"},"ts":1198910882000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"it says we fail \"39\" but according to the comments there is no 39 :)","msgtype":"m.text"},"ts":1198910883000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"goes to look at the DOMException spec","msgtype":"m.emote"},"ts":1198910940000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"what the hell is an \"exception\" instead of an \"interface\" in idl","msgtype":"m.text"},"ts":1198911000000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"how is there no 39","msgtype":"m.text"},"ts":1198911060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"reads http://www.w3.org/TR/DOM-Bindings/#idl-exceptions","msgtype":"m.emote"},"ts":1198911120000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: so is e.code accessible within IE?","msgtype":"m.text"},"ts":1198911180000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: maybe not the difference you noticed, but there are some intended behavior differences for eval code, for example \"var\" declarations create bindings that are *not* DontDelete under eval","msgtype":"m.text"},"ts":1198911240000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"MacDome: that's one of the things i test i believe","msgtype":"m.text"},"ts":1198911241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: ah","msgtype":"m.text"},"ts":1198911242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: is that in the spec?","msgtype":"m.text"},"ts":1198911243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you were just asking for ways to identify DOMExceptions, I had assumed you were looking to replace the e.HIERARCHY_.... check","msgtype":"m.text"},"ts":1198911300000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"which fails in Safari and seems to disagree w/ the spec","msgtype":"m.text"},"ts":1198911301000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: some differences are spec'd here: http://bclary.com/2004/11/07/#a-10.2.2","msgtype":"m.text"},"ts":1198911302000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"interesting.  IE always makes .constructor DontEnum","msgtype":"m.text"},"ts":1198911360000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"even if it might be","msgtype":"m.text"},"ts":1198911420000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: ah, in fact that section includes the difference I mentioned","msgtype":"m.text"},"ts":1198911421000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"MacDome: no, i was looking for ways to change the framework to handle custom exceptions. i cheated instead.","msgtype":"m.text"},"ts":1198911422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: cool","msgtype":"m.text"},"ts":1198911423000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I wonder if you can grab at e.constructor and check to see if it's a DOMException that way... I'm not actually sure what e.constructor will get you, othermaciej would probably know","msgtype":"m.text"},"ts":1198911424000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"i can only rely on things that either work 100% reliably from DOM Level 0, or things that were in specs at CR or later in 2004","msgtype":"m.text"},"ts":1198911480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"DOM Bindings wasn't even close to either","msgtype":"m.text"},"ts":1198911481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"november 2000: http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-17189187 ?","msgtype":"m.text"},"ts":1198911540000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome: where's the \".constructor\" part of that?","msgtype":"m.text"},"ts":1198911541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was thinking .constructor was on Object","msgtype":"m.text"},"ts":1198911542000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"exceptions aren't necessarily Objects","msgtype":"m.text"},"ts":1198911600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're host objects","msgtype":"m.text"},"ts":1198911601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which basically (as of 2004) had no defined behaviour","msgtype":"m.text"},"ts":1198911602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"insofar as .constructor goes","msgtype":"m.text"},"ts":1198911603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as far as i can tell","msgtype":"m.text"},"ts":1198911604000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders what an exception can be if not an \"Object\" in JS.  I guess it could be another primitive type...","msgtype":"m.emote"},"ts":1198911605000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"host objects don't have to be any primitive type as i understand it","msgtype":"m.text"},"ts":1198911660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Er r or Obj e c t s ","msgtype":"m.text"},"ts":1198912140000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"I nst ances of Er r or obj ect s ar e t hr own as except i ons when r unt i me er r or s occur . The Er r or obj ect s may al so ","msgtype":"m.text"},"ts":1198912141000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"ser ve as base obj ect s f or user - def i ned except i on cl asses. ","msgtype":"m.text"},"ts":1198912142000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: according to ECMA e.constructor.prototype.name == \"Error\" for all runtime exceptions","msgtype":"m.text"},"ts":1198912200000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: assuming I'm reading 15.11 correctly","msgtype":"m.text"},"ts":1198912260000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"sure, but user-thrown exceptions and DOM-thrown exceptions aren't runtime exceptions","msgtype":"m.text"},"ts":1198912261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"correct, they are not required to be based from Error","msgtype":"m.text"},"ts":1198912262000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: user exceptions at least","msgtype":"m.text"},"ts":1198912263000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: I'm not sure about DOM exceptions","msgtype":"m.text"},"ts":1198912264000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"DOM exceptions are effectively user-defined","msgtype":"m.text"},"ts":1198912265000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or rather, host-defined","msgtype":"m.text"},"ts":1198912266000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(which is even less useful to us)","msgtype":"m.text"},"ts":1198912267000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dom bindings addresses all this, luckily","msgtype":"m.text"},"ts":1198912268000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, throw can throw any arbitrary value, so that's no hel","msgtype":"m.text"},"ts":1198912380000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"p","msgtype":"m.text"},"ts":1198912381000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"yeah, i just settled on throwing a { message: \"\" } object","msgtype":"m.text"},"ts":1198912440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nice new error messages!","msgtype":"m.text"},"ts":1198912441000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"I just reloaded and saw them","msgtype":"m.text"},"ts":1198912442000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"i'm up to test 36","msgtype":"m.text"},"ts":1198912443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bah.  once again you check e.NAMESPACE_ERR  which isn't supported by any spec I've seen","msgtype":"m.text"},"ts":1198912500000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"bitches instead of fixing the \"bug\"","msgtype":"m.emote"},"ts":1198912560000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"DOM2 Core, appendix E","msgtype":"m.text"},"ts":1198912561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nice new tests, btw.","msgtype":"m.text"},"ts":1198912680000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: sure, and javascript:alert(DOMException.HIERARCHY_REQUEST_ERR) is valid in Safari","msgtype":"m.text"},"ts":1198912740000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: but just because it's a property on the constructor funtion doesn't mean it's a property on the prototype","msgtype":"m.text"},"ts":1198912741000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"do you agree that instances of Node have the node type constants on their objects?","msgtype":"m.text"},"ts":1198912800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure.  it's defined for any object conforming to the Node interface: http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1950641247","msgtype":"m.text"},"ts":1198912860000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-17189187 DOMException seems to have no such requirement","msgtype":"m.text"},"ts":1198912861000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"the text defining that  for JSis exactly the same as the text defining the constants should be on all exception objects","msgtype":"m.text"},"ts":1198912862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't follow","msgtype":"m.text"},"ts":1198912920000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Foo.bar != (new Foo).bar","msgtype":"m.text"},"ts":1198912921000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"the only reason Node objects have those constants is the text in appendix E that says that Node.ELEMENT_NODE on the \"Prototype Object Node\" is present","msgtype":"m.text"},"ts":1198912922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the easy solution is obviously for us to implement these constants as part of the DOMException interface), I'm just not sure I understand how that's implied form the spec yet","msgtype":"m.text"},"ts":1198912980000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"which is the same text as the text that says that DOMException.INDEX_SIZE_ERR on the \"Prototype Object DOMException\" is present","msgtype":"m.text"},"ts":1198912981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah...","msgtype":"m.text"},"ts":1198912982000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"so either the constants should be present in both cases, or in neither cae","msgtype":"m.text"},"ts":1198912983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"case","msgtype":"m.text"},"ts":1198913040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Prototype Object DOMException","msgtype":"m.text"},"ts":1198913041000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"now i agree that the text in the spec sucks, which is why we need the DOM Bindigns spec","msgtype":"m.text"},"ts":1198913042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I can see how that could be used to mean that the prototype for the object DOMException shoudl have those constants","msgtype":"m.text"},"ts":1198913043000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"ok, I'll concede Prototype Object DOMException saves your case","msgtype":"m.text"},"ts":1198913044000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"but i can't see any way to interpret that spec which leads to exceptions being different from nodes in this regard","msgtype":"m.text"},"ts":1198913045000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well, ignoring appendix E, I think my point is valid","msgtype":"m.text"},"ts":1198913100000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"appendix E is the only reason we have anything in JS at all","msgtype":"m.text"},"ts":1198913101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the rest of the spec clearly demands that (new Node).ELEMENT_NODE be valid.","msgtype":"m.text"},"ts":1198913102000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"and demands that HIERARCHY_REQUEST_ERR be defined","msgtype":"m.text"},"ts":1198913103000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"but makes no such demand on (new DOMException).HIERARCHY_REQUEST_ERR","msgtype":"m.text"},"ts":1198913104000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"i disagree; i don't see anything that says how to interpret that idl other than appendix E","msgtype":"m.text"},"ts":1198913105000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1198913160000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"goes to prepare the fix","msgtype":"m.emote"},"ts":1198913161000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1198913220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've done half the tests with error messages","msgtype":"m.text"},"ts":1198913221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll do the other half in a bit","msgtype":"m.text"},"ts":1198913222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"enjoys having such a formidable spec opponent. :)","msgtype":"m.emote"},"ts":1198913280000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1198913281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sighs.  DOMException.idl appears non-autogenerated :(","msgtype":"m.emote"},"ts":1198913460000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"sigh.  Hixie's got webkit down to 85% :(","msgtype":"m.text"},"ts":1198915380000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"actually 85% for 3.04, 88% for TOT","msgtype":"m.text"},"ts":1198915500000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: soooo much easier to debug, btw.  thanks.","msgtype":"m.text"},"ts":1198915560000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"I think MacDome doesn't realize that the test will not seem legit if WebKit passes out of the box","msgtype":"m.text"},"ts":1198917960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i'm far more interested in seeing compliant browsers than in having my life be easy in making the test seem legit","msgtype":"m.text"},"ts":1198918140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, but if he keeps fixing bugs, you'll have to keep adding tests","msgtype":"m.text"},"ts":1198918200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that is a problem i welcome with open arms","msgtype":"m.text"},"ts":1198918201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I mean, not that I'm against people fixing more bugs","msgtype":"m.text"},"ts":1198918202000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: you could test that XHTML docs implement HTMLDocument and check that document.body and stuff works","msgtype":"m.text"},"ts":1198919160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is there a way to do that purely from DOM?","msgtype":"m.text"},"ts":1198919161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i'm trying to avoid external files)","msgtype":"m.text"},"ts":1198919220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm not sure if it is possible with 2004 specs. with HTML 5 it should be. :-)","msgtype":"m.text"},"ts":1198919340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: unless there's a spec for DOMParser","msgtype":"m.text"},"ts":1198919341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"testing html5 in an acid test will be for acid4, maybe :-)","msgtype":"m.text"},"ts":1198919400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which I doubt","msgtype":"m.text"},"ts":1198919401000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"there's dom3 load and save, but i'm pretending that doesn't exist","msgtype":"m.text"},"ts":1198919402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(I doubt DOMParser has a spec that is)","msgtype":"m.text"},"ts":1198919403000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: anyway, document.body would be a test that'd help acid3 look legitimate by WebKit not passing :-)","msgtype":"m.text"},"ts":1198919460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in XHTML that is","msgtype":"m.text"},"ts":1198919461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1198919462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i could createDocument() an XHTML doc","msgtype":"m.text"},"ts":1198919520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: XHTML documents implementing HTMLDocument is not required by any spec but HTML5 afaik","msgtype":"m.text"},"ts":1198919880000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and dom2 html","msgtype":"m.text"},"ts":1198919881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I thought it was allowed but not required by dom2 html","msgtype":"m.text"},"ts":1198919882000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"checks his references","msgtype":"m.emote"},"ts":1198919883000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's required as much as HTMLDocument is required for text/html, as far as i can tell","msgtype":"m.text"},"ts":1198919940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of course back in those days specs were so vague...","msgtype":"m.text"},"ts":1198919941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, it seems to be required for XHTML 1.0 as much as for HTML 4.01, which is to say, not very clearly required at all","msgtype":"m.text"},"ts":1198920000000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wow, so many statements in DOM 2 HTML are just outright factually false","msgtype":"m.text"},"ts":1198920001000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"do paste them here","msgtype":"m.text"},"ts":1198920002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"In many cases, these enhancements are not applicable to a general DOM because they rely on the presence of a predefined DTD.\"","msgtype":"m.text"},"ts":1198920060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://www.digg.com/software/Ian_Hickson_s_having_a_bit_of_trouble_writing_ACID3 :P","msgtype":"m.text"},"ts":1198920061000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"Hixie: I do know of one DOM Level 1 Core thing that I think every browser gets wrong per spec (but which probably can't be fixed)","msgtype":"m.text"},"ts":1198920120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah i'm avoiding those","msgtype":"m.text"},"ts":1198920121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and yeah, the DTD stuff is funny","msgtype":"m.text"},"ts":1198920180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"elt.getAttribute(\"nonexistentAttribute\") is supposed to return empty string instead of null","msgtype":"m.text"},"ts":1198920181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"back in those days people believed it","msgtype":"m.text"},"ts":1198920182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"DTDs have the questionable honor of being the second most misunderstood part of XML right after namespaces","msgtype":"m.text"},"ts":1198920183000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"out of the official w3c DOM tests, WebKit fails 6 of the DOM1 Core ones, 1 of the DOM2 Core, 1 of the DOM2 Events, and 5 of the DOM2 HTML","msgtype":"m.text"},"ts":1198920420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(in some cases a few more than that in xhtml instead of html, not sure why)","msgtype":"m.text"},"ts":1198920421000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: is there a summary of those failures somewhere?","msgtype":"m.text"},"ts":1198920540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. bugzilla query?","msgtype":"m.text"},"ts":1198920541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not in bugzilla","msgtype":"m.text"},"ts":1198920600000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if you have a WebKit tree checked out, WebKitTools/Scripts/check-dom-results gives counts of tests that appear to succeed, and you can search for \"fail\" in .txt files in LayoutTests/dom/* to find which specific tests fail","msgtype":"m.text"},"ts":1198920660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"a lot of the DOM3 Core ones fail due to unimplemented useless features","msgtype":"m.text"},"ts":1198920661000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i do not have a checkout right now","msgtype":"m.text"},"ts":1198920662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"most of the others are deliberate failures for web compatibility I think","msgtype":"m.text"},"ts":1198920663000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1198920664000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but not sure","msgtype":"m.text"},"ts":1198920665000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I looked at the DOM 1 Core failures","msgtype":"m.text"},"ts":1198920666000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"3 are because we allow implicit adoption when inserting a node from another document","msgtype":"m.text"},"ts":1198920720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which we added because Gecko allowed it and some sites started to depend on it","msgtype":"m.text"},"ts":1198920721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(or maybe it was intranet \"enterprise\" products w/ a web interface)","msgtype":"m.text"},"ts":1198920722000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"one is due to returning null for getAttribute of a nonexistent attribute","msgtype":"m.text"},"ts":1198920780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah we should just allow that","msgtype":"m.text"},"ts":1198920781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't understand why implicit adoption wasn't allowed","msgtype":"m.text"},"ts":1198920782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and getAttribute's null thing needs fixing","msgtype":"m.text"},"ts":1198920783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in the spec","msgtype":"m.text"},"ts":1198920784000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, yes it does","msgtype":"m.text"},"ts":1198920785000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Web DOM Core 4","msgtype":"m.text"},"ts":1198920840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"asking for that to be fixed was one of my first unpleasant experiences with the w3c","msgtype":"m.text"},"ts":1198920841000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or 5 i guess :-)","msgtype":"m.text"},"ts":1198920842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"many years ago","msgtype":"m.text"},"ts":1198920843000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh?","msgtype":"m.text"},"ts":1198920844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me see if I can find the thread in the archives","msgtype":"m.text"},"ts":1198920845000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ah, the two other failures are also due to not throwing WRONG_DOCUMENT_ERR","msgtype":"m.text"},"ts":1198920900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so 5 failures for allowing implicit adoption, one for returning null from getAttribute","msgtype":"m.text"},"ts":1198920901000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I can tell you that last time I tested, every other browser failed a lot more of these","msgtype":"m.text"},"ts":1198920902000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"even the DOM1 Core tests","msgtype":"m.text"},"ts":1198920903000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think the DOM2EV test we fail is due to dispatching events in both capture and bubble phases to the target node","msgtype":"m.text"},"ts":1198920960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(technically they should only bubble, but that causes web compat issues due to Gecko's longstanding behavior in this regard)","msgtype":"m.text"},"ts":1198920961000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, i'm not testing that one either","msgtype":"m.text"},"ts":1198921020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not testing anything that we want to change","msgtype":"m.text"},"ts":1198921021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-dom/2005OctDec/0024.html","msgtype":"m.text"},"ts":1198921080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-dom/2005OctDec/0025.html","msgtype":"m.text"},"ts":1198921081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"both had floods of angry responses","msgtype":"m.text"},"ts":1198921082000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"here's another interesting message from around the same time: http://lists.w3.org/Archives/Public/www-dom/2005OctDec/0076.html","msgtype":"m.text"},"ts":1198921140000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(incompatibility between DOM 2 Core and DOM 3 Core)","msgtype":"m.text"},"ts":1198921141000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(on a minor extremely boring edge case issue though)","msgtype":"m.text"},"ts":1198921200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hey, proof that I'm stubbornly consistent in my beliefs: http://lists.w3.org/Archives/Public/www-dom/2005OctDec/0047.html","msgtype":"m.text"},"ts":1198921560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"proof that i am: http://lists.w3.org/Archives/Public/www-html/1998Dec/0003.html","msgtype":"m.text"},"ts":1198921920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh, i found that html4 had no real conformance criteria back in 1999: http://lists.w3.org/Archives/Public/www-html/1999Feb/0010.html","msgtype":"m.text"},"ts":1198922220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1198922340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well, we have higher standards now","msgtype":"m.text"},"ts":1198922341000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's sad that from 1998 to 2004 we basically made no progress","msgtype":"m.text"},"ts":1198922400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm glad we have finally shaken ourselves free of the old guard","msgtype":"m.text"},"ts":1198922401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, some of that was the state of affairs in the browser market during that period","msgtype":"m.text"},"ts":1198922402000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i need more tests","msgtype":"m.text"},"ts":1198923780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me know if you come up with any","msgtype":"m.text"},"ts":1198923781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bed time now","msgtype":"m.text"},"ts":1198923782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.natural-innovations.com/wa/xhtml.html - hmm, XHTML was sometimes referred to as HTML 5.0?","msgtype":"m.text"},"ts":1198935720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: http://groups.google.com/group/mail.www-html/browse_thread/thread/140306dc90e21ce3/a0bef1d6fde4d332?lnk=st&q=voyager+w3c+%22html+5.0%22#a0bef1d6fde4d332 perhaps","msgtype":"m.text"},"ts":1198935960000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: Ah, thanks","msgtype":"m.text"},"ts":1198936620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.w3.org/TR/1998/WD-html-in-xml-19981205/ talks about Voyager, but I can't find any 'official' references to an HTML 5.0 so I guess that term just fell out of favour before catching on","msgtype":"m.text"},"ts":1198936680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://intertwingly.net/blog/?q=%00 - yay for XML","msgtype":"m.text"},"ts":1198966860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Also http://golem.ph.utexas.edu/instiki/search?query=%00 etc)","msgtype":"m.text"},"ts":1198967100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Also http://golem.ph.utexas.edu/instiki/save/HomePage etc)","msgtype":"m.text"},"ts":1198967160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Are there any non-trivial dynamically-generated XHTML sites that successfully ensure well-formedness?","msgtype":"m.text"},"ts":1198967161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Validator.nu used to be a dynamically-generated app (even if not site) that ensured well-formedness, but now it may have holes like that--I have not tested properly for forbidden characters after I did some major rework in the front end","msgtype":"m.text"},"ts":1198967520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"bullet-proofing it against \\0, etc. is one of the many items I should take care of","msgtype":"m.text"},"ts":1198967580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"actually, I could find out right now","msgtype":"m.text"},"ts":1198967640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yep, Validator.nu is broken after the major rework :-(","msgtype":"m.text"},"ts":1198967700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"my options are:","msgtype":"m.text"},"ts":1198967701000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"1) Hacking the Xalan serializer (hard)","msgtype":"m.text"},"ts":1198967702000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"2) Writing a SAX filter (easy but potentially inefficient)","msgtype":"m.text"},"ts":1198967703000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and ","msgtype":"m.text"},"ts":1198967704000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"3) Writing my own XML serializer (tedious with namespaces)","msgtype":"m.text"},"ts":1198967760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. and 4) filtering in a Writer after the serializer","msgtype":"m.text"},"ts":1198967880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Those all sound like great fun","msgtype":"m.text"},"ts":1198967940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oy all","msgtype":"m.text"},"ts":1198972140000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"are there any test cases for cross-document messaging?","msgtype":"m.text"},"ts":1198972141000,"senderName":"G0k","senderId":"G0k@irc"}
]