[
{"content":{"body":"annevk: Would appreciate any thoughts on https://github.com/whatwg/html/issues/5236#issuecomment-591409073","msgtype":"m.text"},"ts":1582721347000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yeah that seems fine, since the intersection will happen in the render loop anyway","msgtype":"m.text"},"ts":1582722044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: at the \"update the rendering\" point that is","msgtype":"m.text"},"ts":1582722054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: and you don't want to force that to happen","msgtype":"m.text"},"ts":1582722061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep cool thanks","msgtype":"m.text"},"ts":1582722065000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: so yeah, this seems very reasonable and maybe even mandated ðŸ™‚","msgtype":"m.text"},"ts":1582722078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: hey I've been looking a bit at the Encoding visualization stuff","msgtype":"m.text"},"ts":1582722103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, basically in Chrome it can't be done reliably without forcing layout which is terrible to do at that time, so I figured this was probably not just a chrome thing, and would also make the spec simpler","msgtype":"m.text"},"ts":1582722133000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yup","msgtype":"m.text"},"ts":1582722208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I'm not sure I fully understand the patch","msgtype":"m.text"},"ts":1582722222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Unfortunately this brings to light that in-viewport loading=lazy experience a slight load delay comparing to in-viewport loading=eager, but yeah, no way to avoid that I guess","msgtype":"m.text"},"ts":1582722281000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"hsivonen: never mind, I see now","msgtype":"m.text"},"ts":1582722669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: browsers could speculatively load (some) lazy images to avoid delays (e.g. for pages that just apply loading=lazy on all images), right?","msgtype":"m.text"},"ts":1582723792000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Chrome is experimenting with doing this on Data Saver mode (where `loading` default is `lazy`), but I guess it technically violates the spec. Could be used to provide good data that we could safely change the spec default in the future without breaking the world tho","msgtype":"m.text"},"ts":1582723999000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"http://crbug.com/996963","msgtype":"m.text"},"ts":1582724002000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: all speculative loads are technically violating the spec, but as long as it's a \"background\" fetch and doesn't change how the \"real\" load happens, I think it should be fine","msgtype":"m.text"},"ts":1582724185000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Ah yeah that's right, I forgot that basically the \"preload\" scanner is essentially doing that. Good call","msgtype":"m.text"},"ts":1582724225000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"hsivonen: it's very hard to resist improving visualize.py","msgtype":"m.text"},"ts":1582724963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: ended up reading about some proposal to have an https://en.wikipedia.org/wiki/Control_Pictures equivalent for C1","msgtype":"m.text"},"ts":1582725056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's the correct terminology for associated \"fields\" to a webIDL interface?","msgtype":"m.text"},"ts":1582733819000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: members ((static) attributes / methods)","msgtype":"m.text"},"ts":1582733867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I meant the spec-level associated variables.","msgtype":"m.text"},"ts":1582733900000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: oh, there's an IDL issue on formalizing them as internal slots","msgtype":"m.text"},"ts":1582733920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"andreubotella: hasn't happened yet","msgtype":"m.text"},"ts":1582733925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see","msgtype":"m.text"},"ts":1582733945000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"annevk: does \"associated slot\" work as a temporary reference?","msgtype":"m.text"},"ts":1582733980000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: it's often surprising how much basic infrastructure is lacking","msgtype":"m.text"},"ts":1582733986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm working on a PR to encoding#176, and a note talks about \"not unsetting that flag\", which happens to be an associated slot.","msgtype":"m.text"},"ts":1582734011000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I'd change that to \"variable\", but it's not one.","msgtype":"m.text"},"ts":1582734021000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: X has an associated Y or X has an internal slot [[Y]] is the convention","msgtype":"m.text"},"ts":1582734023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right. thanks so much","msgtype":"m.text"},"ts":1582734055000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: for Encoding I'd follow established precedent there","msgtype":"m.text"},"ts":1582734070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"andreubotella: Call them \"internal slots\", mark them up as <dfn attribute>\\[[foo]]</dfn>, and link to them as {{[[foo]]}}.","msgtype":"m.text"},"ts":1582736955000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: That's more for Javascript-y internal slots, right? I was talking about values associated to webIDL interfaces.","msgtype":"m.text"},"ts":1582737431000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Though I'm only treating them as separate concepts because I see streams#963 doing it.","msgtype":"m.text"},"ts":1582737484000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: the idea is to converge","msgtype":"m.text"},"ts":1582737491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'","msgtype":"m.text"},"ts":1582737512000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"But local precedent still matters more for now","msgtype":"m.text"},"ts":1582737515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1582737523000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I've been watching that issue for a while, because I'd like to read the streams spec but I don't take long to give up.","msgtype":"m.text"},"ts":1582737560000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"There's no real distinction between those two concepts of \"slots\", I think?","msgtype":"m.text"},"ts":1582737748000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"from that issue, it seems like one is more WebIDL-ey and the other more Javascript-y","msgtype":"m.text"},"ts":1582737844000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"No, that issue also calls it out as stylistic and not worth worrying too much over","msgtype":"m.text"},"ts":1582737851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's fair","msgtype":"m.text"},"ts":1582737861000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"And that remark is from quite a while ago too","msgtype":"m.text"},"ts":1582737870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Definitely see new IDL stuff starting out with slots these days now and then","msgtype":"m.text"},"ts":1582737941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I consume a lot of web specs as a web dev, but I'm barely getting started into working on the specs, so I might've missed stuff","msgtype":"m.text"},"ts":1582738088000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I wish I had not brought the baroque [[slot]] notation to the web specs world and just stuck with \"associated foo\" everywhere :(","msgtype":"m.text"},"ts":1582744209000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hello, what kind of support is available on this channel?","msgtype":"m.text"},"ts":1582755248000,"senderName":"gendarme","senderId":"gendarme@irc"},
{"content":{"body":"I am looking for what attributes are necessary for creating a \"title page\" in html","msgtype":"m.text"},"ts":1582755283000,"senderName":"gendarme","senderId":"gendarme@irc"},
{"content":{"body":"gendarme: this channel is more about web standards, not so much web dev. maybe try #html5 or stackoverflow.com","msgtype":"m.text"},"ts":1582756565000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok, thanks zcorpan","msgtype":"m.text"},"ts":1582756630000,"senderName":"gendarme","senderId":"gendarme@irc"}
]