[
{"content":{"body":"annevk, how do we feel about resolving promises with things that aren't js/idl values?","msgtype":"m.text"},"ts":1566295637000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Because https://w3c.github.io/ServiceWorker/#dom-cache-addall uses responses (not Response objects)","msgtype":"m.text"},"ts":1566295654000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Does any WebIDL interface realistically use non-ASCII default string values?","msgtype":"m.text"},"ts":1566296071000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, I assume not","msgtype":"m.text"},"ts":1566296415000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: OK. Thanks","msgtype":"m.text"},"ts":1566296861000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"right now, I'm not a fan of TextEncoder.encode having a default value for the string argument","msgtype":"m.text"},"ts":1566296883000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"How do [TreatNullAs=EmptyString] DOMString foo and optional DOMString foo = \"\" differ? for undefined?","msgtype":"m.text"},"ts":1566297091000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah, absent and null are different","msgtype":"m.text"},"ts":1566297312000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I take it that the default value on TextEncoder.encode() is a leftover from the time when it did streaming to ISO-2022-JP","msgtype":"m.text"},"ts":1566297361000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"right now it doesn't have a use case","msgtype":"m.text"},"ts":1566297369000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: seems like a bug","msgtype":"m.text"},"ts":1566299100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: what would you prefer, that it throws if no argument is passed?","msgtype":"m.text"},"ts":1566299218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I think it's mainly for parity with decode(), where the input argument is also optional","msgtype":"m.text"},"ts":1566299271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: and giving optional arguments a default value can simplify the description of the method","msgtype":"m.text"},"ts":1566299291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: throwing would have been nice, but by now I've implemented default values for new WebIDL type, so nevermind","msgtype":"m.text"},"ts":1566299327000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: so for decode() we did not throw so you could signal EOF, but for encode that use case does not make sense, but as you still have to handle encode(\"\") might as well treat not passing the argument as that","msgtype":"m.text"},"ts":1566299393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: aah, I now get why this was annoying ðŸ˜ƒ","msgtype":"m.text"},"ts":1566299410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Do I understand correctly that the only way to introduce non-Latin1 into the Document.contentType is via XSLT?","msgtype":"m.text"},"ts":1566301638000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: contentType or characterSet?","msgtype":"m.text"},"ts":1566301966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: contentType","msgtype":"m.text"},"ts":1566301995000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Anyway, either way I guess I don't know","msgtype":"m.text"},"ts":1566301999000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there's no way to introduce non-ASCII to characterSet","msgtype":"m.text"},"ts":1566302009000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"can URL, documentURI, and referrer actually return non-ASCII (i.e. stuff that hasn't been percent-encoded and Punycoded)?","msgtype":"m.text"},"ts":1566302082000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: not in theory","msgtype":"m.text"},"ts":1566302111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: but implementations might be at various stages","msgtype":"m.text"},"ts":1566302121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: same for origin","msgtype":"m.text"},"ts":1566302126000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK. Thanks","msgtype":"m.text"},"ts":1566302128000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: XSLT being able to set arbitrary contentType also seems somewhat problematic","msgtype":"m.text"},"ts":1566302153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1566302164000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"XSLT [...] seems somewhat problematic","msgtype":"m.text"},"ts":1566304583000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"X.* [...] seems somewhat problematic","msgtype":"m.text"},"ts":1566305263000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger++ very exciting to see progress on defining platform promises","msgtype":"m.text"},"ts":1566316036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Agreed, really looking forward to reviewing that. Today has a lot of meetings, so no promises, but I'd like to.","msgtype":"m.text"},"ts":1566317039000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"> no promises","msgtype":"m.text"},"ts":1566317157000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"grins","msgtype":"m.emote"},"ts":1566317159000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"}
]