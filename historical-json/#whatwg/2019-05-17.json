[
{"content":{"body":"  - RESOLVED: Add a new url function that accepts only <string>, name tbd (Issue #451: Add url() alias that does not accept unquoted URLs)","msgtype":"m.text"},"ts":1558082324000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm pretty sure they thought they had already resolved this","msgtype":"m.text"},"ts":1558082447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whispers something about tests, reviewed PRs, and implementer signoff","msgtype":"m.emote"},"ts":1558082479000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: any idea why https://pthatcherg.github.io/web-transport/ invents new stream types?","msgtype":"m.text"},"ts":1558083129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not really sure... I think they have the feedback that it's bad and won't get far, but I haven't seen much movement on the spec level.","msgtype":"m.text"},"ts":1558098589000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1558098684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hello everyone","msgtype":"m.text"},"ts":1558134873000,"senderName":"hyspace","senderId":"hyspace@irc"},
{"content":{"body":"I have a question about html tokenization","msgtype":"m.text"},"ts":1558134895000,"senderName":"hyspace","senderId":"hyspace@irc"},
{"content":{"body":"In https://html.spec.whatwg.org/multipage/parsing.html#decimal-character-reference-state, we need to Multiply the character reference code by 10. Add a numeric version of the current input character (subtract 0x0030 from the character's code point) to the character reference code.","msgtype":"m.text"},"ts":1558134969000,"senderName":"hyspace","senderId":"hyspace@irc"},
{"content":{"body":"The spec did not say what if the range is beyond range of int32","msgtype":"m.text"},"ts":1558135015000,"senderName":"hyspace","senderId":"hyspace@irc"},
{"content":{"body":"if we keep multiply, it is possible that the character reference code will go back to Unicode range","msgtype":"m.text"},"ts":1558135068000,"senderName":"hyspace","senderId":"hyspace@irc"},
{"content":{"body":"For example, if we use Int32 type for character reference code, we can craft a input as &#x1000000050; which will beyond the range of Int32 and goback to Unicode range and become 'P' character","msgtype":"m.text"},"ts":1558135206000,"senderName":"hyspace","senderId":"hyspace@irc"},
{"content":{"body":"hyspace: I haven't looked at this particular instance, but in general the spec operates on mathematical numbers, so there's no wrapping.","msgtype":"m.text"},"ts":1558136760000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Thus you end up in the \"If the number is greater than 0x10FFFF\" state","msgtype":"m.text"},"ts":1558136848000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: In https://html.spec.whatwg.org/multipage/parsing.html#hexadecimal-character-reference-state chapter we do not check range, so when we are in Numeric character reference end state, we will end up using overflowed number","msgtype":"m.text"},"ts":1558136977000,"senderName":"hyspace","senderId":"hyspace@irc"},
{"content":{"body":"hyspace: there is no such thing as an overflowed number, in the spec","msgtype":"m.text"},"ts":1558136995000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I understand you might be implementing this in a language that has finite storage, but the spec does not :)","msgtype":"m.text"},"ts":1558137008000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Thanks","msgtype":"m.text"},"ts":1558137299000,"senderName":"hyspace","senderId":"hyspace@irc"}
]