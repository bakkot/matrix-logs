[
{"content":{"body":"annevk: I left a comment.","msgtype":"m.text"},"ts":1511921511000,"senderName":"yhirano__","senderId":"yhirano__@irc"},
{"content":{"body":"annevk: https://chromium-review.googlesource.com/c/chromium/src/+/792712 is landed, you will see the old behavior on Canary in a couple of days.","msgtype":"m.text"},"ts":1511921550000,"senderName":"yhirano__","senderId":"yhirano__@irc"},
{"content":{"body":"Domenic: what do you think of specification literals such as 'MIME type <text/html;charset=UTF-8>' or 'URL <about:blank>' with the MIME type and URL standards defining that it means to pass the <> contents to the respective parser to get the literal","msgtype":"m.text"},"ts":1511944256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: though maybe I should first find sufficient unique instances","msgtype":"m.text"},"ts":1511944331000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hayato: curious, do you happen to have a list of websites using custom elements (v1) ?","msgtype":"m.text"},"ts":1511945619000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____:  I don't . YouTube still uses custom elements v0.","msgtype":"m.text"},"ts":1511945740000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"yeah, that I know.","msgtype":"m.text"},"ts":1511945754000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think most google sites still use custom elements v0","msgtype":"m.text"},"ts":1511945774000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"it is surprising that youtube moved to use v0","msgtype":"m.text"},"ts":1511945779000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"from non-custom element code","msgtype":"m.text"},"ts":1511945793000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"even though v0 was already deprecated","msgtype":"m.text"},"ts":1511945799000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1511945802000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(or perhaps it has some v0 usage before too)","msgtype":"m.text"},"ts":1511945828000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/has/had/","msgtype":"m.text"},"ts":1511945832000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Most web sites are still using Polymer 1.x, where custom elements v0 is used.","msgtype":"m.text"},"ts":1511945912000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"I think when they started to use Polymer, Polymer 1.x was the latest version.","msgtype":"m.text"},"ts":1511945948000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"is there any plan to improve the story for persistence of arbitrary data structures?","msgtype":"m.text"},"ts":1511953677000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"IndexedDB is nice but it seems in terms of access patterns, you can have any you like as long as it's B-tree","msgtype":"m.text"},"ts":1511953709000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"if you want to make a trie or something and store that persistently ... i guess what i'd like is a way to send an arraybuffer to be stored on disk which would then be mmap'd by the browser, or similar","msgtype":"m.text"},"ts":1511953775000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"maybe IndexedDB already does something like that?","msgtype":"m.text"},"ts":1511953788000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"dpk: you can store an ArrayBuffer in IDB, but probably not done in terms of mmap","msgtype":"m.text"},"ts":1511953989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we've certainly been thinking about some kind of low-level mmap-like storage primitive, in hopes it might let people build their own sqlite etc like stuff on top. Nothing concrete yet though","msgtype":"m.text"},"ts":1511954147000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"just a \"maybe if we do this we can finally get rid of websql\"...","msgtype":"m.text"},"ts":1511954173000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"i must say i'm surprised by how 'high-level' a solution IDB is","msgtype":"m.text"},"ts":1511956523000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"i thought the point of this new 'extensible web' shibboleth was that you give us the mashed potatoes and we have to make our own bookshelves out of that","msgtype":"m.text"},"ts":1511956555000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"dpk: DB stuff is all mirred in politics, unfortunately","msgtype":"m.text"},"ts":1511956604000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, standards is politics, so I'm not sure that helps","msgtype":"m.text"},"ts":1511956781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IDB basically predated the idea to go very low-level and was largely designed as an alternative to WebSQL","msgtype":"m.text"},"ts":1511956835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1511957010000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"WebSQL is still the only API that's seen somewhat favorably, but it's not really standardized to the extent needed","msgtype":"m.text"},"ts":1511957267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And I guess localStorage might be too, by those who don't care about synchronous I/O being bad","msgtype":"m.text"},"ts":1511957298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i assumed localStorage was for stuff that fits in real memory, hence the 5 MB size limit","msgtype":"m.text"},"ts":1511957360000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"dpk: I guess we can retroactively try to explain it that way, but at some point it will still need to be written to and from disk","msgtype":"m.text"},"ts":1511957436000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dpk: that is a reason why it has its own limit though; maybe we should formalize that more in the spec so that nobody tries to actually raise it","msgtype":"m.text"},"ts":1511957471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: started creating your desired MIME type JSON test resource: https://github.com/w3c/web-platform-tests/pull/7764","msgtype":"m.text"},"ts":1511963330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: still need to write wrappers for Request/Response/Blob/File","msgtype":"m.text"},"ts":1511963354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(also done now; many failures)","msgtype":"m.text"},"ts":1511966680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: should \"RespondToSameOriginRequestWithCrossOriginResponse\" show up here even if it its had zero hits?  Or does it missing mean there have been zero uses? https://www.chromestatus.com/metrics/feature/popularity","msgtype":"m.text"},"ts":1511967373000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/mimesniff/issues/7 is interesting because it seems like a case of conflicting constituencies; non-browsers use the mimesniff algorithms too, and sometimes don't have content-types to rely on. Maybe we should state explicitly that mimesniff shouldn't be used for places like go, only for browsers? That seems kind of harsh and against the spirit of other things like URL and MIME type","msgtype":"m.text"},"ts":1511970776000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"parsing though.","msgtype":"m.text"},"ts":1511970776000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I need to think through it again, but if servers sniff I believe they should sniff exactly in the same way as browsers do","msgtype":"m.text"},"ts":1511970832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, but browsers don't always need to sniff","msgtype":"m.text"},"ts":1511970844000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"This also motivates some of the other mimesniff bugs that are open but don't have browser-observable impact, e.g. what a font MIME type is","msgtype":"m.text"},"ts":1511970864000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well browsers have a font code path that sniffs, I don't know if that's helped with a font MIME type though","msgtype":"m.text"},"ts":1511970901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i.e. it doesn't matter to a browser whether it's \tapplication/font-woff or font/woff, just that it should interpret is as a WOFF. But people writing server software might want to sniff files and determine whether to serve them as font/woff","msgtype":"m.text"},"ts":1511970923000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But yeah, I think you're correct that we might have to clarify a few things around scope","msgtype":"m.text"},"ts":1511970925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In other words if we scope only to browsers, all the \"MIME Sniffing\" is actually kind of disingenuous; it's more \"resource type sniffing\" and the actual MIME types don't matter","msgtype":"m.text"},"ts":1511970957000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, it matters a bit for browsers as they might want to expose it as font/woff somewhere","msgtype":"m.text"},"ts":1511970972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g., sniffed images types are exposed through document.contentType","msgtype":"m.text"},"ts":1511971021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"True","msgtype":"m.text"},"ts":1511971029000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So if browsers implemented some kind of font viewer...","msgtype":"m.text"},"ts":1511971038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(If they did I'd hope they make it make cross-origin documents always)","msgtype":"m.text"},"ts":1511971057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: quick yes/no on whatpr.org?","msgtype":"m.text"},"ts":1511971091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I have no opinion one way or the other","msgtype":"m.text"},"ts":1511971101000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1511971169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You'll have to look at such URLs a lot so you better not complain about it later","msgtype":"m.text"},"ts":1511971193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As I said, I'm happy with what we have currently, s3.whateverwhatever, so it's all fine with me :)","msgtype":"m.text"},"ts":1511971270000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I filed a follow-up issue to work out the scope stuff for MIME Sniffing","msgtype":"m.text"},"ts":1511971584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nice","msgtype":"m.text"},"ts":1511971602000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"whatpr.org?","msgtype":"m.text"},"ts":1511974389000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"See misc-server","msgtype":"m.text"},"ts":1511975291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: sorry for the initial agitated response in that test PR; most of your suggestions are great and I should just take my time to get to them","msgtype":"m.text"},"ts":1511977227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No problem, seemed fine to me :)","msgtype":"m.text"},"ts":1511977371000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: do you know if \"async append\" is still being worked on?","msgtype":"m.text"},"ts":1511978283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: there's renewed interest in DOMChangeList et al internally (from the wasm side) and we'll discuss it during the upcoming Mozilla week","msgtype":"m.text"},"ts":1511978357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: would be good to have all the information if there's anything new I might not have seen","msgtype":"m.text"},"ts":1511978371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think Ojan was going to post something about async append/DOMChangeList soon","msgtype":"m.text"},"ts":1511978532000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so the other thing is that I have tested most of the non-ASCII stuff in a more ad-hoc fashion and in the 3 other test PRs","msgtype":"m.text"},"ts":1511978715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the multiple slashes thing I hadn't really studied thus far though","msgtype":"m.text"},"ts":1511978730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: within the next 8 days or would be ideal; seems Ojan no longer hangs out here","msgtype":"m.text"},"ts":1511978816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah I let him know","msgtype":"m.text"},"ts":1511978824000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1511978918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"0/","msgtype":"m.text"},"ts":1511982665000,"senderName":"alsoStevenXL","senderId":"alsoStevenXL@irc"},
{"content":{"body":"Hey folks, what's the best way to pass an object to a custom element? I assume using attributes requires encoding/decoding JSON (unless you override setAttribute?), and the html5 dataset object also seems to cast things to strings. Should I just use a new attribute?","msgtype":"m.text"},"ts":1511986633000,"senderName":"timwis","senderId":"timwis@irc"},
{"content":{"body":"timwis: if it must be declarative, yes","msgtype":"m.text"},"ts":1511988063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: as opposed to what?","msgtype":"m.text"},"ts":1511988351000,"senderName":"timwis","senderId":"timwis@irc"},
{"content":{"body":"timwis: would merely setting a property of the custom element work?","msgtype":"m.text"},"ts":1511988594000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: that's what I meant about using a new attribute; meant to say property","msgtype":"m.text"},"ts":1511988612000,"senderName":"timwis","senderId":"timwis@irc"},
{"content":{"body":"timwis: ah. I think annevk understood it to mean HTML attribute","msgtype":"m.text"},"ts":1511988630000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"that works for now, was wondering if there were any other ways","msgtype":"m.text"},"ts":1511988631000,"senderName":"timwis","senderId":"timwis@irc"},
{"content":{"body":"timwis: Yeah, the standard pattern is to have an attribute and a property that reflects it. (That way you don't have to override get/setAttribute, that's just the standard source of truth, and the property consults the attribute when it's queried.) That means you need something that can be serialized to a string. If you want something that's not serializable, then you have just a property, not an attribute, and it's","msgtype":"m.text"},"ts":1511989462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"only accessible via JS.","msgtype":"m.text"},"ts":1511989462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or a method","msgtype":"m.text"},"ts":1511990034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: isn't there a significant performance hit from serializing and deserializing? for instance, if you want to pass a large array of objects to a custom element instance","msgtype":"m.text"},"ts":1511991114000,"senderName":"timwis","senderId":"timwis@irc"},
{"content":{"body":"That sounds almost certainly like something that you would not put into the markup as an attribute.","msgtype":"m.text"},"ts":1511991177000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: right, but I might pass it via react/vue templates","msgtype":"m.text"},"ts":1511991840000,"senderName":"timwis","senderId":"timwis@irc"},
{"content":{"body":"i guess the onus would be on the framework to set the property rather than attribute","msgtype":"m.text"},"ts":1511991868000,"senderName":"timwis","senderId":"timwis@irc"},
{"content":{"body":"Then you do what you've gotta do, yeah.","msgtype":"m.text"},"ts":1511991873000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: about https://github.com/whatwg/html-build/issues/113 (syntax highlighting for the HTML spec), is that JSON structure otherwise OK as far as what you need?","msgtype":"m.text"},"ts":1511995984000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yup!","msgtype":"m.text"},"ts":1511996005000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1511996010000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I just need to finish separating out the highlighter.","msgtype":"m.text"},"ts":1511996047000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"super, I have 1106 test cases you can use :)","msgtype":"m.text"},"ts":1511996231000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"by the way, you’re handling WebIDL highlighting, so I guess that means you must have wrote a WebIDL parser?","msgtype":"m.text"},"ts":1511996294000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":) https://groups.google.com/a/chromium.org/forum/#!msg/chromium-dev/hlv-fbFW-6o/fnZoRd7IBQAJ 😂","msgtype":"m.text"},"ts":1511996746000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> \"Random amateur\" might be a cool job title for me to change to :).  In point of fact, though, I get paid for this, so I'm more of a random professional.","msgtype":"m.text"},"ts":1511996760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"pkasting++ :)","msgtype":"m.text"},"ts":1511996791000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]