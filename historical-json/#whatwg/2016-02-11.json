[
{"content":{"body":"SimonSapin: try again now","msgtype":"m.text"},"ts":1455151723000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I haz access now","msgtype":"m.text"},"ts":1455151776000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"super","msgtype":"m.text"},"ts":1455151799000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/w3c/test-results looks nice","msgtype":"m.text"},"ts":1455152021000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yeah, thatâ€™s another product of Robin Berjon Labs","msgtype":"m.text"},"ts":1455152893000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the tools behind that","msgtype":"m.text"},"ts":1455152900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So what magic causes events to propagate to the Window object despite document.parentNode==null ?","msgtype":"m.text"},"ts":1455172384000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"cvrebert: https://html.spec.whatwg.org/multipage/webappapis.html#events-and-the-window-object","msgtype":"m.text"},"ts":1455172592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cvrebert: we should probably integrate that section directly into DOM, in some kind of event path computation algorithm which Shadow DOM will modify","msgtype":"m.text"},"ts":1455172634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, that monkeypatch is not easy to locate","msgtype":"m.text"},"ts":1455172668000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"annevk: Thanks","msgtype":"m.text"},"ts":1455172713000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"cvrebert: filed https://github.com/whatwg/dom/issues/165","msgtype":"m.text"},"ts":1455175144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Erm, I filed https://github.com/whatwg/dom/issues/164","msgtype":"m.text"},"ts":1455175169000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"cvrebert: oh, I guess I should have checked","msgtype":"m.text"},"ts":1455175586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cvrebert: your issue seems like a subset so I guess it's fine","msgtype":"m.text"},"ts":1455175606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Assuming the webpage just loaded, given <body><input type=text></body> and a script that does input.focus(), would the old-focus-chain be [<body>, document] and the new-focus-chain be [<input>, document] ?  https://html.spec.whatwg.org/#focus-chain","msgtype":"m.text"},"ts":1455176771000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"isn't sure, still needs to learn focus","msgtype":"m.emote"},"ts":1455177096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone see a flaw in my reading/logic/testcase?: https://gist.github.com/cvrebert/441d88975c39662a2bd2","msgtype":"m.text"},"ts":1455180431000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"cvrebert: I think the confusing thing with your testcase is that you are capturing events","msgtype":"m.text"},"ts":1455181511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cvrebert: it should show up on window due to the capturing listener, but maybe I'm missing something","msgtype":"m.text"},"ts":1455181536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm listening at the window level, but I'm recording the targets. Capture shouldn't change the targets.","msgtype":"m.text"},"ts":1455181600000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"annevk: Same result if capturing isn't used: http://jsbin.com/qoyitu/edit?html,js,output","msgtype":"m.text"},"ts":1455182030000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"cvrebert: hmm, I guess I should actually study what's going on then, almost done with a PR, will look then","msgtype":"m.text"},"ts":1455182663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1455182958000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"Apparently viewing it outside of the editor changes the result. Fun.","msgtype":"m.text"},"ts":1455182987000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"In Chrome/Safari anyway; then they'e just [input], per spec. Firefox doesn't change.","msgtype":"m.text"},"ts":1455183380000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"cvrebert: sounds like a bug in Firefox then","msgtype":"m.text"},"ts":1455184089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cvrebert: are you writing tests or work on implementing this somewhere?","msgtype":"m.text"},"ts":1455184125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Just opened https://github.com/w3c/web-platform-tests/pull/2571","msgtype":"m.text"},"ts":1455184277000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1455184348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Results are less weird with revised testcase: https://gist.github.com/cvrebert/441d88975c39662a2bd2","msgtype":"m.text"},"ts":1455184363000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"where this error is \"Parse Error: (120773,9) unexpected body end tag\" , i mean the line number, other than this build script didn't showed anything and there is no line at 120773","msgtype":"m.text"},"ts":1455192614000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"ritsyy: yeah, there's a bug","msgtype":"m.text"},"ts":1455195743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: https://github.com/whatwg/html-build/issues/83","msgtype":"m.text"},"ts":1455195765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: the way I fixed this for myself was by changing the build script","msgtype":"m.text"},"ts":1455195792000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: by removing \"if [ \"$WATTSI_RESULT\" == \"65\" ]; then\" and the corresponding \"fi\" statement and leaving the lines inbetween alone","msgtype":"m.text"},"ts":1455195838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hopefully MikeSmith and Domenic can look into this","msgtype":"m.text"},"ts":1455195862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh okay, i will also try to fix like this, thanks","msgtype":"m.text"},"ts":1455195966000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"It's not great, but it does the job until someone sorts this out","msgtype":"m.text"},"ts":1455196141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i had to do some changes in the PR and then when i ran the script it parsed so i didn't get to correct the script, but for future will keep in mind","msgtype":"m.text"},"ts":1455196865000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"annevk: oops. do you think it's better to also set event type back to the original here https://github.com/whatwg/dom/pull/158#discussion-diff-52565536R1217 (in addition to the last step in the invoke algo), or go for the fancy column flipping?","msgtype":"m.text"},"ts":1455205100000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: only there is not enough","msgtype":"m.text"},"ts":1455205217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"miketaylr: if you look at https://dom.spec.whatwg.org/#concept-event-listener-invoke everywhere it says \"terminate these substeps\" is affected","msgtype":"m.text"},"ts":1455205250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ahh","msgtype":"m.text"},"ts":1455205276000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"tries to think it through again","msgtype":"m.emote"},"ts":1455205288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i guess it seems goofy to add \"and set the event type back, etc.\" to each of those steps","msgtype":"m.text"},"ts":1455205329000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"we could and we could abstract that further, but then we'll always have to think about it","msgtype":"m.text"},"ts":1455205402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ideally there's something a little nicer","msgtype":"m.text"},"ts":1455205407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"miketaylr: I guess the flip thing doesn't really work since we want to test for the non-prefixed version first, always, right?","msgtype":"m.text"},"ts":1455205466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1455205471000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"we'd have to flip back too","msgtype":"m.text"},"ts":1455205477000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"is it too magical to define \"terminate the invoke substeps\" which always resets type?","msgtype":"m.text"},"ts":1455205499000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"and if you're actually dispatching a synthetic webkitXXX event, then we shouldn't flip?","msgtype":"m.text"},"ts":1455205543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this is such a hack","msgtype":"m.text"},"ts":1455205568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1455205571000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"actually, let me go look at gecko and blink again","msgtype":"m.text"},"ts":1455205578000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"i dont know if listeners on a node are \"sorted\"","msgtype":"m.text"},"ts":1455205609000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"or if it's possible to have \"unprefixed, prefixed, unprefixed\"","msgtype":"m.text"},"ts":1455205621000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"(maybe that's already defined...)","msgtype":"m.text"},"ts":1455205627000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"because if they're sorted, once you got to webkitFoo you wouldn't need to flip back","msgtype":"m.text"},"ts":1455205646000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"(right?)","msgtype":"m.text"},"ts":1455205653000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"What about the next node though?","msgtype":"m.text"},"ts":1455205721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"addEventListener as defined just appends tho","msgtype":"m.text"},"ts":1455205723000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"i guess you would have to match again for the next node, so yeah","msgtype":"m.text"},"ts":1455205758000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: is there a flag on the event so we know whether it participates in this hack","msgtype":"m.text"},"ts":1455205857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: isnt invoke just concerned with a single node though?","msgtype":"m.text"},"ts":1455205865000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"dispatch traverses nodes and calls invoke on them?","msgtype":"m.text"},"ts":1455205883000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: or is it basically any event that starts out with a name in the left most column of the table?","msgtype":"m.text"},"ts":1455205889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looking","msgtype":"m.text"},"ts":1455205898000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: yes, but you mutate the event object so it affects everything","msgtype":"m.text"},"ts":1455205904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1455205914000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: we could maybe create an \"previous type\" slot on the event object itself and store the other value there","msgtype":"m.text"},"ts":1455206024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks like gecko uses a usingLegacyMessage flag: https://mxr.mozilla.org/mozilla-central/source/dom/events/EventListenerManager.cpp#1286 (in EventListenerManager::HandleEventInternal)","msgtype":"m.text"},"ts":1455206029000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: and then at the beginning of invoke, if that slot is non-empty, set event's type to previous type and clear previous type","msgtype":"m.text"},"ts":1455206057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so that you always start invoke with the normal name","msgtype":"m.text"},"ts":1455206096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and then once you get to the table, you can always look in the leftmost column","msgtype":"m.text"},"ts":1455206108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if anyone tried just not changing .type","msgtype":"m.text"},"ts":1455206117000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"which also means that a synthetic webkitAnimationevent never hits the table","msgtype":"m.text"},"ts":1455206122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: do you know what chrome does if you have an old entry in Cache API, then match it for a recent request, but the cert associated with the response has expired between caching it and responding with it in the service worker?","msgtype":"m.text"},"ts":1455206384000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: does chrome fail the request for an out-of-date cert?","msgtype":"m.text"},"ts":1455206402000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"miketaylr: another bug seems to be is that Gecko first loops through all listeners and only afterwards goes through them again with a new type","msgtype":"m.text"},"ts":1455206408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"miketaylr: so you want to structure this differently basically","msgtype":"m.text"},"ts":1455206428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"miketaylr: basically \"For each listener in listeners,\" needs to run twice in case the first time around nothing got called, is my impression from reading that code","msgtype":"m.text"},"ts":1455206472000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"miketaylr: the second time with the new event type","msgtype":"m.text"},"ts":1455206483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"legacy event type*","msgtype":"m.text"},"ts":1455206488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, looking at what blink does now","msgtype":"m.text"},"ts":1455206499000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"(https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/core/events/EventTarget.cpp&sq=package:chromium&l=351&dr=C&rcl=1452688339)","msgtype":"m.text"},"ts":1455206518000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"seems like it does: find all the unprefixed listeners, and if there are any, fire those. if there weren't any, see if the prefixed legacyListenersVector is non-empty and fire those","msgtype":"m.text"},"ts":1455206695000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"ok, thanks for helping me think through this annevk","msgtype":"m.text"},"ts":1455206926000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"will work on revisions later today or tomorrow, time to \"work\"","msgtype":"m.text"},"ts":1455206959000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: I also realized that \"If eventâ€™s stop immediate propagation flag is set, terminate the invoke algorithm.\" should be step 1 in invoke, I'll fix that now","msgtype":"m.text"},"ts":1455206971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1455206983000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr, if you wanna \"work\", writing tests is work ;)","msgtype":"m.text"},"ts":1455207107000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah, it's on my TODO list tooooo","msgtype":"m.text"},"ts":1455207146000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"burning conscience","msgtype":"m.emote"},"ts":1455207158000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr, best way to make sure your research doesn't go to waste in five uninteroperable implementations :)","msgtype":"m.text"},"ts":1455207233000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1455207246000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"wanderview: I *think* so, but don't know for sure. We certainly fail self-signed cert responses","msgtype":"m.text"},"ts":1455209271000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: doesn't that create a problem where the main page index.html starts perma-failing after a certain date?","msgtype":"m.text"},"ts":1455209816000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: until a new service worker script is published to trigger an update","msgtype":"m.text"},"ts":1455209832000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ohhhhhh, I understand the question now","msgtype":"m.text"},"ts":1455210632000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: yeah, it should only fail at fetch() time, not at cache.match time","msgtype":"m.text"},"ts":1455210678000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, I'm more concerned about if failing in the evt.respondWith() processing","msgtype":"m.text"},"ts":1455210699000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: agreed, trying to find where certs are handled in the fetch spec","msgtype":"m.text"},"ts":1455210783000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't think they are really... in some ways they are handled at the TLS transport layer","msgtype":"m.text"},"ts":1455210807000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: if that only happens during network interaction, the spec is fine as it is","msgtype":"m.text"},"ts":1455210841000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sure... I guess I was more asking about chrome impl.. for example some people are surprised we don't re-validate cert coming out of http cache","msgtype":"m.text"},"ts":1455210865000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm, which uri is used for referrer","msgtype":"m.text"},"ts":1455226741000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"per spec","msgtype":"m.text"},"ts":1455226746000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, if does take pushState into account","msgtype":"m.text"},"ts":1455226953000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"surprising","msgtype":"m.text"},"ts":1455226958000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or not","msgtype":"m.text"},"ts":1455226964000,"senderName":"smaug____","senderId":"smaug____@irc"}
]