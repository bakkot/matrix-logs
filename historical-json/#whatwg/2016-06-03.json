[
{"content":{"body":"TabAtkins: it'd be great if LINK ERROR came with a line number","msgtype":"m.text"},"ts":1464934101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gives up on public-webapps","msgtype":"m.emote"},"ts":1464944776000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I was thinking the same","msgtype":"m.text"},"ts":1464947133000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Apparently I had already given up on it, but looking at the thread titles, I guess I have an inkling of why there might be a mass exodus","msgtype":"m.text"},"ts":1464947210000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders if there will be real world use for es symbols","msgtype":"m.emote"},"ts":1464948162000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Should a placeholder disappear the moment its input is focused?","msgtype":"m.text"},"ts":1464954728000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: up to UX","msgtype":"m.text"},"ts":1464954998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No recommandation at all?","msgtype":"m.text"},"ts":1464955021000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Ain't that inconsistent with the spec for :placeholder-shown?","msgtype":"m.text"},"ts":1464955066000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Hmm don't think so","msgtype":"m.text"},"ts":1464955094000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Err no, can't read.","msgtype":"m.text"},"ts":1464955121000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"The spec for placeholder says \"User agents should present this hint to the user, after having stripped line breaks from it, when the element's value is the empty string, especially if the control is not focused.\", so yeah.","msgtype":"m.text"},"ts":1464955130000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"+1 to Ms2ger","msgtype":"m.emote"},"ts":1464961996000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"What's wrong with public-webapps.","msgtype":"m.text"},"ts":1464962704000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"?*","msgtype":"m.text"},"ts":1464962706000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"signal/noise","msgtype":"m.text"},"ts":1464963595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"astearns: ðŸ˜Š","msgtype":"m.text"},"ts":1464963614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What's the TL;DR for 'is' in createElement()?","msgtype":"m.text"},"ts":1464963874000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: probably like the \"is\" attribute, which afaik is necessary to avoid custom elements in tables from being orphaned (or similar things like that)?","msgtype":"m.text"},"ts":1464964194000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1464964205000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox, `is` is custom elements","msgtype":"m.text"},"ts":1464965106000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Should I close the Servo issue?","msgtype":"m.text"},"ts":1464965123000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I just did :)","msgtype":"m.text"},"ts":1464965195000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Thanks.","msgtype":"m.text"},"ts":1464965222000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"its too bad nobody wants to break the web to get rid of that orphaning crap entirely, since it's terrible ._.","msgtype":"m.text"},"ts":1464969638000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"JakeA: your SW modules issue reminded me of this... do you think its a problem? https://github.com/slightlyoff/ServiceWorker/issues/894","msgtype":"m.text"},"ts":1464970593000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ah, yes, good spot","msgtype":"m.text"},"ts":1464970718000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: It'd be great if *all* the errors came with line numbers. Haven't been able to crack that nut so far; it's apparently a well-known problem that lxml drops its line numbers.","msgtype":"m.text"},"ts":1464974126000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I only get a line number for the <html> element; all the rest have None.)","msgtype":"m.text"},"ts":1464974138000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"At this point I'm *this* close to just regex-parsing for opening tags in the original HTML and adding a line-number attribute manually.  On the upside, that would avoid me having to coordinate tons of \"corrections\" as I do various text-munging (mostly Markdown processing) before the HTML parser runs.","msgtype":"m.text"},"ts":1464974833000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Fuck it, I'm gonna do that (behind a command-line flag, so if it fucks anything up you can just not use it).","msgtype":"m.text"},"ts":1464975293000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: lxml sounds sad","msgtype":"m.text"},"ts":1464977762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It is and I hate it","msgtype":"m.text"},"ts":1464977769000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But it offers the only half-decent tree api that's html5lib-compatible and CSSParser-compatible.","msgtype":"m.text"},"ts":1464977802000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So I just soldier on, and reinvent most of DOM on top of it so I have a sane API to work with.","msgtype":"m.text"},"ts":1464977822000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: still around? Someone is asking in https://bugzilla.mozilla.org/show_bug.cgi?id=289714 if an empty response labelled as XML should fire xhr.onerror ..","msgtype":"m.text"},"ts":1464984245000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I'm not sure but I guess I should RTFS (\"read the fantastic spec\" ;))","msgtype":"m.text"},"ts":1464984284000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: not sure","msgtype":"m.text"},"ts":1464985177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: don't think so","msgtype":"m.text"},"ts":1464985196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I've just written a comment, hope it makes enough sense","msgtype":"m.text"},"ts":1464985204000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: broken XML does not fire it either","msgtype":"m.text"},"ts":1464985223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Indeed, that's what I figured out","msgtype":"m.text"},"ts":1464985260000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: looks good, don't think we want to change DOMParser at this point either","msgtype":"m.text"},"ts":1464985331000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: pretty sure web depends on parseerror element and is part of spec","msgtype":"m.text"},"ts":1464985360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"really? which spec?","msgtype":"m.text"},"ts":1464985382000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"imho parsererror elements are just weird","msgtype":"m.text"},"ts":1464985415000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":":-p","msgtype":"m.text"},"ts":1464985418000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"and should die :-]","msgtype":"m.text"},"ts":1464985455000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: DOM Parsing","msgtype":"m.text"},"ts":1464986039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you killed everything weird that should die about the web, there might not be much of a web left","msgtype":"m.text"},"ts":1464986239000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: lol","msgtype":"m.text"},"ts":1464986758000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: then it gets a bit inconsistent - if we mandate the odd parsererror document for a DOMParser, but do NOT want it for XHR responseXML..","msgtype":"m.text"},"ts":1464986817000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"thought whatever..","msgtype":"m.text"},"ts":1464986861000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: yeah, jl complained about this too in the good old days","msgtype":"m.text"},"ts":1464987198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: no layering or consistency ðŸ˜¢","msgtype":"m.text"},"ts":1464987232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But yeah, just have to suck it up and do a better job going forward","msgtype":"m.text"},"ts":1464987271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I've tried to sum up the content addressable caching discussions in a blog post, since I found it hard to find all the relevant information in an easily accessible way: https://mntr.dk/2016/content-addressable-browser-caching/","msgtype":"m.text"},"ts":1464990647000,"senderName":"Munter","senderId":"Munter@irc"},
{"content":{"body":"I think the spec for querySelectorAll is wrong.","msgtype":"m.text"},"ts":1464994137000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: How so?","msgtype":"m.text"},"ts":1464994174000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It seems to me that element.querySelectorAll(\"*\") should include element, but user agents don't.","msgtype":"m.text"},"ts":1464994180000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: Specifically, the scope-filtered method says to filter to the scoping root and its descendants.","msgtype":"m.text"},"ts":1464994357000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"yup, you're right. as specified it should indeed include element.","msgtype":"m.text"},"ts":1464994372000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But that's not the intention nor does it match impls. So it's a DOM bug.","msgtype":"m.text"},"ts":1464994384000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Checked in Safari and Firefox.","msgtype":"m.text"},"ts":1464994390000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Chrome agrees too.","msgtype":"m.text"},"ts":1464994491000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"File a bug on DOM so annevk can fix it","msgtype":"m.text"},"ts":1464994507000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah will do tomorrow.","msgtype":"m.text"},"ts":1464994595000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Reviewing the failing tests in Servo.","msgtype":"m.text"},"ts":1464994605000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(WPT agrees with UAs already.)","msgtype":"m.text"},"ts":1464994613000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"did it for you","msgtype":"m.text"},"ts":1464995205000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Thanks!","msgtype":"m.text"},"ts":1464998113000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: \"will do tomorrow\" is usually code for \"i've already forgotten about it\", at least when I say it ^_^","msgtype":"m.text"},"ts":1464998388000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]