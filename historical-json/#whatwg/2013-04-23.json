[
{"content":{"body":"Hixie: pong","msgtype":"m.text"},"ts":1366680465000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=11937#c10","msgtype":"m.text"},"ts":1366693954000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: yeah, about the Html4Assertions stuff, not a lot of meat there. Sad that for the little benefit the schematron version brings it has been costing so much in terms of performance","msgtype":"m.text"},"ts":1366694036000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: about bugzilla, I don't knwo what \"needsinfo\" fields are","msgtype":"m.text"},"ts":1366694076000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"checks bugzilla config","msgtype":"m.emote"},"ts":1366694081000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: I don't find any admin params for turnin on \"needsinfo\" fields..","msgtype":"m.text"},"ts":1366694344000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":" /editparams.cgi?section=index","msgtype":"m.text"},"ts":1366694357000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so if it's not exposed in the user UI than I would guess that means our version of bugzilla doesn't support it at all","msgtype":"m.text"},"ts":1366694387000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"v4.2.5","msgtype":"m.text"},"ts":1366694418000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://groups.google.com/a/chromium.org/d/msg/blink-dev/KZ0eaL-3vQY/6YQNvwX6NrwJ","msgtype":"m.text"},"ts":1366694591000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"from Ojan: \"Would be great if we histogrammed XSLT usage. Maybe we could stop supporting it entirely.!","msgtype":"m.text"},"ts":1366694607000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: k","msgtype":"m.text"},"ts":1366696677000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonder how to deal with bugs i have where i'm 90% blocked on someone else responding","msgtype":"m.text"},"ts":1366696702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't want to lose track of them by assigning it to them or marking thing NEEDSINFO","msgtype":"m.text"},"ts":1366696718000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/thing/them/","msgtype":"m.text"},"ts":1366696727000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith, needinfo? is an extension, apparently: http://bzr.mozilla.org/bmo/4.2/files/head:/extensions/Needinfo/","msgtype":"m.text"},"ts":1366706015000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So Chrome still crashes on page load... Did I get stuck on a wrong build somehow?","msgtype":"m.text"},"ts":1366706485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, it says it's updating now... Lets see","msgtype":"m.text"},"ts":1366706522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: Well the point at which you might catch the mistake is between you submitting the last commit and the reviewer finishing the review, not \"as you click the button\". Although \"as you click the button\" is an unusually good time to catch mistakes since that's exactly the moment at which you are most likely to be thinking \"is this correct?\"","msgtype":"m.text"},"ts":1366708961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also, allowing reviews to be \"complete\" without being merged can help a lot for bigger changes that benefit from early design review and subsequent review of the details","msgtype":"m.text"},"ts":1366709020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: arguably, I feel like this moment should be when you initially send the PR.","msgtype":"m.text"},"ts":1366709034000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But I am not really arguing about the policy for web-platform-tests","msgtype":"m.text"},"ts":1366709058000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"However, experience of the opposite policy suggests it does have advantages","msgtype":"m.text"},"ts":1366709078000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, they actually fit different development models, at least in theory.","msgtype":"m.text"},"ts":1366709267000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: about the tr/ PR, how do we deal with the fact that some specs are obsoleted by other specs? e.g. progress-events is now maintained in xhr.spec.whatwg.org","msgtype":"m.text"},"ts":1366709309000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: and TR/dom is not maintained, i think","msgtype":"m.text"},"ts":1366709334000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(or maybe it is)","msgtype":"m.text"},"ts":1366709372000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Well in theory some people volunteered to do it","msgtype":"m.text"},"ts":1366709404000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't know if anyone actually did or not","msgtype":"m.text"},"ts":1366709414000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: what? the -> tr?","msgtype":"m.text"},"ts":1366709454000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Keeping W3C DOM up to date","msgtype":"m.text"},"ts":1366709467000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1366709524000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"https://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html 6 December 2012","msgtype":"m.text"},"ts":1366709548000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: tbh I'm not really interested to take part in that debate.","msgtype":"m.text"},"ts":1366709615000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'm just hoping to be able to avoid maintaining a dictionary of specs to test repo names.","msgtype":"m.text"},"ts":1366709658000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Keep that flexible. We want to be able to move bits around while we haven't figured out the architecture.","msgtype":"m.text"},"ts":1366710161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Things might flow from DOM/HTML into JavaScript. From HTML into Fetch. From XMLHttpRequest into Fetch. From Streams API into XMLHttpRequest. From Origin into URL or Fetch. Etc.","msgtype":"m.text"},"ts":1366710210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: tests can move around when that happens","msgtype":"m.text"},"ts":1366710303000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not that moving tests is awesome, but the test/spec coverage tool is","msgtype":"m.text"},"ts":1366710334000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don't know what this dictionary is for anyway","msgtype":"m.text"},"ts":1366710348000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"tobie: this is for the coverage tool, yes?","msgtype":"m.text"},"ts":1366710384000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: among other things.","msgtype":"m.text"},"ts":1366710403000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But yeah that's the immediate use case.","msgtype":"m.text"},"ts":1366710414000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: what's the plan when things move stuff around between specs?","msgtype":"m.text"},"ts":1366710464000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I guess the remaining problem then is the W3C not keeping up to speed with copy-and-pasting...","msgtype":"m.text"},"ts":1366710467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: either that or finding licensing terms where folks are happier to contribute to the same spec.","msgtype":"m.text"},"ts":1366710516000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: what's the rational in moving ProgressEvent to XHR?","msgtype":"m.text"},"ts":1366710676000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jgraham: how does moving tests around every so often affect our use of the tests?","msgtype":"m.text"},"ts":1366710705000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: and a better Process...","msgtype":"m.text"},"ts":1366710709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/rational/rationale/","msgtype":"m.text"},"ts":1366710727000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: less work","msgtype":"m.text"},"ts":1366710742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: and makes them testable","msgtype":"m.text"},"ts":1366710757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Moving tests around is super annoying","msgtype":"m.text"},"ts":1366710768000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because you need to propogate the change to anything that cares about the URL of a test","msgtype":"m.text"},"ts":1366710795000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or whatever the unique identifier is","msgtype":"m.text"},"ts":1366710809000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: â€¦ aren't progress events used elsewhere?","msgtype":"m.text"},"ts":1366710853000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"so what should we do? not structure tests after specs at all? or not move tests when specs change?","msgtype":"m.text"},"ts":1366710905000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: yes","msgtype":"m.text"},"ts":1366710909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Is there also a good option? :(","msgtype":"m.text"},"ts":1366710928000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: hindsight!","msgtype":"m.text"},"ts":1366710949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and so aren't you simply displacing the work load from the editor to the implementors and devs which will have the extra cognitive load of figuring this out?","msgtype":"m.text"},"ts":1366710978000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tell spec editors to stop moving things around (just threat with jgraham and his cricket bat)","msgtype":"m.text"},"ts":1366711032000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: figuring what out? It's all properly cross-referenced...","msgtype":"m.text"},"ts":1366711077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not everyone is as savvy with these things as spec editors.","msgtype":"m.text"},"ts":1366711143000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: putting Progress Events in its own specification has always been a mistake. It's way too small for its own specification.","msgtype":"m.text"},"ts":1366711178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: making it actually much harder to read for developers and implementers as there's so much boilerplate.","msgtype":"m.text"},"ts":1366711201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's essentially a presentational issue.","msgtype":"m.text"},"ts":1366711215000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"No it's not.","msgtype":"m.text"},"ts":1366711226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It was done at the time because Charles was going to write the specification, but that never materialized much so I took over...","msgtype":"m.text"},"ts":1366711252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"really? .boilerplate { display:none }","msgtype":"m.text"},"ts":1366711265000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Boilerplate such as Abstract/Introduction/Conformance/Acknowledgments/References/Terminology/<div class=head>","msgtype":"m.text"},"ts":1366711289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Table of Contents for all that, too","msgtype":"m.text"},"ts":1366711314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"REMOVE ALL THE BOILERPLATE","msgtype":"m.text"},"ts":1366711336000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: I don't understand the \"more testable\" assertion either","msgtype":"m.text"},"ts":1366711435000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jgraham: anyway, what i'm wondering now is whether we should merge the tr PR or not","msgtype":"m.text"},"ts":1366711442000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: well all you could test with the original specification was the interface; now you can actually test it in the context of a feature","msgtype":"m.text"},"ts":1366711468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't understand what prevented you from doing so in the previous model, tbh.","msgtype":"m.text"},"ts":1366711519000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tbh, I don't really care about this much","msgtype":"m.text"},"ts":1366711589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It was just easier to fold it in. This is the first time I've heard concerns about it. Also, if someone else does the work, I'm not sure if arguing about details like this is the best use of our collective time.","msgtype":"m.text"},"ts":1366711934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Agreed. My concern is not about this particular spec, it's about zcorpan's point above that we now have two different incompatible spec to track for our testing effort.","msgtype":"m.text"},"ts":1366712082000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"if one is maintained and the other isn't, the choice of which to track is easy. the problem is that moving tests sucks.","msgtype":"m.text"},"ts":1366712156000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So this will happen for CORS/HTML fetch too (both will become \"Fetch\"), but I think testing there is already largely consolidated.","msgtype":"m.text"},"ts":1366712228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And actually part of XMLHttpRequest might up in Fetch because that is the right layer of abstraction. In case we introduce new-XMLHttpRequest-like APIs in the future. Which seems likely.","msgtype":"m.text"},"ts":1366712272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"end up*","msgtype":"m.text"},"ts":1366712279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And it seems over time parts of HTML might move to JavaScript, such as part of workers, structured cloning, and transferables...","msgtype":"m.text"},"ts":1366712375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I believe moving these bits around is good for the long-term health of the platform and understandability of it, but as I said on www-tag we'll have short term migration pain.","msgtype":"m.text"},"ts":1366712427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The reason I push for small specs (and less boilerplate) is that the smaller the specs, the less these re-orgs are problematic.","msgtype":"m.text"},"ts":1366712521000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(among other benefits)","msgtype":"m.text"},"ts":1366712562000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I think it might make them harder actually in cases. Because small specifications make it harder to reason about the scope of a feature. E.g. postMessage, workers, structured cloning, event loop, and transferables are all heavily intertwined. Yet I wouldn't be able to come up with the list of W3C specifications that define these.","msgtype":"m.text"},"ts":1366712858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We've had this conversation before, but I don't know why we all agree modularity in software is a sign of good design and disagree about this at the spec level.","msgtype":"m.text"},"ts":1366712992000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'm not questioning the fact that modularizing late in the game can be hard/impossible, but we should acknowledge this is to do with platform legacy.","msgtype":"m.text"},"ts":1366713055000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"â€¦ and not claim it makes things better in general.","msgtype":"m.text"},"ts":1366713157000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"The problem is that we don't design modular specifications, but more often we design bolt-on specifications. The specifications do not reflect the reality from how this would be implemented in software.","msgtype":"m.text"},"ts":1366713230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. there is a separate template specification going around. But you are not going to tell me that is modular. Any sane piece of software would put that straight in its HTML parser module.","msgtype":"m.text"},"ts":1366713265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The same goes for CSP. CSP cannot be implemented as a module. It needs hooks straight in Fetch/HTML/HTTP but we're not defining it like that. No, we define it as a separate bolt-on specification.","msgtype":"m.text"},"ts":1366713310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I want modular specification, not bolt-on specifications.","msgtype":"m.text"},"ts":1366713346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, most web browser software has a small number of well-defined high-level modules (networking, url, parser, dom, style, layout) that are continually evolved in ways that might add new sub-modules or touch existing sub-modules. Not an ever-expanding set of top-level modules.","msgtype":"m.text"},"ts":1366713586000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"W3C can scream modularity all day long. But as long as they don't understand what that means I think we're not getting anywhere.","msgtype":"m.text"},"ts":1366713698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: will you attend Webapps wg f2f ?","msgtype":"m.text"},"ts":1366713766000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(I'm thinking of Jeff Jaffe's presentation at TPAC coupled with a Steve Ballmer like performance: \"modularity! modularity! modularity!\")","msgtype":"m.text"},"ts":1366713777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: nope","msgtype":"m.text"},"ts":1366713786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Will anyone be there?","msgtype":"m.text"},"ts":1366713855000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Jonas, Julian Aubourg, Dimitri, Arun, Eric Uhrhane, Chris Wilson, hober, Israel Hilerio, Adrian Bateman","msgtype":"m.text"},"ts":1366715315000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and more","msgtype":"m.text"},"ts":1366715321000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and Robin and plh and me","msgtype":"m.text"},"ts":1366715330000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I genuinely don't understand why you on one hand claim being for modularity and on the other bundle Progress Events and XHR together","msgtype":"m.text"},"ts":1366718517000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I think I already explained that the ProgressEvent interface is by itself not very interesting and not large enough to warrant its own specification. ProgressEvent is not something you'd have as a distinct module in software either.","msgtype":"m.text"},"ts":1366718636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Arguably, but you certainly wouldn't lump it with xhr, if you were using it elsewhere.","msgtype":"m.text"},"ts":1366718673000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah, I don't think we've found the right abstraction level yet. Merging it in for now was easier than the alternative.","msgtype":"m.text"},"ts":1366718778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's a more compelling explanation.","msgtype":"m.text"},"ts":1366718794000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"â€¦and helps us make a better decision about what we should do with the ProgEvent test repository (wait and see).","msgtype":"m.text"},"ts":1366718934000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I doubt it'll move anywhere else fast though. It seems in general people are not very fond of them and we might not use this abstraction for new APIs.","msgtype":"m.text"},"ts":1366719221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm. the spec for <area href> and the behavior for reflection seems to have changed after the update to use the URL spec","msgtype":"m.text"},"ts":1366723418000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: in particular, before (and for other attributes that take URLs but don't support URLUtils), setting the IDL attribute would set the content attribute to the literal value without resolving","msgtype":"m.text"},"ts":1366723557000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: ^","msgtype":"m.text"},"ts":1366723667000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=21787","msgtype":"m.text"},"ts":1366723819000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":-(","msgtype":"m.text"},"ts":1366724502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"woah i didn't know about <form>.encoding","msgtype":"m.text"},"ts":1366724846000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: with IDL attribute above you mean only .href right?","msgtype":"m.text"},"ts":1366726166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1366726178000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: with \"other attributes that take URLs but don't support URLUtils\" i mean e.g. longDesc","msgtype":"m.text"},"ts":1366726210000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1366733155000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: bueno dias!","msgtype":"m.text"},"ts":1366733411000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"Hey. What's up with UndoManager? Why's there no draft yet?","msgtype":"m.text"},"ts":1366734302000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: https://dvcs.w3.org/hg/undomanager/raw-file/tip/undomanager.html ?","msgtype":"m.text"},"ts":1366734399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"paxcoder: it's kinda dead though I believe","msgtype":"m.text"},"ts":1366734524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: yt?","msgtype":"m.text"},"ts":1366734570000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: URLUtils' update steps...","msgtype":"m.text"},"ts":1366734581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yo","msgtype":"m.text"},"ts":1366734607000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: for Location, what happens now it seems is that it's parsed, serialized, then parsed again, is that really what we want?","msgtype":"m.text"},"ts":1366734694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"when?","msgtype":"m.text"},"ts":1366734718000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"serialise->parse is idempotent, right?","msgtype":"m.text"},"ts":1366734735000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1366734767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, hey. Dead - why?","msgtype":"m.text"},"ts":1366734768000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: nobody has bandwidth prolly","msgtype":"m.text"},"ts":1366734796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"paxcoder: also, it's a hard problem","msgtype":"m.text"},"ts":1366734800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, bandwith problem? why?","msgtype":"m.text"},"ts":1366734851000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Actually, i don't even see why it's hard. But I didn't read the spec.","msgtype":"m.text"},"ts":1366734887000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Hixie: okay, so one easy solution would be to do what you originally requested","msgtype":"m.text"},"ts":1366735072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: to pass \"update steps\" the raw string (not serialized)","msgtype":"m.text"},"ts":1366735090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1366735112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how would that differ from what's going on now?","msgtype":"m.text"},"ts":1366735121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that does not work","msgtype":"m.text"},"ts":1366735125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think the solution is to do what i originally originally suggested, which is let href be under the management of the host spec","msgtype":"m.text"},"ts":1366735151000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paxcoder, someone needs to care enough and have time, and their manager might need to approve using that time for that purpose","msgtype":"m.text"},"ts":1366735160000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"From what I gathered it's simply: 1) attach MutationObserver to specified object 2) record diffs (MutationRecord or whatever they're called) 3) define steps to reverse each mutation type","msgtype":"m.text"},"ts":1366735172000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder, I believe the editor changed employment a while back, too","msgtype":"m.text"},"ts":1366735183000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"paxcoder: i would imagine that if you're up for it, the current editor would be happy to hand the reigns over to you :-)","msgtype":"m.text"},"ts":1366735193000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, meh, I'm a noob. This is Anne's territory.","msgtype":"m.text"},"ts":1366735217000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"anne's dealing with plenty of specs already","msgtype":"m.text"},"ts":1366735238000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't sure if Hixie or annevk has the most spec text to maintain now","msgtype":"m.emote"},"ts":1366735334000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: or we standardize the weird thing where udpate steps are run with the input value if you set .href and the serialized value if you set any other member...","msgtype":"m.text"},"ts":1366735354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: does that work for Location?","msgtype":"m.text"},"ts":1366735381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: having .href out of this spec is kinda weird, but I guess we could do that too","msgtype":"m.text"},"ts":1366735382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: or, maybe the best, is when i say it's a URLUtils thingy, i pass a flag","msgtype":"m.text"},"ts":1366735400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it does as you pass a string to assign() / replace()","msgtype":"m.text"},"ts":1366735401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1366735407000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then yeah","msgtype":"m.text"},"ts":1366735421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: and you actually pass the original string if url is null","msgtype":"m.text"},"ts":1366735428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's fricking ugly though","msgtype":"m.text"},"ts":1366735438000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"welcome to the web","msgtype":"m.text"},"ts":1366735442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I know, still needed to point that out","msgtype":"m.text"},"ts":1366735449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1366735479000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'll try to fix these URL thingies tomorrow and add some notes to the whole thing so it's clear why it's fucked","msgtype":"m.text"},"ts":1366735488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you just gonna set url to null when href is set?","msgtype":"m.text"},"ts":1366735511000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or do i need to do some stuff on my side?","msgtype":"m.text"},"ts":1366735516000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: do we count encoding tables as text?","msgtype":"m.text"},"ts":1366735524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: when href is set I'll invoke the update steps with href's value","msgtype":"m.text"},"ts":1366735542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, mm...","msgtype":"m.text"},"ts":1366735547000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: and you just either set the attribute to that value or pass that value to assign/replace","msgtype":"m.text"},"ts":1366735557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so update steps always get passed a string rather than having to grab the value?","msgtype":"m.text"},"ts":1366735574000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: which should fix the bug zcorpan reported and save you some serialization boilerplate","msgtype":"m.text"},"ts":1366735582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that would factor out some boilerplate on my side","msgtype":"m.text"},"ts":1366735584000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1366735587000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1366735590000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"reassign the bug to me when you're done","msgtype":"m.text"},"ts":1366735594000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1366735598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk or TabAtkins: i'm implementing the JSON-LD API that uses Futures...","msgtype":"m.text"},"ts":1366735630000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"i'm wondering if you can point me at any existing JS implementations for Futures ... and if not, can you tell me if you think adapting this: https://github.com/cujojs/when","msgtype":"m.text"},"ts":1366735653000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"to meet the Futures API would be simpler or more difficult than just doing a straight-up, simplistic implementation of what's in the DOM spec","msgtype":"m.text"},"ts":1366735675000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"the algorithms look fairly short in the DOM spec, however, i would prefer to reuse existing code","msgtype":"m.text"},"ts":1366735699000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"it does seem like promises/A+ has deviated perhaps a bit too much from Futures (or vice versa, rather).","msgtype":"m.text"},"ts":1366735719000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"dlongley: https://github.com/slightlyoff/DOMFuture/ has an impl","msgtype":"m.text"},"ts":1366735846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks ... how stable do you think the Futures API is? ... is it likely to be in flux for a while still?","msgtype":"m.text"},"ts":1366735958000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"i'm also curious if passing multiple arguments to resolve() was considered ... as this is a popular thing to do with node.js style callbacks","msgtype":"m.text"},"ts":1366735993000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"and only permitting one argument makes it more difficult to wrap some node.js code w/a Futures API.","msgtype":"m.text"},"ts":1366736014000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"It's in flux until browser implementations have shipped","msgtype":"m.text"},"ts":1366736017000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And it's frozen after that","msgtype":"m.text"},"ts":1366736024000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Just like every web api ever","msgtype":"m.text"},"ts":1366736032000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well, right, i was just wondering what the general feeling was.","msgtype":"m.text"},"ts":1366736036000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"i guess there aren't enough implementations to know.","msgtype":"m.text"},"ts":1366736059000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"I don't know of any","msgtype":"m.text"},"ts":1366736073000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well, i know of one now (and you too) ^","msgtype":"m.text"},"ts":1366736091000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"bummer, i keep missing mounir","msgtype":"m.text"},"ts":1366736103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(not a browser implementation, but a polyfill)","msgtype":"m.text"},"ts":1366736109000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"dlongley: the polyfill passes the A+ test suite","msgtype":"m.text"},"ts":1366736139000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"dlongley: so DOM Futures are compatible","msgtype":"m.text"},"ts":1366736151000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: thanks, i see that you're the one who wrote it","msgtype":"m.text"},"ts":1366736158000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"my understanding is the DOM Futures has some extra functionality (like accept())","msgtype":"m.text"},"ts":1366736172000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"dlongley: things you might think are differences are mostly due to the light set of things that A+ actually spec's","msgtype":"m.text"},"ts":1366736174000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"but it should be a superset then, and still pass A+","msgtype":"m.text"},"ts":1366736182000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"dlongley: that's not \"extra\", it's a design choice","msgtype":"m.text"},"ts":1366736186000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1366736202000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"dlongley: A+ is silent on the resolver protocol, and months of research went into having both accept() and resolve()","msgtype":"m.text"},"ts":1366736211000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"(well, a week on that point, but months for the overall design)","msgtype":"m.text"},"ts":1366736220000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"ok, that's important for me to hear, thanks","msgtype":"m.text"},"ts":1366736226000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"dlongley: half of the common libs do what accept() does, half do what resolve() does","msgtype":"m.text"},"ts":1366736237000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"and it's a showstopper for some libs not to have accept() style","msgtype":"m.text"},"ts":1366736251000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"(I hear this all the time from other googlers, FWIW)","msgtype":"m.text"},"ts":1366736260000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"right ... and i saw some recent discussions about it and was wondering whether it might stay or go","msgtype":"m.text"},"ts":1366736264000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"it sounds like it's going to stay","msgtype":"m.text"},"ts":1366736269000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"anyone got any suggestions for how i should handle bugs that are pending feedback but that i don't want to lose? NEEDSINFO will go into a black hole, editing the whiteboard is something commenters will likely not clear, a target milestone could work, i guess, but i'm likely to miss the response","msgtype":"m.text"},"ts":1366736281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you know if support for using resolve() with multiple arguments is being considered?","msgtype":"m.text"},"ts":1366736296000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"slightlyoff: ^","msgtype":"m.text"},"ts":1366736298000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"dlongley: I hope the API is stable","msgtype":"m.text"},"ts":1366736342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dlongley: what would that even mean? resolution is for a single value","msgtype":"m.text"},"ts":1366736353000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"dlongley: the contract of a future describes a single value","msgtype":"m.text"},"ts":1366736364000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"dlongley: it's very small and matches the subset of what the libraries do","msgtype":"m.text"},"ts":1366736365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, when using callbacks in node.js you might pass (err, foo, bar), not just (err, value)","msgtype":"m.text"},"ts":1366736371000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"the promises/futures libraries that i've seen that wrap node.js callbacks","msgtype":"m.text"},"ts":1366736388000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"so that you can unify your API ...","msgtype":"m.text"},"ts":1366736392000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"have an issue with that.","msgtype":"m.text"},"ts":1366736395000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"Hixie: UNCONFIRMED?","msgtype":"m.text"},"ts":1366736422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they end up transforming the node.js callback arguments into an array of values to pass to the promise/future","msgtype":"m.text"},"ts":1366736424000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"and that can end up being a mess... especially if one of those arguments can itself be an array or something else","msgtype":"m.text"},"ts":1366736455000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"annevk: hmm, that's an idea","msgtype":"m.text"},"ts":1366736461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it makes it difficult to determine what you're getting ... and you have to do some surgery to fix it.","msgtype":"m.text"},"ts":1366736465000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"Hixie: it's a hack, but it might work","msgtype":"m.text"},"ts":1366736472000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah. though commenters are unlikely to change it back to NEW","msgtype":"m.text"},"ts":1366736484000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: but it might work nonetheless","msgtype":"m.text"},"ts":1366736491000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, make someone install the needinfo? extension on the W3C wiki :)","msgtype":"m.text"},"ts":1366736515000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: it's only stylistically different from saying you resolve to an object w/keys that point to your arguments vs. just a list of arguments.","msgtype":"m.text"},"ts":1366736532000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"but that difference in style is prevalent in node.js -- making wrapping some APIs difficult.","msgtype":"m.text"},"ts":1366736552000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"Ms2ger: that'd be ideal, but i don't want to give MikeSmith and company more work","msgtype":"m.text"},"ts":1366736607000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dlongley: I suspect that ES6' arity functionality will help with that","msgtype":"m.text"},"ts":1366736682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you think it would add so much more complexity that it's worth waiting for ES6?","msgtype":"m.text"},"ts":1366736745000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"Hixie: I don't mind do more work as a long as it's for something that's actually useful","msgtype":"m.text"},"ts":1366736808000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"this is only anecdotal, obviously, but i would expect this restriction to be an annoyance for a lot of JS developers with experience w/node.js","msgtype":"m.text"},"ts":1366736820000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"MikeSmith: i don't know how useful this would be.","msgtype":"m.text"},"ts":1366736842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm around actually, but in a meeting","msgtype":"m.text"},"ts":1366736850000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"and it doesn't seem like something that's too difficult to support.","msgtype":"m.text"},"ts":1366736852000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"MikeSmith: right now i have some bugs where i'm 90% blocked waiting on input from someone or other","msgtype":"m.text"},"ts":1366736853000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I will look at that bug today hopefully","msgtype":"m.text"},"ts":1366736866000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir: excellent, thanks. i'm in no rush, just want to make sure it's on your radar. :-)","msgtype":"m.text"},"ts":1366736888000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dlongley: it's not the complexity, it's the inconsistency with all other future/promise libraries I want to avoid","msgtype":"m.text"},"ts":1366736905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: so it'd be nice if i could indicate that somehow... but still not lose the bug (basically i need to be able to time out)","msgtype":"m.text"},"ts":1366736922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: (and take a guess at what they wanted)","msgtype":"m.text"},"ts":1366736933000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah I remember you mentioned those yesterday. I will try to put some thought into how to help deal with those","msgtype":"m.text"},"ts":1366736947000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: i haven't played with the needsinfo? feature so i don't know if it would work well.","msgtype":"m.text"},"ts":1366736953000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1366736959000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: anne's idea of just marking the bugs UNCO might work. or putting something in the status whiteboard.","msgtype":"m.text"},"ts":1366736970000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: i see... well, perhaps this inconsistency is worth it, especially if this will be the chosen standard on the Web (where it seems promises may actually take hold, as opposed to elsewhere where they haven't seen too much success) ... there may also be some ways to mitigate the effects of the inconsistency","msgtype":"m.text"},"ts":1366737059000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"MikeSmith, fwiw, I believe needinfo? is used quite a lot on bmo now","msgtype":"m.text"},"ts":1366737073000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"dlongley: ES6 with \"...\" makes it relatively easy to migrate from one to the other","msgtype":"m.text"},"ts":1366737094000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dlongley: also with argument handling","msgtype":"m.text"},"ts":1366737121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i'm trying to figure out how that would work ... as you'd still need to pass the node.js arguments to the resolve function as a single value (an array)","msgtype":"m.text"},"ts":1366737371000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"it seems like the spread operator deals with a different problem","msgtype":"m.text"},"ts":1366737387000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"(being able to succinctly pass an array as multiple parameters)","msgtype":"m.text"},"ts":1366737402000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"the issue here is that the resolve() method can only take 1 parameter ... and there may be cases where determining how to interpret that parameter is indeterminate","msgtype":"m.text"},"ts":1366737443000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"you mean if you don't define what the future will return?","msgtype":"m.text"},"ts":1366737493000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, my guess would be that there will be some devs finding it difficult to wrap their continuation-passing style APIs w/Futures because of this issue","msgtype":"m.text"},"ts":1366737494000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"i'm talking about the case where you have a node.js style async operation that you'd like to convert to a future","msgtype":"m.text"},"ts":1366737553000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"suppose the operation looks like this: foo(params, callback)","msgtype":"m.text"},"ts":1366737578000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"and the callback signature is: callback(err, bar, baz)","msgtype":"m.text"},"ts":1366737592000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"converting 'foo' into a future that can be called like this:","msgtype":"m.text"},"ts":1366737607000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"so then you can do [err, bar, baz]","msgtype":"m.text"},"ts":1366737620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right ... but that may be problematic.","msgtype":"m.text"},"ts":1366737626000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"and really, err wouldn't be in that array (nitpick)","msgtype":"m.text"},"ts":1366737639000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"rather, [bar, baz] would be passed to the resolve callback.","msgtype":"m.text"},"ts":1366737653000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"however, if bar can be an array or an object and baz is optional ...","msgtype":"m.text"},"ts":1366737675000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"that could cause some consternation.","msgtype":"m.text"},"ts":1366737680000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"hmm, seems like you should pick a pattern and stick with it","msgtype":"m.text"},"ts":1366737717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but yeah","msgtype":"m.text"},"ts":1366737723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, as far as i can tell, this may be the only thing standing in the way of making it easy to convert a lot of node.js style code to using Futures.","msgtype":"m.text"},"ts":1366737739000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"it doesn't seem too difficult otherwise.","msgtype":"m.text"},"ts":1366737749000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"which would be tremendously helpful, particularly for those node.js libs that work on the client as well as the server.","msgtype":"m.text"},"ts":1366737776000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"I think the ideal API for futures in a bunch of those cases might be to pass an object","msgtype":"m.text"},"ts":1366737781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's probably true (we are doing this with the new JSON-LD API)","msgtype":"m.text"},"ts":1366737798000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"Hixie, annevk : \"UNCO\" means \"shit\" in Japanese","msgtype":"m.text"},"ts":1366737800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but, for existing APIs that are in use everywhere, not so easy.","msgtype":"m.text"},"ts":1366737808000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"MikeSmith, sounds good, then ;)","msgtype":"m.text"},"ts":1366737813000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it would be great if converting them didn't require special code.","msgtype":"m.text"},"ts":1366737820000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"but instead, just a simple wrapper.","msgtype":"m.text"},"ts":1366737827000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"MikeSmith: heh","msgtype":"m.text"},"ts":1366737841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: for jit and stuff I heard it might be nice if you can get some guarantees about types in which case always passing arrays is kinda sucky","msgtype":"m.text"},"ts":1366737851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if resolve() took multiple arguments that would work, from what i can tell.","msgtype":"m.text"},"ts":1366737854000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1366737896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think it's worth exploring ... and maybe it wouldn't cause too much of an issue with other promise libs (or maybe that shouldn't take priority over this other issue).","msgtype":"m.text"},"ts":1366737927000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"dlongley: yeah, maybe raise it on es-discuss / www-dom?","msgtype":"m.text"},"ts":1366737945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1366737955000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"annevk: one year anniversary of w3cmemes","msgtype":"m.text"},"ts":1366737971000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"dlongley: I don't think this has been explicitly considered so you're right","msgtype":"m.text"},"ts":1366738019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dlongley: at least as far as I can tell","msgtype":"m.text"},"ts":1366738024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(that it's worth exploring)","msgtype":"m.text"},"ts":1366738029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1366738033000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"hober: we've been surpassed by Fake Alex recently","msgtype":"m.text"},"ts":1366738068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hober: yeah, Fake Alex really is someone's A material...","msgtype":"m.text"},"ts":1366738091000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"indeed, we should ask fake alex to collaborate","msgtype":"m.text"},"ts":1366738099000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"dlongley: what would it *mean* to take multiple values?","msgtype":"m.text"},"ts":1366738145000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"annevk: I don't get the proposed semantic","msgtype":"m.text"},"ts":1366738161000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"it wouldn't be any logically different from resolving to a single value that is an object w/keys that point to values","msgtype":"m.text"},"ts":1366738185000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"slightlyoff: future's result would be a one or more values, rather than just one","msgtype":"m.text"},"ts":1366738186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's just that the future resolves ... what annevk just said.","msgtype":"m.text"},"ts":1366738213000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"annevk: that's just not JS-ish","msgtype":"m.text"},"ts":1366738222000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"use destructuring","msgtype":"m.text"},"ts":1366738227000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"on the contrary, i think it's very JS-ish ... at least how JS has been used in practice w/respect to async or continuation programming","msgtype":"m.text"},"ts":1366738257000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"this is what destructuring is for. Use an array and rest/spread, or use an obj + destructuring","msgtype":"m.text"},"ts":1366738300000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"to say it's JS-ish is to ignore what happens to mutliple values: they're reified into a single object (arguments)","msgtype":"m.text"},"ts":1366738317000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"so your semantic is either confused or confusing","msgtype":"m.text"},"ts":1366738330000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"what does it mean to pass a single value in this world?","msgtype":"m.text"},"ts":1366738337000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"sorry, need to go for a bit...but send me mail or file an issue in the DOM Future repo","msgtype":"m.text"},"ts":1366738364000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wtf is \"experimental-webgl\" ?","msgtype":"m.text"},"ts":1366738365000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"slightlyoff: i'll probably send an email off to www-dom","msgtype":"m.text"},"ts":1366738384000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"Hixie, an alias for webgl when used as argument to getContext","msgtype":"m.text"},"ts":1366738406000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie, one we probably won't get rid of","msgtype":"m.text"},"ts":1366738414000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"dlongley: fine, but cc me (please)","msgtype":"m.text"},"ts":1366738438000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1366738438000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: thanks","msgtype":"m.text"},"ts":1366738455000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dlongley: slightlyoff at chromium dot org","msgtype":"m.text"},"ts":1366738457000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Np","msgtype":"m.text"},"ts":1366738465000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(one day we'll learn not to do this kind of thing right?)","msgtype":"m.text"},"ts":1366738477000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"slightlyoff: sure","msgtype":"m.text"},"ts":1366738500000,"senderName":"dlongley","senderId":"dlongley@irc"},
{"content":{"body":"Hixie, one can hope","msgtype":"m.text"},"ts":1366738541000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"how the heck does EME work?","msgtype":"m.text"},"ts":1366739293000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Not","msgtype":"m.text"},"ts":1366739301000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"define \"work\"","msgtype":"m.text"},"ts":1366739305000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how does it stop me from copying content?","msgtype":"m.text"},"ts":1366739367000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"where does decryption happen?","msgtype":"m.text"},"ts":1366739416000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"That's not the goal","msgtype":"m.text"},"ts":1366739418000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"paxcoder: it doesn't stop you from copying content.","msgtype":"m.text"},"ts":1366739428000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nothing can, since the whole point of playing back video is to let you copy the content into your video RAM","msgtype":"m.text"},"ts":1366739440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, Ms2ger: so what does it do then?","msgtype":"m.text"},"ts":1366739447000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Read Hixie's G+ post","msgtype":"m.text"},"ts":1366739464000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"can you tell me please?","msgtype":"m.text"},"ts":1366739472000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"https://plus.google.com/u/0/107429617152575897589/posts/iPmatxBYuj2","msgtype":"m.text"},"ts":1366739478000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it allows content producers to apply negotiation leverage against content distributors who provide playback services","msgtype":"m.text"},"ts":1366739505000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the heck does that have to do with my client?","msgtype":"m.text"},"ts":1366739560000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"for you? precisely nothing.","msgtype":"m.text"},"ts":1366739582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then why would i want additional code in it?","msgtype":"m.text"},"ts":1366739594000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"ie why EME?","msgtype":"m.text"},"ts":1366739602000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"as a user, drm has nothing to offer you.","msgtype":"m.text"},"ts":1366739605000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is strictly a net negative.","msgtype":"m.text"},"ts":1366739624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh hey, that's another good way to argue against this thing","msgtype":"m.text"},"ts":1366739637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Where does a resolver get assosciated with a future?","msgtype":"m.text"},"ts":1366739646000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"violates http://www.w3.org/TR/html-design-principles/","msgtype":"m.text"},"ts":1366739655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: it just is","msgtype":"m.text"},"ts":1366739667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you seem to be under the mistaken assumption that anyone with the authority to do anything about it, cares","msgtype":"m.text"},"ts":1366739678000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, then what's the reasoning behind putting it in my client?","msgtype":"m.text"},"ts":1366739686000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"annevk: Uhhhh","msgtype":"m.text"},"ts":1366739693000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't understand :)","msgtype":"m.text"},"ts":1366739699000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: if you create a future, it comes with an associated resolver","msgtype":"m.text"},"ts":1366739718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why is someone writing a client spec that only content producers want?","msgtype":"m.text"},"ts":1366739724000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"jgraham: if you create an element, it comes with a classList, it's like that","msgtype":"m.text"},"ts":1366739739000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So it happens in the (internal) constructor of the future","msgtype":"m.text"},"ts":1366739740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1366739743000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"paxcoder, because their managers make themN","msgtype":"m.text"},"ts":1366739748000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"?*","msgtype":"m.text"},"ts":1366739750000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: yeah","msgtype":"m.text"},"ts":1366739767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1366739773000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger, is there no voting process that would stop its inclusion?","msgtype":"m.text"},"ts":1366739774000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Ehehehee","msgtype":"m.text"},"ts":1366739785000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"paxcoder: the people putting it in your client are probably content distributors who are finding themselves \"forced\" to do so by content producers in their negotiations","msgtype":"m.text"},"ts":1366739788000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paxcoder: and because content carriers do not have the leverage they did when cable TV was created","msgtype":"m.text"},"ts":1366739807000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"paxcoder: only browser vendors get to decide what they put in their browsers","msgtype":"m.text"},"ts":1366739812000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, the people voting \"yes\" to EME are those putting it in my client.","msgtype":"m.text"},"ts":1366739822000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: no","msgtype":"m.text"},"ts":1366739828000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paxcoder: even if the w3c through EME out, it would still end up in your client","msgtype":"m.text"},"ts":1366739845000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, arguments please.","msgtype":"m.text"},"ts":1366739846000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: case in paint, the w3c through HTML out, and HTML is still in browsers.","msgtype":"m.text"},"ts":1366739856000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"threw, even","msgtype":"m.text"},"ts":1366739865000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what?","msgtype":"m.text"},"ts":1366739897000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"\"The Google Search Appliance uses XSLT for UI.\" somebody should fix that","msgtype":"m.text"},"ts":1366739910000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"paxcoder: in 1998, and again in 2004, the w3c said HTML was dead. So we wrote the HTML spec outside W3C.","msgtype":"m.text"},"ts":1366739925000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a standard can say whatever it wants, if all implementors DO SOMETHING ELSE it doesn't matter what the state of the standards document is","msgtype":"m.text"},"ts":1366739965000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"paxcoder: browsers don't care if a spec is at the w3c, the whatwg, the ietf, or on someone's web site; if they want to implement it, they do so","msgtype":"m.text"},"ts":1366739982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Once you become a customer you can access the XSLT tutorial from the Enterprise Support Site.\" That'll line up the customers for sure.","msgtype":"m.text"},"ts":1366739983000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie, I'm sure it was written to meet needs of modern apps, not to defy XMLization.","msgtype":"m.text"},"ts":1366740001000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"\"it\"?","msgtype":"m.text"},"ts":1366740018000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, the living standard","msgtype":"m.text"},"ts":1366740026000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"HTML5","msgtype":"m.text"},"ts":1366740034000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"the HTML spec was written for a variety of reasons, sure","msgtype":"m.text"},"ts":1366740045000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's not really the point here","msgtype":"m.text"},"ts":1366740049000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ok, please tell me what EME does.","msgtype":"m.text"},"ts":1366740078000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Not whom it benefits, what it *does*.","msgtype":"m.text"},"ts":1366740111000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"EME harms users and society as a whole in order to help hollywood extort more money out of users.","msgtype":"m.text"},"ts":1366740113000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: didnâ€™t you write the piece about how DRM is not about users but control over manufacturers?","msgtype":"m.text"},"ts":1366740175000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yeah, https://plus.google.com/u/0/107429617152575897589/posts/iPmatxBYuj2","msgtype":"m.text"},"ts":1366740187000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"See, from what I know DRM *always* includes an unwanted, proprietary piece of software running on my PC. Why would W3C want to force me to support it?","msgtype":"m.text"},"ts":1366740191000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: the w3c wants to publish this spec (rather than letting someone else do it) because it increases the chances of hollywood companies joining the w3c","msgtype":"m.text"},"ts":1366740228000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paxcoder: and when companies join the w3c, the w3c makes money.","msgtype":"m.text"},"ts":1366740236000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"about $60k per year.","msgtype":"m.text"},"ts":1366740239000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"per company.","msgtype":"m.text"},"ts":1366740243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"They're selling my freedom cheap.","msgtype":"m.text"},"ts":1366740264000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1366740270000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Browser vendors already did that.","msgtype":"m.text"},"ts":1366740279000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavin, what do you mean?","msgtype":"m.text"},"ts":1366740290000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"the w3c publishing the spec or not has no effect on whether browsers have EME in them or not","msgtype":"m.text"},"ts":1366740299000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MS, Google, Netflix et al are also part of w3c.","msgtype":"m.text"},"ts":1366740299000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"that's entirely up to the browser vendors","msgtype":"m.text"},"ts":1366740304000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"W3C can't make browser vendors do anything.","msgtype":"m.text"},"ts":1366740314000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"See XHTML2 ;)","msgtype":"m.text"},"ts":1366740321000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Hixie, sure it does. Browser vendors want a \"HTML5 fully compatible\" sticker.","msgtype":"m.text"},"ts":1366740363000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: no, they really don't","msgtype":"m.text"},"ts":1366740373000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paxcoder: (witness the fact that no browser ever implemented HTML4 as written)","msgtype":"m.text"},"ts":1366740392000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, well they aim for it anyway","msgtype":"m.text"},"ts":1366740418000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"if W3C doesn't introduce EME, they'd have a good excuse not to implement it","msgtype":"m.text"},"ts":1366740443000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"when the w3c said to do xhtml2, and that html was dead, the browser vendors just started a separate group to spec HTML","msgtype":"m.text"},"ts":1366740449000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it does, Chromium, and YouTube will be DRM-laden in a year","msgtype":"m.text"},"ts":1366740458000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"the browser vendors are the ones _pushing the EME spec_","msgtype":"m.text"},"ts":1366740463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(not all the browser vendors)","msgtype":"m.text"},"ts":1366740470000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ok, so I understand you're not very fond of W3C. Are you all against EME too?","msgtype":"m.text"},"ts":1366740503000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Also, what's wrong with XHTML2?","msgtype":"m.text"},"ts":1366740539000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Backwards compatibility","msgtype":"m.text"},"ts":1366740571000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ungh","msgtype":"m.text"},"ts":1366740584000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"that's one of my least-favorite words","msgtype":"m.text"},"ts":1366740592000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"When it comes to web. Though granted, I don't have big projects to maintain.","msgtype":"m.text"},"ts":1366740629000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: EME, or rather, DRM, is user-hostile. It literally and quite seriously harms humanity's cultural development, and it violates people's personal freedoms. Yes, I am opposed to it.","msgtype":"m.text"},"ts":1366740654000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, define freedoms perhaps?","msgtype":"m.text"},"ts":1366740723000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Because eg. although I call it \"free software\", and not \"open source\", I don't agree with FSF that non-free software is unethical.","msgtype":"m.text"},"ts":1366740767000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"In all cases, anyway","msgtype":"m.text"},"ts":1366740789000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: the freedom of expression, specifically in the ability to easily parody, produce analysis that includes segments of the original content, use content in education settings; also the ability to make backups, to time-shift, to format-shift, to device-shift; the ability to use content in ways that weren't considered by the original creator, etc.","msgtype":"m.text"},"ts":1366740847000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paxcoder: DRM extends the reach of copyright law beyond the scope provided for in the Constitution to \"promote the Progress of Science and useful Arts\"","msgtype":"m.text"},"ts":1366740854000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Hixie, you have a point. Those are instances of freedoms that are relevant here. But how about theoretically (I'm jumping from topic to topic in order to reevaluate or solidify my views of \"freedom\", hope you don't mind)?","msgtype":"m.text"},"ts":1366740935000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Somehow fair use hasn't occurred to me. So thanks both. Maybe I just wasn't thinking long enough about it. Or from the point of Bob instead of Mallory ;-P","msgtype":"m.text"},"ts":1366741016000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"DRM is the reason that when I *BUY* a movie on iTunes, and want to watch it *on the device where i bought it*, namely my mac mini hooked up to my DRM-supporting HDMI TV, the video displays a checkerboard pattern instead of the video when I try to play it, just because I happen to have the Mac mini opened up in Screen Sharing on a computer four meters away.","msgtype":"m.text"},"ts":1366741105000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is such a high level of BS that I don't even know where to begin","msgtype":"m.text"},"ts":1366741128000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and that's not even going to other things that should work fine, e.g. I buy an audiobook on my aging iPod touch, and then transfer it to my Android phone, and it will no longer play.","msgtype":"m.text"},"ts":1366741191000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why not? i own both devices, i paid for the content, nobody else is involved","msgtype":"m.text"},"ts":1366741203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"such utter BS","msgtype":"m.text"},"ts":1366741209000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and mind you, both the movie and the audiobook are available on bittorrent sites with no DRM","msgtype":"m.text"},"ts":1366741231000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, Sounds like Adam Smith smacked you with his invisible hand.","msgtype":"m.text"},"ts":1366741239000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"so it's not like there's any protection of copyright going on","msgtype":"m.text"},"ts":1366741243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Reference if anyone's unfamiliar: https://en.wikipedia.org/wiki/Invisible_hand","msgtype":"m.text"},"ts":1366741281000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"uhh... nothing to do with copyright","msgtype":"m.text"},"ts":1366741303000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavin, it does with DRM.","msgtype":"m.text"},"ts":1366741342000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"well it's an (capitalist) economical concept, so it's related to all of the above","msgtype":"m.text"},"ts":1366741371000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"gavin, basically, DRM must be regulated against (eg. by rejecting it from standards), because free market won't do it (despite the above capitalist ideal)","msgtype":"m.text"},"ts":1366741522000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1366741533000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1366741535000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"paxcoder: (you want gavinc, not gavin)","msgtype":"m.text"},"ts":1366741542000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"my bad","msgtype":"m.text"},"ts":1366741551000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Copyright and DRM were CREATED by regulation. Copyright is a state granted monopoly","msgtype":"m.text"},"ts":1366741577000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"DRM is no regulation","msgtype":"m.text"},"ts":1366741614000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"DRM is protected by legislation","msgtype":"m.text"},"ts":1366741637000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Copyright is, and - in some cases - a beneficial one.","msgtype":"m.text"},"ts":1366741638000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Oh yes it is. Without the DMCA all DRM would be pointless. But with it the act of writing software to get around DRM is illegal. Owning the tools needed to get around it is illegal.","msgtype":"m.text"},"ts":1366741673000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"if it was legal for companies to break DRM, the DRM-pushing companies would have no leverage","msgtype":"m.text"},"ts":1366741698000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, well it is now. But that's a problem of the legal system, not a product of supposed intrinsic evil of regulation.","msgtype":"m.text"},"ts":1366741705000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"nobody said anything about regulation being evil?","msgtype":"m.text"},"ts":1366741717000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, they're building it into processors","msgtype":"m.text"},"ts":1366741738000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"so?","msgtype":"m.text"},"ts":1366741744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"see AMD+ARM","msgtype":"m.text"},"ts":1366741746000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Hixie, deregulation can't help against that","msgtype":"m.text"},"ts":1366741794000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"drm in chips isn't a problem","msgtype":"m.text"},"ts":1366741805000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure it is","msgtype":"m.text"},"ts":1366741811000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1366741813000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"breaking drm is trivial","msgtype":"m.text"},"ts":1366741820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because you have no nanotech to hack it","msgtype":"m.text"},"ts":1366741822000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"not when it's firmware-defined","msgtype":"m.text"},"ts":1366741842000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"DRM is \"broken\" technically by design. The only thing that keeps it unbroken is the law.","msgtype":"m.text"},"ts":1366741845000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"paxcoder: you don't need to get the firmware, just the spec for the firmware.","msgtype":"m.text"},"ts":1366741860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gavinc, it's the opposite, it's the greediness of the market","msgtype":"m.text"},"ts":1366741869000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"No, really it isn't.","msgtype":"m.text"},"ts":1366741895000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Hixie, what do you mean? Also, how would you get it?","msgtype":"m.text"},"ts":1366741896000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"gavinc, if there was no legal regulation at all, companies would still manage to produce chips you can't hack","msgtype":"m.text"},"ts":1366741942000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: that kind of thing is leaked regularly (and for serious drm, is often just available publicly, since there's lots of implementors)","msgtype":"m.text"},"ts":1366742002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paxcoder: No, they really wouldn't.","msgtype":"m.text"},"ts":1366742008000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"paxcoder: what's kept more secret is typically the key, but in practice those leak also, or are determined by various cryptographic attacks.","msgtype":"m.text"},"ts":1366742032000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, then why do I still have a firmware blob for my GFX card?","msgtype":"m.text"},"ts":1366742034000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"gives this up as pointless and goes to eat lunch","msgtype":"m.emote"},"ts":1366742078000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"paxcoder: i would suspect it's because hardware decoding is more efficient.","msgtype":"m.text"},"ts":1366742096000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i should go to lunch too","msgtype":"m.text"},"ts":1366742106000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gavin, you can prepend n \"really\"s to your \"no\", but it won't make it a solid argument","msgtype":"m.text"},"ts":1366742107000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1366742107000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, bye. I still think DRM needs no regulation to \"work\".","msgtype":"m.text"},"ts":1366742138000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"In fact, if regulation was sufficient, there would be no need for DRM in the first place.","msgtype":"m.text"},"ts":1366742157000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"(there is no need for drm)","msgtype":"m.text"},"ts":1366742218000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1366742318000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"\"there would be no need for DRM\" implies there is a need for DRM.","msgtype":"m.text"},"ts":1366742379000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I meant the need of companies with such (arguably obsolete) business models, of course.","msgtype":"m.text"},"ts":1366742384000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: DRM doesn't help them.","msgtype":"m.text"},"ts":1366742402000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Dude, the fact that DRM exists proves it does.","msgtype":"m.text"},"ts":1366742419000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"gsnedders, ^","msgtype":"m.text"},"ts":1366742477000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Ask anyone like Netflix, they'll tell you DRM doesn't stop piracy whatsoever. Unless the content producers have different data to everyone elseâ€¦","msgtype":"m.text"},"ts":1366742490000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"Whatsoever\" is an overstatement. All it needs to do is increase revenue, and it does that. But that's not the topic.","msgtype":"m.text"},"ts":1366742603000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"So can someone tell me how exactly EME enables DRM? Is my browser going to have mechanisms for keeping secrets from me?","msgtype":"m.text"},"ts":1366742712000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: It provides an API designed to allow plugins to be installed that keep secrets from you.","msgtype":"m.text"},"ts":1366742748000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or, alternatively, instead of plugins, have support built into the browser that keeps secrets from you.","msgtype":"m.text"},"ts":1366742787000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"An \"open standard\" for proprietary software delivery. Hah","msgtype":"m.text"},"ts":1366742824000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"gsnedders, how would the latter work though?","msgtype":"m.text"},"ts":1366742862000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: It relies upon either the plugin (in the former case) or the browser (in the latter case) being closed source.","msgtype":"m.text"},"ts":1366742889000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, i find it hard to believe that the W3C standard would demand browsers to be non-free.","msgtype":"m.text"},"ts":1366742955000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"They can argue for the former the same way Linux allowed Microsoft's virtualization driver in the kernel, but the latter would not be defensible.","msgtype":"m.text"},"ts":1366743022000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: Well, the former case works fine in free browsers.","msgtype":"m.text"},"ts":1366743177000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"paxcoder: Although the plugin itself is non-free.","msgtype":"m.text"},"ts":1366743184000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"paxcoder: You can theoretically have a free plugin in a free browser, but it gets you nothing beyond being able to support another codec, and browsers already have ways to add extra codecs by and large.","msgtype":"m.text"},"ts":1366743218000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, I see how the former case would work.","msgtype":"m.text"},"ts":1366743286000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: From a web application POV, the cases are indistinguishable.","msgtype":"m.text"},"ts":1366743310000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"paxcoder: And it's not a W3C standard until the majority of the members (â€¦which include various right-holdersâ€¦) vote in favour of it and the director approves it.","msgtype":"m.text"},"ts":1366743487000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SimonSapin: can http://www.w3.org/Style/CSS/Tracker/issues/316 be closed? since gecko/webkit/blink don't have the quirk at all, it should be quite clear that it's not needed for web compat and doesn't need to be specced","msgtype":"m.text"},"ts":1366747389000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: do you run a validator on the spec's IDL blocks? if so, what do you use?","msgtype":"m.text"},"ts":1366748645000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: OMG why are you suffering in SAN JOSE","msgtype":"m.text"},"ts":1366748886000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"would it be reasonable to have anolis validate IDL?","msgtype":"m.text"},"ts":1366748951000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nimbu: html wg f2f","msgtype":"m.text"},"ts":1366748969000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"suffering squared?","msgtype":"m.text"},"ts":1366749015000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"San Jose does feel like a punishment","msgtype":"m.text"},"ts":1366749039000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"or maybe it was the corpo-campus-sprawl parking lot hell","msgtype":"m.text"},"ts":1366749080000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the laugh track from next door is the best part","msgtype":"m.text"},"ts":1366749165000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"zcorpan: yeah... hold on, let me look it up","msgtype":"m.text"},"ts":1366749315000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hober: i c","msgtype":"m.text"},"ts":1366749321000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"ahahahahhahaha","msgtype":"m.text"},"ts":1366749323000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"hober: omg whats happening next door?","msgtype":"m.text"},"ts":1366749336000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"San Jose mob meeting?","msgtype":"m.text"},"ts":1366749339000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"zcorpan: looks like i just pass the doc to http://www.w3.org/2009/07/webidl-check","msgtype":"m.text"},"ts":1366749339000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nimbu: i dunno; there literally is an adjacent room that was recently full of people laughing.","msgtype":"m.text"},"ts":1366749398000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: maybe they are laughing at YOUR room","msgtype":"m.text"},"ts":1366749436000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Hixie: i get a 500 error for http://www.w3.org/2009/07/webidl-check?doc=https%3A%2F%2Fdvcs.w3.org%2Fhg%2Fcsswg%2Fraw-file%2Ftip%2Fcssom-view%2FOverview.html&output=html","msgtype":"m.text"},"ts":1366749446000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nimbu: the cannibas dispensaries are cheaper here","msgtype":"m.text"},"ts":1366749585000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"LOLOLOL","msgtype":"m.text"},"ts":1366749597000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"MikeSmith: this might become a breaking news on some slow-news day","msgtype":"m.text"},"ts":1366749624000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"LUCKILY THIS IS NOT SLOW NEWS DAY","msgtype":"m.text"},"ts":1366749630000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1366749638000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nimbu: there was a baby shower. lots of balloons, bad music and giggling","msgtype":"m.text"},"ts":1366749884000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"cabanier1: D: D:","msgtype":"m.text"},"ts":1366750391000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"TUNING IN FOR THE GOSSIP ON html-wg","msgtype":"m.text"},"ts":1366750398000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"please alert me when something exciting happens","msgtype":"m.text"},"ts":1366750409000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"nimbu: I'm about to raise a point of order about the chairs failing to include a slot for nap time on the agenda.","msgtype":"m.text"},"ts":1366750648000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I thought that was the MSE session?","msgtype":"m.text"},"ts":1366750687000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I was going to say","msgtype":"m.text"},"ts":1366750700000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"always assumed that's what this was for","msgtype":"m.text"},"ts":1366750707000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"ahahahah","msgtype":"m.text"},"ts":1366750708000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"MikeSmith: please do","msgtype":"m.text"},"ts":1366750712000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"hober: I thought that was the part where we were all planning to walk out en masse","msgtype":"m.text"},"ts":1366750745000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can I recommend somebody play Get Lucky by Daft Punk loudly?","msgtype":"m.text"},"ts":1366750749000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"zcorpan: looks like I also set input= ?","msgtype":"m.text"},"ts":1366750759000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: as in, ...?doc=url&input=&output=text","msgtype":"m.text"},"ts":1366750771000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: dunno if that is relevant","msgtype":"m.text"},"ts":1366750784000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh wait I remember now the adjusted plan was that we start to have coughing fits and while we're coughing we go, *cough* *cough* bullshit *cough*","msgtype":"m.text"},"ts":1366750814000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: still 500","msgtype":"m.text"},"ts":1366750814000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: dunno then","msgtype":"m.text"},"ts":1366750820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: no https support maybe?","msgtype":"m.text"},"ts":1366750873000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is having trouble just resolving w3.org today, so...","msgtype":"m.emote"},"ts":1366750887000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1366750891000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah that seems to be it","msgtype":"m.text"},"ts":1366750934000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I'll ask about the https support","msgtype":"m.text"},"ts":1366750948000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nimbu, don't like it","msgtype":"m.text"},"ts":1366752671000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: ?","msgtype":"m.text"},"ts":1366752860000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"nimbu, get lucky","msgtype":"m.text"},"ts":1366752954000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: ah","msgtype":"m.text"},"ts":1366753095000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"its ok","msgtype":"m.text"},"ts":1366753098000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"zcorpan: I was trying to find the source for http://www.w3.org/2009/07/webidl-check but couldn't yet","msgtype":"m.text"},"ts":1366754681000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think dom is the one to ask","msgtype":"m.text"},"ts":1366754689000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe e-mail sysreqâŠ™wo","msgtype":"m.text"},"ts":1366754701000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1366754902000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: the code you had for switching the style of the HTML spec before, for hiding the impl parts, do you still have that code somewhere?","msgtype":"m.text"},"ts":1366755657000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wasn't it just an alternative style sheet?","msgtype":"m.text"},"ts":1366755911000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah but you had an on-page UI for switching it. Remember?","msgtype":"m.text"},"ts":1366756041000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"radio buttons","msgtype":"m.text"},"ts":1366756057000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1366756083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1366756084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it was just a trivial thing","msgtype":"m.text"},"ts":1366756090000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"few radio buttons, toggled which style sheet was enabled","msgtype":"m.text"},"ts":1366756099000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1366756269000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"What ever happened with this spec? There are a lot of awesome ideas but it seems abandonded and unimplemented.. http://www.w3.org/TR/css3-content/","msgtype":"m.text"},"ts":1366756529000,"senderName":"user","senderId":"user@irc"},
{"content":{"body":"That's mostly directed at Hixie, I guess","msgtype":"m.text"},"ts":1366756575000,"senderName":"user","senderId":"user@irc"},
{"content":{"body":"i started working on HTML","msgtype":"m.text"},"ts":1366756715000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and ran out of bandwidth to work on css stuff","msgtype":"m.text"},"ts":1366756724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i told the CSSWG I'd maybe get back to it in 2015-2018, iirc","msgtype":"m.text"},"ts":1366756741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Do you need help with it?  I've got a whole bunch of stuff going on that'd benefit *tremendously* from multiple ::before and ::after definitions :)","msgtype":"m.text"},"ts":1366756843000,"senderName":"user","senderId":"user@irc"},
{"content":{"body":"user: I picked up that particular part here: http://dev.w3.org/csswg/css-pseudo/","msgtype":"m.text"},"ts":1366756911000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"user: sending use cases to www-style might help","msgtype":"m.text"},"ts":1366756922000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: Thanks, that's exactly what I'm interested in","msgtype":"m.text"},"ts":1366756966000,"senderName":"user","senderId":"user@irc"},
{"content":{"body":"user: i'm sure if you volunteer to edit specs the csswg would be happy to have you","msgtype":"m.text"},"ts":1366757035000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Maybe I'll even get a real username for that","msgtype":"m.text"},"ts":1366757363000,"senderName":"user","senderId":"user@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1366757462000,"senderName":"Hixie","senderId":"Hixie@irc"}
]