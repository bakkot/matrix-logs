[
{"content":{"body":"annevk: What is the expected destination of a request coming from `event.respondWith(fetch(event.request))` in a ServiceWorker?","msgtype":"m.text"},"ts":1533963497000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: Should it assume the destination of the input request, or be `\"\"`, which seems to be the destination associated with `fetch()`s","msgtype":"m.text"},"ts":1533963523000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: Given https://fetch.spec.whatwg.org/#dom-request > 13 doesn't copy over \"destination\" information, I imagine the destination will not be preserved, and thus will always represent fetch()? Or...?","msgtype":"m.text"},"ts":1533963651000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: correct","msgtype":"m.text"},"ts":1533967807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: otherwise CSP could be misled","msgtype":"m.text"},"ts":1533967820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: though perhaps for that specific scenario it could be ok","msgtype":"m.text"},"ts":1533967866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, I'm wondering if it would be helpful/non-breaking to copy over destination/initiator (context: https://github.com/whatwg/fetch/pull/785#issuecomment-412253141)","msgtype":"m.text"},"ts":1533967934000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"(disclaimer: don't know much about CSP actually)","msgtype":"m.text"},"ts":1533967944000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"It’s not okay I just remembered","msgtype":"m.text"},"ts":1533968060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The service worker would have script access to the response, whereas the CSP policy might only expect it to render as image","msgtype":"m.text"},"ts":1533968111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh interesting. Will take a closer look tomorrow, that seems problematic","msgtype":"m.text"},"ts":1533968340000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: once priority is non-null it won’t be reset if you preserve it","msgtype":"m.text"},"ts":1533972646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: so I think your PR comment does not apply","msgtype":"m.text"},"ts":1533972665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, Travis again had trouble reaching GitHub","msgtype":"m.text"},"ts":1533986214000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hayato: does blink have some optimization for mouseenter/leave which causes events to not be dispatched if ancestors don't have listeners?","msgtype":"m.text"},"ts":1533988023000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and is it possible that there is a bug when dealing with shadow DOM","msgtype":"m.text"},"ts":1533988036000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1478959 starts to smell like website relying on some bug in Chrome","msgtype":"m.text"},"ts":1533988051000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: oops. Missed that","msgtype":"m.text"},"ts":1533993040000,"senderName":"domfarolino","senderId":"domfarolino@irc"}
]