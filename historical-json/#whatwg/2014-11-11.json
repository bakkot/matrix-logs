[
{"content":{"body":"abinader:","msgtype":"m.text"},"ts":1415673164000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"abinader: ignore thatー fat-fingered","msgtype":"m.text"},"ts":1415673847000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: sure :)","msgtype":"m.text"},"ts":1415673895000,"senderName":"abinader","senderId":"abinader@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1415673913000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rubys: http://intertwingly.net/projects/pegurl/idna.js is bold :) I hope it works out. because it would be nice to have a self-contained conforming implementation with no dependencies","msgtype":"m.text"},"ts":1415674092000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: still depends on punycode","msgtype":"m.text"},"ts":1415693399000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"annevk: oh. Sam's idna.js doesn't implement it yet?","msgtype":"m.text"},"ts":1415693898000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think he uses a different library or file for that","msgtype":"m.text"},"ts":1415693952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1415694002000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: btw I'm behind on reading up about suborigins. From what I've gleaned through mailing-list messages, it seems like a great idea but I've yet to read an actual writeup/proposal for it yet. Is there one somewhere?","msgtype":"m.text"},"ts":1415694012000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: also afaict this is only ToACII, although I'm missing some bits","msgtype":"m.text"},"ts":1415694020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1415694032000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: http://www.chromium.org/developers/design-documents/per-page-suborigins","msgtype":"m.text"},"ts":1415694035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"super","msgtype":"m.text"},"ts":1415694043000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1415694044000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: my next question is whether somebody else has done a higher-level writeup for webdevs","msgtype":"m.text"},"ts":1415694670000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe JakeA knows","msgtype":"m.text"},"ts":1415694677000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://blog.joelweinberger.us/2013/08/suborigins-for-privilege-separation-in.html is pretty good I guess","msgtype":"m.text"},"ts":1415694692000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I was going to point you to that","msgtype":"m.text"},"ts":1415694700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: he's the guy behind the proposal","msgtype":"m.text"},"ts":1415694707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I don't think you'll find much else","msgtype":"m.text"},"ts":1415694713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1415694714000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1415694716000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll go with that for now","msgtype":"m.text"},"ts":1415694723000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm not aware of anything else","msgtype":"m.text"},"ts":1415694733000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Joel's working on the SRI spec too, right?","msgtype":"m.text"},"ts":1415694738000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: k","msgtype":"m.text"},"ts":1415694745000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"stumbles across Devdatta Akhawe's PhD thesis http://www.eecs.berkeley.edu/Pubs/TechRpts/2014/EECS-2014-56.pdf \"Towards High Assurance HTML5 Applications\"","msgtype":"m.emote"},"ts":1415694858000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: he is","msgtype":"m.text"},"ts":1415695917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: seems he's in Japan this week. Will ping Domenic and try to meet up with them for lunch","msgtype":"m.text"},"ts":1415696036000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: you mean Dominic?","msgtype":"m.text"},"ts":1415696076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1415696086000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the \"i\" Dominic","msgtype":"m.text"},"ts":1415696100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the Cooney","msgtype":"m.text"},"ts":1415696107000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1415696138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the word \"compartmentalization\" has far too many letters in it to be useful on twitter","msgtype":"m.text"},"ts":1415696612000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"time for c18n","msgtype":"m.text"},"ts":1415696654000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"didn't we come up with a compression scheme for twitter earlier?","msgtype":"m.text"},"ts":1415696921000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: did you review the security thing about encodings?","msgtype":"m.text"},"ts":1415696998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: learn Chinese and you have a great compression scheme","msgtype":"m.text"},"ts":1415697026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i read it yeah. lgtm but i don't have a good grasp of all the issues","msgtype":"m.text"},"ts":1415697046000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I was gonna add you also have a large audience, but then I remembered that firewall they put in place","msgtype":"m.text"},"ts":1415697055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh yeah twitter is blocked in china isn't it","msgtype":"m.text"},"ts":1415697087000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, you would only get notifications about it through iOS","msgtype":"m.text"},"ts":1415697111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it was amusing","msgtype":"m.text"},"ts":1415697121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So is anyone going to review my iso-2022-jp and gbk/gb18030 tests?","msgtype":"m.text"},"ts":1415697143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They're not that hard","msgtype":"m.text"},"ts":1415697147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And if they land I might be compelled to add some more tests (for all the single-byte stuff, I already wrote those a few times...)","msgtype":"m.text"},"ts":1415697177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"划分 is even half as many characters as c18n","msgtype":"m.text"},"ts":1415697200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I will finally review them tonight, I promise.","msgtype":"m.text"},"ts":1415697226000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"unless zcorpan wants to","msgtype":"m.text"},"ts":1415697240000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i can do it if annevk reviews https://critic.hoppipolla.co.uk/r/3103 :-)","msgtype":"m.text"},"ts":1415697252000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1415697259000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if we could scale that review strategy, then we'd have something","msgtype":"m.text"},"ts":1415697312000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heycam|away: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=22808","msgtype":"m.text"},"ts":1415697345000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that looks rather ugly","msgtype":"m.text"},"ts":1415697622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah :-|","msgtype":"m.text"},"ts":1415697642000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: can't you move the test_obj.done()?","msgtype":"m.text"},"ts":1415697681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1415697711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i should probably de-uglify everything about that test at some point","msgtype":"m.text"},"ts":1415697771000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"right now it works for exposing bugs and doubles as a stress test","msgtype":"m.text"},"ts":1415697816000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Where would I put global object association tests?","msgtype":"m.text"},"ts":1415698648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where is it defined?","msgtype":"m.text"},"ts":1415698716000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: well, it isn't","msgtype":"m.text"},"ts":1415698927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My plan is that IDL gives spec algorithms some hooks","msgtype":"m.text"},"ts":1415698940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"such as \"context object\", \"current Realm\", \"base URL\", whatever else","msgtype":"m.text"},"ts":1415698952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I guess a mixture of IDL and any spec that defines an API","msgtype":"m.text"},"ts":1415698992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://web.mit.edu/bzbarsky/www/testcases/global-object-association/createImageData.html","msgtype":"m.text"},"ts":1415699014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has an excellent example","msgtype":"m.text"},"ts":1415699021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: why is there no assert_instanceof?","msgtype":"m.text"},"ts":1415699741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No one asked?","msgtype":"m.text"},"ts":1415699786000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: see the file from bz above, it would make sense for that, no?","msgtype":"m.text"},"ts":1415699842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because instanceof is probably too indirect for testing that, no?","msgtype":"m.text"},"ts":1415700012000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Given it walks the prototype chain?","msgtype":"m.text"},"ts":1415700022000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: you have an alternative?","msgtype":"m.text"},"ts":1415700174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, wait, instanceof does [[HasInstance]]","msgtype":"m.text"},"ts":1415700216000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"um, ignore me","msgtype":"m.text"},"ts":1415700218000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: WebIDL/ if you want the tests in a central place i guess","msgtype":"m.text"},"ts":1415700313000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: can I patch testharness.js from within web-platform-tests?","msgtype":"m.text"},"ts":1415700394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's in resources/","msgtype":"m.text"},"ts":1415700433000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And I put tests like that with the spec that defines the API","msgtype":"m.text"},"ts":1415700467000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"should idlharness.js not be able to test that?","msgtype":"m.text"},"ts":1415700520000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That would be even better","msgtype":"m.text"},"ts":1415700536000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: how?","msgtype":"m.text"},"ts":1415700550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not super interested in splitting the tests over a dozen directories","msgtype":"m.text"},"ts":1415700679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't the IDL give enough to know what the constructor function is for a given object?","msgtype":"m.text"},"ts":1415700709000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"like idlharness.js knows how to create a given object and knows the Function object that can be used to create it, if one exists, no?","msgtype":"m.text"},"ts":1415700734000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: nope","msgtype":"m.text"},"ts":1415700761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, maybe it can be an idl thing eventually...","msgtype":"m.text"},"ts":1415700815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i guess in general what is needed is \"is a Foo\" check, not \"is a Foo of global X\"","msgtype":"m.text"},"ts":1415700849000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: want to find time for a call this week or next on the API generality/scope stuff. Any evenings you can't do?","msgtype":"m.text"},"ts":1415700868000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"zcorpan: yeah, that's what I'm thinking of","msgtype":"m.text"},"ts":1415700905000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: instanceof can't check that","msgtype":"m.text"},"ts":1415700972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: Tuesday-Thursday evening this week, Tuesday next week","msgtype":"m.text"},"ts":1415701003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i mean since instanceof does the latter, that's probably why it's not in testharness (and testharness explicitly avoids using instanceof for this reason)","msgtype":"m.text"},"ts":1415701026000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"We should definitely be testing that [[HasInstance]] and what it's renamed to in ES6 works correctly on them","msgtype":"m.text"},"ts":1415701029000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: Just realised I asked the question really stupidly. Those are evenings you can't do, or can do?","msgtype":"m.text"},"ts":1415701038000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"cannot","msgtype":"m.text"},"ts":1415701049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1415701062000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Oh yeah zcorpan has a good point","msgtype":"m.text"},"ts":1415701329000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's because instanceof is broken in edge cases","msgtype":"m.text"},"ts":1415701350000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So what pattern should I be using here?","msgtype":"m.text"},"ts":1415701368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: even in ES6?","msgtype":"m.text"},"ts":1415701415000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"cross-Realm it is","msgtype":"m.text"},"ts":1415701440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: I don't know, but if ES6 is making non-backward-compatible changes here then I certainly don't want the test harness to depend on the new semantics","msgtype":"m.text"},"ts":1415701465000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I could just be forgetting what edge-cases you're meaning","msgtype":"m.text"},"ts":1415701502000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: bz's pattern with assert_true. Or assert_instanceof that takes an explicit global object","msgtype":"m.text"},"ts":1415701528000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: is using a synchronous test() within onload fine?","msgtype":"m.text"},"ts":1415701934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"maybe\"","msgtype":"m.text"},"ts":1415701969000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Who to follow...","msgtype":"m.text"},"ts":1415701985000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"* W3C Widget Specs","msgtype":"m.text"},"ts":1415701987000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think so, Twitter","msgtype":"m.text"},"ts":1415701994000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: it works","msgtype":"m.text"},"ts":1415702004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The harness adds a load event listener and if there are no tests remaining when that fires it stops accepting new tests","msgtype":"m.text"},"ts":1415702026000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So you might be depending on the axact order of event listeners","msgtype":"m.text"},"ts":1415702054000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*exact","msgtype":"m.text"},"ts":1415702061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or not, depending on what other tests you have","msgtype":"m.text"},"ts":1415702070000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: currently I just have a single test() within onload()","msgtype":"m.text"},"ts":1415702192000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Then I think you are depending on the order of the event handlers","msgtype":"m.text"},"ts":1415702212000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I guess I could make them single-page tests and just have one file per object-creating thingy","msgtype":"m.text"},"ts":1415702819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1415702820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: so it's not a common case you want to wait for onload and run a bunch of tests?","msgtype":"m.text"},"ts":1415703156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: should I create a whole bunch of async tests and then wait for onload and then do the t.step business for each of them?","msgtype":"m.text"},"ts":1415703235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Let result be the result of calling the [[Call]] internal method of method\"","msgtype":"m.text"},"ts":1415703308000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, ES","msgtype":"m.text"},"ts":1415703310000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: I don't know what you're trying to achieve, but in general the harness has to have *some* way of telling when there are no more tests and there isn't anything later than onload to use","msgtype":"m.text"},"ts":1415703439000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you need it you can use explicit_done: true","msgtype":"m.text"},"ts":1415703463000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: all I want is onload = function() { test(); test(); test() }","msgtype":"m.text"},"ts":1415703483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: e.g. I want to run a bunch of tests synchronously once the subresources have loaded","msgtype":"m.text"},"ts":1415703519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well using setup({explicit_done:true}) at the start and done() at the end certainly works there","msgtype":"m.text"},"ts":1415703622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I could add that","msgtype":"m.text"},"ts":1415703793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, xhr.open('get', url1); xhr.open('get', url2); xhr.send(); will get url2, right?","msgtype":"m.text"},"ts":1415703895000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yup","msgtype":"m.text"},"ts":1415703929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ta","msgtype":"m.text"},"ts":1415703934000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: I updated http://simonsapin.github.io/data-urls/ to not pretend to be a spec, since it wasn’t really","msgtype":"m.text"},"ts":1415703995000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: that's not very useful :-(","msgtype":"m.text"},"ts":1415704193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you mean it would me more useful if I (or someone) had done more work that hasn’t been done yet","msgtype":"m.text"},"ts":1415704268000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I might get to it at some point, it’s just not a priority right now","msgtype":"m.text"},"ts":1415704321000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but the pretend-spec full of issues that I had there before was not very useful either","msgtype":"m.text"},"ts":1415704442000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"wanderview: What's the status of Firefox devtools and ServiceWorker? Are they friendlier? Would love to get more people playing with it in Firefox Nightly","msgtype":"m.text"},"ts":1415705366000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1415707921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I just reviewed your test, but now I'm wondering whether the input format should use surrogate code points or not","msgtype":"m.text"},"ts":1415707948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah seems like that's baked in and would be annoying to change","msgtype":"m.text"},"ts":1415708225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: should i read https://github.com/whatwg/encoding/commit/19b0ebf0e48c3a607ab7623b5b272642dd59d6e7 for reviewing your test?","msgtype":"m.text"},"ts":1415708716000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: you can read https://encoding.spec.whatwg.org/#iso-2022-jp","msgtype":"m.text"},"ts":1415708751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: that would be somewhat required, yes","msgtype":"m.text"},"ts":1415708774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. so i don't need to understand the old spec","msgtype":"m.text"},"ts":1415708907000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: nope, it's obsolete","msgtype":"m.text"},"ts":1415709297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: if I write a script that generates a bunch of static test files","msgtype":"m.text"},"ts":1415709878000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: do you want only the script committed or what it generates?","msgtype":"m.text"},"ts":1415709894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Both","msgtype":"m.text"},"ts":1415710332000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: and Python, correct?","msgtype":"m.text"},"ts":1415710555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1415710622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Preferably","msgtype":"m.text"},"ts":1415710622000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, replied to https://critic.hoppipolla.co.uk/r/3127","msgtype":"m.text"},"ts":1415710631000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: so are you going to add it?","msgtype":"m.text"},"ts":1415710671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can","msgtype":"m.text"},"ts":1415710679000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: e.g. if fetch/interfaces.html had BodyInit","msgtype":"m.text"},"ts":1415710704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: would that work?","msgtype":"m.text"},"ts":1415710709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, you need everything relevant in the one file","msgtype":"m.text"},"ts":1415710740000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well, you don't need to, but that's easiest","msgtype":"m.text"},"ts":1415710752000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I guess add BodyInit with an explanation of its source","msgtype":"m.text"},"ts":1415710806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And Blob and BufferSource and URLSearchParams, I guess","msgtype":"m.text"},"ts":1415710845000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: hmm, are you going to add Document?","msgtype":"m.text"},"ts":1415710877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hrm","msgtype":"m.text"},"ts":1415710890000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: and Node? and everything else? :-)","msgtype":"m.text"},"ts":1415710891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"madness","msgtype":"m.text"},"ts":1415710899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How about I leave it alone :)","msgtype":"m.text"},"ts":1415710917000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: about that test, I wrote it with surrogates because I wasn't actually sure what format the test data expects for supplementary characters","msgtype":"m.text"},"ts":1415711435000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: \\ud83d\\udca9 works as-is in Java, JavaScript, and (I think) in Python too","msgtype":"m.text"},"ts":1415711477000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: is there some portable way to express it without using surrogates?","msgtype":"m.text"},"ts":1415711504000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nah","msgtype":"m.text"},"ts":1415711522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Whether that works in python might depend on what kind of build you have, I'm not sure","msgtype":"m.text"},"ts":1415711535000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1415711547000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I was assuming the test file data is sorta meant to be language-neutral","msgtype":"m.text"},"ts":1415711604000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: which is why relying on surrogates is a bit weird, but it's fine I think","msgtype":"m.text"},"ts":1415712045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK","msgtype":"m.text"},"ts":1415712062000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: actually, I'll prolly make it a dynamically generated resource so I can set some headers","msgtype":"m.text"},"ts":1415712096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but my point was that I don't know a portable way to express it without surrogates. I mean if it were python-only, I think I could just do \\U0001F4A9 (capital U). But that's not going to mean anything outside python.","msgtype":"m.text"},"ts":1415712172000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: btw we really should have more URL tests with supplementary characters. The test file really doesn't have any","msgtype":"m.text"},"ts":1415712219000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: well, e.g. \\# is custom to that input format as well","msgtype":"m.text"},"ts":1415712221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1415712230000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: we could easily come up with something that languages would then have to convert before using","msgtype":"m.text"},"ts":1415712236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1415712242000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"feel free to add more tests","msgtype":"m.text"},"ts":1415712268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we should just decide on something and use it consistently for any new tests","msgtype":"m.text"},"ts":1415712269000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1415712271000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"seems like a good idea","msgtype":"m.text"},"ts":1415712272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh yeah, I think we decided that this is fine","msgtype":"m.text"},"ts":1415712290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"after creating more Encoding tests I'll prolly create more URL tests","msgtype":"m.text"},"ts":1415712324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I wasn't volunteering necessarily to write more myself just now but was thinking about it in part because I just today got private mail from a guy saying:","msgtype":"m.text"},"ts":1415712426000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"One thing worth mentioning is there are some weird special cases in the URL standard for allowed content in query strings, and these differ from the rules used for the rest of the URL. RFC 3987 also special cases query strings, but it looks like it works a bit differently to the URL standard.\"","msgtype":"m.text"},"ts":1415712434000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"I suspect these cases are particularly important for non-English search queries passed to search engines. Whichever standard is used, it's probably worth some additional test coverage for query strings.\"","msgtype":"m.text"},"ts":1415712461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, the tests I'm creating for Encoding actually cover this","msgtype":"m.text"},"ts":1415712486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: ↑ FYI","msgtype":"m.text"},"ts":1415712496000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: OK, good","msgtype":"m.text"},"ts":1415712500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'm using the URL parser to test the Encoding Standard","msgtype":"m.text"},"ts":1415712500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hah cool","msgtype":"m.text"},"ts":1415712508000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's either that or <form> and the latter would require server-side setup","msgtype":"m.text"},"ts":1415712530000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah yeah","msgtype":"m.text"},"ts":1415712539000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though I guess I should cover that too at some point","msgtype":"m.text"},"ts":1415712541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we could do something with wptserve I think, if/when it comes to that","msgtype":"m.text"},"ts":1415712565000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: about https://github.com/w3c/web-platform-tests/pull/1369 I don't understand how you actually made a PR from two separate branches. I didn't think that was actually possible","msgtype":"m.text"},"ts":1415713163000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: ↑","msgtype":"m.text"},"ts":1415713169000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: anyway I'm finally reviewing those right now","msgtype":"m.text"},"ts":1415713193000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks.  Annevk: is there a javascript implementation of Encoding?","msgtype":"m.text"},"ts":1415713257000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"jsbell wrote something","msgtype":"m.text"},"ts":1415713316000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: re: \"I'm using the URL parser to test the Encoding Standard\" ... which URL parser?","msgtype":"m.text"},"ts":1415713343000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"MikeSmith: I don't understand what you don't understand :)","msgtype":"m.text"},"ts":1415713370000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rubys: https://github.com/search?q=user%3Amathiasbynens+encoding+standard","msgtype":"m.text"},"ts":1415713402000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mathiasbynens: iso-2022-jp is missing :-)","msgtype":"m.text"},"ts":1415713473000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks!","msgtype":"m.text"},"ts":1415713503000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Ms2ger: what I found was http://src.chromium.org/viewvc/blink?view=revision&revision=173754 (which is c++)","msgtype":"m.text"},"ts":1415713522000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"zcorpan: i only have packages for the legacy single-byte encodings","msgtype":"m.text"},"ts":1415713560000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"jgraham: I thought you could only create a PR from a single branch","msgtype":"m.text"},"ts":1415713596000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: I don't know what buttons to push to do a PR from multiple branches","msgtype":"m.text"},"ts":1415713614000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mathiasbynens: ah ok","msgtype":"m.text"},"ts":1415713764000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mathiasbynens: and utf-8","msgtype":"m.text"},"ts":1415713778000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://mths.be/utf8js","msgtype":"m.text"},"ts":1415713795000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"yeah and WTF-8","msgtype":"m.text"},"ts":1415713800000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"MikeSmith: I don't know what you mean by \"from\". If you mean that you have master - A - B and you want a PR containing only B, you can edit the branch that the PR is against when you are in the create PR screen (I don't remember what the buttons look like). But in that case the merge button will try to merge into A rather than master which often isn't what you want","msgtype":"m.text"},"ts":1415713863000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mathiasbynens: the readme doesn't say if it implements the encoding standard utf-8 or something else","msgtype":"m.text"},"ts":1415713940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah there’s an open issue on it; it doesn’t atm (allows lone surrogates)","msgtype":"m.text"},"ts":1415714046000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: looks like it throws on invalid input rather than emitting u+fffd (different contexts need different error handling iirc)","msgtype":"m.text"},"ts":1415714108000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mathiasbynens: i see there's a bug about that also","msgtype":"m.text"},"ts":1415714193000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: I mean specifically look at https://github.com/w3c/web-platform-tests/commit/25c529dc883227d6417ab25cd167c135cba72541 So I guess what I mean is more, a PR with commits that are in multiple branches. i.e., in this case that's one commit that's both in PR #1369 (gbk branch) and also in PR #1367 (iso-2022-jp branch). I suppose that's just due to annevk having merged it into the gbk branch","msgtype":"m.text"},"ts":1415714324000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway no big deal. me being confused by git and github is nothing new","msgtype":"m.text"},"ts":1415714346000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: I'm not sure what the devtools status is... but a lot of our work is not in nightly yet since we're developing on a project branch","msgtype":"m.text"},"ts":1415714442000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"MikeSmith: Well sure, that just falls out of the data model","msgtype":"m.text"},"ts":1415714455000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you have a tree like:","msgtype":"m.text"},"ts":1415714468000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"master - B - C","msgtype":"m.text"},"ts":1415714487000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wanderview: no worries, thanks for the update","msgtype":"m.text"},"ts":1415714501000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"         \\ D - E","msgtype":"m.text"},"ts":1415714502000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And you create reviews of branches pointing to C and E they will both contain B","msgtype":"m.text"},"ts":1415714531000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: we want more people to use it as well, of course... so we're working to get it into nightly","msgtype":"m.text"},"ts":1415714548000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: lemmie know when it happens & I'll make sure demos and docs are updated to work in Firefox","msgtype":"m.text"},"ts":1415714579000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it is possible to run what we have in our project branch, though:  http://ftp.mozilla.org/pub/mozilla.org/b2g/tinderbox-builds/maple-macosx64_gecko-debug/latest/","msgtype":"m.text"},"ts":1415714582000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"that install will auto-update when the project branch is updated too (I believe)","msgtype":"m.text"},"ts":1415714612000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Ohh cool, can I link to that from isserviceworkerready?","msgtype":"m.text"},"ts":1415714617000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think so... its a public link... note, thats mac only... I can get the other platform links in just a sec","msgtype":"m.text"},"ts":1415714666000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"http://ftp.mozilla.org/pub/mozilla.org/b2g/tinderbox-builds/maple-win32_gecko-debug/latest/","msgtype":"m.text"},"ts":1415714705000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"http://ftp.mozilla.org/pub/mozilla.org/b2g/tinderbox-builds/maple-linux64_gecko-debug/latest/","msgtype":"m.text"},"ts":1415714730000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: ^^^ also note those are debug builds... so not as fast as optimized builds","msgtype":"m.text"},"ts":1415714747000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1415714752000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Cheers! Is there any way to discover errors thrown within the SW? Even via a lower-level output that can be grep'd?","msgtype":"m.text"},"ts":1415714819000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(don't worry if not, just want to get as much info out as possible)","msgtype":"m.text"},"ts":1415714835000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm pretty sure we report errors in the ServiceWorker script itself now... and I think console.log() is working in workers now, although I could be wrong about that","msgtype":"m.text"},"ts":1415714884000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"let me ask","msgtype":"m.text"},"ts":1415714908000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ta!","msgtype":"m.text"},"ts":1415714923000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: hmm... the console in SW bug is not fixed yet... code in review... not sure if we have it on our project branch","msgtype":"m.text"},"ts":1415715029000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1058644","msgtype":"m.text"},"ts":1415715035000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":":-\\","msgtype":"m.text"},"ts":1415715037000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Sounds like it's close though, which is great","msgtype":"m.text"},"ts":1415715065000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: so if you have a minute, I'm trying something basic about the spec for the iso-2022 decoder, which is: Where does it require implementations to return �$ for 0x1b, 0x24 rather than just returning � only?","msgtype":"m.text"},"ts":1415715214000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: looking","msgtype":"m.text"},"ts":1415715240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So https://encoding.spec.whatwg.org/#iso-2022-jp-decoder 0x1B puts it into escape start","msgtype":"m.text"},"ts":1415715273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, it continues after the �, it doesn't just abort","msgtype":"m.text"},"ts":1415715278000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"0x24 puts it into escape","msgtype":"m.text"},"ts":1415715294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Step 8 of escape puts 0x24 back","msgtype":"m.text"},"ts":1415715325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Step 9 returns error","msgtype":"m.text"},"ts":1415715332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and sets state back to ASCII)","msgtype":"m.text"},"ts":1415715353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ASCII then outputs 0x24 as code point","msgtype":"m.text"},"ts":1415715365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I had (mis)thought it aborted after returning error","msgtype":"m.text"},"ts":1415715418000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rubys: the one in the browser","msgtype":"m.text"},"ts":1415715430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but I realize now the spec doesn't say abort, it says continue","msgtype":"m.text"},"ts":1415715439000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rubys: https://github.com/inexorabletash/text-encoding is an actual polyfill","msgtype":"m.text"},"ts":1415715464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: oh yeah, the handler stops being invoked once finished is return","msgtype":"m.text"},"ts":1415715510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ed","msgtype":"m.text"},"ts":1415715513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: as for the PR, I think I messed up","msgtype":"m.text"},"ts":1415715555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I don't really know how to git","msgtype":"m.text"},"ts":1415715560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know how either. But anyway you didn't mess up anything. It doesn't create any merge conflicts or anything","msgtype":"m.text"},"ts":1415715662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: well I now I have two PRs, one being a superset","msgtype":"m.text"},"ts":1415715689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_: I think you meant \"does not suffice\"","msgtype":"m.text"},"ts":1415715712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: console for SW patch just pushed to the project branch... so in theory should be supported in that download later today or tomorrow","msgtype":"m.text"},"ts":1415717207000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ohh, that's brilliant","msgtype":"m.text"},"ts":1415717324000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"which browser vendor honor whatwg html5 the most?","msgtype":"m.text"},"ts":1415717492000,"senderName":"pikaren","senderId":"pikaren@irc"},
{"content":{"body":"Browser vendors have honour?","msgtype":"m.text"},"ts":1415717583000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"pikaren: By which I mean, that doesn't make much sense as a question","msgtype":"m.text"},"ts":1415717649000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic: https://github.com/promises-aplus/promises-tests/blob/master/lib/tests/2.2.1.js#L30 why are we checking non-functions for fulfilled on a rejected promise?","msgtype":"m.text"},"ts":1415717653000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I’m trying to understand this part of the chaining process. It’s broken in my current Promise polyfill.","msgtype":"m.text"},"ts":1415717723000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"MikeSmith: here is a self-contained (no dependencies) punycode library: https://github.com/bestiejs/punycode.js/","msgtype":"m.text"},"ts":1415718990000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: thanks for the pointer to https://github.com/inexorabletash/text-encoding","msgtype":"m.text"},"ts":1415719013000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Ah, figured out chaining. Woohoo!!","msgtype":"m.text"},"ts":1415720779000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"right on","msgtype":"m.text"},"ts":1415720796000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Wow, everything passes. Woohoo!","msgtype":"m.text"},"ts":1415720822000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"isn't that just the best feeling?","msgtype":"m.text"},"ts":1415720842000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yes, like getting one of those tall pieces in Tetris.","msgtype":"m.text"},"ts":1415720926000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"rubys: it's not really clear to me how you're implementing http://www.unicode.org/reports/tr46/#ToASCII in idna.js","msgtype":"m.text"},"ts":1415721997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: or www.unicode.org/reports/tr46/#Processing for that matter","msgtype":"m.text"},"ts":1415722073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ugh, address bar copy and paste is really terrible these days","msgtype":"m.text"},"ts":1415722086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: take a look at https://github.com/rubys/url/blob/peg.js/url.pegjs#L603","msgtype":"m.text"},"ts":1415722384000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: yeah that looks wrong","msgtype":"m.text"},"ts":1415722426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: explain?","msgtype":"m.text"},"ts":1415722439000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: you're running something called processing_map whereas the spec calls for running domain to ASCII","msgtype":"m.text"},"ts":1415722493000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domain to ASCII has a number of steps.  I believe I implement those steps, but I unwrap them a bit so that I can do better error reporting.","msgtype":"m.text"},"ts":1415722534000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: should domain to ASCII be part of the IDNA module?","msgtype":"m.text"},"ts":1415722552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"example: I now report conformance errors if IDNA ignore characters are encountered","msgtype":"m.text"},"ts":1415722575000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I could refactor that logic into the IDNA module, sure.  I would like to retain the ability to detect conformance errors.","msgtype":"m.text"},"ts":1415722658000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: I guess you removed the optional bits that the URL Standard not ended up using","msgtype":"m.text"},"ts":1415722680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Meanwhile, if you could identify where this logic is wrong, I will try to fix.","msgtype":"m.text"},"ts":1415722681000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"My goal at the moment is to implement the URL standard.  In the process, I'm iteratively implementing more and more of the underlying dependencies.","msgtype":"m.text"},"ts":1415722725000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"well, implementing is too strong a word… implementing or incorporating implementations.","msgtype":"m.text"},"ts":1415722742000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"What is your plan for the conditional domain to Unicode step?","msgtype":"m.text"},"ts":1415722791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: https://github.com/mathiasbynens/todo/issues/9","msgtype":"m.text"},"ts":1415722806000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"annevk: If I open a tab, enter a url & go, is that request \"no-cors\"?","msgtype":"m.text"},"ts":1415722840000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"rubys: http://intertwingly.net/projects/pegurl/idna.js what I cannot find here e.g. is \"xn--\" while http://www.unicode.org/reports/tr46/#Processing definitely calls for that","msgtype":"m.text"},"ts":1415722883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: yeah","msgtype":"m.text"},"ts":1415722905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you identify a test that requires that step?","msgtype":"m.text"},"ts":1415722939000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: I think we've regressed on being able to provide another site's HTML in response to a navigation","msgtype":"m.text"},"ts":1415722992000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"dunno if our implementation has","msgtype":"m.text"},"ts":1415722998000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"rubys1: http://xn--†/ or some such?","msgtype":"m.text"},"ts":1415723002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you'll have to elaborate a bit","msgtype":"m.text"},"ts":1415723037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I satisfy a request to evil.com with a response from example.com. I now have the content of example.com executed in the origin of evil.com","msgtype":"m.text"},"ts":1415723139000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: if that includes something like a <script src> I'll pick that up again, and inject scripts that can inspect the content","msgtype":"m.text"},"ts":1415723176000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you'll have to elaborate more, e.g. what document is currently loaded, what SW is in effect","msgtype":"m.text"},"ts":1415723180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I own evil.com, user visits, I install sw at /sw.js","msgtype":"m.text"},"ts":1415723207000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: User visits evil.com again (or I force a refresh), I catch the request in the sw, and respondWith(fetch('//example.com', {mode: 'no-cors'}))","msgtype":"m.text"},"ts":1415723269000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah yeah, I was expecting the Navigate algorithm to catch that","msgtype":"m.text"},"ts":1415723329000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: perhaps navigate is always same-origin?","msgtype":"m.text"},"ts":1415723349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: navigation is a bit of a special case...","msgtype":"m.text"},"ts":1415723365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that would fix it, although I should still be able to satisfy navigates with new Response, CORS requests are fine too","msgtype":"m.text"},"ts":1415723442000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Maybe navigates are CORS?","msgtype":"m.text"},"ts":1415723460000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"no that doesn't work","msgtype":"m.text"},"ts":1415723485000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"perhaps we need mode=navigate","msgtype":"m.text"},"ts":1415723505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1415723512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CORS doesn't work","msgtype":"m.text"},"ts":1415723528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Somewhere we need additional logic","msgtype":"m.text"},"ts":1415723546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Just\" have to decide where and what it should be","msgtype":"m.text"},"ts":1415723566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I was about to file that fetch bug about the contexts, and I was thinking \"what we actually need is mode=navigate, didn't we have that to stop…\" etc etc","msgtype":"m.text"},"ts":1415723571000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Is clicking a link a navigation?","msgtype":"m.text"},"ts":1415723732000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Even if it responds content-disposition?","msgtype":"m.text"},"ts":1415723748000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: clicking a link invokes navigate","msgtype":"m.text"},"ts":1415723815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: mode=navigation would work then","msgtype":"m.text"},"ts":1415723848000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"trying to figure out if we need it for sharedworker too","msgtype":"m.text"},"ts":1415723868000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I think we do","msgtype":"m.text"},"ts":1415723886000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"not as much is exposed","msgtype":"m.text"},"ts":1415723891000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: content-disposition however doesn't create a new Window","msgtype":"m.text"},"ts":1415723921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it's treated as a download","msgtype":"m.text"},"ts":1415723925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so basically when you click a link, navigate is invoked, which waits for the response to decide what to do","msgtype":"m.text"},"ts":1415723945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: sharedworker is always same-origin iirc","msgtype":"m.text"},"ts":1415723958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if we know something is a navigation, we may not need that context group","msgtype":"m.text"},"ts":1415724112000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sure, but sharedworker isn't really a navigation","msgtype":"m.text"},"ts":1415724605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it doesn't invoke navigate, for instance","msgtype":"m.text"},"ts":1415724611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it does get its own SW and CSP","msgtype":"m.text"},"ts":1415724633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and it does need mode=same-origin to do the right thing","msgtype":"m.text"},"ts":1415724654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: SW is similar, it gets its own CSP, it's the one thing that goes without SW, and it also needs mode=same-origin","msgtype":"m.text"},"ts":1415724714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so we need some amount of orthogonality, and some amount of grouping","msgtype":"m.text"},"ts":1415724742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: see also this email that went unanswered: http://lists.w3.org/Archives/Public/public-webappsec/2014Oct/0120.html","msgtype":"m.text"},"ts":1415724787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: ^ that email was also addressed towards you","msgtype":"m.text"},"ts":1415724803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess we could still have a group for navigates + sharedworker","msgtype":"m.text"},"ts":1415725171000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think same-origin for navigation is not so bad","msgtype":"m.text"},"ts":1415725241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Being able to expose mode=navigate to JS would be great. It's important when it comes to the type of fallback to display","msgtype":"m.text"},"ts":1415725243000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: https://github.com/rubys/url/blob/peg.js/url.pegjs#L646 is where xn-- is added","msgtype":"m.text"},"ts":1415725259000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: does `new Response(\"Hello!\")` count as same-origin?","msgtype":"m.text"},"ts":1415725285000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think a synthetic response would also be same-origin, yes","msgtype":"m.text"},"ts":1415725355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"always, even","msgtype":"m.text"},"ts":1415725361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The alternative is https://fetch.spec.whatwg.org/#http-fetch 2.2.3 if request is navigate and response is opaque, fail","msgtype":"m.text"},"ts":1415725403000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(which allows CORS responses)","msgtype":"m.text"},"ts":1415725423000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"mathiasbynens: have you seen https://github.com/rubys/url/tree/peg.js/reference-implementation and http://intertwingly.net/projects/pegurl/liveview.html ?","msgtype":"m.text"},"ts":1415725494000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"JakeA: I think there is some sense in allowing a stored CORS response to a same-origin request","msgtype":"m.text"},"ts":1415725570000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The order or timing in which Promises fire in Firefox and Chrome are pretty inconsistent.","msgtype":"m.text"},"ts":1415725594000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JakeA: just have to make sure not to lose the masking","msgtype":"m.text"},"ts":1415725611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: JavaScript <> HTML haven't worked out the spec for timing","msgtype":"m.text"},"ts":1415725631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Once started, Firefox moves through a promise chain synchronously.","msgtype":"m.text"},"ts":1415725647000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Or at least, that’s how it appears to be when compared to Chrome.","msgtype":"m.text"},"ts":1415725671000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: i don't understand the question in that e-mail","msgtype":"m.text"},"ts":1415725672000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-(","msgtype":"m.text"},"ts":1415725685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tried to be very elaborate for once","msgtype":"m.emote"},"ts":1415725695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: actually, the question is just \"Thoughts?\"","msgtype":"m.text"},"ts":1415725721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then the answer is \"no\" :-)","msgtype":"m.text"},"ts":1415725731000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't have the service workers stuff paged in","msgtype":"m.text"},"ts":1415725737000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the statement \"Since you cannot message to a dedicated worker from anything but the\" seems false","msgtype":"m.text"},"ts":1415725765000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"environment that created it","msgtype":"m.text"},"ts":1415725768000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1415725771000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mispaste","msgtype":"m.text"},"ts":1415725773000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but anyway","msgtype":"m.text"},"ts":1415725775000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that bit is wrong","msgtype":"m.text"},"ts":1415725781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but fundamentally i don't understand the problem in that e-mail","msgtype":"m.text"},"ts":1415725827000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: e.g. could you have multiple Worker objects in different environments communicating with the same DedicatedWorkerGlobalScope?","msgtype":"m.text"},"ts":1415725835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1415725845000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MessagePorts lets anyone communicate with anyone","msgtype":"m.text"},"ts":1415725856000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just vend a port and send it along to the other place","msgtype":"m.text"},"ts":1415725865000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"via as many other ports as you need","msgtype":"m.text"},"ts":1415725869000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I thought that the ports setup by new Worker() was a 1:1 channel","msgtype":"m.text"},"ts":1415725873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that port is, but you can send others through it","msgtype":"m.text"},"ts":1415725886000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's nothing special about that port other than that you can't get a hold of it from script directly","msgtype":"m.text"},"ts":1415725907000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the context that i'm missing in that e-mail is why we care about \"clients\" at all","msgtype":"m.text"},"ts":1415725943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The question is basically whether DedicatedWorker should be treated as a slave of its environment or more of an independent entity","msgtype":"m.text"},"ts":1415725969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why treat it as either?","msgtype":"m.text"},"ts":1415725982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what does it mean to treat it as either?","msgtype":"m.text"},"ts":1415725989000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JakeA: do we need to do anything if the SW script remains the same, but one of its importScript() resources changes?  as far as I can tell the spec doesn't check for that... so you have to change the SW script itself to get updates to your importScripts... correct?","msgtype":"m.text"},"ts":1415725990000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Hixie: a service worker exposes the environments it handles fetches for","msgtype":"m.text"},"ts":1415725992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why","msgtype":"m.text"},"ts":1415725999000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how?","msgtype":"m.text"},"ts":1415726008000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: can't we just assume that it does?","msgtype":"m.text"},"ts":1415726011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what does that mean","msgtype":"m.text"},"ts":1415726012000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the environment is the global object?","msgtype":"m.text"},"ts":1415726026000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: whenever a new fetch comes in, there's some object that allows communicating back with the environment","msgtype":"m.text"},"ts":1415726028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok...","msgtype":"m.text"},"ts":1415726047000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so why is a worker any different than a Window here?","msgtype":"m.text"},"ts":1415726053000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't get the problem here","msgtype":"m.text"},"ts":1415726071000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well, SharedWorker is designed to be connected with multiple environments","msgtype":"m.text"},"ts":1415726091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: a dedicated worker is not","msgtype":"m.text"},"ts":1415726098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1415726102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: but I can see how a Window isn't either","msgtype":"m.text"},"ts":1415726106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sharedworker and dedicatedworker and window are all identical in the regard of how they communicate to service workers","msgtype":"m.text"},"ts":1415726118000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sharedworker is like dedicatedworker, except that when a new connection _from a SharedWorker object_ comes in, you get a 'connect' event","msgtype":"m.text"},"ts":1415726139000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but you wouldn't want that event to be used for service workers","msgtype":"m.text"},"ts":1415726146000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would make no sense","msgtype":"m.text"},"ts":1415726148000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"shared workers and dedicated workers are both able to communicate with multiple environments","msgtype":"m.text"},"ts":1415726182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1415726199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the only difference is that when you create a dedicated worker, you get back a new one, and when you create a shared worker, you get back the existing one if it's already there","msgtype":"m.text"},"ts":1415726210000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You're right, I'm not sure why I was being silly","msgtype":"m.text"},"ts":1415726220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure it's a good sign that nobody else noticed... or maybe they get bored of telling me","msgtype":"m.text"},"ts":1415726306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ^^ is good material for sorting out the client stuff","msgtype":"m.text"},"ts":1415726342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what kinds of communication are you expecting btw? between service workers and whoever is making a particular request?","msgtype":"m.text"},"ts":1415726456000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wanderview: correct","msgtype":"m.text"},"ts":1415726761000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1415726768000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Hixie: if you were going to polyfill something like client headers you may want to have a conversation about image size","msgtype":"m.text"},"ts":1415726874000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"if the only use case is polyfill, then i'd drop it entirely.","msgtype":"m.text"},"ts":1415726901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i don't understand what client headers means in this context","msgtype":"m.text"},"ts":1415726919000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i don't understand how you imagine this conversation would procede","msgtype":"m.text"},"ts":1415726927000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JakeA: or maybe just signal \"hey, that thing I send you from the cache, well I make a network request for it too and found an update\"","msgtype":"m.text"},"ts":1415726929000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"can you elaborate?","msgtype":"m.text"},"ts":1415726930000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Didn't mean to reply to myself","msgtype":"m.text"},"ts":1415726938000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"how do you expect to identify \"that thing\"?","msgtype":"m.text"},"ts":1415726949000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: isn't it part of the extensible web to allow polyfills?","msgtype":"m.text"},"ts":1415727039000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"\"extensible web\"?","msgtype":"m.text"},"ts":1415727057000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean, \"the web\"?","msgtype":"m.text"},"ts":1415727063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: maybe sending the window width or pixel density as a header","msgtype":"m.text"},"ts":1415727094000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hixie: well it's certainly not extensible if we remove stuff from the spec because it only supports polyfilling potential future behaviours","msgtype":"m.text"},"ts":1415727164000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"well a worker isn't going to know the pixel density. so you'd have to talk to a window for that, even if the client is the worker. so talking to a client doesn't help.","msgtype":"m.text"},"ts":1415727193000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"imho, if something is polyfillable then we shouldn't be speccing it.","msgtype":"m.text"},"ts":1415727223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and if something isn't truly polyfillable then we should just ship it and not waste authors' time with making them polyfill it.","msgtype":"m.text"},"ts":1415727239000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: I'll do the rest of that PR (the gbk tests part) after a few hours","msgtype":"m.text"},"ts":1415727334000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"s/do/review","msgtype":"m.text"},"ts":1415727347000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: no, but having some request clients have different methods would be surprising. Especially if there's no reason we can't post message to a particular type","msgtype":"m.text"},"ts":1415727353000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"not sure what you're responding to there","msgtype":"m.text"},"ts":1415727379000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"a worker wouldn't know the pixel density\"","msgtype":"m.text"},"ts":1415727426000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"i didn't suggest anything having methods at all, let alone different ones","msgtype":"m.text"},"ts":1415727448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i don't follow","msgtype":"m.text"},"ts":1415727454000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I want to expose the request client so you can see its type and postmessage to it","msgtype":"m.text"},"ts":1415727498000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"how would the client associate these incoming service worker messages with requests?","msgtype":"m.text"},"ts":1415727538000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Data sent with the postmessage","msgtype":"m.text"},"ts":1415727566000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"There may be ambiguity linking it to the particular image element, that's fair. But window width & density shouldn't be an issue","msgtype":"m.text"},"ts":1415727603000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"your solution doesn't address window width and density","msgtype":"m.text"},"ts":1415727670000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you'd need to find a request that came from a Window so you could ask it for the density (and hope that Window is on the same screen as the canvas that the dedicated worker that asked for the image is going to later have its data painted onto)","msgtype":"m.text"},"ts":1415727708000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and for the update use case, if you can't associate it to a particular image element, what's the client supposed to do?","msgtype":"m.text"},"ts":1415727755000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for the use cases you've given, the solution you've given seems suboptimal.","msgtype":"m.text"},"ts":1415727775000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i would recommend a different approach. First, have all the potential clients have a way to contact the service worker directly, similar to how shared workers work.","msgtype":"m.text"},"ts":1415727806000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"second, have Fetch include a port to the service worker associated with that fetch","msgtype":"m.text"},"ts":1415727828000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In this case, the worker would respond \"I don't know the pixel density, I'm a worker, assume [fallback]\"","msgtype":"m.text"},"ts":1415727846000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so if you want to be notified of out-of-band data for a request, you use Fetch","msgtype":"m.text"},"ts":1415727849000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that response would be terrible","msgtype":"m.text"},"ts":1415727854000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why not just have the window send the service worker the right answer.","msgtype":"m.text"},"ts":1415727864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In the update case can't you assume all elements using that url?","msgtype":"m.text"},"ts":1415727889000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"you want the client to crawl its DOM doing URL checks? that's a pretty bad API","msgtype":"m.text"},"ts":1415727923000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"All clients already can contact the SW","msgtype":"m.text"},"ts":1415727974000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"\"have Fetch include a port to the service worker associated with that fetch\" I don't understands this.","msgtype":"m.text"},"ts":1415728017000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"How would that surface in the API?","msgtype":"m.text"},"ts":1415728077000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"when you do new Fetch()","msgtype":"m.text"},"ts":1415728078000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you expose fetch.port","msgtype":"m.text"},"ts":1415728083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and on the service worker side, a fetch that corresponds to a Fetch has a port on it","msgtype":"m.text"},"ts":1415728100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That will always be navigator.serviceWorker.controller","msgtype":"m.text"},"ts":1415728113000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1415728124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"navigator.serviceWorker.controller is a reference to the worker the page will send requests to. It has postMessage","msgtype":"m.text"},"ts":1415728168000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"no i mean a _new_ port","msgtype":"m.text"},"ts":1415728183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"specifically for that fetch","msgtype":"m.text"},"ts":1415728190000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"new Fetch().port != new Fetch().port","msgtype":"m.text"},"ts":1415728204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh ok, what wouldn't work for <img>","msgtype":"m.text"},"ts":1415728225000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right this would only be for Fetch","msgtype":"m.text"},"ts":1415728235000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you want updates, you do it via Fetch","msgtype":"m.text"},"ts":1415728240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe later if we expose the Fetch of images, it gets exposed there too","msgtype":"m.text"},"ts":1415728257000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm, that could work well for progress stuff too","msgtype":"m.text"},"ts":1415728360000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Although the SW can enumerate its clients and send them messages","msgtype":"m.text"},"ts":1415728403000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wanted those objects to be the same as request.client","msgtype":"m.text"},"ts":1415728421000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Seems weird to make them different","msgtype":"m.text"},"ts":1415728437000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"imho request.client shouldn't exist","msgtype":"m.text"},"ts":1415728444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"exposing clients leads to bad patterns","msgtype":"m.text"},"ts":1415728471000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"similar to ambient authority","msgtype":"m.text"},"ts":1415728483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"basically you get confused deputy issues","msgtype":"m.text"},"ts":1415728490000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"consider an implementation where there's just a Window that does all requests","msgtype":"m.text"},"ts":1415728503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then one day, the code is refactored so that some requests are actually done from a worker","msgtype":"m.text"},"ts":1415728515000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it shouldn't change anything","msgtype":"m.text"},"ts":1415728519000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it does","msgtype":"m.text"},"ts":1415728526000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Feels like we should expose as much about the request as we can safely expose, and treat devs like adults","msgtype":"m.text"},"ts":1415728566000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"you don't give an untrained adult a loaded gun with the safeties off","msgtype":"m.text"},"ts":1415728602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or to put it another way: guardrails on balconies aren't just for children","msgtype":"m.text"},"ts":1415728641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: thanks","msgtype":"m.text"},"ts":1415728641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which would include the type of client, it's visibility state on request, its url","msgtype":"m.text"},"ts":1415728642000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"imho that's making the same mistake that was made by cookies","msgtype":"m.text"},"ts":1415728663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the model used by capabilities is way more sensible","msgtype":"m.text"},"ts":1415728709000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I like the idea of exposing Request.port","msgtype":"m.text"},"ts":1415728766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or some such, if we need it","msgtype":"m.text"},"ts":1415728772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"makes more sense since you can actually negotiate things about the request with the party that initiated it","msgtype":"m.text"},"ts":1415728795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1415728838000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"discovers that a mail filter for \"Subject: * deadline *\" on standards lists reliably catches only pointless e-mail","msgtype":"m.emote"},"ts":1415728921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1415728945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: perhaps we should reconsider the clients model","msgtype":"m.text"},"ts":1415728967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we still need it for interaction post push message, but will reconsider it for reqiest","msgtype":"m.text"},"ts":1415729045000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: and announcing updates","msgtype":"m.text"},"ts":1415729112000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: is there some way to require TLS for a test?","msgtype":"m.text"},"ts":1415729376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not for a top level page at the moment","msgtype":"m.text"},"ts":1415729417000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: that seems problematic","msgtype":"m.text"},"ts":1415729433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You can use an iframe or window.open a tlbc for the moment","msgtype":"m.text"},"ts":1415729435000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(also tls doesn't work at all until someone reviews my changes","msgtype":"m.text"},"ts":1415729449000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1415729451000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk, is it noted in the xhr spec anywhere that people might want to some day get rid of synchronous requests? if that's ever feasible... I just want to have something (other than https://www.w3.org/Bugs/Public/show_bug.cgi?id=24790) to discourage people from using it","msgtype":"m.text"},"ts":1415739157000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well, doesn't matter I guess","msgtype":"m.text"},"ts":1415739171000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: https://xhr.spec.whatwg.org/#sync-warning","msgtype":"m.text"},"ts":1415739244000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not quite a deprecation notice, just a warning of why it's a bad idea","msgtype":"m.text"},"ts":1415739273000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i guess that works though","msgtype":"m.text"},"ts":1415739276000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"wycats: yt?","msgtype":"m.text"},"ts":1415739723000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"caitp: what would you expect from a deprecation notice?","msgtype":"m.text"},"ts":1415741284000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it would be nice to have a hardline \"we want to get rid of this\"","msgtype":"m.text"},"ts":1415741310000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"even if it was in the spec rather than in implementations, that would be awesome","msgtype":"m.text"},"ts":1415741332000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"because then whenever anyone asks for it (and they do :() I could say \"hey look over there, it's gonna be gone in 6 months, so we can't\" even if I know that's not really true","msgtype":"m.text"},"ts":1415741367000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: isn't that what the second sentence says?","msgtype":"m.text"},"ts":1415741378000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's definitely a discouragement","msgtype":"m.text"},"ts":1415741407000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but it's maybe not a hard \"no\"","msgtype":"m.text"},"ts":1415741412000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it says browsers are encouraged to throw so the feature can be removed","msgtype":"m.text"},"ts":1415741429000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the first sentence says authors must not use it","msgtype":"m.text"},"ts":1415741443000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i don't understand what you're missing","msgtype":"m.text"},"ts":1415741451000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"> when the JavaScript global environment is a document environment","msgtype":"m.text"},"ts":1415741564000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"^--- this statement doesn't mean anything to non-implementors","msgtype":"m.text"},"ts":1415741573000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"most people won't even interpret that as a \"this doesn't apply to workers\"","msgtype":"m.text"},"ts":1415741586000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"\"as it has detrimental effects to the end user's experience\" <<< a lot of people think they have reasons to use it in spite of that --- so it's definitely good that it's there, but they still think they know better","msgtype":"m.text"},"ts":1415741639000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"\"encouraged to warn about such usage in developer tools and may experiment with throwing\" <<< not really normative, not a strong statement","msgtype":"m.text"},"ts":1415741686000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"all I'm saying is it would be nice to have a strong statement against it","msgtype":"m.text"},"ts":1415741705000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there are some in bugs, but it's hard to get people to look at those","msgtype":"m.text"},"ts":1415741726000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: what do you think of https://html.spec.whatwg.org/multipage/webappapis.html#dialogs-implemented-using-separate-documents ?","msgtype":"m.text"},"ts":1415741867000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that's a lot nicer, and in cases where there are actually threads on removing them from the platform, you can link people to them so they can get the anger off their chests","msgtype":"m.text"},"ts":1415741932000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"technically it's weaker since it doesn't have anything normative. but i can see that it's easier to understand the message","msgtype":"m.text"},"ts":1415741982000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"just my opinion, though, it's up to you guys on the xhr thing --- it would just be a bit easier for for me","msgtype":"m.text"},"ts":1415741987000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: ^","msgtype":"m.text"},"ts":1415742002000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"caitp: zcorpan: thanks, let's try to fix that now","msgtype":"m.text"},"ts":1415742329000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: zcorpan: https://xhr.spec.whatwg.org/#sync-warning","msgtype":"m.text"},"ts":1415742970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that looks good :)","msgtype":"m.text"},"ts":1415743117000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that oughta shut em up... I mean, convince them that they don't need to be able to do that**","msgtype":"m.text"},"ts":1415743133000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: the second sentence now has two \"therefore\"s","msgtype":"m.text"},"ts":1415743135000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it does?","msgtype":"m.text"},"ts":1415743162000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"http://portal.cs.oag.state.tx.us/OAGStaticContent/portal/login/help/listPasswordRules.htm and no TLS","msgtype":"m.text"},"ts":1415743164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what the fuck","msgtype":"m.text"},"ts":1415743170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well one therefore and one as","msgtype":"m.text"},"ts":1415743170000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(via Twitter)","msgtype":"m.text"},"ts":1415743176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: maybe put \"as it has detrimental effects to the end user's experience\" in the first sentence?","msgtype":"m.text"},"ts":1415743244000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks, done","msgtype":"m.text"},"ts":1415743340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lgtm","msgtype":"m.text"},"ts":1415743370000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, ack","msgtype":"m.text"},"ts":1415743828000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: 1) are you free to work on IDL bugs again? 2) will be in Portland?","msgtype":"m.text"},"ts":1415743917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yes, though so far this week I've been catching up on bugs. and yes.","msgtype":"m.text"},"ts":1415743966000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, haven't read mailing list mail / w3c bugs yet","msgtype":"m.text"},"ts":1415744004000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: twice awesome","msgtype":"m.text"},"ts":1415744004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: enjoy","msgtype":"m.text"},"ts":1415744040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah always my favourite part of returning :/","msgtype":"m.text"},"ts":1415744067000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: I've been working on the associated Realm thing with bz","msgtype":"m.text"},"ts":1415744089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: https://github.com/w3c/web-platform-tests/pull/1381 has a bunch of tests for the near empty WebIDL directory","msgtype":"m.text"},"ts":1415744106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, oh cool, so this will replace the \"associated ECMAScript global environment\" wording?","msgtype":"m.text"},"ts":1415744108000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: haven't gotten quite that far yet","msgtype":"m.text"},"ts":1415744128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: mostly figuring out what the status quo is","msgtype":"m.text"},"ts":1415744153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, ok. tbh I never looked into what the ES6 spec did with Realms and how useful/realistic they are.","msgtype":"m.text"},"ts":1415744155000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well they're a match for ES","msgtype":"m.text"},"ts":1415744177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but platform is more complicated :-(","msgtype":"m.text"},"ts":1415744183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so we have the current Realm, the entry settings object, and the incumbent settings object","msgtype":"m.text"},"ts":1415744203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and then specification writers have to make sure to pick the right one for base URLs, origins, etc.","msgtype":"m.text"},"ts":1415744220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hint: doesn't work","msgtype":"m.text"},"ts":1415744238000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what a pain","msgtype":"m.text"},"ts":1415744240000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"seeing tests for this stuff will be awesome though!","msgtype":"m.text"},"ts":1415744256000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah, so hopefully we can figure out what we want the default setup to be going forward, make that easy, and then prefix the rest with legacy or some such","msgtype":"m.text"},"ts":1415744285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds great","msgtype":"m.text"},"ts":1415744315000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"erm","msgtype":"m.text"},"ts":1415744354000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"where did my Web IDL tests go?","msgtype":"m.text"},"ts":1415744359000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: are they still in a pull request?","msgtype":"m.text"},"ts":1415744370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, oh yeah that's right","msgtype":"m.text"},"ts":1415744378000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, I never addressed plh's/dom's comments","msgtype":"m.text"},"ts":1415744384000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: gotta go, guess we'll talk later about the open issues once you've caught up","msgtype":"m.text"},"ts":1415744529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, cool, ttyl","msgtype":"m.text"},"ts":1415744546000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"gb18030 is nuts","msgtype":"m.text"},"ts":1415748008000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or gblboeo as I call it","msgtype":"m.text"},"ts":1415748108000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1415748180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]