[
{"content":{"body":"Is there a reference implementation of the Encoding Standard anywhere?","msgtype":"m.text"},"ts":1509933323000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm trying to make WebKit more compliant but the WPT tests aren't as exhaustive as I would hope for","msgtype":"m.text"},"ts":1509933344000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"<insert obvious request to submit more tests here>","msgtype":"m.text"},"ts":1509933576000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"othermaciej: I'm not sure about \"reference implementation\" but https://github.com/hsivonen/encoding_rs is by hsivonen, so probably useful as a reference","msgtype":"m.text"},"ts":1509933622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Depending on which parts of the standard you care about","msgtype":"m.text"},"ts":1509933644000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I was trying to find out if EUC-KR should actually be EUC-KR or windows-949","msgtype":"m.text"},"ts":1509933846000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The spec is clear that the canonical name is EUC-KR","msgtype":"m.text"},"ts":1509933856000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't actually know anything much about the spec, sorry","msgtype":"m.text"},"ts":1509934039000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems like other browsers treat it as windows-949, and WebKit has a test that distinguishes, but I do not know how to make an encoding WPT test","msgtype":"m.text"},"ts":1509934293000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think I know the correct behavior","msgtype":"m.text"},"ts":1509934479000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I would like to be a good citizen and add a WPT test but I don't know how","msgtype":"m.text"},"ts":1509934495000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(yet)","msgtype":"m.text"},"ts":1509934498000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"There's really nothing in encoding/legacy-mb-korean/euc-kr/ ? I don't know these tests at all, but there's a lot in there. Dunno how it's generated though","msgtype":"m.text"},"ts":1509934536000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Seems annevk jsbell, Domenic and hsivonen_ have all touched the encoding tests, so one of them might be able to help","msgtype":"m.text"},"ts":1509934610000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic added the euc-kr ones in particular","msgtype":"m.text"},"ts":1509934649000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":" ","msgtype":"m.text"},"ts":1509934917000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There were like 6 outstanding PRs from the i18n folks","msgtype":"m.text"},"ts":1509935314000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I managed to shepherd like 3 of them in","msgtype":"m.text"},"ts":1509935323000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Still several outstanding","msgtype":"m.text"},"ts":1509935329000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"othermaciej: I think https://github.com/w3c/web-platform-tests/blob/master/encoding/legacy-mb-korean/euc-kr/euckr-decode.html will test it by virtue of including various other files in https://github.com/w3c/web-platform-tests/tree/master/encoding/legacy-mb-korean/euc-kr and ensuring that they all decode the same (including windows-949)","msgtype":"m.text"},"ts":1509935587000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I see, looks like we just haven't imported that test yet","msgtype":"m.text"},"ts":1509935645000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which we should","msgtype":"m.text"},"ts":1509935659000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen_: BTW if you want to give review on the remaining ones in https://github.com/w3c/web-platform-tests/pulls?q=is%3Apr+is%3Aopen+encoding+label%3Awg-i18n_core based on encoding_rs then I can again try to help land them","msgtype":"m.text"},"ts":1509935852000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm I guess I can land the last two as they pass in Firefox 57 which I can take as a +1 from hsivonen_ :)","msgtype":"m.text"},"ts":1509935916000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wonder if it's intentional that encodings.json specifies \"x-x-big5\" as a name for Big5, but not \"x-big5\"","msgtype":"m.text"},"ts":1509942897000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"spec has it the same way","msgtype":"m.text"},"ts":1509942913000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I wouldn't be surprised","msgtype":"m.text"},"ts":1509943272000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"today i discovered cseucpkdfmtjapanese","msgtype":"m.text"},"ts":1509943283000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Firefox and Chrome match the spec so I'd guess that is good enough for practical use. WebKit has a bunch of extra names for Big5, and a separate Big5-HKSCS encoding. Trying to figure out if it's safe to take it all out.","msgtype":"m.text"},"ts":1509943391000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jsbell (who appears to not be in channel at the moment) is probably our best source of war stories on alignment in Chrome.","msgtype":"m.text"},"ts":1509943522000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Off the top of my head I don't recall anything painful","msgtype":"m.text"},"ts":1509943556000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Some of our use counters for aliases for utf-8 came back at like 0, is the only story I remember","msgtype":"m.text"},"ts":1509943571000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"othermaciej: this was the bug that merges Big5 with Big5-HKSCS in Gecko, https://bugzilla.mozilla.org/show_bug.cgi?id=912470 , mainly because the non-existence usage of other Big5 variants on the web. Links to other discussion as well — be ware of the rabbit holes.","msgtype":"m.text"},"ts":1509943921000,"senderName":"timdream","senderId":"timdream@irc"},
{"content":{"body":"timdream: it sounds like Firefox made all Big5 aliases act like Big5-HKCS (but still treating the canonical name as Big5)","msgtype":"m.text"},"ts":1509944174000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: yes. per Encoding Standard","msgtype":"m.text"},"ts":1509944194000,"senderName":"timdream","senderId":"timdream@irc"},
{"content":{"body":"Hmm, WPT has a bunch of Big5 tests but sadly most are not on the live version at w3c-test.org yet","msgtype":"m.text"},"ts":1509944609000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"does anyone know how often that gets updated?","msgtype":"m.text"},"ts":1509944615000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"how does WPT decide which HTML files should or should not be run as a test?","msgtype":"m.text"},"ts":1509949216000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: it’s windows-949; not sure if it’s an exact match","msgtype":"m.text"},"ts":1509950245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: the Indexes section has some notes that also explain this","msgtype":"m.text"},"ts":1509950286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's the conclusion I came to. Had to add a special case to make the canonical name be EUC-KR but the actual encoding be windows-949","msgtype":"m.text"},"ts":1509950305000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: some of the legacy-mb- subdirectories under https://github.com/w3c/web-platform-tests/tree/master/encoding seem to have .html files that aren't intended to be run as tests directly but aren't in a resources/ sudir. Do you know if this is intentional?","msgtype":"m.text"},"ts":1509950384000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(can send a PR if not)","msgtype":"m.text"},"ts":1509950390000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"“This matches the KS X 1001 standard and the Unified Hangul Code, more commonly known together as Windows Codepage 949.”","msgtype":"m.text"},"ts":1509950403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"specific example: https://github.com/w3c/web-platform-tests/blob/master/encoding/legacy-mb-japanese/shift_jis/sjis_chars-csshiftjis.html","msgtype":"m.text"},"ts":1509950420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think that is only meant to be loaded as an iframe in an actual test, not run as a test in itself","msgtype":"m.text"},"ts":1509950433000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Sorry no, Domenic and Richard Ishida would know about that","msgtype":"m.text"},"ts":1509950488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe that needs cleaning up","msgtype":"m.text"},"ts":1509950498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: yes, lots of HTML files in WPT are iframes.","msgtype":"m.text"},"ts":1509950595000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The WPT manifest will tell you which are tests by scanning to find testharness.js references.","msgtype":"m.text"},"ts":1509950620000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"resources/ is just a convention.","msgtype":"m.text"},"ts":1509950644000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: is it appropriate to make things follow the resources/ convention if they don't?","msgtype":"m.text"},"ts":1509950683000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I mean, sure, I'd approve a few of those PRs.","msgtype":"m.text"},"ts":1509950776000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Seems a bit cleaner and easier to scan.","msgtype":"m.text"},"ts":1509950789000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"WebKit","msgtype":"m.text"},"ts":1509950831000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"WebKit's copy of WPT seems to not use manifests, it just follows the resources/ convention","msgtype":"m.text"},"ts":1509950857000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"whichi s probably wrong, but fixing that is beyond me","msgtype":"m.text"},"ts":1509950863000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"moving stuff to resources/ is easy enough though","msgtype":"m.text"},"ts":1509950880000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"https://wpt.fyi/encoding/legacy-mb-tchinese/big5/ is generated from the manifest so might help","msgtype":"m.text"},"ts":1509950976000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://wpt.fyi/encoding/legacy-mb-tchinese/big5/big5-enc-ascii.html is a bit troubling hmm, maybe a bad test","msgtype":"m.text"},"ts":1509951064000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ooh so that is how WPT works","msgtype":"m.text"},"ts":1509954125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I vastly prefer the resources/ model","msgtype":"m.text"},"ts":1509954140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"me too","msgtype":"m.text"},"ts":1509954881000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"smaug____: looking at https://public.etherpad-mozilla.org/p/composedPath","msgtype":"m.text"},"ts":1509977275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: \"if the target is a closed Shadow DOM root\" -> has?","msgtype":"m.text"},"ts":1509977290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: \"if node is assigned\" -> s/node/target/?","msgtype":"m.text"},"ts":1509977326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"target","msgtype":"m.text"},"ts":1509977353000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: hmm, has?","msgtype":"m.text"},"ts":1509977373000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"no has there","msgtype":"m.text"},"ts":1509977386000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: if it is the root","msgtype":"m.text"},"ts":1509977391000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: okay","msgtype":"m.text"},"ts":1509977398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess ShadowRoot","msgtype":"m.text"},"ts":1509977401000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk:oh yeah, I was going to ask if that all looks reasonable","msgtype":"m.text"},"ts":1509977420000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the idea should be simple. Go from window down to the current target, then continue in the current subtree, but bypass closed shadow trees","msgtype":"m.text"},"ts":1509977480000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and doesn't change O() of path creation","msgtype":"m.text"},"ts":1509977587000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nor composedPath","msgtype":"m.text"},"ts":1509977597000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: looks reasonable, I wonder if this is enough for rniwa to review","msgtype":"m.text"},"ts":1509977664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably yes","msgtype":"m.text"},"ts":1509977721000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"good to get feedback sooner than later","msgtype":"m.text"},"ts":1509977728000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: okay, I'll clean up the text a bit and add it as a comment on your issue","msgtype":"m.text"},"ts":1509978120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: then if it looks okay I can work on a PR tomorrow","msgtype":"m.text"},"ts":1509978140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: hopefully someone else can do tests...","msgtype":"m.text"},"ts":1509978145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I could write tests when implementing it","msgtype":"m.text"},"ts":1509978170000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: could you look at my changes in the etherpad?","msgtype":"m.text"},"ts":1509978437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I added some questions and rephrasings as well","msgtype":"m.text"},"ts":1509978802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looking","msgtype":"m.text"},"ts":1509978819000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: so, we don't create path anywhere else but in concept-event-dispatch, right?","msgtype":"m.text"},"ts":1509978899000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah, we append in step 5, 9.2.2, and 9.4.2","msgtype":"m.text"},"ts":1509978982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: then iterate over in 12 and 13","msgtype":"m.text"},"ts":1509978997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, you mean that","msgtype":"m.text"},"ts":1509979013000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess this needs to affect step 5 as well","msgtype":"m.text"},"ts":1509979052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So maybe we need to define an \"append to path\" operation that has these conditionals","msgtype":"m.text"},"ts":1509979077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1509979095000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and/or 'get the parent' would return the relevant flags","msgtype":"m.text"},"ts":1509979115000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: the latter might make it harder for other specifications to use \"get the parent\"","msgtype":"m.text"},"ts":1509979185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, someone else is using that","msgtype":"m.text"},"ts":1509979202000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"surprising","msgtype":"m.text"},"ts":1509979204000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: IDB is supposed to, not sure if it does already","msgtype":"m.text"},"ts":1509979213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, right","msgtype":"m.text"},"ts":1509979227000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"well, get the parent would optionally return some flags","msgtype":"m.text"},"ts":1509979240000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: you mean sometimes it returns a single object and sometimes several things?","msgtype":"m.text"},"ts":1509979304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: hmm","msgtype":"m.text"},"ts":1509979307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, it would return a tuple { parent, flagX, flagY}","msgtype":"m.text"},"ts":1509979326000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and flagX and flagY would have some default values","msgtype":"m.text"},"ts":1509979336000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: how would that help btw with step 5?","msgtype":"m.text"},"ts":1509979421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: get the parent is not yet invoked there","msgtype":"m.text"},"ts":1509979438000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: don't we need to check that target is a closed shadow root there?","msgtype":"m.text"},"ts":1509979467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes we need","msgtype":"m.text"},"ts":1509979484000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1509979522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so yeah, need to think a bit how to map the algorithm to the current spec","msgtype":"m.text"},"ts":1509979545000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sorry, I didn't look at the spec when thinking about the setup","msgtype":"m.text"},"ts":1509979567000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: if we do the special \"append to path\" procedure, would my conditionals work?","msgtype":"m.text"},"ts":1509979570000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: \"If target is a shadow root whose mode is \"closed\", then add a root-of-closed-tree flag to the tuple.\"","msgtype":"m.text"},"ts":1509979573000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: and \"If parent is a slot, parent's root is a shadow root whose mode is \"closed\", target is assigned, and target's assigned slot is parent, then add a slot-in-closed-tree flag to the tuple.\" for the second","msgtype":"m.text"},"ts":1509979585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I was explicitly not anywhere nearby of any computers when drawing the idea to a paper)","msgtype":"m.text"},"ts":1509979595000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, with s/parent/target/ I guess","msgtype":"m.text"},"ts":1509979674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure about the last one","msgtype":"m.text"},"ts":1509979678000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but yeah, then it falls apart","msgtype":"m.text"},"ts":1509979693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: put fixed text in the etherpad","msgtype":"m.text"},"ts":1509980103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, what if the slot has a child node","msgtype":"m.text"},"ts":1509980173000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and event is dispatched on that","msgtype":"m.text"},"ts":1509980180000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"we want to have slot-in-closed-tree flag only when crossing shadow dom boundary","msgtype":"m.text"},"ts":1509980212000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, hmm","msgtype":"m.text"},"ts":1509980226000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nm","msgtype":"m.text"},"ts":1509980227000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"maybe 'targetOverride's assigned slot is target' somehow captures that","msgtype":"m.text"},"ts":1509980248000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm not sure","msgtype":"m.text"},"ts":1509980376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This is really quite complicated","msgtype":"m.text"},"ts":1509980404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, it isn't","msgtype":"m.text"},"ts":1509980438000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but somehow mapping it to the current spec is","msgtype":"m.text"},"ts":1509980446000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if the get parent returned the flags, and step 5 explicitly checked shadowroot, that should be enough","msgtype":"m.text"},"ts":1509980497000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I wonder, would it help writing the spec if the flag wasn't in the slot, but the assigned node","msgtype":"m.text"},"ts":1509980524000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: the question about \"what if slot has a child node\" is also relevant for your non-spec explanation","msgtype":"m.text"},"ts":1509980677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1509980704000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"slot is then treated just like any other node in shadow dom","msgtype":"m.text"},"ts":1509980719000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or are you thinking some different case?","msgtype":"m.text"},"ts":1509980754000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: all I did was make what you wrote more explicit, so I don't really see where you think there's a difference","msgtype":"m.text"},"ts":1509980800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: maybe you didn't change. As I said, perhaps 'targetOverride's assigned slot is target' takes care of that","msgtype":"m.text"},"ts":1509980838000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"just a bit hard to read","msgtype":"m.text"},"ts":1509980844000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(sorry, I'm multitasking)","msgtype":"m.text"},"ts":1509980867000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I see: \"Append (parent, target, relatedTarget) to event’s path. \"","msgtype":"m.text"},"ts":1509980981000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that should work... and then, what happens with step 5","msgtype":"m.text"},"ts":1509980996000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: we'd replace \"Append\" everywhere with \"Append to path\" that has these two conditionals","msgtype":"m.text"},"ts":1509981034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, yeah, that tagetOverride stuff should be fine","msgtype":"m.text"},"ts":1509981079000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"doesn't matter in step 5","msgtype":"m.text"},"ts":1509981089000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it'll just no-op in step 5 and since we do need the first conditional it seems fine to reuse the code path","msgtype":"m.text"},"ts":1509981145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: okay, thanks for having another look, I'll add this to the issue","msgtype":"m.text"},"ts":1509981172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: https://github.com/whatwg/dom/issues/525#issuecomment-342179455","msgtype":"m.text"},"ts":1509981411000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1509981444000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hopefully rniwa has time to take a look","msgtype":"m.text"},"ts":1509981453000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"othermaciej: FWIW, Chromium has made an effort to align with Encoding; but if you’re only interested in labels that is less interesting","msgtype":"m.text"},"ts":1509992483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: note that if you only care about labels for now you prolly want to leave big5 alone","msgtype":"m.text"},"ts":1509992515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: eventually we'll fix the encoder behavior too, I'm just trying to fix labels first","msgtype":"m.text"},"ts":1509992529000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"we have a whole extra encoder implementation that's non-ICU which is only used to implement nonstandard encodings","msgtype":"m.text"},"ts":1509992551000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I would like to get rid of it","msgtype":"m.text"},"ts":1509992555000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"for Big5 it seems likely I'll need a custom encoder just to be able to align on labels","msgtype":"m.text"},"ts":1509992591000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: I think Chromium applies some kind of patch, though I have not looked recently","msgtype":"m.text"},"ts":1509992865000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: and with ICU deferring to the Encoding Standard for UTF-8 perhaps some will be upstreamed","msgtype":"m.text"},"ts":1509992927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think ICU has a sort of generic mechanism for defining encodings (.ucm files), so it should be at least possible to add the web variants of particular encodings","msgtype":"m.text"},"ts":1509993037000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: Blink was meant to be moving away from their ICU fork, fwiw","msgtype":"m.text"},"ts":1509996506000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: seems hard unless they upstream all patches somehow","msgtype":"m.text"},"ts":1510003154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Depends how you interpret the sentene","msgtype":"m.text"},"ts":1510003551000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*sentence","msgtype":"m.text"},"ts":1510003555000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If it implies \"move away from ICU\"","msgtype":"m.text"},"ts":1510003567000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Then upstreaming isn't required","msgtype":"m.text"},"ts":1510003579000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That would be exciting, but JS i18n makes that unlikely","msgtype":"m.text"},"ts":1510003621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's easy when you rewrite the reason for all the patches :)","msgtype":"m.text"},"ts":1510004003000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: AIUI, it's inline layout that they have most patches for, and rewriting that avoids the need for them","msgtype":"m.text"},"ts":1510004034000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Would not work for the encoding bits afaik","msgtype":"m.text"},"ts":1510004139000,"senderName":"annevk","senderId":"annevk@irc"}
]