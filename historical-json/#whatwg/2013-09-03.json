[
{"content":{"body":"SteveF: man that is going to kill my poor macbook :-)","msgtype":"m.text"},"ts":1378180738000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: I guess the GH workflow would be PRs to me on the PR branch. Ergh.","msgtype":"m.text"},"ts":1378187825000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: But idk if I know the spec well enough and/or have the time.","msgtype":"m.text"},"ts":1378187843000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Whereas you probably have an employer kean on you getting them into the testsuite. :)","msgtype":"m.text"},"ts":1378187869000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: Achievement unlocked: used all of map, filter and reduce in a single expression","msgtype":"m.text"},"ts":1378198447000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: It could be. That would be terrible though","msgtype":"m.text"},"ts":1378198465000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, very much Aryeh's achievement :)","msgtype":"m.text"},"ts":1378198522000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"When is heycam going to make IDL a Living Standard already?","msgtype":"m.text"},"ts":1378198683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(yeah gosh)","msgtype":"m.text"},"ts":1378198693000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"v1/v2, everyone implements v2 anyway","msgtype":"m.text"},"ts":1378198701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam!","msgtype":"m.text"},"ts":1378198709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi!","msgtype":"m.text"},"ts":1378198712000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Living Standard in CVS","msgtype":"m.text"},"ts":1378198718000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"undead standard","msgtype":"m.text"},"ts":1378198721000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hah, CVS","msgtype":"m.text"},"ts":1378198730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can teach you some GitHub if you want :p","msgtype":"m.text"},"ts":1378198761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pfft","msgtype":"m.text"},"ts":1378198765000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: about IDL, we have ByteString and [EnforceUTF16] and they're supposedly doing the same thing, but different","msgtype":"m.text"},"ts":1378198779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You can even get some idl.spec.whatwg.org","msgtype":"m.text"},"ts":1378198791000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"heycam: e.g. they both coerce the input to a different type, which is arguably what DOMString, long, etc. do too","msgtype":"m.text"},"ts":1378198806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: well, you didn't spec [EnforceUTF16] that way, which is kinda annoying and which I think is why we want to make that a type","msgtype":"m.text"},"ts":1378198833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, so they should be the same kind of thing","msgtype":"m.text"},"ts":1378198842000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: if we don't want to make that a type, we should maybe drop ByteString and [EnforceUTF16] and just deal with it at the spec level... not sure that's necessarily great","msgtype":"m.text"},"ts":1378198870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"brb phone","msgtype":"m.emote"},"ts":1378198934000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"bz may feel differently","msgtype":"m.text"},"ts":1378198947000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: r+ but I didn't check tht you were actually using idlharness correctly, only that the code you posted would implement the parts of the spec that you quoted if you were using the datastructures correctly\\","msgtype":"m.text"},"ts":1378198975000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, the DOM/HTML tests seem to pass, so I'm going to claim it's correct :)","msgtype":"m.text"},"ts":1378199012000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ByteString = code units -> bytes; [EnforceUTF16] DOMString = code units -> mapped code units (whereas I wanted Unicode scalar values)","msgtype":"m.text"},"ts":1378199013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: ^","msgtype":"m.text"},"ts":1378199025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: about what?","msgtype":"m.text"},"ts":1378199032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: Right, I think what I checked, plus some passing tests is convincing","msgtype":"m.text"},"ts":1378199034000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"+,","msgtype":"m.text"},"ts":1378199040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk, the types thing, but maybe I misunderstood you","msgtype":"m.text"},"ts":1378199077000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham, thanks","msgtype":"m.text"},"ts":1378199184000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, yeah I can see it from that perspective. (was just thinking that before the phone rang.)","msgtype":"m.text"},"ts":1378199209000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ms2ger: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22808 is a pretty pointless comment... We often \"break\" something that works and we do that because of X. So if you don't give an argument against X...","msgtype":"m.text"},"ts":1378199217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I'm sympathetic to the argument of not having ByteString given it's not likely to be used elsewhere","msgtype":"m.text"},"ts":1378199236000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"whereas [EnforceUTF16] sounds like something that could be more generally useful","msgtype":"m.text"},"ts":1378199244000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"btw I'm going to be in the london office for the few days before the summit","msgtype":"m.text"},"ts":1378199268000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: that's awesome, but I won't be in London, but I'll be in Brussels","msgtype":"m.text"},"ts":1378199292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh =P","msgtype":"m.text"},"ts":1378199297000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1378199298000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TAG is meeting the days leading up to it in Boston...","msgtype":"m.text"},"ts":1378199338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll see you in Brussels then hopefully","msgtype":"m.text"},"ts":1378199381000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh, gotta go; maybe back later","msgtype":"m.text"},"ts":1378199413000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Okay, so say we remove ByteString and deal with it in prose. Can we make the output of EnforceUTF16 Unicode scalar values?","msgtype":"m.text"},"ts":1378199418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hah, whenever I meet heycam|away on IRC, it's for 5 minutes and he typically has a call or meeting during that :-)","msgtype":"m.text"},"ts":1378199603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, oh, and a \"merge this PR\" button in critic would be nice :)","msgtype":"m.text"},"ts":1378199654000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Indeed, but when I tried to add one I couldn't get the authentication right","msgtype":"m.text"},"ts":1378199750000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess I could just use the github account of the critic instance itself","msgtype":"m.text"},"ts":1378199775000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"grumbles at the bbc","msgtype":"m.emote"},"ts":1378199964000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: You've started reading the Telegraph or something?","msgtype":"m.text"},"ts":1378200025000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Nah","msgtype":"m.text"},"ts":1378200034000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm well in range of the radio 4 LW signal, but due to \"rights restrictions\", I can't listen online","msgtype":"m.text"},"ts":1378200066000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"To sport or something? Usually you can listen to the radio online","msgtype":"m.text"},"ts":1378200097000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Cricket","msgtype":"m.text"},"ts":1378200121000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1378200127000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, not sure that's the BBC's fault really","msgtype":"m.text"},"ts":1378200141000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean it is obviously stupid, but they get sold region-restricted rights","msgtype":"m.text"},"ts":1378200160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"grumbles at some unidentified party","msgtype":"m.emote"},"ts":1378200166000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Very annoying","msgtype":"m.text"},"ts":1378200171000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Man, token-based security people are at it again on public-webappsec","msgtype":"m.text"},"ts":1378202460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if anyone else here is subscribed to that list...","msgtype":"m.text"},"ts":1378202472000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not me","msgtype":"m.text"},"ts":1378202570000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"me neither","msgtype":"m.text"},"ts":1378203321000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ah, darobin","msgtype":"m.text"},"ts":1378203347000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Back from vacation? :)","msgtype":"m.text"},"ts":1378203353000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger!","msgtype":"m.text"},"ts":1378203354000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I'm still pondering that one","msgtype":"m.text"},"ts":1378203360000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Sounds like France","msgtype":"m.text"},"ts":1378203563000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyone recall when Hixie_ and I discussed how to write down tasks in Fetch?","msgtype":"m.text"},"ts":1378210104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Most recent discussion that is, not the one Google returns in March...","msgtype":"m.text"},"ts":1378210132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyone know if it's possible to achieve this with css? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2504","msgtype":"m.text"},"ts":1378210851000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(i.e. what the script does)","msgtype":"m.text"},"ts":1378210860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Found it: http://krijnhoetmer.nl/irc-logs/whatwg/20130723#l-734","msgtype":"m.text"},"ts":1378211267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fetch thing is https://www.w3.org/Bugs/Public/show_bug.cgi?id=22387 now","msgtype":"m.text"},"ts":1378212672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: clearly we need @spaceatkins as a fake @tabatkins","msgtype":"m.text"},"ts":1378214336000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, so you're fake Alex?","msgtype":"m.text"},"ts":1378214368000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh god, please make this happen internets","msgtype":"m.text"},"ts":1378214372000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Ms2ger: your logic is infallible","msgtype":"m.text"},"ts":1378214388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At least it would be clear that spaceatkins was better than tabatkins","msgtype":"m.text"},"ts":1378214693000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you guys, tabs are way better","msgtype":"m.text"},"ts":1378214984000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"At inducing rage?","msgtype":"m.text"},"ts":1378215045000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, r? https://critic.hoppipolla.co.uk/r/295","msgtype":"m.text"},"ts":1378215204000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: commit message could say empty string names, seems fine otherwise","msgtype":"m.text"},"ts":1378215297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tabs are theoretically superior, but worse is better","msgtype":"m.text"},"ts":1378215319000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Ms2ger: done it through the interface now","msgtype":"m.text"},"ts":1378215335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1378215339000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The \"tabs are better\" arguments are all crazy talk","msgtype":"m.text"},"ts":1378215465000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There's something to be said for them, but in real life you also want alignment, and that needs spaces","msgtype":"m.text"},"ts":1378215522000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And mixing them is a horror","msgtype":"m.text"},"ts":1378215529000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wonders if people here know about http://w3tmemes.tumblr.com/","msgtype":"m.emote"},"ts":1378218287000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: what does w3t stand for?","msgtype":"m.text"},"ts":1378218579000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"W3C Team","msgtype":"m.text"},"ts":1378218609000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"wow, this is even more obscure than w3cmemes :p","msgtype":"m.text"},"ts":1378218654000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yeah, it references all the Sikkrit Cabal stuff","msgtype":"m.text"},"ts":1378218869000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that said, if you know about W3C I reckon you can figure out what most apply to, or at least imagine the situation :)","msgtype":"m.text"},"ts":1378218887000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: with some you can imagine half of the text being censored :)","msgtype":"m.text"},"ts":1378220377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: does this have a Twitter account?","msgtype":"m.text"},"ts":1378220395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://w3tmemes.tumblr.com/image/55808644257 :-)","msgtype":"m.text"},"ts":1378220423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't believe it does, but you can set Tumblr up to tweet automatically, right?","msgtype":"m.text"},"ts":1378220577000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: yeah, should be pretty easy","msgtype":"m.text"},"ts":1378221100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well I couldn't possibly know who's behind this, but I'll try to pass the suggestion along","msgtype":"m.text"},"ts":1378221211000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"anybody know of any implementations of inert attribute?","msgtype":"m.text"},"ts":1378221462000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"Ms2ger: I mix tabs for indent and spaces for alignment regularly, and I haven't died yet.  It Just Works (tm).","msgtype":"m.text"},"ts":1378225834000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, do you get it right?","msgtype":"m.text"},"ts":1378225922000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"...yes?  How do you get it wrong?  It seems like something you'd have to be deliberately stupid at to mess up.","msgtype":"m.text"},"ts":1378225947000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Has anyone else working with your code died?","msgtype":"m.text"},"ts":1378225949000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Not to my knowledge, but it's open-source, so who knows?","msgtype":"m.text"},"ts":1378225962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Uh, really? I don't think it's even well specified how to do it","msgtype":"m.text"},"ts":1378225997000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"e.g.","msgtype":"m.text"},"ts":1378225999000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"def foo(bar,","msgtype":"m.text"},"ts":1378226008000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You... tab to the indentation level you want, then space to the alignment you want.","msgtype":"m.text"},"ts":1378226016000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"       baz)","msgtype":"m.text"},"ts":1378226016000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(heh, missed a space)","msgtype":"m.text"},"ts":1378226024000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not in a fixed-width font anyway, so it's lost on me.","msgtype":"m.text"},"ts":1378226039000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How many tabs and how many spaces on the second line?","msgtype":"m.text"},"ts":1378226039000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I used to use tabs for a semantic block indent, and spaces for a presentational alignment","msgtype":"m.text"},"ts":1378226041000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Yes.","msgtype":"m.text"},"ts":1378226049000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: Tab to the same line indentation as the primary line, because you're not wanting to indent any more.  Space to whatever alignment you want.","msgtype":"m.text"},"ts":1378226075000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so you'd never have tabs after a space, but you may have spaces after a tab","msgtype":"m.text"},"ts":1378226090000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hah, yes, that","msgtype":"m.text"},"ts":1378226099000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"TabAtkins: Some people would consider that to need one extra level of indentation","msgtype":"m.text"},"ts":1378226101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Literally *any other combination* would be completely fucked up if you changed your tab size.","msgtype":"m.text"},"ts":1378226115000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Those people are dumb.","msgtype":"m.text"},"ts":1378226123000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And don't understand what tabs are for.","msgtype":"m.text"},"ts":1378226129000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think the sematic argument is pure crazy","msgtype":"m.text"},"ts":1378226132000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's fine in theory","msgtype":"m.text"},"ts":1378226142000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Like astrophysics","msgtype":"m.text"},"ts":1378226147000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Your code has the semantics that the compiler gives it","msgtype":"m.text"},"ts":1378226148000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The \"sementic\" argument is just a shorthand for \"look, dammit, I like a different indent size than you\".","msgtype":"m.text"},"ts":1378226156000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If the complier isn't infering any semantics from it, there aren't any","msgtype":"m.text"},"ts":1378226169000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1378226170000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(I often go for a 3-space indent.)","msgtype":"m.text"},"ts":1378226180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So the \"semantic\" argument is a shorthand for \"presentation\"?","msgtype":"m.text"},"ts":1378226228000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Weird","msgtype":"m.text"},"ts":1378226230000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Um, no.  Quit being deliberately difficult.  You know what Jake means by \"semantic block\".","msgtype":"m.text"},"ts":1378226262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"a tab is 1 unit of indent sized to the viewer's preference, space is a single char-width alignment where the user's preference is deliberately ignored","msgtype":"m.text"},"ts":1378226265000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The rule is very simply expressed in terms of presentation - if I change the tab size, will I fuck up anything's alignment?  If so, you're using them wrong.","msgtype":"m.text"},"ts":1378226318000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, that's a better explanation","msgtype":"m.text"},"ts":1378226341000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If you want to link that up to the word \"semantics\", it's similar to \"if I view this page in a different modality, will anything fuck up?\".","msgtype":"m.text"},"ts":1378226361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"One could certainly think that it's not worth it to have a variable indentation size, but I point you to the fact that WebKit and Chrome settled on *different* indent sizes, and editing both at the same time is extremely frustrating.","msgtype":"m.text"},"ts":1378226602000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Especially now that we're Blink.","msgtype":"m.text"},"ts":1378226612000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Shrug","msgtype":"m.text"},"ts":1378226624000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It's only infuriating if you don't use the tab key for indentation","msgtype":"m.text"},"ts":1378226648000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: Having seen the code style choices of chromium, I can only conclude that it's possible to fuck anything up if you put your mind to it","msgtype":"m.text"},"ts":1378226681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There's also my observation that, in the absence of machine-based hygiene checking, I have *never* seen a space-based indent file that didn't fuck up its indentation at some point.","msgtype":"m.text"},"ts":1378226687000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't know who thought that making python look like C++ (not just in indentation, but in every way they could find) was a good idea","msgtype":"m.text"},"ts":1378226723000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"As evidenced by the fact that every time I have to edit one, and I try a basic conversion of \"apparent indent size -> tabs\", there's stray spaces everywhere.","msgtype":"m.text"},"ts":1378226728000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: No comment. :/","msgtype":"m.text"},"ts":1378226740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam|away: Yeah, late review is fine.","msgtype":"m.text"},"ts":1378226943000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dear people who say \"fx\" when they mean \"ff\": stop it, it's confusing","msgtype":"m.text"},"ts":1378227317000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Fx","msgtype":"m.text"},"ts":1378227347000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"F5x","msgtype":"m.text"},"ts":1378228641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: Regarding that bug, depending on his markup Grid can handle that.  Otherwise, it's dependent on us improving the Position property, which fantasai and I intend to do next year.","msgtype":"m.text"},"ts":1378229279000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: see the last comment for the markup","msgtype":"m.text"},"ts":1378229311000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Right, if he actually needs the <table>, he'll have to wait for Position.  If he's just wanting to put things in a grid, and can make #i2 a sibling of the other \"cells\", then Grid'll do.","msgtype":"m.text"},"ts":1378229382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: is there a bugzilla component for Position?","msgtype":"m.text"},"ts":1378229434000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: can grid create cells that overlap?","msgtype":"m.text"},"ts":1378229487000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Maybe.  If not, ask MikeSmith to create one.","msgtype":"m.text"},"ts":1378229500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And yes, grid items can overlap.","msgtype":"m.text"},"ts":1378229512000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Named grid areas, created by the template, can't, but you can always manually specify the position and size of grid items.)","msgtype":"m.text"},"ts":1378229531000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=23119 ?","msgtype":"m.text"},"ts":1378229709000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_, yes","msgtype":"m.text"},"ts":1378229720000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: what's the problem with the spec?","msgtype":"m.text"},"ts":1378229731000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"loads up that part of the spec","msgtype":"m.emote"},"ts":1378229753000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"If the stack of open elements has a button element in scope, then run these substeps:\"","msgtype":"m.text"},"ts":1378229783000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I have no idea what that means","msgtype":"m.text"},"ts":1378229788000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"has a button element in scope\" links to \"have an element in scope\", which lost track of the button","msgtype":"m.text"},"ts":1378229812000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Then I get a link titled \"has an element in the specific scope\" to \"have an element target node in a specific scope\"","msgtype":"m.text"},"ts":1378229857000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Where suddenly a 'target node' appears out of thin air","msgtype":"m.text"},"ts":1378229870000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Right, iirc, there are two problems. It doesn't define the inputs to the algorithm, and it doesn't define the concept of equality it is using","msgtype":"m.text"},"ts":1378229913000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: \"has an element in scope\" defines which elements are in scope","msgtype":"m.text"},"ts":1378230065000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: so then you see if one of the elemnets in scope is a button element","msgtype":"m.text"},"ts":1378230077000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: it's like saying \"does this fruit bowl have a red apple\" where you have an algorithm that defines whether \"a fruit is an apple in a bowl\"","msgtype":"m.text"},"ts":1378230115000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: The problem is deeper","msgtype":"m.text"},"ts":1378230116000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie_: \"has an element in a specific scope\" is broken","msgtype":"m.text"},"ts":1378230133000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1378230138000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_, jgraham managed to explain to me what you meant, but that doesn't make the spec say it","msgtype":"m.text"},"ts":1378230146000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: as far as i can tell, it's what the spec says.","msgtype":"m.text"},"ts":1378230165000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: i don't understand why it wouldn't say that.","msgtype":"m.text"},"ts":1378230174000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: It uses a concept \"target node\" that is undefined","msgtype":"m.text"},"ts":1378230179000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: that was fixed over the weekend","msgtype":"m.text"},"ts":1378230185000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"You write an algorithm that takes an argument \"target node\"","msgtype":"m.text"},"ts":1378230208000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#has-an-element-in-the-specific-scope looks wrong to me","msgtype":"m.text"},"ts":1378230220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But none of the callers of that algorithm explain what they're passing as \"target node\"","msgtype":"m.text"},"ts":1378230235000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: the algorithm isn't ever called as far as i know","msgtype":"m.text"},"ts":1378230265000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"What","msgtype":"m.text"},"ts":1378230271000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it's a definition, not an imperative algorithm that's called","msgtype":"m.text"},"ts":1378230277000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I am now super-confused","msgtype":"m.text"},"ts":1378230285000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"The stack of open elements is said to have an element in scope when it has an element in the specific scope consisting of the following element types:\"","msgtype":"m.text"},"ts":1378230299000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That's calling it","msgtype":"m.text"},"ts":1378230303000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1378230315000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Well, it sure should be!","msgtype":"m.text"},"ts":1378230323000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"calling an algorithm is more like \"Insert an HTML element for the token for which the element entry was created, to obtain new element\"","msgtype":"m.text"},"ts":1378230331000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"this is just defining \"have an element in scope\"","msgtype":"m.text"},"ts":1378230342000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Well, it's defining it poorly","msgtype":"m.text"},"ts":1378230351000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it's just simple english","msgtype":"m.text"},"ts":1378230357000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i really don't understand the problem here","msgtype":"m.text"},"ts":1378230362000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's defining a property of elements","msgtype":"m.text"},"ts":1378230374000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I don't understand how you don't understand the problem","msgtype":"m.text"},"ts":1378230379000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Me neither","msgtype":"m.text"},"ts":1378230389000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So if only the editor understands the spec, is the spec good?","msgtype":"m.text"},"ts":1378230417000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: The spec specifically says it's defining a property of the stack of open elements","msgtype":"m.text"},"ts":1378230431000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"everyone actually understand this, given that it's been implemented consistently by multiple people","msgtype":"m.text"},"ts":1378230436000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Not a property of the elements themselves","msgtype":"m.text"},"ts":1378230439000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't think this used to be brokwn in this way","msgtype":"m.text"},"ts":1378230451000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: jgraham yeah, it's really defining a property of the stack for each element","msgtype":"m.text"},"ts":1378230468000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Otherwise I was incredibly negligent in not giving feedback","msgtype":"m.text"},"ts":1378230469000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"this part of the spec hasn't changed in months if not years","msgtype":"m.text"},"ts":1378230481000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"not in a meaningful way, anyway","msgtype":"m.text"},"ts":1378230496000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Has anyone implemented it since?","msgtype":"m.text"},"ts":1378230544000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Apart from the change at the weekend (which I think I have now), that slightly unbroke it, you mean?","msgtype":"m.text"},"ts":1378230548000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"A fruit bowl is said to have a fruit /target fruit/ on top when the following algorithm terminates in a match state: 1. /target fruit/ has no fruit above it\"","msgtype":"m.text"},"ts":1378230561000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"If there is a pear that is on top of the fruit bowl, then...\"","msgtype":"m.text"},"ts":1378230578000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"this is the exact same formulation","msgtype":"m.text"},"ts":1378230589000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"OK, so, I think this makes sense if you imagine that the algorithm gets run for every element on the stack of open elements","msgtype":"m.text"},"ts":1378230598000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(perhaps)","msgtype":"m.text"},"ts":1378230627000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's jsut a definition, i wouldn't expect anyone to actually run this each time","msgtype":"m.text"},"ts":1378230641000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'd probably just set a bit","msgtype":"m.text"},"ts":1378230646000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"when the condition becomes true","msgtype":"m.text"},"ts":1378230653000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ignore implementations","msgtype":"m.text"},"ts":1378230657000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and unset it when it becomes false","msgtype":"m.text"},"ts":1378230658000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(fwiw I'm pretty sure that html5lib runs this each time. And it isn't a noticable perf. problem in non-pathological cases)","msgtype":"m.text"},"ts":1378230702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But like I said, ignore implementations","msgtype":"m.text"},"ts":1378230712000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The way the spec is worded, it feels like you take a type of element","msgtype":"m.text"},"ts":1378230731000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"The stack of open elements is said to *have an element in scope* when...\"","msgtype":"m.text"},"ts":1378230733000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"e.g. a P element","msgtype":"m.text"},"ts":1378230744000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and run it through the algorithm, which will return whether that element is in a particular scope or not","msgtype":"m.text"},"ts":1378230767000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That would mean Stack::HasElementInScope(/* no arguments */)","msgtype":"m.text"},"ts":1378230773000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Try a force reload","msgtype":"m.text"},"ts":1378230806000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not the specific scope","msgtype":"m.text"},"ts":1378230824000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The plain \"in scope\"","msgtype":"m.text"},"ts":1378230834000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1378230834000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: the definition is applied to types (\"is there any element in scope that happens to have this type\") as well as specific nodes (\"is this specific element in scope right now\")","msgtype":"m.text"},"ts":1378230837000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Tangent: does anyone know what the timezone is in gavin's stats?","msgtype":"m.text"},"ts":1378230850000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: Yes, that's still wrong","msgtype":"m.text"},"ts":1378230853000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hm yeah, \"when it has an\" should be \"when it has that\"","msgtype":"m.text"},"ts":1378230887000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: But then it still doesn't make sense. You are conflating E and type(E)","msgtype":"m.text"},"ts":1378230958000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe ... *have an element with _local name_ /local name/ and _namespace_ /namespace/ in scope* when...","msgtype":"m.text"},"ts":1378230987000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: where does type(E) come in?","msgtype":"m.text"},"ts":1378230994000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"/x/ => var, _x_ => a","msgtype":"m.text"},"ts":1378231001000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: \"has a P element in scope\"","msgtype":"m.text"},"ts":1378231004000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The algorithm works with specific elements","msgtype":"m.text"},"ts":1378231030000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: it's defining the property for each node in the stack, it's not an algorithm you run to get a boolean result for the stack.","msgtype":"m.text"},"ts":1378231034000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"go back to my fruit bowl example. why is that one fine but the spec not?","msgtype":"m.text"},"ts":1378231060000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: The fundamental problem is tht the way the spec is worded implies it's an algorithm you invoke at specific times","msgtype":"m.text"},"ts":1378231068000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because the spec isn't a fruit bowl","msgtype":"m.text"},"ts":1378231072000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: I don't care about fruit bowl examples. The spec is confusing irrespective of whether some other instance of the same construction is (I didn't even read the example)","msgtype":"m.text"},"ts":1378231111000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: if you're reading implications, then you're misreading the spec. read what it says, not between the lines.","msgtype":"m.text"},"ts":1378231111000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok if you're not even willing to consider the examples i'm giving, this conversation isn't being very productive.","msgtype":"m.text"},"ts":1378231133000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the fruit bowl example would help because it would help me understand what the difference is between an obviously fine construction, and the one that's confusing you.","msgtype":"m.text"},"ts":1378231159000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Unless you are going to give the same examples to everyone that reads the spec, I don't understand their value in the face of the fact that both Ms2ger and I find the spec confusing","msgtype":"m.text"},"ts":1378231177000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie_, okay, let me compare to your fruit bowl","msgtype":"m.text"},"ts":1378231216000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"A fruit bowl is said to have a fruit /target fruit/ on top when the following algorithm terminates in a match state: ...\"","msgtype":"m.text"},"ts":1378231232000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"The stack of open elements is said to have an element in scope when...\"","msgtype":"m.text"},"ts":1378231245000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: the value is that that construction is unambiguously ok, but the spec is apparently not, yet i think they're identical. so if you can explain to me why they're not, it helps me understand the problem with the spec.","msgtype":"m.text"},"ts":1378231254000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"The obvious difference: the fruit bowl one takes an algorithm, the stack one doesn't","msgtype":"m.text"},"ts":1378231267000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: I have now read it and don't think your fruit bowl example is very clear either fwiw","msgtype":"m.text"},"ts":1378231285000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: the fruit bowl one is about the specific scope definition","msgtype":"m.text"},"ts":1378231290000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham: oh","msgtype":"m.text"},"ts":1378231298000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham: then i am even more confused :-)","msgtype":"m.text"},"ts":1378231325000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"But you don't jump from the use in the parser straight to the specific scope","msgtype":"m.text"},"ts":1378231339000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You jump from the parser to the #has-an-element-in-scope then to #has-an-element-in-the-specific-scope","msgtype":"m.text"},"ts":1378231368000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And it's not clear that the 'button' in the parser needs to end up as the /target node/ in #has-an-element-in-the-specific-scope","msgtype":"m.text"},"ts":1378231394000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You are invoking an algorithm (that is itself a bit magic, but let's not worry about that) in a very roundabout way that makes it unclear what the arguments to the algorithm are","msgtype":"m.text"},"ts":1378231396000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: Can you add an \"adopt\" hook to the Promises spec?  Also, is the correct way to invoke one of the static Promise methods (in the case I'm writing right now, Promise.every()), just to invoke it as code or something?","msgtype":"m.text"},"ts":1378231400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: the analogous fruit bowl one would be \"the fruit bowl is said to have a fruit on top when that fruit is specifically on top of the following fruit types: ...\" where \"a fruit is specifically on top\" is similar to the earlier example but the algorithm is longer and checks for those fruit types.","msgtype":"m.text"},"ts":1378231440000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: is http://dev.w3.org/csswg/css-position/#position-root a placeholder for this?","msgtype":"m.text"},"ts":1378231450000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(Or what \"If /node/ is the target node, terminate in a match state.\" means when you fill in /target node/==|button|)","msgtype":"m.text"},"ts":1378231451000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: woah, the \"button\" in the parser _doesn't_ end up being the /target node/.","msgtype":"m.text"},"ts":1378231457000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: what makes you think it does?","msgtype":"m.text"},"ts":1378231463000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It's the only thing I *can* fill in!","msgtype":"m.text"},"ts":1378231483000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: there's no algorithm invokation, it's a definition.","msgtype":"m.text"},"ts":1378231483000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"What else would it be?","msgtype":"m.text"},"ts":1378231502000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: There is an algorithm. Conceptually it must be invoked","msgtype":"m.text"},"ts":1378231506000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: Yes, and see http://www.xanthir.com/blog/b48H0 for a more fleshed out early early draft of it.","msgtype":"m.text"},"ts":1378231507000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you just wrote the spec to invoke the actual algorithm rather than having invoked behind the scenes at some point when you read the definition, everything would be much clearer","msgtype":"m.text"},"ts":1378231565000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: every node ever created in the history of the world is passed to the definition, to see if it is in scope or not. this makes every node have a true or false state, which is all you are later checking.","msgtype":"m.text"},"ts":1378231573000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: thx","msgtype":"m.text"},"ts":1378231577000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie_: Where does the spec say that?","msgtype":"m.text"},"ts":1378231616000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Huh","msgtype":"m.text"},"ts":1378231616000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So what is \"the target node\"?","msgtype":"m.text"},"ts":1378231629000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: certainly you could phrase the spec that way, but i would rather phrase the spec in a way that just asks if there's a node that fits the criteria. i'm happy to consider better ways to do that, though, since apparently (despite interop...) the spec doesn't do it well enough","msgtype":"m.text"},"ts":1378231650000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Why would you rather do that?","msgtype":"m.text"},"ts":1378231685000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: because generally speaking it makes the text easier to reason about.","msgtype":"m.text"},"ts":1378231717000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"declarative > imperative, where possible.","msgtype":"m.text"},"ts":1378231724000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"This conversation isn't supporting that point of view","msgtype":"m.text"},"ts":1378231737000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: it's the \"x\" in \"an x has property y if...\"","msgtype":"m.text"},"ts":1378231740000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: it's the mathematical equivalent of the indefinite article","msgtype":"m.text"},"ts":1378231767000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Let's step back","msgtype":"m.text"},"ts":1378231767000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I was looking at the following text in the parser:","msgtype":"m.text"},"ts":1378231783000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"If the stack of open elements has a button element in scope, then run these substeps:...\"","msgtype":"m.text"},"ts":1378231785000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"How am I supposed to interpret that","msgtype":"m.text"},"ts":1378231796000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1378231797000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: is there a button element that has the property \"currently is in scope\"?","msgtype":"m.text"},"ts":1378231830000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: or to put it another way:","msgtype":"m.text"},"ts":1378231840000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: is there an element X, which has X.type \"button\" and X.inScope \"true\"?","msgtype":"m.text"},"ts":1378231865000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I have no idea how you could get to that interpretation from the spec as written","msgtype":"m.text"},"ts":1378231872000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i have no idea how you could interpret it as an imperative algorithm invocation","msgtype":"m.text"},"ts":1378231891000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"There is nothing to suggest that elements have a property of being in scope","msgtype":"m.text"},"ts":1378231891000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"The stack of open elements is said to have an element in scope when\"","msgtype":"m.text"},"ts":1378231905000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"That seems a very unintuitive interpretation","msgtype":"m.text"},"ts":1378231909000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or that a question about the stack of open elements is supposed to be a quaestion about the set of all elements","msgtype":"m.text"},"ts":1378231924000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*question","msgtype":"m.text"},"ts":1378231928000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Now if it had said \"If the stack of open elements _has an element in scope_ that is a button element\"","msgtype":"m.text"},"ts":1378231950000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Is that what you mean?","msgtype":"m.text"},"ts":1378231966000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"has to go now","msgtype":"m.emote"},"ts":1378231975000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I honestly truly don't see why this is hard. The spec defines \"The stack of open elements is said to have an element in scope when\" and then it asks whether \"the stack of open elements has an element in scope\" (specifically, whether it has one that is also a button element)","msgtype":"m.text"},"ts":1378231980000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It's not obvious that that's what it asks","msgtype":"m.text"},"ts":1378231997000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"what else could it ask?","msgtype":"m.text"},"ts":1378232003000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i mean, this is just regular english","msgtype":"m.text"},"ts":1378232025000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Does the stack have the property \"has a button element in scope\"","msgtype":"m.text"},"ts":1378232031000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And then the issue is that nothing defines what that means","msgtype":"m.text"},"ts":1378232047000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"a kid is wearing a sweater when...\" \"is there a red kid wearing a sweater?\"","msgtype":"m.text"},"ts":1378232048000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Whet you're saying now is \"is there a...\", \"does there exists a...\"","msgtype":"m.text"},"ts":1378232080000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But the spec doesn't say that","msgtype":"m.text"},"ts":1378232086000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"*exist","msgtype":"m.text"},"ts":1378232093000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"If the stack of open elements has a button element in scope\" is a \"Does there exist a\" question.","msgtype":"m.text"},"ts":1378232104000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I don't read it that way","msgtype":"m.text"},"ts":1378232128000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(or rather, \"a classroom has a kid wearing a sweater when\"... \"if the classroom has a red kid wearing as sweater, then...\"","msgtype":"m.text"},"ts":1378232130000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1378232133000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"s/as/a/","msgtype":"m.text"},"ts":1378232139000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what other way is there to read it?","msgtype":"m.text"},"ts":1378232147000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm really baffled by this","msgtype":"m.text"},"ts":1378232151000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"'Does the stack have the property \"has a button element in scope\"?'","msgtype":"m.text"},"ts":1378232158000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it has the property \"has an element in scope\", which is even hyperlinked from the sentence you're asking about","msgtype":"m.text"},"ts":1378232175000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"So the hyperlink goes to the definition of","msgtype":"m.text"},"ts":1378232209000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"Does the stack have a/any element in scope\"","msgtype":"m.text"},"ts":1378232221000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"a/any ?","msgtype":"m.text"},"ts":1378232235000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"Does the stack have a element in scope\" or \"Does the stack have any element in scope\"","msgtype":"m.text"},"ts":1378232249000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"where do you get \"does the stack have any element in scope\"?","msgtype":"m.text"},"ts":1378232293000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"That's just plain English","msgtype":"m.text"},"ts":1378232311000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"The stack of open elements is said to have an element in scope when...\"","msgtype":"m.text"},"ts":1378232329000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That defines the answer to \"Does the stack have any element in scope?\"","msgtype":"m.text"},"ts":1378232351000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmm, ok, i buy that","msgtype":"m.text"},"ts":1378232361000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"one sec","msgtype":"m.text"},"ts":1378232363000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok, renamed it to \"have a particular element in scope\"","msgtype":"m.text"},"ts":1378232446000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"does that solve the \"any\" issue?","msgtype":"m.text"},"ts":1378232470000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"thinks","msgtype":"m.emote"},"ts":1378232487000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yes, I think so","msgtype":"m.text"},"ts":1378232580000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"However","msgtype":"m.text"},"ts":1378232581000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That still means you define it for one particular element in the history of the world","msgtype":"m.text"},"ts":1378232619000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And that's IMO quite a leap from the way you link to the definition in \"If the stack of open elements has a button element in scope\"","msgtype":"m.text"},"ts":1378232664000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"isn't that just what a definition always is?","msgtype":"m.text"},"ts":1378232699000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you define some property of an abstract thing","msgtype":"m.text"},"ts":1378232711000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"then you can refer to that property for all concrete things","msgtype":"m.text"},"ts":1378232722000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I guess the main issue is this","msgtype":"m.text"},"ts":1378232754000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"When I end up here, I want to follow imperative steps","msgtype":"m.text"},"ts":1378232780000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And I've been doing that repeatedly since I started reading","msgtype":"m.text"},"ts":1378232808000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"what's the imperative step for \"the current node is a MathML text integration point\"?","msgtype":"m.text"},"ts":1378232840000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"But suddenly, without a warning, I end up with a declarative definition","msgtype":"m.text"},"ts":1378232845000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"or \"is an element in the HTML namespace\"?","msgtype":"m.text"},"ts":1378232852000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or \"the current node\"?","msgtype":"m.text"},"ts":1378232866000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"1. Get the namespace","msgtype":"m.text"},"ts":1378232868000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"2. If the namespace if the HTML namespace, return true","msgtype":"m.text"},"ts":1378232879000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"where's that in the spec?","msgtype":"m.text"},"ts":1378232884000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"3. Otherwise, return false","msgtype":"m.text"},"ts":1378232884000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"all the spec does is define the namespace property","msgtype":"m.text"},"ts":1378232894000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It's a straightforward translation, though","msgtype":"m.text"},"ts":1378232910000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I find the case here less straightforward","msgtype":"m.text"},"ts":1378232920000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"how about \"If the parser's Document has a style sheet that is blocking scripts\" ?","msgtype":"m.text"},"ts":1378232932000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or \"if there is an adjusted current node and it is not an element in the HTML namespace and the next seven characters are a case-sensitive match for the string \"[CDATA[\"\" ?","msgtype":"m.text"},"ts":1378232954000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the parser is full of these property checks","msgtype":"m.text"},"ts":1378232960000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"in fact i don't really see how else you could do it","msgtype":"m.text"},"ts":1378232966000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"programming is full of property checks","msgtype":"m.text"},"ts":1378232972000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I agree there are property checks","msgtype":"m.text"},"ts":1378232981000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"how would you phrase \"If the stack of open elements does not have a body element in scope, this is a parse error; ignore the token.\" if it wasn't a property check?","msgtype":"m.text"},"ts":1378233003000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Loop over the stack, until you find a body element","msgtype":"m.text"},"ts":1378233021000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that would like double the length of this part of the spec","msgtype":"m.text"},"ts":1378233063000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and make it harder to reason about to boot","msgtype":"m.text"},"ts":1378233071000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"You don't have to write that out every time","msgtype":"m.text"},"ts":1378233095000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"what exact text would you replace the above with?","msgtype":"m.text"},"ts":1378233131000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Either you keep the definition with the particular node for \"has a particular element in scope\", and then you write:","msgtype":"m.text"},"ts":1378233199000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"If the stack of open elements does not have a particular element in scope that is a body element, this is...\"","msgtype":"m.text"},"ts":1378233237000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or you keep that text, and define...","msgtype":"m.text"},"ts":1378233253000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The stack of open elements has an element of kind (or whatever) /x/ in scope when... loop... if /node/ is of kind /x/: match","msgtype":"m.text"},"ts":1378233337000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i don't understand why \"If the stack of open elements does not have a particular element in scope\" is ok for you, but \"...does not have a button element in scope\" is not, given the way english works.","msgtype":"m.text"},"ts":1378233344000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"They're both fine, but they don't connect","msgtype":"m.text"},"ts":1378233373000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"The player has a fruit if their inventory contains a fruit\" \"Does the player have a pear?\" connects, does it not?","msgtype":"m.text"},"ts":1378233426000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"why is this different?","msgtype":"m.text"},"ts":1378233430000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Doesn't connect for me","msgtype":"m.text"},"ts":1378233455000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1378233466000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1378233470000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"If you define \"The player has a fruit if their inventory contains a fruit\", I can only answer \"Does the player have any fruit\"","msgtype":"m.text"},"ts":1378233477000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i gotta go to lunch. bbiab.","msgtype":"m.text"},"ts":1378233484000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"And I'm going to head off for the night, ttyl","msgtype":"m.text"},"ts":1378233497000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: it's kinda weird that \"does not have a body element in scope\" links to \"have an element in scope\" whose types don't list the body element","msgtype":"m.text"},"ts":1378233551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"might be xref issue I suppose","msgtype":"m.text"},"ts":1378233576000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe \"If the stack of open elements does not have >>any<< body element in scope, this is...\" might be clearer already","msgtype":"m.text"},"ts":1378233621000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But my brain is too fried to continue right now :)","msgtype":"m.text"},"ts":1378233633000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"a\" is the same as \"any\" really","msgtype":"m.text"},"ts":1378234002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in this context","msgtype":"m.text"},"ts":1378234006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What's the idiomatic way to deal with exceptions in a spec?  Specifically, I need to take a 'font' value and turn it into a list of matching Font objects.  If there's no matching objects, I want to throw an error.  (Actually, reject a promise, but I'll reject it with an error.)  What's the right thing to do with something like this?","msgtype":"m.text"},"ts":1378235393000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(also, lunch now - replies will be responded to in an hour or so)","msgtype":"m.text"},"ts":1378235627000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: prolly a plain JavaScript TypeError or RangeError","msgtype":"m.text"},"ts":1378235961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: doesn't seem like there's a nice semantic mapping though between 'font' property values (assuming that's what you meant) and Font objects (representing individual fonts I assume once again)","msgtype":"m.text"},"ts":1378236032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, there is - you just do the font resolution algo that Fonts defines, for choosing which faces to use.","msgtype":"m.text"},"ts":1378241326000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Each face is a Font object.","msgtype":"m.text"},"ts":1378241332000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, so I should probably name the interface FontFace.","msgtype":"m.text"},"ts":1378241342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: I don't do anything more special than say \"reject with a TypeError\"?","msgtype":"m.text"},"ts":1378241374000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That seems confusing with @font-face.","msgtype":"m.text"},"ts":1378241384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: yeah, if it's actually an error condition that seems fine. The browser can add a nice message...","msgtype":"m.text"},"ts":1378241403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: @font-face creates implicit FontFace objects, prepopulating the document.fonts set.","msgtype":"m.text"},"ts":1378241430000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: maybe say a JavaScript TypeError exception given that the rest of the language is prolly based around IDL..","msgtype":"m.text"},"ts":1378241436000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Okay, cool.","msgtype":"m.text"},"ts":1378241437000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I see. As for the objects. It might help thinking about what we'd expose if we went lower on the stack.","msgtype":"m.text"},"ts":1378241510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: as some day we might want to go there and it'd be great if things would still fit together if we did.","msgtype":"m.text"},"ts":1378241526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://twitter.com/glazou/status/374998161473155072","msgtype":"m.text"},"ts":1378241533000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: My idea right now is to have a FontSet attached to documents and workers.  @font-face rules pre-populate the document's set with FontFace objects.  You can manually construct FontFaces with a descriptor dict and either a url or a TypedArray of font data, then add them to the set.","msgtype":"m.text"},"ts":1378241564000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that's the idea behind http://extensiblewebmanifesto.org/ anyway. Running the design by Yehuda and public-script-coord will prolly help us get there.","msgtype":"m.text"},"ts":1378241568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Reasons I hate merges: http://git-scm.com/blog/2010/03/02/undoing-merges.html","msgtype":"m.text"},"ts":1378241577000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"FontFaces would be transferrable, so you can hand them to a Worker to let it use fonts.","msgtype":"m.text"},"ts":1378241580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Yeah, I'm doing first draft in spec, then plan to socialize it on public-script-coord.","msgtype":"m.text"},"ts":1378241596000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you git revert a merge then redoing the merge doesn't work the way you expect","msgtype":"m.text"},"ts":1378241600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, but why would you ever do that?!","msgtype":"m.text"},"ts":1378241608000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So you either need to edit history or remember that branch is special when you re-merge","msgtype":"m.text"},"ts":1378241659000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: I signed that webpage, so yeah, I know the principles.  ^_^","msgtype":"m.text"},"ts":1378241665000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Mm, signing web pages","msgtype":"m.text"},"ts":1378241676000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: In this case because https://github.com/w3c/web-platform-tests/pull/316#issuecomment-23740848","msgtype":"m.text"},"ts":1378241690000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"raises one eyebrow","msgtype":"m.emote"},"ts":1378241726000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: aight, sounds good.","msgtype":"m.text"},"ts":1378241728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: btw, why is code unit order not sensible for string ordering? I didn't quite get that thread...","msgtype":"m.text"},"ts":1378241744000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"code unit order would be unambiguous, but it's not a proper \"unicode ordering\".","msgtype":"m.text"},"ts":1378241779000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought it only had to be well-defined, not useful","msgtype":"m.text"},"ts":1378241805000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, I suppose well-defined is enough here.","msgtype":"m.text"},"ts":1378241815000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I can produce a well-defined-but-not-that-useful ordering for FontFace objects too.","msgtype":"m.text"},"ts":1378241831000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Do we have something on the platform that says that everything is just NFC or something?","msgtype":"m.text"},"ts":1378241855000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is that even true?","msgtype":"m.text"},"ts":1378241932000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh man, it'll be nice when bikeshed integrates shepherd's IDL parsing, so I can avoid marking up all these IDL things as definitions and links.","msgtype":"m.text"},"ts":1378241951000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: Shrug.","msgtype":"m.text"},"ts":1378241955000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"where are tests for http://encoding.spec.whatwg.org/ supposed to go?","msgtype":"m.text"},"ts":1378241959000,"senderName":"jamesr_`","senderId":"jamesr_`@irc"},
{"content":{"body":"I think JS does NFC for its strings.","msgtype":"m.text"},"ts":1378241968000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: for sort?","msgtype":"m.text"},"ts":1378242003000,"senderName":"jamesr_`","senderId":"jamesr_`@irc"},
{"content":{"body":"TabAtkins: Unicode ordering is overrated imo. Also, it seems better than undefined / random.","msgtype":"m.text"},"ts":1378242020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr_`: For what? That question doesn't have enough context.","msgtype":"m.text"},"ts":1378242023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Yeah, better than undefined.","msgtype":"m.text"},"ts":1378242028000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: \"JS does NFC for its strings\" doesn't have enough context either ;-)","msgtype":"m.text"},"ts":1378242060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr_`: I suggest https://github.com/w3c/web-platform-tests","msgtype":"m.text"},"ts":1378242080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr_`: since all W3C specs rely on it these days","msgtype":"m.text"},"ts":1378242091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm thinking I might be wrong, but I thought that JS mandated its strings to be in NFC.","msgtype":"m.text"},"ts":1378242092000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: nah doesn't","msgtype":"m.text"},"ts":1378242100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, kk then.","msgtype":"m.text"},"ts":1378242104000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: JS has 16-bit code unit strings","msgtype":"m.text"},"ts":1378242106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, yeah, but still.","msgtype":"m.text"},"ts":1378242112000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And CSS doesn't mandate a normalization form either. :/","msgtype":"m.text"},"ts":1378242121000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Pretty sure it doesn't do conformance like HTML does :-)","msgtype":"m.text"},"ts":1378242130000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which means that technically \"code unit\" is still ambiguous.","msgtype":"m.text"},"ts":1378242132000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JS has 16-bit unsigned integers","msgtype":"m.text"},"ts":1378242134000,"senderName":"jamesr_`","senderId":"jamesr_`@irc"},
{"content":{"body":"calling them 'code unit' is a stretch","msgtype":"m.text"},"ts":1378242141000,"senderName":"jamesr_`","senderId":"jamesr_`@irc"},
{"content":{"body":"makes sense to me, distinguishing from codepoints","msgtype":"m.text"},"ts":1378242164000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"there's basically nothing in the language that requires or assumes the contents of JS strings have anything to do with unicode","msgtype":"m.text"},"ts":1378242172000,"senderName":"jamesr_`","senderId":"jamesr_`@irc"},
{"content":{"body":"jamesr_`: that's not true","msgtype":"m.text"},"ts":1378242187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's tons that *assumes*.","msgtype":"m.text"},"ts":1378242194000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jamesr_`: and not that code unit != code point","msgtype":"m.text"},"ts":1378242196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anything that interacts with the string as a string assumes it's in a bastardized utf-16.","msgtype":"m.text"},"ts":1378242210000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"UCS-2","msgtype":"m.text"},"ts":1378242219000,"senderName":"jamesr_`","senderId":"jamesr_`@irc"},
{"content":{"body":"No, UCS-2 can't encode anything over 16-bits.  It's bastardized utf-16.","msgtype":"m.text"},"ts":1378242236000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"With a UCS-2-like structure.","msgtype":"m.text"},"ts":1378242244000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"serialized utf-16 with 16-bit indexing","msgtype":"m.text"},"ts":1378242260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"except that it isn't necessarily valid utf-16","msgtype":"m.text"},"ts":1378242296000,"senderName":"jamesr_`","senderId":"jamesr_`@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1378242301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So there's no *requirement*.  But there's plenty of assumption.","msgtype":"m.text"},"ts":1378242311000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you can have arbitrary bits in each element and pretty much everything works","msgtype":"m.text"},"ts":1378242315000,"senderName":"jamesr_`","senderId":"jamesr_`@irc"},
{"content":{"body":"16-bit code units is the term for that though...","msgtype":"m.text"},"ts":1378242316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, back to writing specs.","msgtype":"m.text"},"ts":1378242329000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh yeah, annevk, while you're here - adopt hook?","msgtype":"m.text"},"ts":1378242338000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or code points up to U+FFFD with special meaning for valid surrogate pairs","msgtype":"m.text"},"ts":1378242343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: file a bug I guess?","msgtype":"m.text"},"ts":1378242359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: kk","msgtype":"m.text"},"ts":1378242362000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And how best to say \"Promise.every(some-spec-defined-list-of-promises)\"?","msgtype":"m.text"},"ts":1378242421000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I guess for that you want to wait until we've re-defined Promise.every() and then simply reference its internal algorithm (that cannot be replaced).","msgtype":"m.text"},"ts":1378242522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Cool.  I'll just hand-wave for now with an issue about it.","msgtype":"m.text"},"ts":1378242543000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jamesr_`: Might be a bit crufty now, but my JS prototype for the Encoding API has W3C-style tests in https://code.google.com/p/stringencoding/source/browse/tests.js","msgtype":"m.text"},"ts":1378242726000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"i.e. someone could clean up and submit those","msgtype":"m.text"},"ts":1378242784000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: Submit them now and we can track the cleanup in critic","msgtype":"m.text"},"ts":1378243325000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(create a branch in the W3C repo rather than using your personal GH and we can even have multiple contributers)","msgtype":"m.text"},"ts":1378243361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I guess I should look into doing that for my URL tests too at some point?","msgtype":"m.text"},"ts":1378244609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder what the licensing deal is these days","msgtype":"m.text"},"ts":1378244634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I need to be a member of the org presumably?","msgtype":"m.text"},"ts":1378244649000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"grabs \"jsbell\" at github, yay for multiple personalities","msgtype":"m.emote"},"ts":1378244993000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Suggestions on an interface name for \"a set of fonts usable in a given context\"?","msgtype":"m.text"},"ts":1378245203000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"FontFaceSet\" might be sufficient.","msgtype":"m.text"},"ts":1378245215000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"code unit order? i guess i need to say that for getComputedStyle huh","msgtype":"m.text"},"ts":1378245523000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yeah.","msgtype":"m.text"},"ts":1378245573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: But we still need to specify a normalization form to do that.","msgtype":"m.text"},"ts":1378245599000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1378245632000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Because given var-Á, whether it's encoded as A followed by combining acute accent or as A with acute accent changes what code units it's using.","msgtype":"m.text"},"ts":1378245718000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And whether it sorts before or after var-B.","msgtype":"m.text"},"ts":1378245728000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: can’t we just ignore that and deal with code points?","msgtype":"m.text"},"ts":1378245784000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"do css parser normalize for e.g. selectors?","msgtype":"m.text"},"ts":1378245786000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Not specified.","msgtype":"m.text"},"ts":1378245795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Unfortunately.","msgtype":"m.text"},"ts":1378245801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what about impls?","msgtype":"m.text"},"ts":1378245804000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin: Code points gives you the same problem.","msgtype":"m.text"},"ts":1378245816000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is a normalization issue, not an encoding issue.","msgtype":"m.text"},"ts":1378245824000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: Dunno.","msgtype":"m.text"},"ts":1378245829000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"checks","msgtype":"m.emote"},"ts":1378245835000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin: The two characters A + combining acute accent and the single character Á are the same grapheme cluster, but they're different sets of code points and code units.","msgtype":"m.text"},"ts":1378245875000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I understand that. But I think CSS can get away with considering them different","msgtype":"m.text"},"ts":1378245928000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"huh. blink uppercases the å in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2505","msgtype":"m.text"},"ts":1378245939000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess that's in .nodeName rather than the parser","msgtype":"m.text"},"ts":1378245961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i.e. ignore abstract characters and normalization, only compare code points","msgtype":"m.text"},"ts":1378245971000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Hm, I suppose it could.  Just treat CSS and JS as black-box sources of codepoint lists.","msgtype":"m.text"},"ts":1378246016000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In that case it's not actually an issue.","msgtype":"m.text"},"ts":1378246164000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2507","msgtype":"m.text"},"ts":1378246261000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"at least gecko and blink don't normalize","msgtype":"m.text"},"ts":1378246285000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"css could do what js does and say \"source text is assumed to be NFC without checking that it is\"","msgtype":"m.text"},"ts":1378246401000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I wish I could go back in time and make the unicode consortium exist earlier, and only produce utf-8 as a valid encoding.","msgtype":"m.text"},"ts":1378246518000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rniwa: i don't understand why, in your proposal, A.js executes immediately before B.js which executes immediately C.js in use case U, but in use case S, A.js executes asap when B is needed, and B.js only executes when it can after A.js is run.","msgtype":"m.text"},"ts":1378246545000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Also, not do the weird thing where there are 17 planes, so you need a 21st bit to encode only that last plane.","msgtype":"m.text"},"ts":1378246551000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, 16 or 32 or gtfo.","msgtype":"m.text"},"ts":1378246577000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: sorry, there is a typo there :(","msgtype":"m.text"},"ts":1378246651000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: i don't really understand how your proposal differs from the one in my last e-mail, other than renamign \"whenneeded\" to \"prefetch\" and dropping the =jit feature.","msgtype":"m.text"},"ts":1378246773000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: so my \"prefix\" behaves like whenneeded=jit","msgtype":"m.text"},"ts":1378246795000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"prefetch*","msgtype":"m.text"},"ts":1378246799000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie_: or rather a hybrid of whenneeded=true & hit","msgtype":"m.text"},"ts":1378246816000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie_: jit*","msgtype":"m.text"},"ts":1378246822000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"they seem rather different... one executes asap, the other as late as possible. how can you do a hybrid without losing one or the other?","msgtype":"m.text"},"ts":1378246844000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: i'm dropping the ability to execute asap since that can be done by async=true if i'm not mistaken","msgtype":"m.text"},"ts":1378246887000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: how do you do that while still not executing asap if you're not needed?","msgtype":"m.text"},"ts":1378246974000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: which use case is that?","msgtype":"m.text"},"ts":1378247044000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"all of them except U, basically","msgtype":"m.text"},"ts":1378247139000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you don't know how long scripts will take to run, so you don't usually want to wait if you know you need to run it","msgtype":"m.text"},"ts":1378247168000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"even if the relevant dependency is itself still loading","msgtype":"m.text"},"ts":1378247187000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"U\" is the only use case for \"jit\", iirc","msgtype":"m.text"},"ts":1378247220000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1378247227000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oops, never finished my last mail to that thread","msgtype":"m.text"},"ts":1378247244000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: why doesn't async: true work in that case?","msgtype":"m.text"},"ts":1378247257000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie_: say you have a script a.js and another script b.js that depends on a.js.  then all you need is <script src=\"a.js\" async></script><script src=\"b.js\" needs=\"a.js\" async></script>","msgtype":"m.text"},"ts":1378247336000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: take use case S. two scripts, second depends on the first. at time t=1, you have downloaded A.js, but still don't have B.js. User indicates he needs B.js's services, so the script marks B.js as needed.","msgtype":"m.text"},"ts":1378247341000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rniwa: now how do you ensure that A.js doesn't run until B.js is needed, but does run before B.js is downloaded, since B.js is being slow?","msgtype":"m.text"},"ts":1378247363000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: should be pacific time?","msgtype":"m.text"},"ts":1378247380000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"rniwa: if you're parsing <script src=\"a.js\" async></script>ZZZ<script src=\"b.js\" needs=\"a.js\" async></script> and while parsing \"ZZZ\" you get a.js down and are ready to run it, how do you know _not_ to run it?","msgtype":"m.text"},"ts":1378247409000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"<script src=\"A.js\" prefetch></script><script src=\"B.js\" needs=\"A.js\" prefetch></script>","msgtype":"m.text"},"ts":1378247418000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"gavin: Okay.  Mind indicating that somewhere on the page?","msgtype":"m.text"},"ts":1378247422000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rniwa: why won't that wait until B.js is ready to run?","msgtype":"m.text"},"ts":1378247431000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: it will.","msgtype":"m.text"},"ts":1378247454000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins: I will try to remember. might wokr better if you email me :)","msgtype":"m.text"},"ts":1378247456000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"Hixie_: i don't understand. if B.js is needed, then we need to have downloaded both A.js and B.js","msgtype":"m.text"},"ts":1378247469000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: i don't want it to","msgtype":"m.text"},"ts":1378247469000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rniwa: B.js might still be downloading.","msgtype":"m.text"},"ts":1378247481000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rniwa: but if B is needed, then you generally want to execute A.js","msgtype":"m.text"},"ts":1378247492000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"gavin: kk","msgtype":"m.text"},"ts":1378247512000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gavin: Dunno your email address.","msgtype":"m.text"},"ts":1378247547000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: so are you saying that in your example for CMS plugin 1, when you call B.execute();","msgtype":"m.text"},"ts":1378247586000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie_: B.js might be still downloading?","msgtype":"m.text"},"ts":1378247592000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1378247596000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I see. Thanks for the clarification.","msgtype":"m.text"},"ts":1378247657000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie_: I have somewhat similar use case for U then.","msgtype":"m.text"},"ts":1378247745000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie_: which is that sometimes you want to execute the script immediately only if it's available in the cache","msgtype":"m.text"},"ts":1378247766000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if not, then you want to delay it until more important assets such as images are loaded","msgtype":"m.text"},"ts":1378247794000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins: it's at the bottom of http://gavinsharp.com/","msgtype":"m.text"},"ts":1378247817000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"FWIW, my instinct for U was \"it's not the job of a dependancy management system\", and should either be added and discussed separately--it seems to bloat this discussion a bit","msgtype":"m.text"},"ts":1378247827000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: if you have a new use case, please mail the list :-)","msgtype":"m.text"},"ts":1378247864000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: can't U be addressed by looking for load event on each script?","msgtype":"m.text"},"ts":1378247932000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie_: or maybe by exposing readyState?","msgtype":"m.text"},"ts":1378247936000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie_: i'm inclined to ditch the use case U for those alternatives...","msgtype":"m.text"},"ts":1378247945000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but I guess it'll be nice to address that declaratively as well.","msgtype":"m.text"},"ts":1378247983000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"well like i said earlier, if it's something we don't want to address, that's a different argument","msgtype":"m.text"},"ts":1378248018000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heads up: starting at 18:30 UTC, the W3C Systems Team","msgtype":"m.text"},"ts":1378251366000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will upgrade Bugzilla to the latest version 4.4. This process is","msgtype":"m.text"},"ts":1378251366000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"expected to take less than an hour. While the upgrade is underway, it","msgtype":"m.text"},"ts":1378251366000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will not be possible to view or update bugs.\"","msgtype":"m.text"},"ts":1378251373000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Thursday, 5 September","msgtype":"m.text"},"ts":1378251385000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: Yeah, indeed. GitHub sucks. We need shared work branches (guess we could just use some on the w3c org repo).","msgtype":"m.text"},"ts":1378251853000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: (Though I couldn't push to them, AFAIK)","msgtype":"m.text"},"ts":1378251862000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"what's a shared work branch?","msgtype":"m.text"},"ts":1378251966000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or what's different about it than a normal remote branch?","msgtype":"m.text"},"ts":1378252002000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Well, multiple committers","msgtype":"m.text"},"ts":1378252057000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]