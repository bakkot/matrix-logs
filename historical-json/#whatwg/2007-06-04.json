[
{"content":{"body":"meh, Firefox hates me and won't load http://www.whatwg.org/specs/web-apps/current-work/#video","msgtype":"m.text"},"ts":1180956960000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"you can always try http://www.whatwg.org/specs/web-apps/current-work/multipage/section-video.html#video","msgtype":"m.text"},"ts":1180956961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmmm... that works","msgtype":"m.text"},"ts":1180957200000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"somehow my Firefox 2 (plain vanilla what comes with Ubuntu 7.04 plus a few extensions) is picky at times. It often gets into a \"no, I won't load pages for you anymore until you kill and restart me\" state","msgtype":"m.text"},"ts":1180957260000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"could be a profile issue, this profile may date back into Firefox alpha days ;)","msgtype":"m.text"},"ts":1180957320000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"err.. Phoenix alpha builds of course","msgtype":"m.text"},"ts":1180957321000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"I'm going to propose that http://wiki.xiph.org/index.php/OggPlayJavascriptAPI perhaps should be as close to the WHATWG API as possible","msgtype":"m.text"},"ts":1180957440000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"annevk: what are reasons for XML5?","msgtype":"m.text"},"ts":1180957500000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"it's only academic project or something more?","msgtype":"m.text"},"ts":1180957501000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"oh www.xml5.com","msgtype":"m.text"},"ts":1180957560000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"http://code.google.com/p/xml5/","msgtype":"m.text"},"ts":1180957680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it might be worth something actually","msgtype":"m.text"},"ts":1180957681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, Phoenix!","msgtype":"m.text"},"ts":1180957682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wondered about the third name for some time","msgtype":"m.emote"},"ts":1180957740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was it phoenix -> firebird -> firefox?","msgtype":"m.text"},"ts":1180957741000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maikmerten, they are already implementing support for Ogg and <video> in Firefox","msgtype":"m.text"},"ts":1180957742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, yeah","msgtype":"m.text"},"ts":1180957743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"worth something? do you think  webbrowsers will implement it?","msgtype":"m.text"},"ts":1180957800000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1180957801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1180957802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would certainly solve some issues","msgtype":"m.text"},"ts":1180957803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you are only playing with and will see the results later?","msgtype":"m.text"},"ts":1180957860000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"just writing some article and want mention xml5","msgtype":"m.emote"},"ts":1180957861000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"annevk, yup, Chris Double is working on that","msgtype":"m.text"},"ts":1180957920000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"I'm doing research into it and making a draft proposal as well as an experimental implementation","msgtype":"m.text"},"ts":1180957921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maikmerten, doesn't that make the plugin effort kind of pointless?","msgtype":"m.text"},"ts":1180957922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(which is what I was after)","msgtype":"m.text"},"ts":1180957923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, well, I consider the plugin more or less a testbed for liboggplay","msgtype":"m.text"},"ts":1180957924000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"annevk, plus Chris mentioned he may look into the plugin/liboggplay to see if some things can be harvested","msgtype":"m.text"},"ts":1180957980000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"guess I should read up on liboggplay","msgtype":"m.text"},"ts":1180957981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, I think UTF-32 is part of the deal","msgtype":"m.text"},"ts":1180958040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, it's mostly a lightweight top-level abstraction library to play back Ogg streams in a sane way. It also handles A/V sync, which is nontrivial to do crossplatform","msgtype":"m.text"},"ts":1180958041000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"thans","msgtype":"m.text"},"ts":1180958160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"only problem I see for use in browsers: It depends on libfishsound (abstraction layers for the multitude of Ogg audio codecs.... Speex, FLAC, Vorbis...) and on liboggz (abstraction layer for libogg, which is the very opposite of high-level)...","msgtype":"m.text"},"ts":1180958161000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"thanks*","msgtype":"m.text"},"ts":1180958162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so it may be a bit problematic to have such a deep stack of layers when it comes to security","msgtype":"m.text"},"ts":1180958220000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"annevk: mind setting properties on html files in subversion?","msgtype":"m.text"},"ts":1180958520000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"that way, you could view http://xml5.googlecode.com/svn/trunk/specification/Overview.html in a regular browser","msgtype":"m.text"},"ts":1180958580000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"so xml5 parsers don't need to implement doctypes... they can abort instead :)","msgtype":"m.text"},"ts":1180958581000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, quite the opposite from HTML5 :)","msgtype":"m.text"},"ts":1180958640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1180958641000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"comments work exactly the same?","msgtype":"m.text"},"ts":1180958700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"with less parse errors","msgtype":"m.text"},"ts":1180958760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"atm","msgtype":"m.text"},"ts":1180958761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for the <!-- ---> case?","msgtype":"m.text"},"ts":1180958820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"also <!-- -- -->","msgtype":"m.text"},"ts":1180958821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"perhaps they shouldn't be parse errors in html5","msgtype":"m.text"},"ts":1180958880000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<!------------------> looks good ;)","msgtype":"m.text"},"ts":1180958940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: <!DOCTYPE >> is a doctype token with the name \">\", correct?","msgtype":"m.text"},"ts":1180959360000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<!-- opens a comment and --> closes it","msgtype":"m.text"},"ts":1180959361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's in between doesn't matter as long as it's not -->","msgtype":"m.text"},"ts":1180959362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1180959420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, that might be a bug","msgtype":"m.text"},"ts":1180959421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"DOCTYPE root name before state","msgtype":"m.text"},"ts":1180959422000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It seems that's handled correctly by the parser...","msgtype":"m.text"},"ts":1180959600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as in, > does not give the name","msgtype":"m.text"},"ts":1180959601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1180959660000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(though the specification suggests otherwise, indeed)","msgtype":"m.text"},"ts":1180959661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"guess it makes sense to end if > is spotted","msgtype":"m.text"},"ts":1180959720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1180959721000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not sure about <!DOCTYPE a \">\">","msgtype":"m.text"},"ts":1180959722000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think the spec is correct there now...","msgtype":"m.text"},"ts":1180959780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as in, the > is part of the non-reported identifier","msgtype":"m.text"},"ts":1180959781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wait, what about PUBLIC and SYSTEM?","msgtype":"m.text"},"ts":1180959900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"are they fed through the root name states?","msgtype":"m.text"},"ts":1180959960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"they're safely skipped over iirc","msgtype":"m.text"},"ts":1180959961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's the goal anyway","msgtype":"m.text"},"ts":1180960020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1180960021000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1180960022000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"during the DOCTYPE state only a few tokens are created that only affect the rest of the tokenization stage","msgtype":"m.text"},"ts":1180960080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not the parsing stage","msgtype":"m.text"},"ts":1180960081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"DOCTYPE identifier double quoted state, EOF, shouldn't it reprocess?","msgtype":"m.text"},"ts":1180960140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1180960320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there are some minor glitches like that here and there still","msgtype":"m.text"},"ts":1180960321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've also yet to write out entities and attlist","msgtype":"m.text"},"ts":1180960322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, oh, one thing I told Chris Double and which I tried to tell howcome (by email, but no response): I recommend not using one of the released Theora alphas for in-browser usage. It makes sense to use Theora SVN trunk, as this features a completely rewritten decoder that is felt to be much safer when it comes to malformed content. There's a compatibility layer, so you don't need to worry about yet another API.","msgtype":"m.text"},"ts":1180960500000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1180960680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"however, if you adapt to a slightly revised API (theoradec.h instead of theora.h) you have access to e.g. a system of postprocessing filters, which increases the perceived picture quality","msgtype":"m.text"},"ts":1180960681000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"http://img454.imageshack.us/my.php?image=bildschirmfoto1fx6.png <-- no postprocessing, default, old decoder will look like this","msgtype":"m.text"},"ts":1180960682000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"http://img454.imageshack.us/my.php?image=bildschirmfoto2xp3.png <- new decoder, with maximum postprocessing (notice how the blocky artifacts are nicely smoothed out)","msgtype":"m.text"},"ts":1180960740000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"meh, and yet again I spam this channel with irrelevant stuff, sorry :(","msgtype":"m.text"},"ts":1180960741000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"it's not that irrelevant I think","msgtype":"m.text"},"ts":1180960800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, but it's far away from actual WHATWG specification work","msgtype":"m.text"},"ts":1180960860000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"so? :)","msgtype":"m.text"},"ts":1180960861000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"my point is that I assume most people here aren't thaaaat interested in codec discussion or how a particular codec exposes what functions over what API, so I should keep that topic fairly low-profile","msgtype":"m.text"},"ts":1180960980000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"it is hard to get notify the tokenizer about the byte stream crossing the 512 byte mark while supporting UTF-8 sequences landing across the boundary and maintaining otherwise efficient buffering","msgtype":"m.text"},"ts":1180961400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/get //","msgtype":"m.text"},"ts":1180961640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"why do it through the tokenizer?","msgtype":"m.text"},"ts":1180961760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"to check for the requirement that the internal encoding declaration has to occur within the first 512 bytes if it does occur","msgtype":"m.text"},"ts":1180961880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: this isn't about detecting the encoding but about detecting misplaced charset metas","msgtype":"m.text"},"ts":1180961940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what about <style>/*<meta charset=utf-8>*/</style>? it will be detected but isn't an element in the parsed tree","msgtype":"m.text"},"ts":1180962000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh right","msgtype":"m.text"},"ts":1180962060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: as far as I can tell, having <style>/*<meta charset=utf-8>*/</style> after the first 512 bytes is not an error and my implementation plan doesn't cover detecting it","msgtype":"m.text"},"ts":1180962061000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the algorithm doesn't deal with <style>, <script>, <plaintext>, etc?","msgtype":"m.text"},"ts":1180962120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1180962121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the byte-level sniffer doesn't","msgtype":"m.text"},"ts":1180962180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: ok","msgtype":"m.text"},"ts":1180962181000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: as Hixie why not :-)","msgtype":"m.text"},"ts":1180962182000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"because that's what current browsers are doing","msgtype":"m.text"},"ts":1180962183000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: really? I thought current browsers run the full parser twice","msgtype":"m.text"},"ts":1180962184000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah, really","msgtype":"m.text"},"ts":1180962240000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1180962241000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"very interesting","msgtype":"m.text"},"ts":1180962242000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"indeed :)","msgtype":"m.text"},"ts":1180962243000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so current browsers are not reusing the tokenizer?","msgtype":"m.text"},"ts":1180962300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or are using the tokenizer but not using the contentmodelflag...","msgtype":"m.text"},"ts":1180962360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whoa","msgtype":"m.text"},"ts":1180962361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"something like that","msgtype":"m.text"},"ts":1180962362000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"they detect meta charset in <style>","msgtype":"m.text"},"ts":1180962363000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: anyway, as far as I can tell, http://www.whatwg.org/specs/web-apps/current-work/#charset makes a statement about document conformance requirements about the byte placement of an attribute (where the attributeness is determined on the character stream-reading tokenizer level)","msgtype":"m.text"},"ts":1180962364000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"joy","msgtype":"m.text"},"ts":1180962365000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'd like to know now if I am misunderstanding requirements for conformance checkers on this point","msgtype":"m.text"},"ts":1180962420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"when I last read that it's indeed as you say","msgtype":"m.text"},"ts":1180962540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so as far as I can tell, I have to make sure that both byte buffering and UTF-16 code unit buffering have a forced buffer boundary at that point so that a notification can happen between buffers","msgtype":"m.text"},"ts":1180962660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it only matters for ASCII compatible encodings though","msgtype":"m.text"},"ts":1180962720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that doesn't help much considering that UTF-8 is variable-length and various Asian encodings, too","msgtype":"m.text"},"ts":1180962780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"can't you just sniff for <meta in the first 512 bytes and combine those results with the result from the tree construction?","msgtype":"m.text"},"ts":1180963080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what if there is no meta in the first 512 bytes but there is one afterwards?","msgtype":"m.text"},"ts":1180963081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I should emit an error, shouldn't I?","msgtype":"m.text"},"ts":1180963140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1180963141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it wouldn't be detected","msgtype":"m.text"},"ts":1180963142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(well, for <meta charset> that is)","msgtype":"m.text"},"ts":1180963143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also, using the java.nio.charset stuff with reported errors *and* recovery requires a lot of work that doesn't come from the libraries by default","msgtype":"m.text"},"ts":1180963260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"maybe you should focus on something else first?","msgtype":"m.text"},"ts":1180963261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"notes that it charset detection might change...","msgtype":"m.emote"},"ts":1180963320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the 512 requirement might be dropped altogether, aiui","msgtype":"m.text"},"ts":1180963321000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"as opposed to the other bits, which should be more stable","msgtype":"m.text"},"ts":1180963322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if browser vendors find that they have to examine the entire document anyway","msgtype":"m.text"},"ts":1180963323000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, if the entire document is several megabytes though that doesn't seem useful","msgtype":"m.text"},"ts":1180963380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1180963381000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: is namespace association dealt with after the tree construction?","msgtype":"m.text"},"ts":1180963500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: perhaps. but usually when abstraction layers are violated, it is good to cover the violation points first, because if you design with clean abstractions, it is harder to punch the holes later","msgtype":"m.text"},"ts":1180963501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"maikmerten, I'd suggest another advantage of using liboggplay (apart from being cross-platform, having good sync and being simple to program against) is that it supports Ogg Skeleton, which allows streaming from time offsets, seeking by time/chapter over HTTP etc.","msgtype":"m.text"},"ts":1180963560000,"senderName":"kfish","senderId":"kfish@irc"},
{"content":{"body":"oooh, right, I totally forgot that","msgtype":"m.text"},"ts":1180963561000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"annevk: besides, reporting and recovering from malformed byte sequences is more work anyway and is likely to stay","msgtype":"m.text"},"ts":1180963620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"how can i tell (from a web app) if the user agent supports html5?","msgtype":"m.text"},"ts":1180963680000,"senderName":"kfish","senderId":"kfish@irc"},
{"content":{"body":"you can't","msgtype":"m.text"},"ts":1180963740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kfish: for what purpose?","msgtype":"m.text"},"ts":1180963741000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"supporting html5\" is kind of broad too","msgtype":"m.text"},"ts":1180963742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kfish: you should check for the features you need","msgtype":"m.text"},"ts":1180963743000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sure ... i want to offer an html5 page, with <video>, if the browser supports that","msgtype":"m.text"},"ts":1180963744000,"senderName":"kfish","senderId":"kfish@irc"},
{"content":{"body":"then just place the fallback inside the <video> element","msgtype":"m.text"},"ts":1180963745000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"var v = document.createElement(\"video\"); if (v.play) { // prolly some support }","msgtype":"m.text"},"ts":1180963800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, \"create an element\" should do the namespace stuff","msgtype":"m.text"},"ts":1180963801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1180963802000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, with a similar algorithm that's already in the XML spec","msgtype":"m.text"},"ts":1180963803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, I've yet to implement it though","msgtype":"m.text"},"ts":1180963804000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, thanks","msgtype":"m.text"},"ts":1180963860000,"senderName":"kfish","senderId":"kfish@irc"},
{"content":{"body":"annevk, thanks","msgtype":"m.text"},"ts":1180963861000,"senderName":"kfish","senderId":"kfish@irc"},
{"content":{"body":"basically just going up the open elements array and going through the attributes for xmlns: and xmlns= magic","msgtype":"m.text"},"ts":1180963920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://simon.html5.org/sandbox/html/simply-complex","msgtype":"m.text"},"ts":1180964100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1180964580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't really understand that table to begin with","msgtype":"m.emote"},"ts":1180964640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gez' table is the same as my two tables placed on top of each other","msgtype":"m.text"},"ts":1180964700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don't understand his","msgtype":"m.text"},"ts":1180964760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I would love to see these on some real site","msgtype":"m.text"},"ts":1180964761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wikipedia for instance","msgtype":"m.text"},"ts":1180964762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i have the periodic table with headers on 3 sides in print","msgtype":"m.text"},"ts":1180965060000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so with headers on three sides, is <td> connected with all of them?","msgtype":"m.text"},"ts":1180965120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"period on the left side (1..7), group on the top (1..18), and shells on the right (K..Q)","msgtype":"m.text"},"ts":1180965121000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thinks the unbound algorithm should be improved","msgtype":"m.emote"},"ts":1180965122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah. that is not how gez' table works though","msgtype":"m.text"},"ts":1180965180000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I know","msgtype":"m.text"},"ts":1180965181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know how his table works, I'm not sure I understand the use case","msgtype":"m.text"},"ts":1180965182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps a table is too complex if sighted users need AT to grok it","msgtype":"m.text"},"ts":1180965183000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ponders about creating some javascript that hilites headers","msgtype":"m.emote"},"ts":1180965184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"especially if you need to press ctrl+atl+5...","msgtype":"m.text"},"ts":1180965240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i also note that in my periodic system, the headers have headers","msgtype":"m.text"},"ts":1180965480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"much like http://www.webelements.com/ (\"Group\" and \"Period\")","msgtype":"m.text"},"ts":1180965540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"to make it read ok with the current system in html5, you'd have to write \"Period 1\", \"Period 2\" etc in each header cell","msgtype":"m.text"},"ts":1180965720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"which would make the table less foreseeable for sighted users","msgtype":"m.text"},"ts":1180965780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"does HTML5 forbid headers to have headers?","msgtype":"m.text"},"ts":1180965900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no, but the algorithm don't associate them together","msgtype":"m.text"},"ts":1180965901000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"only td->th","msgtype":"m.text"},"ts":1180965960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that should be fixable","msgtype":"m.text"},"ts":1180965961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in my printed table, one cell is split up to form two header cells","msgtype":"m.text"},"ts":1180966020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the algorithm should probably (conceptually) walk the table from the center outwards and associate outer ths as headers for inner ths","msgtype":"m.text"},"ts":1180966021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"calculating line and col numbers for malformed byte sequences is also a fun case of violating abstraction layers","msgtype":"m.text"},"ts":1180966320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.radiochemistry.org/periodictable/periodic_table.jpg","msgtype":"m.text"},"ts":1180966560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"how do you mark up that?","msgtype":"m.text"},"ts":1180966680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"would each cell contain a DL that lists all the properties of the element?","msgtype":"m.text"},"ts":1180966920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Would you actually want to mark it up, rather than stepping back and working out what data you want to present to the user, and how you could better present it without relying on complex visual associations and patterns?","msgtype":"m.text"},"ts":1180966980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1180966981000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it might perhaps be more like a graph, so if you wanted it in that form, you'd use SVG","msgtype":"m.text"},"ts":1180967040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"If someone wanted to find information about a specific element, I would expect it'd be much easier if they could type in the name and get the data back","msgtype":"m.text"},"ts":1180967100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(i.e. using an input box on a form, rather than a table)","msgtype":"m.text"},"ts":1180967101000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1180967220000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or use a table, where each cell just contains the symbol (and/or full name) that is a link to a page that lists the properties of that element","msgtype":"m.text"},"ts":1180967340000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: it seems like whitespace outside the root element is a parse error in xml5","msgtype":"m.text"},"ts":1180967760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1180968180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doing some simple table iterating isn't that hard it seems","msgtype":"m.text"},"ts":1180968540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just start at a cell and go in some direction :)","msgtype":"m.text"},"ts":1180968600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.andybudd.com/archives/2007/06/rebooted/ \"although I still maintain that re-introducing the font tag is a VERY BAD IDEA, and sends out all the wrong signals\"","msgtype":"m.text"},"ts":1180969860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was on stage defending the font tag :)","msgtype":"m.emote"},"ts":1180969920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"never thought I'd do that a couple of years back","msgtype":"m.text"},"ts":1180969921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I still have my doubts about it","msgtype":"m.text"},"ts":1180970160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh, me too","msgtype":"m.text"},"ts":1180970161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although I don't really see a viable alternative","msgtype":"m.text"},"ts":1180970162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<span style=font-family:verdana> is worse","msgtype":"m.text"},"ts":1180970163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what were the reasons for not using <span>?","msgtype":"m.text"},"ts":1180970164000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"what are the reasons for using span?","msgtype":"m.text"},"ts":1180970220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"some editors (like iWeb) already use it, we get screamed at less, etc.","msgtype":"m.text"},"ts":1180970221000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and some don't","msgtype":"m.text"},"ts":1180970222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"using <span style> over <font> for political reasons seems bad","msgtype":"m.text"},"ts":1180970280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1180970281000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"<font> also seems easier to parse than <span style=> given that <span style=> has way more use cases","msgtype":"m.text"},"ts":1180970340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They both seem bad","msgtype":"m.text"},"ts":1180970341000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"well yeah, but there's no semantic editor that's actually used so far","msgtype":"m.text"},"ts":1180970342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mine is :]","msgtype":"m.text"},"ts":1180970400000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"an <img> that is display:none won't request the image, right?","msgtype":"m.text"},"ts":1180977300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I believe <img> is always fetched","msgtype":"m.text"},"ts":1180977420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1180977421000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(for instance, var i = new Image(); i.src = \"blah\")","msgtype":"m.text"},"ts":1180977422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh sure, but that's a different case from <img> in the markup, no?","msgtype":"m.text"},"ts":1180977423000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's the same <img>","msgtype":"m.text"},"ts":1180977480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hrm","msgtype":"m.text"},"ts":1180977481000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"though I suppose Opera may have not loaded display:none <img> at some point...","msgtype":"m.text"},"ts":1180977482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"data:text/html,<img style=display:none src=javascript:alert('foo')>","msgtype":"m.text"},"ts":1180977600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"doesn't alert in opera (but removing display:none does)","msgtype":"m.text"},"ts":1180977601000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what is a simple way to test it in other browsers?","msgtype":"m.text"},"ts":1180977780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"src=img onload=fires?","msgtype":"m.text"},"ts":1180977840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has anyone tested what happens when C1 range Unicode characters are document.written?","msgtype":"m.text"},"ts":1180977841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"do they stay intact or are they turned into the Unicode characters that occupy the C1 byte range in Windows-1252?","msgtype":"m.text"},"ts":1180977900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"data:text/html,<img style=display:none src=data:, onerror=alert('foo')>","msgtype":"m.text"},"ts":1180977960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hm, so firefox does load","msgtype":"m.text"},"ts":1180977961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so does ie7","msgtype":"m.text"},"ts":1180978020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's funny how the table examples given use <td><b>...","msgtype":"m.text"},"ts":1180978140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i've figured something out","msgtype":"m.text"},"ts":1180979940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if there is one thing about web design that is future proof, it's quirks mode","msgtype":"m.text"},"ts":1180979941000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: XHTML!","msgtype":"m.text"},"ts":1180980660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ha","msgtype":"m.text"},"ts":1180980661000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that's just a middle-step to XML+XSLT anyway, isn't it ;)","msgtype":"m.text"},"ts":1180980662000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(XSLT converting it back to HTML)","msgtype":"m.text"},"ts":1180980720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: FWIW, Python doesn't come with a UTF-32 codec by default, either","msgtype":"m.text"},"ts":1180981080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hard to generate test data :-)","msgtype":"m.text"},"ts":1180981081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"UTF-32 is so simple to transcode to UTF-16 or UTF-8, I'm surprised any reasonably complete text system would be missing the codec","msgtype":"m.text"},"ts":1180981380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: well, both Sun's/Apple's JDK and Python are missing it","msgtype":"m.text"},"ts":1180981440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ICU4J has an optional jar that adds support to Java 1.4 or later","msgtype":"m.text"},"ts":1180981500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"forums.whatwg.org won't load for me","msgtype":"m.text"},"ts":1180983540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wonders if it's possible in JS to evaluate a string in a clean scope, so it can't access the variables that are visible to the evaluator, except for a set of explicitly shared variables, like with Python's eval(string, globals, locals)","msgtype":"m.emote"},"ts":1180984020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1180995420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: http://bugs.webkit.org/show_bug.cgi?id=8872 might be relevant for you","msgtype":"m.text"},"ts":1180995480000,"senderName":"Hixie","senderId":"Hixie@irc"}
]