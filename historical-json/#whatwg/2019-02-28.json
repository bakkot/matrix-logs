[
{"content":{"body":"littledan: what are the phases a module goes through again? There's loading, constructing, and evaluation apparently?","msgtype":"m.text"},"ts":1551358822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, in the JS spec, they are called ParseModule, Instantiation (now being renamed to Linking), and Evaluation","msgtype":"m.text"},"ts":1551358900000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Evaluation is where you actually execute the statements in the module","msgtype":"m.text"},"ts":1551358911000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ParseModule is where you create a module record, and Instantiation is where the named exports and imports get associated with each other","msgtype":"m.text"},"ts":1551358941000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I guess it'd make sense to parse HTML/CSS during ParseModule then","msgtype":"m.text"},"ts":1551358984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: their parse operation just doesn't fail","msgtype":"m.text"},"ts":1551359010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that was my expectation as well. Domenic points out that this is a bit more spec bookkeeping, but it's parallel to the JS one.","msgtype":"m.text"},"ts":1551359011000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1551359018000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I see","msgtype":"m.text"},"ts":1551359019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If it's not observable it doesn't matter perhaps how we do it","msgtype":"m.text"},"ts":1551359041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Guess it depends on if there's stuff planned that would make it observable somehow","msgtype":"m.text"},"ts":1551359058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's observable, but in a way that doesn't matter much","msgtype":"m.text"},"ts":1551359108000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Siblings in the module tree may execute first","msgtype":"m.text"},"ts":1551359143000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"A related question is, how should [SecureContext] work for modules: should it make the module not exist, or throw when executed? It's observable in the same sort of way (plus through import-maps)","msgtype":"m.text"},"ts":1551359213000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"IDL makes interfaces not exist, so I guess we should follow that precedent","msgtype":"m.text"},"ts":1551359408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How can we observe anything if our eyes arenâ€™t real anyway","msgtype":"m.text"},"ts":1551359923000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Through the magic of all-observing baguettes","msgtype":"m.text"},"ts":1551359969000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, do we have a policy about acknowedgements if someone files a bug and it's already fixed independently?","msgtype":"m.text"},"ts":1551359997000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"and an additional glass of wine during lunch","msgtype":"m.text"},"ts":1551360007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if this is fun for you: the big question we are working through for top-level await is, should we keep the Evaluate phase synchronous when there is no TLA, or should we do a microtask checkpoint after loading each module? https://github.com/tc39/proposal-top-level-await/issues/47#issuecomment-467898555","msgtype":"m.text"},"ts":1551360035000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Ms2ger: not that I know of","msgtype":"m.text"},"ts":1551360042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: I tried wrapping my head around it, but other than \"consistency would make sense\" I don't have much to contribute","msgtype":"m.text"},"ts":1551363757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Well, thanks for taking a look. The \"problem\" is that both options have consistency arguments","msgtype":"m.text"},"ts":1551363794000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I guess my feeling is, all else being equal, I'd prefer to leave module semantics in place with respect to what has been shipped in multiple browsers for years (i.e., #49)","msgtype":"m.text"},"ts":1551363832000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I don't know how to assess the compatibility risk and upgrade cost of adding the checkpoints","msgtype":"m.text"},"ts":1551363855000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I guess the advantages listed for 49 don't feel like strong advantages to me","msgtype":"m.text"},"ts":1551363856000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1551363868000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: whereas the advantages for 51 seem to offer consistency","msgtype":"m.text"},"ts":1551363889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1551363893000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I mean, browser status quo is important, but it's not great and can be fixed, let's fix it; and ease-of-polyfilling I'm generally meh on, long term is more important","msgtype":"m.text"},"ts":1551364039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if it's not great*","msgtype":"m.text"},"ts":1551364050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Disadvantages might be interesting","msgtype":"m.text"},"ts":1551364069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, i guess it's mostly about \"this feels weird as a synchronization primitive\"","msgtype":"m.text"},"ts":1551364081000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"that's sort of the objection I heard the most","msgtype":"m.text"},"ts":1551364085000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I don't feel like the existing microtask checkpoints are serving this sort of purpose","msgtype":"m.text"},"ts":1551364101000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I was wondering, should HTML have a way to do a microtask checkpoint without yielding to the event loop? (Or does it?) Would this be useful for people in other cases?","msgtype":"m.text"},"ts":1551364112000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"or, to be concrete, a way to call a callback after the next microtask checkpoint, and before the event loop","msgtype":"m.text"},"ts":1551364151000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I think HTML already has that, when there's multiple mouse event listeners and the user triggers the listeners","msgtype":"m.text"},"ts":1551364268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: promises are drained at the end of each callback; reading the the issue more attentively Domenic is on point I think and he also knows this area the best among WHATWG folks","msgtype":"m.text"},"ts":1551364323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see, OK, thanks","msgtype":"m.text"},"ts":1551364362000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"(I got pushback from someone in V8 about #51, but I'm not sure how strongly held it was; this is part of why I remained uncertain)","msgtype":"m.text"},"ts":1551364486000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: actually, JakeA might also be interested, he loves promise-gotchas","msgtype":"m.text"},"ts":1551364505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"reads back","msgtype":"m.emote"},"ts":1551364548000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: https://github.com/tc39/proposal-top-level-await/issues/47#issuecomment-464488593","msgtype":"m.text"},"ts":1551364580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan or anyone: I hear the term \"reparenting\" a lot for rearranging the DOM tree while we parse, but I Ctrl+F for \"reparent\" and don't find that in the spec. Is there a centralized description of that somewhere I can point a questioning web developer too?","msgtype":"m.text"},"ts":1551371942000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Possibly https://html.spec.whatwg.org/multipage/parsing.html#foster-parent","msgtype":"m.text"},"ts":1551372590000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that's it","msgtype":"m.text"},"ts":1551375181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess that's only for tabley stuff","msgtype":"m.text"},"ts":1551384596000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But e.g. nested forms are handled with a separate mechanism","msgtype":"m.text"},"ts":1551384604000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OK, so, this is a cut-down version of GitHub's user profile page. http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=6728","msgtype":"m.text"},"ts":1551385744000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It demonstrates an amazing fact","msgtype":"m.text"},"ts":1551385751000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"</form> will, under some circumstances, reset the form element pointer. Thus allowing nested forms. But, once it resets the pointer, we do nothing else, and discard the token.","msgtype":"m.text"},"ts":1551385777000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ðŸ¤¯","msgtype":"m.text"},"ts":1551385792000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I can only assume this was important for legacy compat","msgtype":"m.text"},"ts":1551385802000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Reference: https://html.spec.whatwg.org/multipage/parsing.html#insertion-mode 'An end tag whose tag name is \"form\"'","msgtype":"m.text"},"ts":1551385827000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: form is great","msgtype":"m.text"},"ts":1551386218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: there is also reparenting with misnested inlines","msgtype":"m.text"},"ts":1551386985000,"senderName":"annevk","senderId":"annevk@irc"}
]