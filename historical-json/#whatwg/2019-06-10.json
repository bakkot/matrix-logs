[
{"content":{"body":"annevk: Any thoughts offhand about https://mimesniff.spec.whatwg.org/#matching-an-archive-type-pattern ? A bunch of tickets just came in from a golang contributor looking to expand the list.","msgtype":"m.text"},"ts":1560125673000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"This section only exists because I broke the original long list into categories, and I never added anything to it (like the obvious tar, bz2, xz, etc.)","msgtype":"m.text"},"ts":1560125763000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Domenic: You may also have thoughts ^","msgtype":"m.text"},"ts":1560125828000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I don't think I ever did any extensive cross-browser testing on these - and even if I did, I'm sure it'd be out of date now","msgtype":"m.text"},"ts":1560125865000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(side note: the code that is supposedly implementing this claims that our RAR byte pattern is wrong)","msgtype":"m.text"},"ts":1560126063000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Domenic: is there an example of what the output would look like after hiding the functionality? as in .toString() will not display it, that's it?","msgtype":"m.text"},"ts":1560150150000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"GPHemsley: ask the person to do the testing?","msgtype":"m.text"},"ts":1560154762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What's the deal with flags vs booleans in specs these days? Do we still use flags?","msgtype":"m.text"},"ts":1560158306000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we try not to","msgtype":"m.text"},"ts":1560163307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and migrate","msgtype":"m.text"},"ts":1560163319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gotcha. Will do the same.","msgtype":"m.text"},"ts":1560163335000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic while no attributes will start with data, there isn't a data-* attribute I can write that I can be certain you won't invent (if that makes sense)","msgtype":"m.text"},"ts":1560168585000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"Whoah, async iterators are themselves iterable https://tc39.es/ecma262/#sec-asynciteratorprototype-asynciterator","msgtype":"m.text"},"ts":1560175724000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"GPHemsley: my opinion is that the categorizations should only be in the spec in so far as they can be backed by web platform tests (possibly manual?) on browser behavior in some specific scenario. So like XML and JSON MIME types are important in the HTML navigation algorithm. I don't know where any of the archive/ZIP mime types are important, but they should be tested in that place.","msgtype":"m.text"},"ts":1560176004000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"howdoi: I don't know what you're referring to.","msgtype":"m.text"},"ts":1560176012000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"innovati: that doesn't make sense to me; too many negatives.","msgtype":"m.text"},"ts":1560176021000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: as per spec, passing an iterator to something that expects an iterable, will indeed invoke the method in the above link, right?","msgtype":"m.text"},"ts":1560177354000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yep!","msgtype":"m.text"},"ts":1560177367000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Same for sync iterators","msgtype":"m.text"},"ts":1560177375000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"E.g. you can pass someMap.values() to anything that expects a sequence<>","msgtype":"m.text"},"ts":1560177385000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nifty","msgtype":"m.text"},"ts":1560177385000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"nice :)","msgtype":"m.text"},"ts":1560177394000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"for a while i was digging in the spec looking for \"If |iterable| *is already an iterator*...no need to call GetIterator(...)\"","msgtype":"m.text"},"ts":1560177458000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"It's not safe to use 'something' as an attribute name because it's possible an attribute named 'something' could exist. It's not safe for me to use 'data-something' because that's specifically allowed for anybody to invent for whatever they want. Is there some legal attribute name that the platform, nor authors would ever use? Like is '--something' or `$something` or some other name something safe for me to use under the assumption","msgtype":"m.text"},"ts":1560185443000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":" that neither the platform, nor authors would ever be writing something like that?","msgtype":"m.text"},"ts":1560185443000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"innovati: no. If you could use it, then someone else could. There's nothing that is reserved only for innovati in the spec.","msgtype":"m.text"},"ts":1560188948000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and there's nothing that is known to be off-limits for future spec use, and thus also not open for author use either, even if it's not just for my personal 'innovati' use alone? ;)","msgtype":"m.text"},"ts":1560189013000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"Correct.","msgtype":"m.text"},"ts":1560189071000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1560189080000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"That said, I can personally guarantee you the platform will never use an attribute starting with innovati$$_$_$_$","msgtype":"m.text"},"ts":1560189091000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"My word is my bond on that.","msgtype":"m.text"},"ts":1560189097000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Are there anything like the vendor prefixes for CSS properties like '-moz-appearance' instead of 'appearance' used on attributes by any browsers for their own internal use or anything like this out there already?","msgtype":"m.text"},"ts":1560189281000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"No, browsers don't use attributes internally.","msgtype":"m.text"},"ts":1560190044000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think Edge outputs class names to represent form validity status, which is surprising to me since it's mixed right in with author class names as well, would be very easy to conflict","msgtype":"m.text"},"ts":1560190132000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"Well, I guess some browsers have bugs :)","msgtype":"m.text"},"ts":1560190302000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1560190328000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"annevk: FYI https://github.com/whatwg/storage/pull/69 from a first-time contributor should be ready for editor review now, I did all the editorial review.","msgtype":"m.text"},"ts":1560194043000,"senderName":"Domenic","senderId":"Domenic@irc"}
]