[
{"content":{"body":"deltab: FWIW, we are considering an API at some point","msgtype":"m.text"},"ts":1447055088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"deltab: if you have anything in particular you'd like to see, please let me or mkwst know","msgtype":"m.text"},"ts":1447055110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Do you have a minute to talk about Fetch and credentials and FormData and URLSearchParams?","msgtype":"m.text"},"ts":1447059473000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: sure","msgtype":"m.text"},"ts":1447059966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: We discussed briefly in person: folks want to be able to submit urlencoded data. The current model (`fetch(..., credential.toFormData())`) results in a multipart submission. That's unfortunate.","msgtype":"m.text"},"ts":1447060019000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: One suggestion was to add a `toURLSearchParam` analog to `toFormData`. I've started spelling that out.","msgtype":"m.text"},"ts":1447060044000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Params*","msgtype":"m.text"},"ts":1447060066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: But it's hideous and almost pure duplication. Without reading both the Fetch and URL specs, no one will know why they should use one or the other.","msgtype":"m.text"},"ts":1447060074000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I'm looking for better ideas.","msgtype":"m.text"},"ts":1447060083000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: how do people know whether to pick enctype=application/x-www-form-urlencoded vs multipart/form-data today?","msgtype":"m.text"},"ts":1447060128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I doubt most people do.","msgtype":"m.text"},"ts":1447060141000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"If they didn't files wouldn't end up on the server","msgtype":"m.text"},"ts":1447060176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I meant that I expect modern frameworks to handle both.","msgtype":"m.text"},"ts":1447060194000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"That is true, but you still have to pick the non-default one to make things work","msgtype":"m.text"},"ts":1447060213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure. And I guess the default for forms is urlencoded.","msgtype":"m.text"},"ts":1447060247000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"But yeah, I guess it's fair to say that most folks don't really understand the difference really well, since the server software tends to abstract from the submission format quite a bit","msgtype":"m.text"},"ts":1447060253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So your suggestion would be to either overload FormData or have some higher level of abstraction in Credentials?","msgtype":"m.text"},"ts":1447060384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, I can certainly spell out the contours of an opaque URLSearchParams object, and teach PasswordCredential to produce one. And add some helpful text in the spec that says \"Hey, use this one if you need this kind of form submission, and this one if you don't.\" It's just very ugly and I feel bad typing it. :)","msgtype":"m.text"},"ts":1447060385000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I don't have much of a suggestion. We need the ability to determine the names of the username/password parameters, and we need the ability to tack on additional data to the submission.","msgtype":"m.text"},"ts":1447060461000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"For both of those cases, something like FormData or URLSearchParams is a good fit.","msgtype":"m.text"},"ts":1447060480000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"It would be nice if they weren't two things, honestly.","msgtype":"m.text"},"ts":1447060536000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"One option might be to have some nicely named `toSubmittableObjectThatHasTheDataYouNeed()` method that returns either a FormData or URLSearchParams object based on an `enctype` paramater?","msgtype":"m.text"},"ts":1447060637000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"then at least the credential-side interface would be clear.","msgtype":"m.text"},"ts":1447060656000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"That might be okay","msgtype":"m.text"},"ts":1447060747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really see a good way of merging these","msgtype":"m.text"},"ts":1447060759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Just becomes ugly in some other way","msgtype":"m.text"},"ts":1447060775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Sorry, folks here demolishing my bathroom. Need to make sure they don't demolish the parts I like. :) )","msgtype":"m.text"},"ts":1447061916000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"*shrug* Idunno. From my perspective, they're doing much the same thing. I haven't followed them all the way through, so I'm sure they're distinct in interesting ways.","msgtype":"m.text"},"ts":1447061987000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"has visions of mkwst typing in the bath as the room collapses around him","msgtype":"m.emote"},"ts":1447062039000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It just seems strange that I'm ending up with two objects that, from the perspective of the credentials work, are indistinguishable.","msgtype":"m.text"},"ts":1447062048000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"jgraham: Happily, the bathroom is way upstairs. I think it'd be tough to type in there; it's pretty loud at the moment.","msgtype":"m.text"},"ts":1447062086000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I'll go the \"hide the complexity\" route and switch on `enctype` for the moment, let's see how it ends up looking.","msgtype":"m.text"},"ts":1447062175000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I mean the only reason we're even dealing with this is because there's some legacy stuff going on","msgtype":"m.text"},"ts":1447062441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: that you want to account for","msgtype":"m.text"},"ts":1447062449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: FormData is superior for non-URL stuff","msgtype":"m.text"},"ts":1447062476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Right. The goal is for this to be something that developers can layer on top of an existing system. For better or worse, that means we need annoying amounts of flexibility.","msgtype":"m.text"},"ts":1447062494000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: URLSearchParams is useful because it does not pretend it can handle Blob, and because it can be associated with a URL object","msgtype":"m.text"},"ts":1447062497000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I don't really have strong opinions here but I do think that since they have different serializations, not trying to shoehorn them together is useful","msgtype":"m.text"},"ts":1447062608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Sure. I don't think we should rewrite Fetch because of this API. I'm just trying to find a reasonably elegant way of building the thing I want to build. :)","msgtype":"m.text"},"ts":1447062666000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I think toFormData() and toURLSearchParams() would still be clearest","msgtype":"m.text"},"ts":1447062706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: just like <form enctype> it allows folks to make an informed choice","msgtype":"m.text"},"ts":1447062721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: You also wrote both specs, and deeply know what each means. :)","msgtype":"m.text"},"ts":1447062732000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Well, `enctype` is the choice developers make for `<form>`, right?","msgtype":"m.text"},"ts":1447062774000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yes","msgtype":"m.text"},"ts":1447062789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: this is the analogous API choice","msgtype":"m.text"},"ts":1447062799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They don't have `<formdata-form>` and `<urlsearchparams-form>`.","msgtype":"m.text"},"ts":1447062800000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Maybe if they were spelled `MultipartFormData` and `URLEncodedFormData`... :)","msgtype":"m.text"},"ts":1447062845000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I don't think you can really compare it that way, given that we also have <input type=color> and such","msgtype":"m.text"},"ts":1447062846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because that's the choice folks would be making for this use case. I doubt they'd care about the remaining properties for a sign-in system.","msgtype":"m.text"},"ts":1447062871000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: sure, it just so happens that urlencoded is used outside of forms too","msgtype":"m.text"},"ts":1447062915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I tried to think of something like a single method, but toFetchBody(...) and such all seem equally awful","msgtype":"m.text"},"ts":1447062990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah. `toFetchable` is my placeholder. It's not great.","msgtype":"m.text"},"ts":1447063035000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Also since the best default there would be the inverse of <form enctype=> which would not be great","msgtype":"m.text"},"ts":1447063037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And if you require the argument you've just made the API worse","msgtype":"m.text"},"ts":1447063072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: perhaps FormData should have a method to convert it to URLSearchParams","msgtype":"m.text"},"ts":1447063122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: so you only have toFormData()","msgtype":"m.text"},"ts":1447063131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: and if folks really need URLSearchParams for legacy reasons, they convert it","msgtype":"m.text"},"ts":1447063143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: could also be URLSearchParams.from(formDataInstance)","msgtype":"m.text"},"ts":1447063163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: of course, you still need all the hiding slots and stuff, but don't really see a way around that","msgtype":"m.text"},"ts":1447063208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, one way around that would be to teach Fetch how to deal with a credential object. But that has its own problems.","msgtype":"m.text"},"ts":1447063250000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"That doesn't allow for appending additional data","msgtype":"m.text"},"ts":1447063289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought that was a requirement?","msgtype":"m.text"},"ts":1447063298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right. That's one of the problems. We'd have to teach the credential object how to hold data. :)","msgtype":"m.text"},"ts":1447063316000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Ah yes, the old we have two objects to hold data, let's add a third one","msgtype":"m.text"},"ts":1447063342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then define serialization and extraction and etc.","msgtype":"m.text"},"ts":1447063346000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Well, it would be _my_ data-holding object. So, obviously better.","msgtype":"m.text"},"ts":1447063360000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I'm sure that folks who want to do exactly what you want to do would appreciate it","msgtype":"m.text"},"ts":1447063389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We could also skip this whole `fetch()` dance and go back to `credential.send()`. :)","msgtype":"m.text"},"ts":1447063402000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Yeah, and then they want referrer control, custom header control, cache bypassing, ...","msgtype":"m.text"},"ts":1447063455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, sure. We'll build all that in.","msgtype":"m.text"},"ts":1447063483000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Of course :-)","msgtype":"m.text"},"ts":1447063553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean, we'll spell it all differently, of course.","msgtype":"m.text"},"ts":1447063565000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I'm sorry the best we come up with is https://xkcd.com/927/","msgtype":"m.text"},"ts":1447063581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that*","msgtype":"m.text"},"ts":1447063602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, that minute took an hour","msgtype":"m.text"},"ts":1447063692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will be more careful allocating minutes to mkwst in the future :-P","msgtype":"m.emote"},"ts":1447063716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Your fault for not letting me just write my own Fetch in the first place.","msgtype":"m.text"},"ts":1447063720000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Ok. I think `toURLSearchParams` is hideous. But I'll just type it for the moment and stop bothering you.","msgtype":"m.text"},"ts":1447063733000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: https://github.com/whatwg/html/pull/323","msgtype":"m.text"},"ts":1447070015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: interested in reviewing https://github.com/whatwg/html-build/pull/39?","msgtype":"m.text"},"ts":1447077109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: friendly ping https://github.com/whatwg/html/pull/246","msgtype":"m.text"},"ts":1447079564000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: he's prolly still on vacation","msgtype":"m.text"},"ts":1447080412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh ok","msgtype":"m.text"},"ts":1447080425000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I thought he was getting back today","msgtype":"m.text"},"ts":1447081161000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"MikeSmith: last change in https://www.w3.org/Bugs/Public/show_activity.cgi?id=24055 looks bogus (attachment is some .dll file)","msgtype":"m.text"},"ts":1447081613000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk: did you work on webcrypto?","msgtype":"m.text"},"ts":1447086145000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: nope","msgtype":"m.text"},"ts":1447086164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, where/who are the folks who did?","msgtype":"m.text"},"ts":1447086182000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: doesn't the spec say?","msgtype":"m.text"},"ts":1447086222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah true","msgtype":"m.text"},"ts":1447086243000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"rslevi I wonder what channel he hangs out on","msgtype":"m.text"},"ts":1447086293000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Hmm, either Twitter refuses to email me some email change confirmation email while claiming they did send it or Gmail refuses to show it","msgtype":"m.text"},"ts":1447086301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: Twitter","msgtype":"m.text"},"ts":1447086307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah thanks.","msgtype":"m.text"},"ts":1447086432000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"( been working on improving the web-crypto interface for scala-js https://github.com/bblfish/scala-js-dom/blob/fix-generate-key-api/src/main/scala/org/scalajs/dom/crypto/Crypto.scala )","msgtype":"m.text"},"ts":1447086676000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Ms2ger: yt?","msgtype":"m.text"},"ts":1447090111000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1447090125000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Just for a few more minutes","msgtype":"m.text"},"ts":1447090135000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"should make it back into the kitchen by the time his water boils","msgtype":"m.emote"},"ts":1447090198000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: I opened an issue the other day for Fetch https://github.com/whatwg/fetch/issues/156","msgtype":"m.text"},"ts":1447091299000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"I'll also be submitting my Fetch to scala-js-dom lib, sometime this week.","msgtype":"m.text"},"ts":1447091326000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: yeah I looked at that and that doesn't seem like something we'll address anytime soon","msgtype":"m.text"},"ts":1447091784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: the headers to be transmitted are in the network stack which is mostly post-Fetch","msgtype":"m.text"},"ts":1447091808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: although it's all a bit gobbled up admittedly since the standards are a bit post-implementation","msgtype":"m.text"},"ts":1447091834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, i suppose Http Signature needs a lot more support and implementations before it makes sense to do that engineering. In the meantime we need to work out what to sign.","msgtype":"m.text"},"ts":1447092023000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"otherwise there's another catch22. There are a lot of catch-22s when dealing with authentication. That's why however bad it is TLS-crypto at least works.","msgtype":"m.text"},"ts":1447092070000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"For some reason https://tools.ietf.org/html/draft-cavage-http-signatures is not loading, the -00 draft seemed very light on detail","msgtype":"m.text"},"ts":1447092483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's version -05 annevk","msgtype":"m.text"},"ts":1447092513000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"this one https://tools.ietf.org/html/draft-cavage-http-signatures-05","msgtype":"m.text"},"ts":1447092533000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"tools.ietf.org seems very slow for some reason","msgtype":"m.text"},"ts":1447092695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That draft seems to sorta skip over justification for why it's a good idea to begin with","msgtype":"m.text"},"ts":1447092777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There are quite a few services that currently do stuff like that, such as Amazon cloud, and others.","msgtype":"m.text"},"ts":1447092818000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Amazon has a signature based auth mechanism http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html","msgtype":"m.text"},"ts":1447093062000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"OCLC HMAC Auth https://www.oclc.org/developer/develop/authentication/hmac-signature.en.html","msgtype":"m.text"},"ts":1447093091000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Akamai  https://developer.akamai.com/introduction/Client_Auth.html","msgtype":"m.text"},"ts":1447093112000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Lindsay http://progrium.com/blog/2012/12/17/http-signatures-with-content-hmac/","msgtype":"m.text"},"ts":1447093141000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"But yes, it may be that better justification would help","msgtype":"m.text"},"ts":1447093174000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"annevk: is there such a thing as a guide to writing web standards? As in, something that explains the ideal structure of a standards doc, when you'd queue a task, how to reference things in other specs etc","msgtype":"m.text"},"ts":1447094583000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no","msgtype":"m.text"},"ts":1447094761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: there's bits and pieces","msgtype":"m.text"},"ts":1447094774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if we're wanting to increase diversity here, feels like there should be. I'll keep it in mind as a possible 2016 thing.","msgtype":"m.text"},"ts":1447094870000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I agree that we need it","msgtype":"m.text"},"ts":1447094888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'd like to improve the foundations a bit as well as both HTML and IDL are somewhat shoddy to build on","msgtype":"m.text"},"ts":1447094943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and I have some kind of vision as to how things should be, but getting there takes tim","msgtype":"m.text"},"ts":1447094962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"time*","msgtype":"m.text"},"ts":1447094968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would be great even to have someplace to capture common mistakes... so every time someone experiences mutters \"this is a terrible spec\", they can add why to the \"don't do this\" list","msgtype":"m.text"},"ts":1447095041000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"^experiences^experienced","msgtype":"m.text"},"ts":1447095052000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: well, we've got a couple of people in dev rel wanting to get into spec stuff, so that might be a good opportunity to figure out all the stumbling blocks","msgtype":"m.text"},"ts":1447095077000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: anyway, I'll pick it up with you in 2016. Just thinking out loud now.","msgtype":"m.text"},"ts":1447095118000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: did you ever have a chance to look and see when propagating the intercepted URL will be implemented in chrome?","msgtype":"m.text"},"ts":1447095162000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: have you perhaps not synced https://github.com/whatwg/html-build with the build server?","msgtype":"m.text"},"ts":1447095190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and is that why https://github.com/whatwg/html/issues/324 is a problem?","msgtype":"m.text"},"ts":1447095207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it should be automatic","msgtype":"m.text"},"ts":1447095216000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: sounds great","msgtype":"m.text"},"ts":1447095222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The cache is not cleared though","msgtype":"m.text"},"ts":1447095234000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: *scratches head* I'm not sure what that means, give me a clue :D","msgtype":"m.text"},"ts":1447095243000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So if clearing the cache is necessary that means we shouldn't be caching something that we're currently caching","msgtype":"m.text"},"ts":1447095255000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is this the CSS base url thing?","msgtype":"m.text"},"ts":1447095255000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: https://github.com/whatwg/fetch/pull/146","msgtype":"m.text"},"ts":1447095277000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"(brb catching a train)","msgtype":"m.text"},"ts":1447095281000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1447095289000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: hmm, there's no commit hook for html-build","msgtype":"m.text"},"ts":1447095375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: zcorpan: on a plane at the moment, will get to reviews and build stuff when I land and get to the hotel hopefully (BlinkOn)","msgtype":"m.text"},"ts":1447095383000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1447095386000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh I think it's updated with HTML","msgtype":"m.text"},"ts":1447095405000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah yes, have fun","msgtype":"m.text"},"ts":1447095410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: this can wait another week, I'm sure","msgtype":"m.text"},"ts":1447095419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Every HTML push pulls from HTML-build","msgtype":"m.text"},"ts":1447095420000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Meh I figure BlinkOn week is work week so I'll get at least some stuff done","msgtype":"m.text"},"ts":1447095452000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I removed the entity stuff from the cache manually","msgtype":"m.text"},"ts":1447095549000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Updating entities database (this always takes a while)...\" oh yes you do","msgtype":"m.text"},"ts":1447095658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I explored how we can work without the capabilities proposed in Fetch issue 156 in https://github.com/solid/solid-spec/issues/52","msgtype":"m.text"},"ts":1447102559000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"we essentially need just a JS-Date header","msgtype":"m.text"},"ts":1447102585000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"( this does not exclude other groups having use cases needing the capabilities of issue 56 )","msgtype":"m.text"},"ts":1447102652000,"senderName":"bblfish","senderId":"bblfish@irc"}
]