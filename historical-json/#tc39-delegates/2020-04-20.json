[
{"content":{"body":"Bakkot: wdyt about allowing `[\\p{Seq}]`? the only remaining surprising cases are then negation (either through `[^...]` or `\\P{...}`)","msgtype":"m.text"},"ts":1587363444000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens that feels... pretty weird at first glance? but it is possible that is just the novelty of it.","msgtype":"m.text"},"ts":1587364108000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"mathiasbynens I guess that seems like it makes things worse, not better; my major problem with `\\p{Seq}` in general is that a thing I am expecting to match one character is suddenly matching maybe more than one character and to figure out which it's going to do I need to go track down some table in unicode","msgtype":"m.text"},"ts":1587364491000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and expanding that so that `[]` now also maybe matches more than one character does not seem like an improvement","msgtype":"m.text"},"ts":1587364522000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: yeah, I similarly hadn't seriously considered it before. I get it from the UTC perspective though: UTS18 has always allowed strings in character classes","msgtype":"m.text"},"ts":1587365343000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Bakkot: anyway, it's one of those things where if we throw now (like in the current proposal), we can always decide to loosen that up later","msgtype":"m.text"},"ts":1587365402000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"OTOH, the discussion on whether character classes can match multiple code points influences the syntax discussion","msgtype":"m.text"},"ts":1587365465000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Bakkot: out of curiosity, why do you need to know if the thing that's matched is just one code point or more?","msgtype":"m.text"},"ts":1587365591000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"with /u you already don't know if it's 1 UTF-16 code unit or 1 code point (which could be 2 such units), and that's a Good Thing(tm)","msgtype":"m.text"},"ts":1587365636000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"this is the next step","msgtype":"m.text"},"ts":1587365657000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens the way I reason about regular expressions is by walking them over strings, one character at a time","msgtype":"m.text"},"ts":1587365959000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if we could redefine 'character' to 'glyph' everywhere then I could walk one glyph at a time","msgtype":"m.text"},"ts":1587365985000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but as long as `.` means one code point I am stuck with thinking about code points","msgtype":"m.text"},"ts":1587366006000,"senderName":"Bakkot","senderId":"Bakkot@irc"}
]