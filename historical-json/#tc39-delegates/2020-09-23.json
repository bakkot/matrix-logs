[
{"content":{"body":"does the meeting start dot at time?","msgtype":"m.text"},"ts":1600822022000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"if one of the chairs could let me in, I'd ensure that my tech setup works one final time üòÖ","msgtype":"m.text"},"ts":1600822050000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"hello everyone!","msgtype":"m.text"},"ts":1600822898000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"morning all","msgtype":"m.text"},"ts":1600822995000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"rkirsling: you can't change your name unless you're a guest","msgtype":"m.text"},"ts":1600823205000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"üëç","msgtype":"m.text"},"ts":1600823245000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"are there slides being shown?","msgtype":"m.text"},"ts":1600823323000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1600823333000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"damnit teams","msgtype":"m.text"},"ts":1600823337000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"aha, switching out of the app and back fixed it for some reason","msgtype":"m.text"},"ts":1600823352000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"fun hackmd thing, apparently making the days collapsible prevents clicking on links contained in the day heading","msgtype":"m.text"},"ts":1600823412000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"All the features are implemented in SM, actually, the slides are out of date","msgtype":"m.text"},"ts":1600823644000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"but, they're not shipping yet","msgtype":"m.text"},"ts":1600823649000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"to be fair, private methods are inefficient as implemented, we have to fix them before shipping","msgtype":"m.text"},"ts":1600823687000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: yay, put that on the queue :-p","msgtype":"m.text"},"ts":1600823689000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yay!","msgtype":"m.text"},"ts":1600823852000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"who is speaking?","msgtype":"m.text"},"ts":1600823956000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"\"wenbo z\"","msgtype":"m.text"},"ts":1600823960000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"would it be useful for the chairs to clarify how our process works prior to a future advancement request?","msgtype":"m.text"},"ts":1600824003000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Wenbo Zhao is the GA rep of 360.","msgtype":"m.text"},"ts":1600824090000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"fyi devsnek i rearranged you and Frank so both of you have your own topics back to back instead of across two days","msgtype":"m.text"},"ts":1600824244000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1600824276000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if it makes the schedule better feel free to split mine up","msgtype":"m.text"},"ts":1600824285000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Frank wanted his to be back to back and it worked really nicely with yours","msgtype":"m.text"},"ts":1600824300000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"but thank you ‚ô•Ô∏è","msgtype":"m.text"},"ts":1600824306000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"re: mark's point: that shorthand syntax was indeed in an earlier version of this proposal; strong agree","msgtype":"m.text"},"ts":1600824720000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i see a lot of queue items reacting to the WeakMap-like reification: IIUC that's an explicit non-goal of this proposal and not included in this proposal","msgtype":"m.text"},"ts":1600824741000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I deleted my queue item since I agree with Mark's various points; I don't have more to add","msgtype":"m.text"},"ts":1600824756000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"i explicitly want us to reify private fields :(","msgtype":"m.text"},"ts":1600824777000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"sure, that's not this proposal","msgtype":"m.text"},"ts":1600824804000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Is it really true no language binds the name of a field to some reification of that field, rather than the value of the field?","msgtype":"m.text"},"ts":1600824817000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"statements of the form \"no programming language has ever done X\" have a low prior probability for me","msgtype":"m.text"},"ts":1600824845000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff among languages which use `.` for field access? none that I'm aware of, though I don't know every language","msgtype":"m.text"},"ts":1600824849000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"does any other language actually avoid breaking instance privacy with a reflection mechanism?","msgtype":"m.text"},"ts":1600824858000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1600824897000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1600824898000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"i read that backwards","msgtype":"m.text"},"ts":1600824902000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I'm really having trouble making sense of haxjs 's arguments here","msgtype":"m.text"},"ts":1600825074000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"^ i am having trouble as well","msgtype":"m.text"},"ts":1600825100000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Mark has explained how reification would be different from the syntax here (and has done so several times previously), both in terms of syntax and capabilities","msgtype":"m.text"},"ts":1600825107000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ok so ... Alloy isn't an OO language, it's a relational language, but it uses `.` and fields are reified","msgtype":"m.text"},"ts":1600825140000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: fascinating, link?","msgtype":"m.text"},"ts":1600825163000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Alloy also isn't ... a programming language","msgtype":"m.text"},"ts":1600825170000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"but it IS fascinating","msgtype":"m.text"},"ts":1600825175000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"the specification language?","msgtype":"m.text"},"ts":1600825177000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1600825198000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"that thing is weird lol","msgtype":"m.text"},"ts":1600825204000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: the best thing to read AFAIK is the language reference http://alloytools.org/download/alloy-language-reference.pdf","msgtype":"m.text"},"ts":1600825207000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"is it like, prolog but less expressive?","msgtype":"m.text"},"ts":1600825249000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"er like at a glance it's reminding me of something like LEAN or Coq but again...smaller?","msgtype":"m.text"},"ts":1600825338000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"huh. i think it must be weaker than Lean and Coq. feels more along the lines of prolog/datalog, but i don't know enough about that space to say more :-\\","msgtype":"m.text"},"ts":1600825419000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jridgewell: you're a bit quiet btw","msgtype":"m.text"},"ts":1600825430000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Yeah. I've used each of Coq and Lean a bit but never Prolog (though I know it's Yulia's favorite)","msgtype":"m.text"},"ts":1600825485000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i like Lean","msgtype":"m.text"},"ts":1600825497000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yes, good point. i would definitely assume that `#x` is an expression I can use anywhere, and then i would see the syntax error once, and then I'd be like \"well this is stupid\" (unjustly) and probably go look it up to make sure i understood","msgtype":"m.text"},"ts":1600825992000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"I mean I *definitely* don't think that anything in JavaScript should lead one to believe that `this.` would ever be droppable","msgtype":"m.text"},"ts":1600826097000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yyyes, but mark's objection comes as a surprise to me, as worded","msgtype":"m.text"},"ts":1600826112000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yeah sorry that was in reaction to his statement, not yours üòÖ","msgtype":"m.text"},"ts":1600826154000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"we're on the same page (you and I, not mark and I)","msgtype":"m.text"},"ts":1600826185000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1600826194000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"what if we just make `#x` a thing you can use anywhere","msgtype":"m.text"},"ts":1600826228000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that would be the \"private symbol\" reification, which mark specifically has said wouldn't work","msgtype":"m.text"},"ts":1600826258000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I think Waldemar actually made Mark's point stronger","msgtype":"m.text"},"ts":1600826292000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"I agree with Jordan here on this subset/syntax error point; this has been what the design of private fields and methods was based around","msgtype":"m.text"},"ts":1600826317000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Having `#x.get` be something different than `this.#x.get` would be very surprising","msgtype":"m.text"},"ts":1600826319000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"(That' doesn't mean Mark is arging that `#x` should be shorthand for `this.#x`)","msgtype":"m.text"},"ts":1600826352000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"currently, if you go to type `this.toString()` and accidentally type `toString()` instead, it's weird","msgtype":"m.text"},"ts":1600826376000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"`#x` in Mark's comment would be a WeakMap","msgtype":"m.text"},"ts":1600826377000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"who needs `#x.get(v)` when you have `v[#x]`","msgtype":"m.text"},"ts":1600826407000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"So `#x.get` would take an object to get from, where `this.#x.get` would be the value at `this.#x`, which apparently has a map API","msgtype":"m.text"},"ts":1600826412000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"but that doesn't seem to be a big problem?","msgtype":"m.text"},"ts":1600826417000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"devsnek: You can't pass around syntax lik e`v[#x]`","msgtype":"m.text"},"ts":1600826441000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"You could pass around `#x` if it reified to a map","msgtype":"m.text"},"ts":1600826454000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"jridgewell: I think devsnek means `#x` should be more symbol-like","msgtype":"m.text"},"ts":1600826466000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yeah like we should just make it a value","msgtype":"m.text"},"ts":1600826475000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in that view, it is a value and you can pass it around","msgtype":"m.text"},"ts":1600826476000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"every possible suggestion is causing confusion with expressions in some way","msgtype":"m.text"},"ts":1600826489000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"If it becomes a Private Symbol, then that would work","msgtype":"m.text"},"ts":1600826502000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"But I don't think we're going to get them","msgtype":"m.text"},"ts":1600826508000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"confusion with them cuz lhs of `in`, confusion cuz `#x.y`, confusion cuz `x[#y]`","msgtype":"m.text"},"ts":1600826509000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there's no winning","msgtype":"m.text"},"ts":1600826511000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hear me out, let's start over with R4RS scheme...","msgtype":"m.text"},"ts":1600826571000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"</joke>","msgtype":"m.text"},"ts":1600826572000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"R*4*RS","msgtype":"m.text"},"ts":1600826604000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: i think tradition has it that the first one you personally implemented is the last good one","msgtype":"m.text"},"ts":1600826661000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"crazy to me that private symbols is outside the realm of people's mental models but adding a new kind of object is a-ok","msgtype":"m.text"},"ts":1600826669000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah, very well","msgtype":"m.text"},"ts":1600826676000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"new decorators look reasonable iirc","msgtype":"m.text"},"ts":1600826802000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"super excited about it!","msgtype":"m.text"},"ts":1600826819000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"I think this is supposed to say \"bar\"?","msgtype":"m.text"},"ts":1600827027000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"Also foo/bar are terrible names, please don't use them in examples","msgtype":"m.text"},"ts":1600827043000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"use Pokemon","msgtype":"m.text"},"ts":1600827046000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"use js ui libraries","msgtype":"m.text"},"ts":1600827087000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there are thousands to choose from","msgtype":"m.text"},"ts":1600827092000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"pokemon are fun tho","msgtype":"m.text"},"ts":1600827154000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"dynamic language features are also fun","msgtype":"m.text"},"ts":1600827240000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"I think we're meant to be learning that fun is bad","msgtype":"m.text"},"ts":1600827259000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"dynamic scoping!","msgtype":"m.text"},"ts":1600827271000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah that extended pokemon example was inspiring","msgtype":"m.text"},"ts":1600827349000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"definitely will use game references in future presentations","msgtype":"m.text"},"ts":1600827362000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"might be a fun game, without googling, figure out which obscure universe is being referenced by names of things","msgtype":"m.text"},"ts":1600827437000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"slide show but everything is don't hug me i'm scared references","msgtype":"m.text"},"ts":1600827450000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: approve","msgtype":"m.text"},"ts":1600827457000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"throw error upon setting color to green","msgtype":"m.text"},"ts":1600827481000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"should start using the names of mathematical objects","msgtype":"m.text"},"ts":1600827493000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`let lattice = 4`","msgtype":"m.text"},"ts":1600827510000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"for example, zummi/gruffi/grammi/tummi/sunni/cubbi/gusto/chummi","msgtype":"m.text"},"ts":1600827510000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I thought it would be more fun if people actually got the reference lol","msgtype":"m.text"},"ts":1600827531000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"ljharb: too easy","msgtype":"m.text"},"ts":1600827597000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"also just reading that makes my teeth hurt","msgtype":"m.text"},"ts":1600827618000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"Bakkot: you mean like x, x', x'', x''', x''''","msgtype":"m.text"},"ts":1600827620000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"akirose: only too easy for the cool kids","msgtype":"m.text"},"ts":1600827629000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"did we all lost Chris' audio for a few seconds?","msgtype":"m.text"},"ts":1600827632000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"ok sounds like yes","msgtype":"m.text"},"ts":1600827642000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"just teams things","msgtype":"m.text"},"ts":1600827670000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I had to perform 13 satanic rituals to make it work","msgtype":"m.text"},"ts":1600827688000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"whew, what a relief","msgtype":"m.text"},"ts":1600827695000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"glad it wasn't 14","msgtype":"m.text"},"ts":1600827701000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: you mean people in their 30s","msgtype":"m.text"},"ts":1600827702000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"(p.s. it still doesn't, I had to use chromium)","msgtype":"m.text"},"ts":1600827708000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"ryzokuken: I too have used perl in anger","msgtype":"m.text"},"ts":1600827710000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"my internet is also bouncy this week so it could be me as well","msgtype":"m.text"},"ts":1600827722000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600827723000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"wait when did this become not-tdz","msgtype":"m.text"},"ts":1600827725000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1600827736000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"whoops","msgtype":"m.text"},"ts":1600827737000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"AHAHAHA","msgtype":"m.text"},"ts":1600827742000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"Teams is clearly trolling us","msgtype":"m.text"},"ts":1600827761000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"trololololol","msgtype":"m.text"},"ts":1600827770000,"senderName":"shrutikapoor","senderId":"shrutikapoor@irc"},
{"content":{"body":"Blocking proposal via technical issues","msgtype":"m.text"},"ts":1600827793000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"petition to move to the most reliable mode of comms","msgtype":"m.text"},"ts":1600827796000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"üôÉ","msgtype":"m.text"},"ts":1600827803000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"i.e. VNC for screenshare plus a SIP call","msgtype":"m.text"},"ts":1600827808000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"is this the shareware version of Teams?","msgtype":"m.text"},"ts":1600827810000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600827815000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"pay for the full content","msgtype":"m.text"},"ts":1600827837000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"\"teams trial expired\"","msgtype":"m.text"},"ts":1600827841000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"This copy of Teams is not genuine","msgtype":"m.text"},"ts":1600827875000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"here just use this to activate: \"FCKGW RHQQ2 YXRKT 8TG6W 2B7Q8\"","msgtype":"m.text"},"ts":1600828160000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"pf","msgtype":"m.text"},"ts":1600828179000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rickbutton: did you read the code from the CD?","msgtype":"m.text"},"ts":1600828191000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"from memory of course","msgtype":"m.text"},"ts":1600828202000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"Can else hear the WAREZ keygen music?","msgtype":"m.text"},"ts":1600828204000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"sees myself to TDZ","msgtype":"m.emote"},"ts":1600828229000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"how are people going to remember all these signatures for the different kinds of decorators and when they apply?","msgtype":"m.text"},"ts":1600828304000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"aren't there just two","msgtype":"m.text"},"ts":1600828342000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(v, context) and ({ get, set }, context)","msgtype":"m.text"},"ts":1600828355000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I guess the same way people have to deal with options bags, look at the docs every time","msgtype":"m.text"},"ts":1600828358000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I think this is actually the simplest decorators API yet.","msgtype":"m.text"},"ts":1600828382000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"definitely the simplest one","msgtype":"m.text"},"ts":1600828389000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"{method, initialiser} or something?","msgtype":"m.text"},"ts":1600828389000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"i can't imagine life without Alfred & Dash (& MDN)","msgtype":"m.text"},"ts":1600828395000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"I'm digging it so far","msgtype":"m.text"},"ts":1600828398000,"senderName":"JemYoung","senderId":"JemYoung@irc"},
{"content":{"body":"it's a lot to remember regardless","msgtype":"m.text"},"ts":1600828403000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"i'm not saying it's not a legitimate concern‚Äîit's a v real concern for me","msgtype":"m.text"},"ts":1600828430000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"but also, it's already a lot to remember","msgtype":"m.text"},"ts":1600828430000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"v2 API was overflowing with customization","msgtype":"m.text"},"ts":1600828430000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"when someone recites the splice signature from memory","msgtype":"m.text"},"ts":1600828434000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah I either MDN or just go straight to the spec, depending if I know exactly where to look","msgtype":"m.text"},"ts":1600828437000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"devsnek: offset, length, replacements array? is that right?","msgtype":"m.text"},"ts":1600828471000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"devsnek: I mean it's not `tar` flags at least","msgtype":"m.text"},"ts":1600828475000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"idk i'd have to check","msgtype":"m.text"},"ts":1600828477000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"for tar i just always pass `-xvf`","msgtype":"m.text"},"ts":1600828489000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"idk what they do but it seems to work","msgtype":"m.text"},"ts":1600828493000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"variadic insertions, not an array","msgtype":"m.text"},"ts":1600828499000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"what about -c","msgtype":"m.text"},"ts":1600828500000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"jridgewell: ah, so close","msgtype":"m.text"},"ts":1600828507000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"idk what -c is so i can't comment","msgtype":"m.text"},"ts":1600828509000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"me neither","msgtype":"m.text"},"ts":1600828513000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I use it as an interview question üòà","msgtype":"m.text"},"ts":1600828531000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"oh yeah you like javascript? name every function","msgtype":"m.text"},"ts":1600828544000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jridgewell: please no!","msgtype":"m.text"},"ts":1600828552000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"for tar i have to memorize eXtract Ze Files, Verbosely","msgtype":"m.text"},"ts":1600828562000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Lol. My interview question uses it, but knowing the signature isn't required.","msgtype":"m.text"},"ts":1600828571000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"devsnek: name every function on the `Math` namespace would be hard enough","msgtype":"m.text"},"ts":1600828591000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: ohh it was -z not -c","msgtype":"m.text"},"ts":1600828615000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so close","msgtype":"m.text"},"ts":1600828631000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"overall this proposal seems pretty good","msgtype":"m.text"},"ts":1600828650000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: which use cases do you find least compelling?","msgtype":"m.text"},"ts":1600828667000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: hm, the least? probably metadata personally","msgtype":"m.text"},"ts":1600828684000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1600828695000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"metadata is take it or leave it","msgtype":"m.text"},"ts":1600828698000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't have a use case in mind that is much less compelling than the others as much as i have a use case that is much more compelling than the others: fields","msgtype":"m.text"},"ts":1600828706000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I've always felt terrified about the decorators proposal so this definitely seems like the least terrifying iteration","msgtype":"m.text"},"ts":1600828719000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"class decorators as well, i don't find super compelling","msgtype":"m.text"},"ts":1600828725000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oops I meant to say that in tdz","msgtype":"m.text"},"ts":1600828730000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: enough that you don't want them to be part of the proposal?","msgtype":"m.text"},"ts":1600828739000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: hard to say right now","msgtype":"m.text"},"ts":1600828753000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"devsnek: i think the class decorator use case is probably fine with existing function call syntax, unless i'm missing something","msgtype":"m.text"},"ts":1600828797000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"wdym \"fine with existing function call syntax\"","msgtype":"m.text"},"ts":1600828817000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: class C {} \\n decorate(C) ?","msgtype":"m.text"},"ts":1600828841000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"`let Decorated = decorate(class Inner {})`","msgtype":"m.text"},"ts":1600828843000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"isn't that true of everything","msgtype":"m.text"},"ts":1600828863000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not of fields, no","msgtype":"m.text"},"ts":1600828867000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"decorate(C) where C has fields","msgtype":"m.text"},"ts":1600828871000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so decorated methods can be new'd?","msgtype":"m.text"},"ts":1600828882000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"That wouldn't give access to private fields","msgtype":"m.text"},"ts":1600828886000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"is there some bad thing about class decorators i'm not aware of","msgtype":"m.text"},"ts":1600828914000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: there's no way to do the transform of data property -> getter/setter pair with function calls","msgtype":"m.text"},"ts":1600828918000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"michaelficarra: that seems like a good issue to file - ensuring that decorated methods can't be newed","msgtype":"m.text"},"ts":1600828928000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: it doesn't sound like an issue, it sounds inevitable with this design","msgtype":"m.text"},"ts":1600828975000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"ah right, it'd be weird if the decorator return got its [[Construct]] changed, so the only alternative is forcing them to `return { foo() {} }.foo` or something :-.","msgtype":"m.text"},"ts":1600829023000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1600829040000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"alternatively, we should make methods newable","msgtype":"m.text"},"ts":1600829063000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"they should always have been","msgtype":"m.text"},"ts":1600829067000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"static methods at the very least","msgtype":"m.text"},"ts":1600829080000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"very important use case","msgtype":"m.text"},"ts":1600829083000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"static methods, fair.","msgtype":"m.text"},"ts":1600829096000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"at that point all methods","msgtype":"m.text"},"ts":1600829106000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot making things difficult","msgtype":"m.text"},"ts":1600829131000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"This really seems like it will pare down to a very, very nice MVP","msgtype":"m.text"},"ts":1600829213000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"keith_miller: What are the \"local variable semantics\"","msgtype":"m.text"},"ts":1600829237000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"aside from metadata everything proposed seems reasonable","msgtype":"m.text"},"ts":1600829242000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jridgewell: var @myDecorator foo = x;","msgtype":"m.text"},"ts":1600829256000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Ahh","msgtype":"m.text"},"ts":1600829263000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"I assume that's like a getter on the scope variable","msgtype":"m.text"},"ts":1600829280000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"I can confirm what Yehuda has said from our code base.","msgtype":"m.text"},"ts":1600829284000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"but still it's a bit wierd","msgtype":"m.text"},"ts":1600829287000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"I hadn't considered that before this meeting so maybe that's my b","msgtype":"m.text"},"ts":1600829317000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"it's pretty convenient to add common accessors","msgtype":"m.text"},"ts":1600829332000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"re: littledan's point right now: how is a class decorator a position where there is no function call possible right now?","msgtype":"m.text"},"ts":1600829495000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I am confused","msgtype":"m.text"},"ts":1600829497000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`export class C { }`?","msgtype":"m.text"},"ts":1600829510000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1600829516000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"also name inference with `const C = decorate(class { })`","msgtype":"m.text"},"ts":1600829525000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"`export let C = foo(class C{})` is equivalent","msgtype":"m.text"},"ts":1600829535000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"sure, but then you have to repeat the name","msgtype":"m.text"},"ts":1600829546000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"that does not come _close_ to justifying new syntax","msgtype":"m.text"},"ts":1600829555000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"sorry about the english idiom, non-native english speakers","msgtype":"m.text"},"ts":1600829560000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"Bakkot: you can also manually rewrite your fields to be getter/setters","msgtype":"m.text"},"ts":1600829564000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek right, but you have to do it manually, rather than ecapsulating it with a function call","msgtype":"m.text"},"ts":1600829580000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but here you can do the encapsulation with the function","msgtype":"m.text"},"ts":1600829588000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so I don't know what littledan means","msgtype":"m.text"},"ts":1600829593000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I agree with Bakkot here","msgtype":"m.text"},"ts":1600829632000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"10 minutes","msgtype":"m.text"},"ts":1600829661000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"Burden of writing a `decorate(class {})` seems minimal compare to decorating a field","msgtype":"m.text"},"ts":1600829669000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"+2 to shu's last sentiment","msgtype":"m.text"},"ts":1600829769000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"hmm. I can't get to Reflector to get the link to TCQ ...","msgtype":"m.text"},"ts":1600829830000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"looking forward to class {} |> decorate1 |> decorate2","msgtype":"m.text"},"ts":1600829835000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"nm, working now.","msgtype":"m.text"},"ts":1600829855000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"‚ù§Ô∏è","msgtype":"m.text"},"ts":1600829984000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"wsdferdksl: should that be a new topic isntead of a reply?","msgtype":"m.text"},"ts":1600829992000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"akirose: I believe it's a feedback on the current topic","msgtype":"m.text"},"ts":1600830015000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"i read it as parallel","msgtype":"m.text"},"ts":1600830026000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"understanding the entire design as in a single proposal","msgtype":"m.text"},"ts":1600830028000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"rbuckton: i'll delete my queue item if you've read it?","msgtype":"m.text"},"ts":1600830111000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I've read it","msgtype":"m.text"},"ts":1600830125000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"shu: would it be helpful for a better overview if I prepare a full set of Test262 tests for this proposal? I'd do my best to separate each part.","msgtype":"m.text"},"ts":1600830187000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"like, I'm trying to improve the trade off","msgtype":"m.text"},"ts":1600830204000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"leobalter: sorry i don't understand the question","msgtype":"m.text"},"ts":1600830256000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"a better overview of what?","msgtype":"m.text"},"ts":1600830266000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"There are caveats to consider with class decorators, such as this case:","msgtype":"m.text"},"ts":1600830313000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600830313000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"@decorator","msgtype":"m.text"},"ts":1600830313000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"class C {","msgtype":"m.text"},"ts":1600830313000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"  static #x = 1;","msgtype":"m.text"},"ts":1600830313000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"  static method() {","msgtype":"m.text"},"ts":1600830313000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"    this.#x // could throw if `decorator` replaces class with subclass","msgtype":"m.text"},"ts":1600830313000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"    C.#x // ok, accessing inner `C`","msgtype":"m.text"},"ts":1600830314000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"    new C() // but this produces an inner `C`, not an outer `C`. Fixing this breaks the line above","msgtype":"m.text"},"ts":1600830314000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"  }","msgtype":"m.text"},"ts":1600830315000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"}","msgtype":"m.text"},"ts":1600830315000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600830316000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"rbuckton: why would it throw if it's a subclass of C?","msgtype":"m.text"},"ts":1600830346000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it sounded like class decorators were intended to replace the inner binding","msgtype":"m.text"},"ts":1600830354000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Its a private static field.","msgtype":"m.text"},"ts":1600830355000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"ljharb static private has this problem","msgtype":"m.text"},"ts":1600830360000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"They throw for subclasses of `C`.","msgtype":"m.text"},"ts":1600830363000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"another footgun","msgtype":"m.text"},"ts":1600830364000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"oh right","msgtype":"m.text"},"ts":1600830365000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I was hoping I could provide some form to check each part of this proposal. I'm offering what I know how to do. It doesn't look like much valuable to do it before Stage 3 anyway","msgtype":"m.text"},"ts":1600830368000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"i forgot because i have no use cases for private static","msgtype":"m.text"},"ts":1600830377000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I'm too tired, I'm sorry my ideas are too raw","msgtype":"m.text"},"ts":1600830389000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"littledan: nice work","msgtype":"m.text"},"ts":1600830425000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: Thank you","msgtype":"m.text"},"ts":1600830434000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"TypeScript's decorators rewrite the inner bindings of `C` to point to the class result of the decorator:","msgtype":"m.text"},"ts":1600830929000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600830929000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"var _x;","msgtype":"m.text"},"ts":1600830929000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"var C_1;","msgtype":"m.text"},"ts":1600830929000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"let C = C_1 = class C {","msgtype":"m.text"},"ts":1600830929000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"    static method() {","msgtype":"m.text"},"ts":1600830929000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"        __classPrivateFieldGet(this, _x); // throws for subclass","msgtype":"m.text"},"ts":1600830929000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"        __classPrivateFieldGet(C_1, _x); // throws for subclass","msgtype":"m.text"},"ts":1600830930000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"        return new C_1(); // creates \"decorated\" C","msgtype":"m.text"},"ts":1600830930000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"    }","msgtype":"m.text"},"ts":1600830931000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"};","msgtype":"m.text"},"ts":1600830931000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"_x = new WeakMap();","msgtype":"m.text"},"ts":1600830932000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"_x.set(C, 1);","msgtype":"m.text"},"ts":1600830932000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"C = C_1 = __decorate([","msgtype":"m.text"},"ts":1600830933000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"    decorate","msgtype":"m.text"},"ts":1600830933000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"], C);","msgtype":"m.text"},"ts":1600830934000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600830934000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"Except that TypeScript errors on `static #x` currently. There's no easy way *inside* the class to reference the binding *outside* of the class, currently [1]. This might be way haxjs was suggesting class meta properties yesterday (i.e., `class.current`, `class.decorated`) as a way to distinguish between the two.","msgtype":"m.text"},"ts":1600830935000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"[1] Other than `let C = @decorator class { ... }` maybe?","msgtype":"m.text"},"ts":1600830936000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"s/be way/be why","msgtype":"m.text"},"ts":1600830975000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"akirose: robpalme update queue?","msgtype":"m.text"},"ts":1600833765000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i like this proposal","msgtype":"m.text"},"ts":1600833766000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"got u","msgtype":"m.text"},"ts":1600833780000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"ty","msgtype":"m.text"},"ts":1600833783000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"holy shit i love this already","msgtype":"m.text"},"ts":1600833819000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"please no more string literals","msgtype":"m.text"},"ts":1600833937000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"also this is already valid syntax","msgtype":"m.text"},"ts":1600833950000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yeah but who is doing ``````","msgtype":"m.text"},"ts":1600833963000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that will just throw","msgtype":"m.text"},"ts":1600833970000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: me, and no it won't","msgtype":"m.text"},"ts":1600833976000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1600833985000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"where's that gist","msgtype":"m.text"},"ts":1600833987000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"strings are not functions","msgtype":"m.text"},"ts":1600833991000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"tags can return tags","msgtype":"m.text"},"ts":1600833998000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"Yah, michaelficarra provided an `append` tagged template literal which continues to return a function after every tag invocation","msgtype":"m.text"},"ts":1600834007000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"But untagged is good to go. üòõ","msgtype":"m.text"},"ts":1600834023000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"he provided it four years ago, even","msgtype":"m.text"},"ts":1600834023000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"https://gist.github.com/michaelficarra/70ce798feb25fdc91508f387190053a1","msgtype":"m.text"},"ts":1600834024000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so if you use append with empty strings on both sides","msgtype":"m.text"},"ts":1600834051000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"as is very common","msgtype":"m.text"},"ts":1600834053000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":":unconvinced:","msgtype":"m.text"},"ts":1600834061000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i am really confused by the previous slide","msgtype":"m.text"},"ts":1600834080000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the problem is that... you didn't dedent the string, therefore it's not === to an un-dedented string?","msgtype":"m.text"},"ts":1600834091000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"why is that a problem?","msgtype":"m.text"},"ts":1600834098000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah I am also confused","msgtype":"m.text"},"ts":1600834103000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"The syntax never exposes an un-dedented strings","msgtype":"m.text"},"ts":1600834118000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"Where the API can expose both","msgtype":"m.text"},"ts":1600834123000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"Whether that's really a problem is up to the dev","msgtype":"m.text"},"ts":1600834133000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"wouldn't this not work if the first line is not a newline?","msgtype":"m.text"},"ts":1600834166000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"String.dedent is great except composing with other tag functions","msgtype":"m.text"},"ts":1600834243000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Correct, unless that first line had the same common indentation.","msgtype":"m.text"},"ts":1600834250000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"https://usercontent.irccloud-cdn.com/file/0A5rHMJe/image.png","msgtype":"m.text"},"ts":1600834252000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"Bakkot: scared me for a second there","msgtype":"m.text"},"ts":1600834266000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"thought we were gonna have to fight","msgtype":"m.text"},"ts":1600834275000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"the syntax seems nice so that it can be based on the indentation where the opening quote is","msgtype":"m.text"},"ts":1600834323000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"is there a widely understood way to compose template tag functions?","msgtype":"m.text"},"ts":1600834348000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Also, this is valid code that executes and can be well behaved: https://usercontent.irccloud-cdn.com/file/KvA4SWj3/image.png","msgtype":"m.text"},"ts":1600834351000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1600834366000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rbuckton: look up :P","msgtype":"m.text"},"ts":1600834371000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"let's use #` `#","msgtype":"m.text"},"ts":1600834383000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"html#`<div/>`#","msgtype":"m.text"},"ts":1600834401000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"everything with #!","msgtype":"m.text"},"ts":1600834406000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"tbh @ would work here as well","msgtype":"m.text"},"ts":1600834420000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Scheme, but with ## instead of ()","msgtype":"m.text"},"ts":1600834428000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"devsnek: I'd love to know if you fin an answer to that question","msgtype":"m.text"},"ts":1600834454000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"what","msgtype":"m.text"},"ts":1600834463000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"#${ }# replaces ( )","msgtype":"m.text"},"ts":1600834472000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"*find","msgtype":"m.text"},"ts":1600834475000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"> is there a widely understood way to compose template tag functions?","msgtype":"m.text"},"ts":1600834476000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: i put it on the queue","msgtype":"m.text"},"ts":1600834483000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that's my primary reason for preferring the syntax","msgtype":"m.text"},"ts":1600834491000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if there's some easy way to compose String.dedent with other tags then i'm good with it","msgtype":"m.text"},"ts":1600834510000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"uuhhhh that doesn't solve the problem still","msgtype":"m.text"},"ts":1600834511000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"oh damn we got elang on the queue","msgtype":"m.text"},"ts":1600834514000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"E also had promises, now look where we are","msgtype":"m.text"},"ts":1600834544000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"michaelficarra: my problem is not for N template it is for 1 template so it solves it for me :P","msgtype":"m.text"},"ts":1600834590000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"s/template/tag/g","msgtype":"m.text"},"ts":1600834602000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek:boring","msgtype":"m.text"},"ts":1600834607000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600834609000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i just realized everything we're discussing is not stage 1 relevant","msgtype":"m.text"},"ts":1600834657000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"true, I don't see this failing to reach stage 1","msgtype":"m.text"},"ts":1600834735000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"littledan \"it can be based on the indentation where the opening quote is\" would be bad, it makes the whitespace outside of the ``` significant","msgtype":"m.text"},"ts":1600834768000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i am now super confused","msgtype":"m.text"},"ts":1600834791000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah none of this blocks stage 1 lol","msgtype":"m.text"},"ts":1600834811000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"wont' stop us from discussing it","msgtype":"m.text"},"ts":1600834822000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: OK, if this is taken to be bad, I prefer a stdlib tag as well","msgtype":"m.text"},"ts":1600834828000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"if we can convince the champions to focus on the non-syntactic approach at this point, that'd be great, but not required","msgtype":"m.text"},"ts":1600834836000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"does ```  conflict with markdown syntax??","msgtype":"m.text"},"ts":1600835041000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1600835050000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"not in the sense that markdown syntax doesn't work in a js context","msgtype":"m.text"},"ts":1600835072000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"conceptually, sure, it's also the same as \"preformatted text\" in slack or a bunch of other markdownish contexts","msgtype":"m.text"},"ts":1600835089000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i mean if u want to embed js code in markdown or verse vice","msgtype":"m.text"},"ts":1600835093000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"markdown syntax also has single backticks","msgtype":"m.text"},"ts":1600835105000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so template literal syntax already conflicts.","msgtype":"m.text"},"ts":1600835109000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"markdown could use `` double backtick","msgtype":"m.text"},"ts":1600835131000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"There was an option to allow 5 ticks in a row for markdown","msgtype":"m.text"},"ts":1600835140000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"at least standard markdown","msgtype":"m.text"},"ts":1600835142000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Or 7","msgtype":"m.text"},"ts":1600835142000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"etc","msgtype":"m.text"},"ts":1600835146000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"oh !","msgtype":"m.text"},"ts":1600835151000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"let's use 7 ```````","msgtype":"m.text"},"ts":1600835159000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"not sure i enter the right count :)","msgtype":"m.text"},"ts":1600835169000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Any number of ticks would continue until we encounter the same number of ticks","msgtype":"m.text"},"ts":1600835170000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"Markdown doesn't conflict with JavaScript. Also, markdown supports _n_-backticks for nesting:","msgtype":"m.text"},"ts":1600835170000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600835170000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"`` allows ` in md ``","msgtype":"m.text"},"ts":1600835170000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600835170000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"but too many backticks just harm my eyes... :)   really hope we can have some easy syntax :)","msgtype":"m.text"},"ts":1600835284000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Somewhat amusing,  I do have code that does something like this:","msgtype":"m.text"},"ts":1600835296000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600835296000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"const fence = \"```\";","msgtype":"m.text"},"ts":1600835296000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"markdown`","msgtype":"m.text"},"ts":1600835296000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"${fence}typescript","msgtype":"m.text"},"ts":1600835296000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1600835296000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"${fence}","msgtype":"m.text"},"ts":1600835296000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"`;","msgtype":"m.text"},"ts":1600835297000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600835297000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"(for mixing trusted and untrusted content when generating documentation for VS Code)","msgtype":"m.text"},"ts":1600835298000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"That didn't work well, heh.","msgtype":"m.text"},"ts":1600835303000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"inline code spans can be wrapped in backtick strings of any length, e.g. ```code```: https://spec.commonmark.org/0.29/#code-spans","msgtype":"m.text"},"ts":1600835323000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600835356000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"const fence = \"`\".repeat(3);","msgtype":"m.text"},"ts":1600835356000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"markdown`","msgtype":"m.text"},"ts":1600835356000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"${fence}typescript","msgtype":"m.text"},"ts":1600835356000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1600835356000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"${fence}","msgtype":"m.text"},"ts":1600835356000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"`;","msgtype":"m.text"},"ts":1600835356000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600835357000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"That worked better...","msgtype":"m.text"},"ts":1600835364000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"and code fences use 3 or more consecutive backticks","msgtype":"m.text"},"ts":1600835492000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"ooh üéâ indeed","msgtype":"m.text"},"ts":1600835729000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yay, I much prefer Instant","msgtype":"m.text"},"ts":1600835826000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"though I am bummed about negative durations","msgtype":"m.text"},"ts":1600835854000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"still don't understand your concern there","msgtype":"m.text"},"ts":1600835871000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"time has direction","msgtype":"m.text"},"ts":1600835873000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it's conflating the magnitude and the direction","msgtype":"m.text"},"ts":1600835906000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"it isn't conflating","msgtype":"m.text"},"ts":1600835912000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it's representing both","msgtype":"m.text"},"ts":1600835915000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"a duration is just a magnitude","msgtype":"m.text"},"ts":1600835917000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"it's combining, surely","msgtype":"m.text"},"ts":1600835918000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"if every other lib/lang have negative duration, we should have it :)","msgtype":"m.text"},"ts":1600835922000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"sure, combining","msgtype":"m.text"},"ts":1600835925000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"haxjs: in general i don't agree with that logic, but here i do :-)","msgtype":"m.text"},"ts":1600835934000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"whoosh, this is a _giant_ API","msgtype":"m.text"},"ts":1600835971000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"not necessarily bad but it is going to take forever to review it","msgtype":"m.text"},"ts":1600835987000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ljharb: I mean we need a strong reason to be difference. :)","msgtype":"m.text"},"ts":1600835987000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Bakkot: they're hoping we can all review it in 2 months","msgtype":"m.text"},"ts":1600835993000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"they best be ready to rebase on top of 2007 because I'm not doing it for them","msgtype":"m.text"},"ts":1600836007000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"Bakkot: yeah it's basically the size of 402","msgtype":"m.text"},"ts":1600836022000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(quick, someone merge 2007)","msgtype":"m.text"},"ts":1600836022000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yeah it's a giant api and changing ...","msgtype":"m.text"},"ts":1600836023000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"so we need to consider it as if reviewing an entirely new spec","msgtype":"m.text"},"ts":1600836035000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"haxjs the idea is that they'll stop changing it and tell us and then we can review","msgtype":"m.text"},"ts":1600836046000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"which I think is what is currently happening","msgtype":"m.text"},"ts":1600836051000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"michaelficarra not sure they have a spec at all; I think the work was mostly in the polyfill","msgtype":"m.text"},"ts":1600836077000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"bakkot: glad to hear that! but it seems there are still some new draft for new additions in the repo","msgtype":"m.text"},"ts":1600836085000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Bakkot: hm, the spec isn't up to date?","msgtype":"m.text"},"ts":1600836118000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev not sure, to be clear, I haven't been following closely","msgtype":"m.text"},"ts":1600836129000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that was true at some point in the past","msgtype":"m.text"},"ts":1600836134000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"like LocalDateTime (i am not sure ,this is what i saw last week)","msgtype":"m.text"},"ts":1600836139000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"there's pending work in both the spec and the polyfill, but I think the polyfill is ahead","msgtype":"m.text"},"ts":1600836173000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"someone post the Twitter vote link from the slides, I am too lazy","msgtype":"m.text"},"ts":1600836185000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"gibson042: we have done a review of the spec text in preparation for november, is that far behind?","msgtype":"m.text"},"ts":1600836223000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"btw the original Temporal API had something representing LocalDateTime, and it was a change from a couple years ago to try to remove it, for minimalism. The ensuing investigation taught us, Maggie Pint was right about ensuring it was present","msgtype":"m.text"},"ts":1600836229000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ystartsev: my sense from watching the repo is that it seems like it's changing in significant ways every day or three","msgtype":"m.text"},"ts":1600836250000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"hm... ok. is the plan still to advance this in november?","msgtype":"m.text"},"ts":1600836291000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: I think so, many things will likely not change but you'll definitely need to re-review and it will probably feel more comprehensive than you'd like","msgtype":"m.text"},"ts":1600836300000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"oh, we need to review Temporal for advancement by november?","msgtype":"m.text"},"ts":1600836324000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"https://twitter.com/justingrantjg/status/1308619968632688640","msgtype":"m.text"},"ts":1600836324000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"ystartsev: i assume that's still the hope, i'll be asking about review","msgtype":"m.text"},"ts":1600836327000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: yes, that's what they said in july","msgtype":"m.text"},"ts":1600836330000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"wait, different calendars still use ISO 8601 instant formatting?","msgtype":"m.text"},"ts":1600836330000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"okay, thanks","msgtype":"m.text"},"ts":1600836335000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I am not confident we will all be able to review and address comments by november","msgtype":"m.text"},"ts":1600836338000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"gibson042: getting our domain experts to review it is quite a bit of work. i want to make sure that i don't ask them unnecessarily","msgtype":"m.text"},"ts":1600836340000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"hoo wow `DateAndTime` would be real bad","msgtype":"m.text"},"ts":1600836346000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Bakkot: me neither, which is what i said in july","msgtype":"m.text"},"ts":1600836346000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"then I would hold off","msgtype":"m.text"},"ts":1600836347000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"i would request the champion group to hold tutorial VCs for the reviewers + editors, if possible","msgtype":"m.text"},"ts":1600836367000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the current plan/hope is to have the spec ready sometime next month; there should be a slide on that coming up","msgtype":"m.text"},"ts":1600836386000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"I hope we can have some time to introducing it to users and collect feedback before stage 3.","msgtype":"m.text"},"ts":1600836387000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"with hope for advancement in January IIRC","msgtype":"m.text"},"ts":1600836408000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"gibson042: I've already requested a review and had it done prior to this meeting. It would be really good to only do that when the spec is ready. But outside of that there were no concerns","msgtype":"m.text"},"ts":1600836426000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"shu: I think that's a good idea","msgtype":"m.text"},"ts":1600836445000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"ditto, i like shu's idea","msgtype":"m.text"},"ts":1600836463000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"gibson042: ah ok, that's newly extended","msgtype":"m.text"},"ts":1600836470000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I'm not a reviewer but I would like to attend such a meeting too","msgtype":"m.text"},"ts":1600836513000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: Are we chartering a incubator again?","msgtype":"m.text"},"ts":1600836526000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"If so, can we sign up String.dedent?","msgtype":"m.text"},"ts":1600836532000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"jridgewell: most definitely","msgtype":"m.text"},"ts":1600836567000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"jridgewell: until further notice, there will be a 15-min chartering on the last day every meeting","msgtype":"m.text"},"ts":1600836587000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"üëç","msgtype":"m.text"},"ts":1600836598000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"ystartsev: Yeah, sorry about the confusion about stability; I thought the expectation was that reviews would be requested before the next meeting, so I guess there wasn't a particular effort to telegraph the continued development","msgtype":"m.text"},"ts":1600836658000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"jridgewell: you don't think you got enough feedback during plenary?","msgtype":"m.text"},"ts":1600836659000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"littledan: no problem, its not too much of an issue and we already have a good idea going into the next review","msgtype":"m.text"},"ts":1600836686000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"note that the champion group has done a lot of work to document rationale, but it's definitely a good idea to group it in one place","msgtype":"m.text"},"ts":1600836732000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Yes, there's feedback, but I think we can solve some of the open questions during an incubator","msgtype":"m.text"},"ts":1600836764000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"Eg, whitespace-only lines affect \"common whitespace\", or whether to allow mixing whitespace.","msgtype":"m.text"},"ts":1600836787000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"These don't need full committee involvement to decide.","msgtype":"m.text"},"ts":1600836801000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"jridgewell: are there open issues for these things? I'd prefer to weigh in on the issue tracker","msgtype":"m.text"},"ts":1600836837000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"Whitespace-only lines: https://github.com/mmkal/proposal-multi-backtick-templates/issues/13","msgtype":"m.text"},"ts":1600836860000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"I'll make one for mixing whitespace.","msgtype":"m.text"},"ts":1600836895000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"should look at what other languages do, too","msgtype":"m.text"},"ts":1600836908000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"often there is a common thing all languages do and we can just go with that","msgtype":"m.text"},"ts":1600836917000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Each one seems to do something different. üò¨","msgtype":"m.text"},"ts":1600836952000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"I personally like Python's impl, but there's enough competing prior art to choose anything.","msgtype":"m.text"},"ts":1600836994000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"my least favorite game: \"this meeting has more [pick a dude's name] than women\" üò≠","msgtype":"m.text"},"ts":1600837000000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"a depressing game","msgtype":"m.text"},"ts":1600837037000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah this is a bad one","msgtype":"m.text"},"ts":1600837045000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"you know it's bad when \"Ross\" is a name in the running","msgtype":"m.text"},"ts":1600837065000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"is it just me and aki this time around?","msgtype":"m.text"},"ts":1600837079000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: shrutikapoor","msgtype":"m.text"},"ts":1600837091000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ah good","msgtype":"m.text"},"ts":1600837095000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"No! shrutikapoor !","msgtype":"m.text"},"ts":1600837096000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"shrutikapoor: you're paypal, right?","msgtype":"m.text"},"ts":1600837115000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"i didn't see the name in the call but maybe she was on an earlier session","msgtype":"m.text"},"ts":1600837137000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"wsdferdksl: your audio's getting a bit hard to hear","msgtype":"m.text"},"ts":1600837196000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"fun fact: you can spread own accessors if they're enumerable","msgtype":"m.text"},"ts":1600837285000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"wow I did not know that","msgtype":"m.text"},"ts":1600837320000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"that is true","msgtype":"m.text"},"ts":1600837414000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(no reason to prefer that over frozen own data properties, though)","msgtype":"m.text"},"ts":1600837460000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"well, actually, I guess maybe laziness?","msgtype":"m.text"},"ts":1600837471000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"record/tuple already have immutable own property? (or at least it behave like that?)","msgtype":"m.text"},"ts":1600837483000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"littledan: +1 on tutorial","msgtype":"m.text"},"ts":1600837495000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Bakkot: laziness but also, those own accessors would have to be nonconfigurable anyways to ensure immutability","msgtype":"m.text"},"ts":1600837505000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1600837523000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"michaelficarra: mixing whitespace https://github.com/mmkal/proposal-multi-backtick-templates/issues/16","msgtype":"m.text"},"ts":1600837556000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"whose phone keeps beeping? akirose?","msgtype":"m.text"},"ts":1600838029000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"nope i'm HW muted","msgtype":"m.text"},"ts":1600838044000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"i know i can be a little polyanna about things","msgtype":"m.text"},"ts":1600838506000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"but","msgtype":"m.text"},"ts":1600838511000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"i love this","msgtype":"m.text"},"ts":1600838517000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"no need to hesitate; language-level i18n is great","msgtype":"m.text"},"ts":1600838556000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i18n is amazing in general","msgtype":"m.text"},"ts":1600838810000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"YOOOOOOOO","msgtype":"m.text"},"ts":1600838847000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"BUDS","msgtype":"m.text"},"ts":1600838849000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"i18n is hard! really like we improve the api ability to solve the problems :)","msgtype":"m.text"},"ts":1600838849000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"we need note-takers","msgtype":"m.text"},"ts":1600838852000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"can someone hop on","msgtype":"m.text"},"ts":1600838859000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"akirose: let me try","msgtype":"m.text"},"ts":1600838861000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"so i don't have to interrupt","msgtype":"m.text"},"ts":1600838863000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"ty","msgtype":"m.text"},"ts":1600838865000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"(you don't have to take notes of the presentation of slides)","msgtype":"m.text"},"ts":1600838872000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"okay, thanks!","msgtype":"m.text"},"ts":1600838891000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"having three cursors ready to go would be dope","msgtype":"m.text"},"ts":1600838898000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"ystartsev: sorry, fixed the slides perms","msgtype":"m.text"},"ts":1600839073000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"The library exists but i don't know much about it ... that would be zibi or waldo","msgtype":"m.text"},"ts":1600839090000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"so, i have no idea in case anyone is wondering","msgtype":"m.text"},"ts":1600839102000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ljharb: thanks!","msgtype":"m.text"},"ts":1600839106000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"I have no opinions on this issue","msgtype":"m.text"},"ts":1600839945000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"all options kinda suck","msgtype":"m.text"},"ts":1600839947000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600839963000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh good point from Mark","msgtype":"m.text"},"ts":1600839984000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"we had this problem in node","msgtype":"m.text"},"ts":1600839999000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't remember how we solved it because its 1am","msgtype":"m.text"},"ts":1600840012000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"aha we strictly control the type of the option so you can check `option: invalid type` throwing for it to be there","msgtype":"m.text"},"ts":1600840064000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb are you concerned that making an error into a non-error is breaking?","msgtype":"m.text"},"ts":1600840124000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: new code can't be used on old runtimes","msgtype":"m.text"},"ts":1600840159000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in options bags only, yes","msgtype":"m.text"},"ts":1600840162000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"what's special about options bags?","msgtype":"m.text"},"ts":1600840178000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"throwing on an extra property is the same as throwing on an extra argument","msgtype":"m.text"},"ts":1600840216000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"we don't make apis that do the latter","msgtype":"m.text"},"ts":1600840219000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"throwing on extra properties is weird to me","msgtype":"m.text"},"ts":1600840255000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this isn't \"extra property\", it's \"an unexpected value\", as I understood it","msgtype":"m.text"},"ts":1600840284000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"an unexpected value of an expected property\"","msgtype":"m.text"},"ts":1600840296000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yes, that was the clarification just now","msgtype":"m.text"},"ts":1600840305000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah that should throw","msgtype":"m.text"},"ts":1600840305000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: i think you're misunderstanding","msgtype":"m.text"},"ts":1600840360000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shane is not proposing anything about unknown properties afaict?","msgtype":"m.text"},"ts":1600840379000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Add a \"clarifying statement\" on TCQ?","msgtype":"m.text"},"ts":1600840410000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1600840426000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"my bad on misunderstanding the question i guess","msgtype":"m.text"},"ts":1600840544000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"seems philipp misunderstood as well?","msgtype":"m.text"},"ts":1600840570000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"many helpful anonymous animals","msgtype":"m.text"},"ts":1600841076000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(do that few people have a google account?)","msgtype":"m.text"},"ts":1600841083000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"anonymous-ness is document-specific","msgtype":"m.text"},"ts":1600841102000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"presumably everyone has a google acct","msgtype":"m.text"},"ts":1600841109000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"anonymous is due to it being public","msgtype":"m.text"},"ts":1600841110000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"You have to click a button for you to expose your Google account","msgtype":"m.text"},"ts":1600841123000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"oh, which button","msgtype":"m.text"},"ts":1600841132000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"that one","msgtype":"m.text"},"ts":1600841137000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"By default on pub docs, everyone is anonymous","msgtype":"m.text"},"ts":1600841137000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"i wanna click it, which one","msgtype":"m.text"},"ts":1600841149000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"It's at the top right...","msgtype":"m.text"},"ts":1600841155000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"It has a little pop up when you first open Docs","msgtype":"m.text"},"ts":1600841165000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"ok but i've opened docs like a thousand times and i see no popup","msgtype":"m.text"},"ts":1600841194000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm logged into my gmail","msgtype":"m.text"},"ts":1600841202000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and the only name i see in the list is rob's","msgtype":"m.text"},"ts":1600841212000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ü§∑‚Äç‚ôÇÔ∏è","msgtype":"m.text"},"ts":1600841220000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"There's always a pop-up fo rme","msgtype":"m.text"},"ts":1600841227000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"i wonder if it has to be explicitly shared with someone for their name to show up","msgtype":"m.text"},"ts":1600841288000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I don't see this button either","msgtype":"m.text"},"ts":1600841295000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"}
]