[
{"content":{"body":"incubator call? ping ljharb shu","msgtype":"m.text"},"ts":1590509035000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"leobalter:  also","msgtype":"m.text"},"ts":1590509065000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: i am in the call","msgtype":"m.text"},"ts":1590509089000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ystartsev: are you in a different call?","msgtype":"m.text"},"ts":1590509113000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1590509121000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"it looks like we have 2","msgtype":"m.text"},"ts":1590509124000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: i am in https://meet.google.com/sao-fyma-sxe","msgtype":"m.text"},"ts":1590509135000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ystartsev shu I've been waiting forsomeome to allow me in the call","msgtype":"m.text"},"ts":1590509136000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"this is a different link that what we have","msgtype":"m.text"},"ts":1590509144000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"we are on our way","msgtype":"m.text"},"ts":1590509148000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"I'll ping caridy","msgtype":"m.text"},"ts":1590509148000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"oops, i didnâ€™t have it in my calendar","msgtype":"m.text"},"ts":1590509935000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"is it now?","msgtype":"m.text"},"ts":1590509939000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"apparently google meet's web app doesn't show presented screen contents; i had to switch to the ios app to see it :-/","msgtype":"m.text"},"ts":1590511018000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: I'm going through our next agenda, and I'm curious about something in Ergo checks for private fields. What's the benefit to this instead of instanceof?","msgtype":"m.text"},"ts":1590530143000,"senderName":"davepoole","senderId":"davepoole@irc"},
{"content":{"body":"davepoole: instanceof is brittle, and can be faked with `Symbol.hasInstance`","msgtype":"m.text"},"ts":1590530310000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"davepoole: also it doesn't work cross-realm for builtins (not that that applies to private fields) so i reflexively am repulsed by it in code review :-)","msgtype":"m.text"},"ts":1590530352000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"davepoole: iow any use case for the \"private\" in private fields also needs it to be robust, which means anything forgeable is out","msgtype":"m.text"},"ts":1590530380000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"gotcha, thanks!","msgtype":"m.text"},"ts":1590530406000,"senderName":"davepoole","senderId":"davepoole@irc"},
{"content":{"body":"devsnek: https://github.com/tc39/proposal-record-tuple/issues/65#issuecomment-634321864 is pretty rude.","msgtype":"m.text"},"ts":1590533552000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hm? it seemed like a reasonable compromise to me","msgtype":"m.text"},"ts":1590533608000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you're asserting that the semantics littledan and erights and and I have been arguing for are broken.","msgtype":"m.text"},"ts":1590533684000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"they are different from the semantics you want","msgtype":"m.text"},"ts":1590533688000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I mean, they are","msgtype":"m.text"},"ts":1590533698000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":":|","msgtype":"m.text"},"ts":1590533704000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1590533712000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"they are different from the semantics you want","msgtype":"m.text"},"ts":1590533716000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and also don't compare numbers correctly","msgtype":"m.text"},"ts":1590533746000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"according to ===","msgtype":"m.text"},"ts":1590533757000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so we could just add a new thing","msgtype":"m.text"},"ts":1590533763000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we are discussing how to compare structures. IEEE does not mandate a particular semantics for comparing data structures containing numbers.","msgtype":"m.text"},"ts":1590533798000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"there is no objective notion of \"correctness\" to appeal to here.","msgtype":"m.text"},"ts":1590533813000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"there are different possible semantics, with different justifications.","msgtype":"m.text"},"ts":1590533823000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"not the structure, the numbers in the structure","msgtype":"m.text"},"ts":1590533831000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"asserting that your preferred semantics are the only correct semantics, and all other semantics are broken, is rude.","msgtype":"m.text"},"ts":1590533835000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"if it doesn't work on numbers\"","msgtype":"m.text"},"ts":1590533890000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I'm not entirely sure how to phrase it","msgtype":"m.text"},"ts":1590533897000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I disagree with this kind of categorical phrasing like \"it doesn't work on numbers\"","msgtype":"m.text"},"ts":1590533924000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"if === does your behaviour","msgtype":"m.text"},"ts":1590533956000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we still need the one that compares them how numbers are supposed to be compared","msgtype":"m.text"},"ts":1590533969000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yes I think I know what you're getting at and I disagree","msgtype":"m.text"},"ts":1590533973000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"we shouldn't provide it at all?","msgtype":"m.text"},"ts":1590533993000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(gotta run to a meeting)","msgtype":"m.text"},"ts":1590533998000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"littledan: you don't think that js should include a comparison that compares the numbers according to their spec","msgtype":"m.text"},"ts":1590534073000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and should leave that to userland","msgtype":"m.text"},"ts":1590534080000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well, I don't have a very strong reason why it'd be fatal; we could put it on Record.","msgtype":"m.text"},"ts":1590534137000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"well it should be more general","msgtype":"m.text"},"ts":1590534169000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I'd want to use it in place of ===","msgtype":"m.text"},"ts":1590534175000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah, it'd work on Tuples as well","msgtype":"m.text"},"ts":1590534182000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"and all values I guess","msgtype":"m.text"},"ts":1590534186000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1590534190000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but, I don't really understand where you'd want to use it, beyond simple point/complex number examples. I don't understand why you'd want to use it in place of === in general.","msgtype":"m.text"},"ts":1590534222000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"id want to use it everywhere for everything","msgtype":"m.text"},"ts":1590534240000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1590534248000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"because the semantics you're proposing don't work","msgtype":"m.text"},"ts":1590534256000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"unless you're memoizing things I guess","msgtype":"m.text"},"ts":1590534270000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but I can't imagine that's the common case here","msgtype":"m.text"},"ts":1590534278000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in any case I reached the point where I want to stop arguing about this more than I want js to be a good language so I'll just make an eslint rule for whatever method we add","msgtype":"m.text"},"ts":1590534404000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah sorry I guess I'm fine with stopping arguing too... what do you mean by an eslint rule?","msgtype":"m.text"},"ts":1590536307000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: to say that occurances of === should be replaced with Object.strictEquals or whatever it is called","msgtype":"m.text"},"ts":1590536397000,"senderName":"devsnek","senderId":"devsnek@irc"}
]