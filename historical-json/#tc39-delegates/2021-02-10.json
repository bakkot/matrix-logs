[
{"content":{"body":"ljharb, others: Oh dang, Python just accepted a structural pattern-match syntax (PEPs 634/635/636). It's *virtually identical* to my proposal. I wrote up a comparison at <https://gist.github.com/tabatkins/2fb7278d9605daf3c53f425a36f3de4e> (this is also linked from my proposal doc).","msgtype":"m.text"},"ts":1612921569000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i saw, but hadn't done a comparison yet, thanks","msgtype":"m.text"},"ts":1612921879000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"TabAtkins where is your proposal?","msgtype":"m.text"},"ts":1612922827000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"gist doesn't liink t","msgtype":"m.text"},"ts":1612922829000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"*link it, ugh, gotta get my keyboard fixed","msgtype":"m.text"},"ts":1612922838000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Oh yeah I didn't link back, huh","msgtype":"m.text"},"ts":1612924554000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Bakkot: https://gist.github.com/tabatkins/5c336285c7f6d7d6522561e97f4d98fb","msgtype":"m.text"},"ts":1612924560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins neat!","msgtype":"m.text"},"ts":1612926389000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"does anyone remember the history around the motivatioon for RegExp.prototype[@@split] special-casing empty strings?","msgtype":"m.text"},"ts":1612987258000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"are there observable differences with vs without that special case?","msgtype":"m.text"},"ts":1612987322000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"allen has said that he put a lot of effort into ensuring that the observable behavior of existing string regex methods didn't change in es6","msgtype":"m.text"},"ts":1612987342000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: there is, in that for strings with length 0, the splitter regexp is executed _at_ the length (since lastIndex is 0). for strings with length > 0, the splitter is always executed at a lastIndex < length","msgtype":"m.text"},"ts":1612987426000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"my guess then is that \"that's how it used to work\", so the special case was to preserve that semantic","msgtype":"m.text"},"ts":1612987521000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"either that, or \"we didn't think about consistency\" explain most of the weird things in the regex methods","msgtype":"m.text"},"ts":1612987560000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"there is a paragraph in the note that calls out the empty String behavior, but nothing in way of motivation","msgtype":"m.text"},"ts":1612987625000,"senderName":"shu","senderId":"shu@irc"}
]