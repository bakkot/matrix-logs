[
{"content":{"body":"as it turns out, it is super hard to use weakrefs correctly, whoda thought","msgtype":"m.text"},"ts":1591921736000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"whatcha' weakref'n","msgtype":"m.text"},"ts":1591922712000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1591922875000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"i'd love to know more","msgtype":"m.text"},"ts":1591922882000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"i have plans/hopes to use them quite extensively for certain things","msgtype":"m.text"},"ts":1591922895000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"i was writing an example for a talk which wraps event listeners in weakrefs so you don't have to manually unregister event listeners","msgtype":"m.text"},"ts":1591922923000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"since that's a super common way to leak memory","msgtype":"m.text"},"ts":1591922927000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"my example had a class like so:","msgtype":"m.text"},"ts":1591922952000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i don't think i've ever heard of memory being leaked via event listeners","msgtype":"m.text"},"ts":1591922973000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"except code that accidentally attaches them in a loop","msgtype":"m.text"},"ts":1591922978000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://gist.github.com/syg/13d44f2b1a36095a90f722a1b84e6da2","msgtype":"m.text"},"ts":1591923167000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"if you forget to unregister an event listener when you close a panel, for instance, it tends to leak everything the listener held onto","msgtype":"m.text"},"ts":1591923184000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it is my impression that's a common gotcha in frontend programming","msgtype":"m.text"},"ts":1591923271000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oops, that gist has a bug","msgtype":"m.text"},"ts":1591923292000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"reload please","msgtype":"m.text"},"ts":1591923323000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"drousso_: can you spot the bug? `this.listener` isn't collectable in V8's GC","msgtype":"m.text"},"ts":1591923345000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and i reckon in JSC's GC as well","msgtype":"m.text"},"ts":1591923351000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu that's actually one of the primary use cases i'd want ðŸ˜…","msgtype":"m.text"},"ts":1591923374000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"Web Inspector has it's own event listener system which keeps things alive","msgtype":"m.text"},"ts":1591923387000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"drousso_: yep!","msgtype":"m.text"},"ts":1591923390000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"using a `WeakRef` to hold the `thisObject` would likely eliminate that issue","msgtype":"m.text"},"ts":1591923400000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"there're plenty of google JS code that has some notion of \"observer\" that gets misused","msgtype":"m.text"},"ts":1591923406000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and leaks craptons","msgtype":"m.text"},"ts":1591923411000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the listener function isn't collectable?","msgtype":"m.text"},"ts":1591923420000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1591923423000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu is the issue that `this` is captured by the arrow function?","msgtype":"m.text"},"ts":1591923429000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"it's for a really shitty subtle reason","msgtype":"m.text"},"ts":1591923433000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"drousso_: bingo, specifically, this chain:","msgtype":"m.text"},"ts":1591923445000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"- this.listener captures `this`","msgtype":"m.text"},"ts":1591923452000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ya","msgtype":"m.text"},"ts":1591923455000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"but `this` is the only thing that holds it","msgtype":"m.text"},"ts":1591923461000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"isn't that a normal cycle","msgtype":"m.text"},"ts":1591923467000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"- the wrapper arrow function is held onto strongly by the holdings of the FR","msgtype":"m.text"},"ts":1591923471000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu i agree that that's a pretty massive footgun","msgtype":"m.text"},"ts":1591923496000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"the wrapper arrow holds alive the environment of the function","msgtype":"m.text"},"ts":1591923500000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh the other arrow function","msgtype":"m.text"},"ts":1591923501000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the environment has references to two things: the `this`, and `weakRef`","msgtype":"m.text"},"ts":1591923521000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"y'all should not capture `this` if nothing inside references it","msgtype":"m.text"},"ts":1591923534000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu if you're curious, i prototyped a patch for Web Inspector's event listener system to use `WeakRef` <https://webkit.org/b/196956>","msgtype":"m.text"},"ts":1591923536000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"which means the FR can reach the `this` in the environment, and thus `this.listener`, making `this.listener` held alive by the FR","msgtype":"m.text"},"ts":1591923549000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the way i did it was just to manually change it so that we never used an arrow function :P","msgtype":"m.text"},"ts":1591923549000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"devsnek: V8 tried a patch to split the environment so that there are different environments for different inner closures","msgtype":"m.text"},"ts":1591923568000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"off","msgtype":"m.text"},"ts":1591923572000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the majority of Web Inspector's event listener usage is bound to a prototype function anyways (i.e. non-local non-anonymous functions) so it's not that bad IMO","msgtype":"m.text"},"ts":1591923577000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"*oof","msgtype":"m.text"},"ts":1591923583000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"e.g., in that example, the first arrow only captures `this`, but the second arrow only captures `weakRef`, so they shouldn't both capture the *same* environment that has both things alive","msgtype":"m.text"},"ts":1591923590000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that patch ended up causing memory regressions and couldn't land","msgtype":"m.text"},"ts":1591923599000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so there is no easy answer atm","msgtype":"m.text"},"ts":1591923602000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"aw","msgtype":"m.text"},"ts":1591923604000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I do not think we should be telling webdevs about weakrefs","msgtype":"m.text"},"ts":1591923609000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1591923614000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"weakrefs are for chains with wasm, and for no other purpose","msgtype":"m.text"},"ts":1591923622000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"s/chains/cycles/","msgtype":"m.text"},"ts":1591923628000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"drousso_: yeah, bind() is okay for V8","msgtype":"m.text"},"ts":1591923629000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh we don't even use `bind()`","msgtype":"m.text"},"ts":1591923639000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"sorry i should've clarified","msgtype":"m.text"},"ts":1591923644000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"Bakkot: web devs write wasm now","msgtype":"m.text"},"ts":1591923646000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: fwiw i do think the event listener case *is* compelling","msgtype":"m.text"},"ts":1591923647000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"devsnek no they don't","msgtype":"m.text"},"ts":1591923653000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"you almost never want to hold onto event listeners strongly","msgtype":"m.text"},"ts":1591923654000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"devsnek their tools do","msgtype":"m.text"},"ts":1591923655000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"nah they manually write the heap implementation","msgtype":"m.text"},"ts":1591923669000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu because we have our own Event Listener system, we allow the `thisObject` to passed in along with the `listener`, which are both held by the `eventTarget`","msgtype":"m.text"},"ts":1591923672000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"devsnek well, they should not do that either","msgtype":"m.text"},"ts":1591923681000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"drousso_: ah ha","msgtype":"m.text"},"ts":1591923686000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"webdevs use weakrefs too I'm sure","msgtype":"m.text"},"ts":1591923687000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but, like, don't","msgtype":"m.text"},"ts":1591923690000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i use weakrefs sometimes","msgtype":"m.text"},"ts":1591923697000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu this way we can avoid creating new functions when using a prototype/class function as the `listener`","msgtype":"m.text"},"ts":1591923700000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"i mean the \"you must be this tall to ride\" is like 10ft","msgtype":"m.text"},"ts":1591923707000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i should check for that in my usage of them","msgtype":"m.text"},"ts":1591923707000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"because it requires you to understand, like this example shows, to understand not only the GC but how closures are represented","msgtype":"m.text"},"ts":1591923720000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"which seems unreasonable to ask of for most web devs","msgtype":"m.text"},"ts":1591923725000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu I clean up my listeners manually when I'm done with them, which seems... obviously superior?","msgtype":"m.text"},"ts":1591923726000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I guess this is the manual vs automatic memory management debate","msgtype":"m.text"},"ts":1591923738000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: correct","msgtype":"m.text"},"ts":1591923743000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"except that the automatic one is way harder to use because it is not automatic at all","msgtype":"m.text"},"ts":1591923757000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"why do js devs not leaksan","msgtype":"m.text"},"ts":1591923759000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot the \"problem\" with that is knowing when you're done with them","msgtype":"m.text"},"ts":1591923768000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"it's totally doable","msgtype":"m.text"},"ts":1591923781000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"Bakkot: at even google levels of effort, whatever you take that to mean, there is evidence that manual management does not scale to complex projects, like GSuite","msgtype":"m.text"},"ts":1591923790000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"just can be hard to keep track of as the size of something increases","msgtype":"m.text"},"ts":1591923792000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"leaks abound","msgtype":"m.text"},"ts":1591923794000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"there is a Disposable pattern that people recommend using","msgtype":"m.text"},"ts":1591923802000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"^ same here","msgtype":"m.text"},"ts":1591923804000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"but it is buggy","msgtype":"m.text"},"ts":1591923806000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu I am not convinced leaks will go down if we tell people about weakrefs, though","msgtype":"m.text"},"ts":1591923859000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that's a separate discussion","msgtype":"m.text"},"ts":1591923868000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i think it's more library/framework authors that'll benefit","msgtype":"m.text"},"ts":1591923875000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"i definitely agree most people will use them wrong","msgtype":"m.text"},"ts":1591923875000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but yeah i agree with drousso_","msgtype":"m.text"},"ts":1591923885000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"right, so, we shouldn't tell webdevs about weakrefs :P","msgtype":"m.text"},"ts":1591923892000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i want the framework people at the big web property cos to hear about it","msgtype":"m.text"},"ts":1591923897000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1591923900000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"ah poop i gtg","msgtype":"m.text"},"ts":1591923918000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"when someone asks about weakrefs \"who's asking ðŸ‘€\"","msgtype":"m.text"},"ts":1591923923000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"have a good night yall :)","msgtype":"m.text"},"ts":1591923925000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"(or equivalent wherever you are)","msgtype":"m.text"},"ts":1591923929000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"g'night","msgtype":"m.text"},"ts":1591923933000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"we should get yusuke or someone to write a library that does the right thing and tell people about that instea","msgtype":"m.text"},"ts":1591923952000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"d","msgtype":"m.text"},"ts":1591923956000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"maybe I'll ask Gilad if he wants to do that after his current project","msgtype":"m.text"},"ts":1591924018000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the answer will be no, though","msgtype":"m.text"},"ts":1591924024000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"gilad?","msgtype":"m.text"},"ts":1591924040000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"https://en.wikipedia.org/wiki/Gilad_Bracha","msgtype":"m.text"},"ts":1591924069000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"used to sit two desks over from me, back when being proximate to other people was not illegal","msgtype":"m.text"},"ts":1591924090000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh he made java","msgtype":"m.text"},"ts":1591924125000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah *the* gilad","msgtype":"m.text"},"ts":1591924136000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"he's at f5?","msgtype":"m.text"},"ts":1591924137000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah, joined Shape a few months before the acquisition","msgtype":"m.text"},"ts":1591924152000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh wow, good catch","msgtype":"m.text"},"ts":1591924181000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"sure ask away, i'm also sure it'll be a no","msgtype":"m.text"},"ts":1591924189000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol he made a Newspeak language with all sorts of associated 1984 references?","msgtype":"m.text"},"ts":1591924196000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"amusing","msgtype":"m.text"},"ts":1591924200000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: Everyone's been talking about this observer pattern as a primary use case; it'd be great to have some code for this in the WeakRefs README so people can use it as a \"cookbook\"","msgtype":"m.text"},"ts":1591972652000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"once you work it out correctly...","msgtype":"m.text"},"ts":1591972668000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: a cookbook sounds good...","msgtype":"m.text"},"ts":1591974504000,"senderName":"shu","senderId":"shu@irc"}
]