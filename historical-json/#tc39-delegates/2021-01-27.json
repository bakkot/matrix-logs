[
{"content":{"body":"for the ResizableArrayBuffer rounding discussion, i filed two issues: https://github.com/tc39/proposal-resizablearraybuffer/issues/23 and https://github.com/tc39/proposal-resizablearraybuffer/issues/24 to separate the questions of rounding maxByteLength vs byteLength, please let me know of your thoughts in there","msgtype":"m.text"},"ts":1611706136000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: is there a chance the rounding could be used for fingerprinting?","msgtype":"m.text"},"ts":1611706495000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: yeah, i called that out in the presentation. depending on the degree of implementation latitude allowed","msgtype":"m.text"},"ts":1611706659000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"devsnek: i'm not sure how much of a fingerprinting concern that is vs other vectors","msgtype":"m.text"},"ts":1611706698000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah, its nice to keep a handle on though","msgtype":"m.text"},"ts":1611706719000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it'll tell you the version(s) of the VM you're on, probably, but not much else","msgtype":"m.text"},"ts":1611706743000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that kind of fingerprinting is inherently built-in via other vectors as well","msgtype":"m.text"},"ts":1611706774000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"rbuckton: do you happen to have any links to positive or negative sentiment expressed for match indices?","msgtype":"m.text"},"ts":1611712704000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"a recent refinement of the blink shipping process is evidence supporting \"developer signal\"","msgtype":"m.text"},"ts":1611712728000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i thought we have captured in the notes somewhere that non-browser dev practitioners (e.g. ljharb) would use match indices if they were available, but i can't find it","msgtype":"m.text"},"ts":1611712756000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i don't have concrete use cases off hand, but i have clear memories of needing this functionality in the past","msgtype":"m.text"},"ts":1611713139000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: probably not, but does 304 votes on https://twitter.com/ljharb/status/1154100770985242624 help?","msgtype":"m.text"},"ts":1611713185000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: yes it does!","msgtype":"m.text"},"ts":1611713365000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yay","msgtype":"m.text"},"ts":1611713369000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"well, at least obliquely","msgtype":"m.text"},"ts":1611713372000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it's not *no* signal, i guess","msgtype":"m.text"},"ts":1611713386000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the amount of votes show that a some devs in the wild care about it","msgtype":"m.text"},"ts":1611713391000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"a few replies also","msgtype":"m.text"},"ts":1611713417000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and we can probably reasonably extrapolate that a portion of the 300 participants are non-browser devs","msgtype":"m.text"},"ts":1611713421000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah, the replies are good","msgtype":"m.text"},"ts":1611713426000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i am not happy about this new shipping process requirement, given that i think tc39 already represents practitioner constituents directly through delegates such as yourself","msgtype":"m.text"},"ts":1611713459000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but otoh, having evidence too show there's positive sentiment does seem fair","msgtype":"m.text"},"ts":1611713476000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1611713479000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but also, a tweet \"do yall like this?\" from a chromium account would probably answer that rapidly","msgtype":"m.text"},"ts":1611713500000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"what am i, devrel?","msgtype":"m.text"},"ts":1611713513000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1611713518000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(no disparagement too devrel, but being that popular seems hard)","msgtype":"m.text"},"ts":1611713547000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"stupid key sticking on the mba keyboard","msgtype":"m.text"},"ts":1611713562000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I'm pretty unsympathetic to both the strong-pro and strong-con arguments on return","msgtype":"m.text"},"ts":1611753041000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I don't think that we have to care so much about programmers suddenly generating an intuition that do expressions get their own return semantics","msgtype":"m.text"},"ts":1611753064000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I mean, there's a completely unbounded amount of possible intuitions people could get. It just isn't possible to control for these.","msgtype":"m.text"},"ts":1611753086000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"On the other hand, I don't mind restricting the \"power\" of do expressions to not let them do control flow that jumps over their boundaries; that feels reasonable","msgtype":"m.text"},"ts":1611753120000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"anyone having trouble getting into the meeting?","msgtype":"m.text"},"ts":1611770434000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"we have 16 folk in","msgtype":"m.text"},"ts":1611770455000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"littledan: I don't think I understand what position you're expressing (aside from the last sentence which makes sense)","msgtype":"m.text"},"ts":1611770962000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: That, I'd be OK with return being permitted or prohibited from do expressions","msgtype":"m.text"},"ts":1611770981000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"what I disagree with is the strong arguments that it must be included or excluded","msgtype":"m.text"},"ts":1611771010000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ah yeah. I agree with that","msgtype":"m.text"},"ts":1611771022000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"haxjs: are you currently available for your presentation?","msgtype":"m.text"},"ts":1611771176000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"is the transcription bot dead?","msgtype":"m.text"},"ts":1611771311000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"never mind, it just got congested","msgtype":"m.text"},"ts":1611771332000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"is IRCCloud okay?","msgtype":"m.text"},"ts":1611771458000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"works for me","msgtype":"m.text"},"ts":1611771472000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"given that it wouldn't make any sense at all to allow `return` in `async do`, it seems like thats a consistency argument to forbid `return` in `do`.","msgtype":"m.text"},"ts":1611771484000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rickbutton: do you see the netsplits?","msgtype":"m.text"},"ts":1611771510000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"or is it something on my end?","msgtype":"m.text"},"ts":1611771517000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"what is graalix (sp) ?","msgtype":"m.text"},"ts":1611771533000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"only if the return returns from the surrounding function, not the do ljharb, but yes i agree with the consistency argument","msgtype":"m.text"},"ts":1611771534000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"oh phew it's back","msgtype":"m.text"},"ts":1611771545000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rickbutton: true. if it returns just from the `do` it could work in both","msgtype":"m.text"},"ts":1611771552000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"supposedly unstable more than completely out: https://twitter.com/IRCCloud/status/1354490157563572228","msgtype":"m.text"},"ts":1611771568000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: I've seen it as \"grawlix\"","msgtype":"m.text"},"ts":1611771802000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"https://en.wiktionary.org/wiki/grawlix","msgtype":"m.text"},"ts":1611771819000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"gibson042: ty","msgtype":"m.text"},"ts":1611771839000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rkirsling: i must be on ipv4, i didn't notice any issues","msgtype":"m.text"},"ts":1611771849000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: I dont' understand - why wouldn't it make sense to `return` in `async do`?","msgtype":"m.text"},"ts":1611771881000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It seems to make exactly as much sense as returning in a sync do.","msgtype":"m.text"},"ts":1611771895000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: kevin explained, because the containing function has already returned","msgtype":"m.text"},"ts":1611771898000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"OH WAIT","msgtype":"m.text"},"ts":1611771901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm being dumb, ignore me","msgtype":"m.text"},"ts":1611771908000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, the async context would prevent a `return` from escaping","msgtype":"m.text"},"ts":1611771921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1611771924000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"\"early exiting the `do` with an explicit value\" makes sense in both","msgtype":"m.text"},"ts":1611771929000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but \"early returning the containing function\" can only work in sync do","msgtype":"m.text"},"ts":1611771938000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I had the same comment as shu, but yep that is our concern as well","msgtype":"m.text"},"ts":1611771938000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"Yes. So I agree, given that I think `async do` is a must-have on top of sync-do, and `return` would *necessarily* do something local in async-do,  *and* `return` in sync-do has two different obvious things it could do, we should just ban `return` in sync-do.","msgtype":"m.text"},"ts":1611772002000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i still argue that only one of those obvious things is obvious","msgtype":"m.text"},"ts":1611772046000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"(to me, a return inside a do does not imply return from outer function)","msgtype":"m.text"},"ts":1611772074000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"TabAtkins: that is my conclusion as well","msgtype":"m.text"},"ts":1611772097000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i popped a comment on the queue to state it on record","msgtype":"m.text"},"ts":1611772112000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1611772115000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rickbutton: It was perfectly obvious to me that it would return from outer function, so my statement was correct that there are two obvious things. ^_^","msgtype":"m.text"},"ts":1611772156000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah i understand i just really want to be able to early return from these","msgtype":"m.text"},"ts":1611772181000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"make a follow-on for a new keyword to do it :-p","msgtype":"m.text"},"ts":1611772207000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1611772210000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gross","msgtype":"m.text"},"ts":1611772211000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"`return.from.do.expression value`","msgtype":"m.text"},"ts":1611772213000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"early_exit","msgtype":"m.text"},"ts":1611772217000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"`return.{} value`","msgtype":"m.text"},"ts":1611772235000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"do.return","msgtype":"m.text"},"ts":1611772247000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"ha, nice","msgtype":"m.text"},"ts":1611772255000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ugh, they keep getting worse","msgtype":"m.text"},"ts":1611772256000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"meta properties are real :millie-bobby-brown-mind-blown-gif:","msgtype":"m.text"},"ts":1611772272000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"`do.yield`","msgtype":"m.text"},"ts":1611772272000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"gotta get do generators first","msgtype":"m.text"},"ts":1611772285000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"oh_no.jpg","msgtype":"m.text"},"ts":1611772296000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I'm gonna keep playing devils advocate and say that you could say the opposite, that the fact that async-do return can only work one way, that sync should just also work that way","msgtype":"m.text"},"ts":1611772359000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"troll.png","msgtype":"m.text"},"ts":1611772361000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"ban it from both, yes","msgtype":"m.text"},"ts":1611772383000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(i don't actually care about yield either way)","msgtype":"m.text"},"ts":1611772422000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"wsdferdksl: what's the confusion about `this`?","msgtype":"m.text"},"ts":1611772457000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"littledan: jinx, you owe me a coke","msgtype":"m.text"},"ts":1611772470000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1611772483000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I guess Waldemar was doing a kind of reductio ad absurdum and wasn't actually arguing to ban `this`","msgtype":"m.text"},"ts":1611772607000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"so, I don't think I'll follow up with it in the issues","msgtype":"m.text"},"ts":1611772617000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"maybe we disable transcription for this topic?","msgtype":"m.text"},"ts":1611772649000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: I guess it would be best to manually transcribe?","msgtype":"m.text"},"ts":1611772689000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"I also don't understand what the `this` confusion could even possibly be. Where would you get the `this` binding other than from the outer context?","msgtype":"m.text"},"ts":1611772703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ryzokuken: I think so, yes","msgtype":"m.text"},"ts":1611772774000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"huh.. is that the right understanding ljharb? i was thinking that the brand check would be from the class, and you wouldn't need to check each one?","msgtype":"m.text"},"ts":1611773253000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: it depends how rigorous you need to be; technically you can have one private field installed on a number of objects, and other private fields on other objects","msgtype":"m.text"},"ts":1611773300000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rickbutton: I'm curious why your intuition says that `return` in sync-do should be block-local, but `await` and `yield` escape the block.","msgtype":"m.text"},"ts":1611773312000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ystartsev: but it's pretty obscure. in the common case, the checks are basically the same - whether \"has one field\", \"has all fields\", or hax's \"is class C\"","msgtype":"m.text"},"ts":1611773328000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"TabAtkins: I don't think await and yield should escape the block, if return doesn't either","msgtype":"m.text"},"ts":1611773348000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"cool, thanks for clarifying","msgtype":"m.text"},"ts":1611773357000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: so for the common case, it's just about which is clearer to understand. my argument is that both are needed for that, and mine is the lower-level one that the higher-level one can be built with; hax's can add the higher-level one on top.","msgtype":"m.text"},"ts":1611773374000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Ah, k. So that makes sync-do much less useful in async contexts. (yield is definitely of marginal utility either way)","msgtype":"m.text"},"ts":1611773389000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmmmm I can feel my intuition reconfiguring, I'll have to write an issue.","msgtype":"m.text"},"ts":1611773425000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, you would instead use an async do in an async context","msgtype":"m.text"},"ts":1611773428000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"yeah plz do, ill comment my thoughts too. im not an objector either way, do/async do will have great utility either way","msgtype":"m.text"},"ts":1611773470000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"Ehhh that's just more keywords scattered about. Would mean that if your do-expr needs to await something, you have to prefix it with `await async`","msgtype":"m.text"},"ts":1611773475000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"further down the rabbit hole, do inside async is implicitly an async do","msgtype":"m.text"},"ts":1611773497000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"feels gross","msgtype":"m.text"},"ts":1611773502000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"actually nvm","msgtype":"m.text"},"ts":1611773533000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I'm kinda confused by examples. None of them field initializers, so instances will either have all fields or none, so I don't understand this point about checking all of the fields. You should only ever check one.","msgtype":"m.text"},"ts":1611773537000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"rickbutton: no that distinction was addressed","msgtype":"m.text"},"ts":1611773540000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"wsdferdksl: do you want to ask that clarifying question now or is it ok to wait until he finishs?","msgtype":"m.text"},"ts":1611773588000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"yes, sorry missing words from that sentence, i mean to suggest that as an alternative to requiring an async do inside async ctx in order to await inside do, not that async/sync do inside async ctx are the same","msgtype":"m.text"},"ts":1611773615000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"but either way bad idea ignore it","msgtype":"m.text"},"ts":1611773623000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"it sounds like, if the class uses class.hasInstance, we expect the implementation to tag the instances somehow so that the check can occur later.  and the reason for the \"if\" is that this tagging may have a memory overhead.","msgtype":"m.text"},"ts":1611773979000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"ystartsev: 3 replies,. waldemar's is first","msgtype":"m.text"},"ts":1611774276000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"whoops, it jumped ahead","msgtype":"m.text"},"ts":1611774327000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ooh, very good question","msgtype":"m.text"},"ts":1611774509000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"to be concrete, it sounds like Hax is proposing that this get added in the same way as methods (at the beginning of the fields). Is that accurate?","msgtype":"m.text"},"ts":1611774762000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"it's not clear if it would install a new field and check for that, or if it would check for \"all expected private fields\"","msgtype":"m.text"},"ts":1611774800000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"OK, it sounds like the idea is to leave this as an open question for later","msgtype":"m.text"},"ts":1611774896000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ystartsev: these are stage 2 concerns, can we maybe defer them?","msgtype":"m.text"},"ts":1611775076000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"just now joining. How does `hasInstance` work with subclasses?","msgtype":"m.text"},"ts":1611775132000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"jridgewell: it'd return true as long as the subclass called super, i assume","msgtype":"m.text"},"ts":1611775147000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"just like `#x in o` would","msgtype":"m.text"},"ts":1611775154000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Ok","msgtype":"m.text"},"ts":1611775159000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"I support Stage 3","msgtype":"m.text"},"ts":1611775328000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I am deeply appreciative of the unique perspective that Bradley brings to committee :-)","msgtype":"m.text"},"ts":1611775953000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"me too!","msgtype":"m.text"},"ts":1611775975000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"Agree","msgtype":"m.text"},"ts":1611775996000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"also something i was thinking about is how much i respect how a handful of y'all are super comfortable saying \"i don't know\" (Bradley included) when relevant. the committee does better work because of it.","msgtype":"m.text"},"ts":1611776051000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"ystartsev: request for facilitator to keep discussion on GC short","msgtype":"m.text"},"ts":1611776414000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it's not that material imo","msgtype":"m.text"},"ts":1611776418000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"haxjs: given `class C extends class{constructor(v){return v}} { constructor(){super(...arguments)} #a; #x = (()=>{throw new Error()})(); #b; }`, evaluating `new C({})` will add private field #a but *not* #b","msgtype":"m.text"},"ts":1611776438000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1611776441000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"@gibson042 , I understand that. The issue is whether such edge case is strong enough to support another individual syntax feature for that.","msgtype":"m.text"},"ts":1611776530000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"what do you mean by \"another\" individual syntax?","msgtype":"m.text"},"ts":1611776564000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"maybe we can ask for acknowledgement?","msgtype":"m.text"},"ts":1611776570000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"forgot i had to connect, sorry","msgtype":"m.text"},"ts":1611776648000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"littledan: to my knowledge per my reading, a finalizer never *must* fire, but it appeared it cannot fire if its target is stored in a private field?","msgtype":"m.text"},"ts":1611776687000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"goes back rereading weakrefs","msgtype":"m.emote"},"ts":1611776708000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"@gibson042 I mean use `#x in o` to test these edge cases.","msgtype":"m.text"},"ts":1611776767000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"yes, the point of this proposal is to make it more ergonomic to detect the presence vs. absence of a private field","msgtype":"m.text"},"ts":1611776825000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"it adds no new capability, just syntax sugar","msgtype":"m.text"},"ts":1611776868000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"what is going on","msgtype":"m.text"},"ts":1611776898000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"we want to make sure we don't go ahead without a soun check","msgtype":"m.text"},"ts":1611776925000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"we don't want technical difficulties or language barriers to cause someone's voice to go unheard.","msgtype":"m.text"},"ts":1611776954000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ah okay, sg","msgtype":"m.text"},"ts":1611776962000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ystartsev: Thank you for herding cats this morning!","msgtype":"m.text"},"ts":1611777087000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"that was one of the harder ones!","msgtype":"m.text"},"ts":1611777101000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"well-done ystartsev !","msgtype":"m.text"},"ts":1611777113000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"fantastic job","msgtype":"m.text"},"ts":1611777118000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I agree","msgtype":"m.text"},"ts":1611777124000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"ystartsev: +1, thank you very much for chairing a contentious topic so calmly","msgtype":"m.text"},"ts":1611777208000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"+2","msgtype":"m.text"},"ts":1611777270000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"can the google folk make sure Frank Tang is around to present next","msgtype":"m.text"},"ts":1611777464000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"i will ping him","msgtype":"m.text"},"ts":1611777496000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"first up after lunch?","msgtype":"m.text"},"ts":1611777500000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it's ok - he is here on the call","msgtype":"m.text"},"ts":1611777531000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"if anyone is in touch with the person who was on the call as \"Zelda Jay\", can you ask them to add their preferred abbreviation to https://github.com/tc39/notes/blob/master/delegates.txt ?","msgtype":"m.text"},"ts":1611777687000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(or tell me which one it is, if they're already on it)","msgtype":"m.text"},"ts":1611777729000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i believe it's LZU","msgtype":"m.text"},"ts":1611778310000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"haxjs ^ can you confirm?","msgtype":"m.text"},"ts":1611778331000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"confirm what?","msgtype":"m.text"},"ts":1611778362000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"haxjs: that zeldajay is limin zhu","msgtype":"m.text"},"ts":1611778385000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Ok I will check that","msgtype":"m.text"},"ts":1611778438000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1611778444000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(if not, then \"which abbreviation in delegates.txt is zeldajay\")","msgtype":"m.text"},"ts":1611778462000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"It should be LZJ","msgtype":"m.text"},"ts":1611778488000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"aha ty","msgtype":"m.text"},"ts":1611778504000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"zeldjay is  Zhi Jie Li (LZJ) I believe","msgtype":"m.text"},"ts":1611778509000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"https://github.com/tc39/notes/blob/master/delegates.txt#L372, perfect","msgtype":"m.text"},"ts":1611778518000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Bakkot: ^","msgtype":"m.text"},"ts":1611778519000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i remembered an L and a Z but wasn't sure which :-)","msgtype":"m.text"},"ts":1611778530000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1611778532000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"he is not online now, i will update if i make it wrong.","msgtype":"m.text"},"ts":1611778532000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"perfect","msgtype":"m.text"},"ts":1611778536000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I made a survey about do-expressions. I'd highly appreciate if delegates could fill it out; it should only take a second: https://docs.google.com/forms/d/e/1FAIpQLScyNcGNfjoJXMTmfBkLRMREKCP2TihiFGqc26HhjL4710qdiA/viewform?usp=sf_link","msgtype":"m.text"},"ts":1611779030000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"akirose / other chairs: if we have a spare minute or two today, I'd like to speak on the VC to ask people to fill it out","msgtype":"m.text"},"ts":1611779072000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"robpalme: heads up ☝🏻 would you like me to explicitly put it on the schedule?","msgtype":"m.text"},"ts":1611779247000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"plz","msgtype":"m.text"},"ts":1611779337000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"Bakkot: can i share it with my team?","msgtype":"m.text"},"ts":1611779349000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev sure!","msgtype":"m.text"},"ts":1611779374000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1611779384000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ask them to put \"(mozilla)\" in their \"who are you\", maybe, so I know who they are?","msgtype":"m.text"},"ts":1611779405000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"*** we restart at 12:50 PT ***  i.e. 10 mins earlier than usual","msgtype":"m.text"},"ts":1611779450000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"Bakkot: will do -- if any get missed and you aren't sure you can run the names by me and i will confirm if they are from my team","msgtype":"m.text"},"ts":1611779470000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"√","msgtype":"m.text"},"ts":1611779474000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"*** we are starting in 1 minute ***","msgtype":"m.text"},"ts":1611780547000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"bakkot - are you good with notes?","msgtype":"m.text"},"ts":1611780688000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"robpalme yup","msgtype":"m.text"},"ts":1611780737000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"thank you (i forgot to ask)","msgtype":"m.text"},"ts":1611780749000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"I'm prepared to give eraDisplay for Stage 1 today if there's time","msgtype":"m.text"},"ts":1611781202000,"senderName":"sffc","senderId":"sffc@irc"},
{"content":{"body":"it's currently scheduled for tomorrow","msgtype":"m.text"},"ts":1611781211000,"senderName":"sffc","senderId":"sffc@irc"},
{"content":{"body":"thank you, sffc, I think we will take you up on that","msgtype":"m.text"},"ts":1611781312000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"since all these functions are going to have different names, should we have a `Symbol.brandChecker` that is a getter for the brand checking function for that particular built-in?","msgtype":"m.text"},"ts":1611782736000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"not sure if seroius","msgtype":"m.text"},"ts":1611782748000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but","msgtype":"m.text"},"ts":1611782749000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1611782749000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"michaelficarra: on the constructor or the instance?","msgtype":"m.text"},"ts":1611782752000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the contructor","msgtype":"m.text"},"ts":1611782759000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"either way, if we had a symbol, it wouldn't be robust unless that property was nonconfigurable/nonwritable","msgtype":"m.text"},"ts":1611782774000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Array.isArray is nonconfigurable?","msgtype":"m.text"},"ts":1611782800000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"oh i see what you mean","msgtype":"m.text"},"ts":1611782812000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"suggestion: put a [[Brand]] Symbol on Map, make Object.hasBrand(myMap, Map)","msgtype":"m.text"},"ts":1611782818000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"these things are robust only when you already have a pointer to them","msgtype":"m.text"},"ts":1611782820000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"so not Map.isMap(), but just Map[Symbol.brandChecker]?","msgtype":"m.text"},"ts":1611782826000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rickbutton: that also works","msgtype":"m.text"},"ts":1611782835000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"rickbutton: right, a single global method that looks up a symbol would be one approach","msgtype":"m.text"},"ts":1611782839000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: or both","msgtype":"m.text"},"ts":1611782848000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1611782852000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm fine with that, especially if the thing behind the symbol is a cacheable function","msgtype":"m.text"},"ts":1611782857000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah, it can be the same value","msgtype":"m.text"},"ts":1611782869000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"littledan: per my comment; I'm curious if reliable check exists how/why it would differ from a public API for class.hasInstance","msgtype":"m.text"},"ts":1611783052000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: because regular classes wouldn't need to have anything by default more than `instanceof`","msgtype":"m.text"},"ts":1611783087000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: however if there's a symbol protocol, a user class could choose to make it more robust than that","msgtype":"m.text"},"ts":1611783104000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: if I install a Symbol.hasInstance on a 3rd party it wouldn't actually check that class has the internal slots","msgtype":"m.text"},"ts":1611783187000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"littledan ljharb can we write down the context that came to light regarding the thinking around brand checks? I can bug you next week.","msgtype":"m.text"},"ts":1611783189000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"bradleymeck: right - but if that class author did so then it could check that","msgtype":"m.text"},"ts":1611783202000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"also, if anyone is curious, at() is not currently shipping. i believe we only had it behind a flag and that has not changed: https://bugzilla.mozilla.org/show_bug.cgi?id=1681371","msgtype":"m.text"},"ts":1611783213000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"we almost turned it on","msgtype":"m.text"},"ts":1611783216000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"but the web compat issue came up just before we did","msgtype":"m.text"},"ts":1611783224000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ljharb: if it makes it non-configurable/writable yes, but this seems extremely uncommoon","msgtype":"m.text"},"ts":1611783225000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ystartsev: i don't know if anything \"came to light\", i think it's just that my request for module blocks made dan realize this was a problem worth solving holistically","msgtype":"m.text"},"ts":1611783232000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"whereas i've always thought this, but thought it was a nonstarter given previous committee reaction to it","msgtype":"m.text"},"ts":1611783249000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: i mean around the reasoning for the invariant","msgtype":"m.text"},"ts":1611783250000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"sorry, if that wasn't clear","msgtype":"m.text"},"ts":1611783258000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"because iiuc the context might be worth writing down?","msgtype":"m.text"},"ts":1611783272000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"oh. i'm not sure there's any new reasoning? it's basically \"make sure the thing i'm given is the thing i'm expecting\"","msgtype":"m.text"},"ts":1611783285000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"is, not \"has the same interface as\"","msgtype":"m.text"},"ts":1611783289000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: tbh the easiest fix for them is to add `'$' +` to the assignment/lookup of the key","msgtype":"m.text"},"ts":1611783393000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"which library was that?","msgtype":"m.text"},"ts":1611783425000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I thought the SugarJS usage was compatible though","msgtype":"m.text"},"ts":1611783431000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"these compatibility issues often have to do with how the methods are installed","msgtype":"m.text"},"ts":1611783438000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"like, if they are installed unconditionally, it's fine","msgtype":"m.text"},"ts":1611783444000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"exactly, which Is why I think it was okay","msgtype":"m.text"},"ts":1611783468000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I think they are using it as a map","msgtype":"m.text"},"ts":1611783496000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"Eg, random setting/lookup of keys","msgtype":"m.text"},"ts":1611783509000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"And `at` is a valid key for them","msgtype":"m.text"},"ts":1611783526000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"yeah 'at' is key from a query string of theirs","msgtype":"m.text"},"ts":1611783572000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"haxjs: Can we make sure that the version numbers are written in the notes so it can be followed up on later?","msgtype":"m.text"},"ts":1611783581000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"sugarjs first version to 1.3.9","msgtype":"m.text"},"ts":1611783611000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"corejs 0.2.0 to the version they released 2 month ago","msgtype":"m.text"},"ts":1611783638000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"wait, core-js 3 had string.prototype.at?","msgtype":"m.text"},"ts":1611783664000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1611783669000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"i thought core-js 3 stopped shipping pre-stage-3 proposals by default, hm","msgtype":"m.text"},"ts":1611783672000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"they always have.","msgtype":"m.text"},"ts":1611783675000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"no, if u import 'core-js' u will have everything.","msgtype":"m.text"},"ts":1611783688000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"include pre-stage-3","msgtype":"m.text"},"ts":1611783698000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"ouch, ok","msgtype":"m.text"},"ts":1611783700000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: i'm just waiting for them to respond; yes, i imagine there're a variety of ways to do a quick fix","msgtype":"m.text"},"ts":1611783716000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"core-js has almost disrupted as much as mootools by now :-(","msgtype":"m.text"},"ts":1611783722000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the good news is babel-runtime will not take these polyfills.","msgtype":"m.text"},"ts":1611783767000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"but still very dangerous","msgtype":"m.text"},"ts":1611783786000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"especially string case is very subtle.","msgtype":"m.text"},"ts":1611783797000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"survey: https://docs.google.com/forms/d/e/1FAIpQLScyNcGNfjoJXMTmfBkLRMREKCP2TihiFGqc26HhjL4710qdiA/viewform?usp=sf_link","msgtype":"m.text"},"ts":1611784371000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"https://docs.google.com/forms/d/e/1FAIpQLScyNcGNfjoJXMTmfBkLRMREKCP2TihiFGqc26HhjL4710qdiA/viewform?usp=sf_link","msgtype":"m.text"},"ts":1611784405000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"There are some questions all options can't match my opinion precisely :)","msgtype":"m.text"},"ts":1611784529000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"haxjs feel free to use the \"other concerns\" box to explain in more depth!","msgtype":"m.text"},"ts":1611784940000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Yes, already submit.","msgtype":"m.text"},"ts":1611785052000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"\"at least as useful as an existing feature\" seems like a high/arbitrary bar IMO","msgtype":"m.text"},"ts":1611785478000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"so we're all clear, and I _think_ this is a theme of the comments but also i seem to be struggling to follow complex thoughts this afternoon, nothing we do will eliminate the fact that humans are making these decisions and humans are fallible","msgtype":"m.text"},"ts":1611785968000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"server-side apps have resource limitations as well","msgtype":"m.text"},"ts":1611786003000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"we're not trying to pretend that we can magically objective (yes i'm using that as a verb) our decisions, right?","msgtype":"m.text"},"ts":1611786009000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"but, yeah, I agree, we should consider all of these things","msgtype":"m.text"},"ts":1611786013000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Agenda for tomorrow afternoon is rapidly shrinking…","msgtype":"m.text"},"ts":1611786253000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"re: .at() I was surprised that a single website was sufficient to force unshipping. Is bricklink especially important?","msgtype":"m.text"},"ts":1611786410000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"It's a LEGO marketplace. :)","msgtype":"m.text"},"ts":1611786472000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"so... yes?","msgtype":"m.text"},"ts":1611786480000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"I guess I'm kind of amazed that we ever manage to ship anything - not trying to be mean if that how it sounded","msgtype":"m.text"},"ts":1611786541000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"we take \"don't break the web\" very seriously","msgtype":"m.text"},"ts":1611786584000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"the sins of the past have certainly made adding methods to builtins difficult","msgtype":"m.text"},"ts":1611786587000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"space jam website 4 eva","msgtype":"m.text"},"ts":1611786591000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"someone needs a space jam link","msgtype":"m.text"},"ts":1611786599000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"ljharb: lol beat me to it","msgtype":"m.text"},"ts":1611786605000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"lolol","msgtype":"m.text"},"ts":1611786609000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"https://spacejam.com","msgtype":"m.text"},"ts":1611786611000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"in this case it's clearly a business that would be harmed - if it were, say, my personal website, that wouldn't have forced unshipping would it?","msgtype":"m.text"},"ts":1611786678000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"this is starting to sound all very familiar","msgtype":"m.text"},"ts":1611786708000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"brad4d: there's no hard rule, but it tends to depend on popularity and cultural relevance a bit","msgtype":"m.text"},"ts":1611786738000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"brad4d: iow, would web users switch browsers if that was what it took to make your website work?","msgtype":"m.text"},"ts":1611786757000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"brad4d: I think it's much more about popularity than \"does someone's livelihood depend on this?\"","msgtype":"m.text"},"ts":1611786770000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"if the answer is \"my mom would\" then i doubt it'd obstruct anything","msgtype":"m.text"},"ts":1611786772000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"data is collected by the browser vendors to see whether stuff seems to have broken","msgtype":"m.text"},"ts":1611786773000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but if the answer is \"tens of thousands of people would\" it might matter","msgtype":"m.text"},"ts":1611786781000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"that data is extremely important wrt stage 4 advancement","msgtype":"m.text"},"ts":1611786794000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I feel like something like a framework would work reallywewll here","msgtype":"m.text"},"ts":1611786874000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"for designing studies","msgtype":"m.text"},"ts":1611786879000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"re: bricklink, imo it would be harmful to use any other metric than traffic/browser usage, tc39 shouldn't take an opinion on the usefulness of a website to the greater web","msgtype":"m.text"},"ts":1611786933000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1611786950000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"well, and how broken the page was","msgtype":"m.text"},"ts":1611786953000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1611786961000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"\"can't spin your 3d objects\" is less serious than \"can't log in\", or whatever","msgtype":"m.text"},"ts":1611786963000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1611786968000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"also depends on actual impact to said site","msgtype":"m.text"},"ts":1611786978000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"rickbutton: well. i think it's reasonable when there's small usage, if the site is still particularly important for some other reason, that we protect it","msgtype":"m.text"},"ts":1611786981000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"historical significance ain't nuthin. (though the manner in which we introduce our own biases is a whole other conversation)","msgtype":"m.text"},"ts":1611786989000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"sure ljharb, would be real unfortunate if we shipped a proposal that broke tc39.es, even it if doesn't get much traffic :)","msgtype":"m.text"},"ts":1611787012000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"ha, yes","msgtype":"m.text"},"ts":1611787020000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"altho i'd hope evangelism would help us there","msgtype":"m.text"},"ts":1611787027000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"or maybe broke the website that hawaii used to send nuclear bomb alerts, for example","msgtype":"m.text"},"ts":1611787035000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"(wasn't a browser break that caused that, was a misclick)","msgtype":"m.text"},"ts":1611787061000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"brad4d: to be clear, that was not a TC39 decision to unship","msgtype":"m.text"},"ts":1611787136000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"brad4d: that is a product decision i made for v8 and chrome, and someone else made for safari","msgtype":"m.text"},"ts":1611787145000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that too","msgtype":"m.text"},"ts":1611787148000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"also related to .at(): even if unshipping hadn't occurred, wouldn't it have been too soon to ask for stage 4?","msgtype":"m.text"},"ts":1611787149000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"tc39's decision is really based on \"are browser vendors willing to ship this\"","msgtype":"m.text"},"ts":1611787165000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"brad4d: it would've had 3 shipping implementations, so no, seems fine?","msgtype":"m.text"},"ts":1611787168000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it would have landed in chrome and safari if not for the unship","msgtype":"m.text"},"ts":1611787169000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"https://github.com/tc39/how-we-work/blob/master/champion.md","msgtype":"m.text"},"ts":1611787181000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"no it would have been the perfect time to ask for Stage 4","msgtype":"m.text"},"ts":1611787184000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"\"significant in-the-field experience\"","msgtype":"m.text"},"ts":1611787190000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"the problem was detected in the nick of time","msgtype":"m.text"},"ts":1611787192000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"doesn't that mean it has to have been out there and being used by developers for some reasonable period of time?","msgtype":"m.text"},"ts":1611787209000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"shu: sorry i think i came across as overly negative there","msgtype":"m.text"},"ts":1611787211000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"brad4d: canary was shipping for whole release cycle, almost","msgtype":"m.text"},"ts":1611787215000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"brad4d: we don't have a quantified \"reasonable period of time\"","msgtype":"m.text"},"ts":1611787226000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ystartsev: oh i didn't take that tone at all","msgtype":"m.text"},"ts":1611787234000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i actually agree with what you were saying, i mostly wanted to add that -- hopefully there are tools and we are sort of trying to do that","msgtype":"m.text"},"ts":1611787235000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"with limited success so far, but hey","msgtype":"m.text"},"ts":1611787248000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: i think it's really great you're doing the research group and it is a strict improvement where applicable","msgtype":"m.text"},"ts":1611787274000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"brad4d: anyone using it would have to still work when it's absent","msgtype":"m.text"},"ts":1611787290000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ystartsev: in a way i was calling for more staffing investment in standards work","msgtype":"m.text"},"ts":1611787299000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"brad4d: we don't worry about websites that are already broken on multiple browsers","msgtype":"m.text"},"ts":1611787301000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: i totally support that","msgtype":"m.text"},"ts":1611787315000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"shu: I thought you'd need your monitoring data to show a signifcant usage existed of `.at()` in real websites before you could move to stage 4","msgtype":"m.text"},"ts":1611787376000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"brad4d: oh, certainly not","msgtype":"m.text"},"ts":1611787389000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"brad4d: popularity is not a requirement","msgtype":"m.text"},"ts":1611787399000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"hmmm, I thought lack of sufficient usage was one reason why the various \"field\" proposals haven't moved to stage 4","msgtype":"m.text"},"ts":1611787458000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"ystartsev: cf how product features are aggressively (overly so!) a/b tested with data that may get abused etc","msgtype":"m.text"},"ts":1611787467000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ystartsev: we operate almost on the other end of the spectrum, and as such much of our debate is about how we feel, and how we think others would feel, about these proposals","msgtype":"m.text"},"ts":1611787488000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yes, thats something that we need to be careful about -- that is where qualitative or mixed methods can help","msgtype":"m.text"},"ts":1611787499000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"we of course _cannot_ a/b test feature proposals, because the output is interoperability","msgtype":"m.text"},"ts":1611787511000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yes, agree","msgtype":"m.text"},"ts":1611787519000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"brad4d: not usage, just shipping","msgtype":"m.text"},"ts":1611787529000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"It also depends on the kind of question we want to answer (or if we know what the question really is)","msgtype":"m.text"},"ts":1611787538000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"This is something I've been thinking about in terms of our problem statements","msgtype":"m.text"},"ts":1611787550000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"brad4d: afaik the combined class fields proposal was waiting on editor reviews of the updated PR, as well as more unflagged browser implementations","msgtype":"m.text"},"ts":1611787610000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah JSC has been very behind on shipping those","msgtype":"m.text"},"ts":1611787649000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i thought igalia was helping out with implementation","msgtype":"m.text"},"ts":1611787670000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Bakkot: halp","msgtype":"m.text"},"ts":1611787762000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"w?","msgtype":"m.text"},"ts":1611787772000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i think the bot can be stopped?","msgtype":"m.text"},"ts":1611787778000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ah, was gonna capture this bit too","msgtype":"m.text"},"ts":1611787788000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"never mind","msgtype":"m.text"},"ts":1611787792000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"will do the notes msyelf","msgtype":"m.text"},"ts":1611787792000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"spoke too soon","msgtype":"m.text"},"ts":1611787795000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"cant imagine a situation where we want to ship a proposal that has -no- support","msgtype":"m.text"},"ts":1611787907000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"🤔","msgtype":"m.text"},"ts":1611788029000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"I don't really see why we'd need a process change to note committee members' comments in the conclusion section of the notes for Stage 3 advancement, since the notes format is not described in the process document","msgtype":"m.text"},"ts":1611788083000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1611788117000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"btw a feature of the notes bot is that it fixes some of the common substitutions the speech-to-text API makes: https://github.com/bakkot/transcribe-to-gdocs/blob/master/replacements.js#L5-L56","msgtype":"m.text"},"ts":1611788325000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"which grows as I notice more","msgtype":"m.text"},"ts":1611788333000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and when other people volunteer to take notes I can add them more readily and improve the experience for all future note takers","msgtype":"m.text"},"ts":1611788355000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(hint hint)","msgtype":"m.text"},"ts":1611788361000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hahaha I didn't notice tempura","msgtype":"m.text"},"ts":1611788386000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"copying over from my clarifications in tdz to here for more visibility","msgtype":"m.text"},"ts":1611788387000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"what i'm asking is, concretely:","msgtype":"m.text"},"ts":1611788393000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so nothing formal, but that if you have direct anecdotal evidence of developer sentiment","msgtype":"m.text"},"ts":1611788403000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"14:55:52 it would be good to either relay that in committee discussion for it to be recorded in the notes, or,","msgtype":"m.text"},"ts":1611788403000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"14:56:14 if you are yourself a non-browser developer, put that hat on and speak to your own sentiment for whether you would use that or not","msgtype":"m.text"},"ts":1611788403000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"14:56:20 we already do this, but it's often implicit","msgtype":"m.text"},"ts":1611788403000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"14:56:36 some of us are very explicit, like yehuda","msgtype":"m.text"},"ts":1611788403000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"14:56:42 who often says \"i would use this in ember today\"","msgtype":"m.text"},"ts":1611788404000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"14:56:53 but if it were reflected in the notes that makes my life a lot easier","msgtype":"m.text"},"ts":1611788404000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ok, thats clear, thanks","msgtype":"m.text"},"ts":1611788507000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: from chrome's pov there's no work from other browser vendors","msgtype":"m.text"},"ts":1611788693000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"\"developer\" here means non-web browser developer","msgtype":"m.text"},"ts":1611788699000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I think we can simply call for folks to make statements about how they feel about this as a web developer, and write these in the minutes in the conclusion","msgtype":"m.text"},"ts":1611788792000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"(or, as JS developers in general)","msgtype":"m.text"},"ts":1611788854000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"we also have the frameworks and tools calls as a data source (though recent attendance of framework calls has been poor). The notes are public.","msgtype":"m.text"},"ts":1611788862000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: +1 sgtm","msgtype":"m.text"},"ts":1611789413000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"littledan: yes, i was already planning to use the minutes of the frameworks calls, thanks for calling that out","msgtype":"m.text"},"ts":1611789431000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I see that _30m Revisiting RegExp.escape, Jordan Harband_ got moved to the end of the third day, which is now done?","msgtype":"m.text"},"ts":1611789592000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"But I don’t see it discussed in the notes","msgtype":"m.text"},"ts":1611789598000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"Should this on the agenda for day 4?","msgtype":"m.text"},"ts":1611789610000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"jridgewell: we didn't have time","msgtype":"m.text"},"ts":1611789610000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the draft schedule will surely be updated for day 4, not sure when it'll be","msgtype":"m.text"},"ts":1611789621000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"can I get an admin of the tc39 org to make me an admin of the do-expressions repo? https://github.com/tc39/proposal-do-expressions/","msgtype":"m.text"},"ts":1611789858000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"dave is fine with this but he's not an admin and so can't do it himself","msgtype":"m.text"},"ts":1611789867000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(not sure who admins are, so not sure who to ping)","msgtype":"m.text"},"ts":1611789878000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: chairs","msgtype":"m.text"},"ts":1611789908000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"haxjs: don't forget to transfer your class brand checks repo into tc39-transfer","msgtype":"m.text"},"ts":1611790222000,"senderName":"ljharb","senderId":"ljharb@irc"}
]