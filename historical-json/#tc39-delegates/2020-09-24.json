[
{"content":{"body":"gibson042: can you mute?","msgtype":"m.text"},"ts":1600909824000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i cannot understand hax, can everyone check their mic?","msgtype":"m.text"},"ts":1600909868000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh it's better now","msgtype":"m.text"},"ts":1600909873000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"wait, not yet","msgtype":"m.text"},"ts":1600909877000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"this has been delayed a meeting already for no new information learned, i am very unhappy about delaying another 2 months","msgtype":"m.text"},"ts":1600909959000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"this is not a good precedent","msgtype":"m.text"},"ts":1600909968000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: agreed :-(","msgtype":"m.text"},"ts":1600909981000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"shu: I agree","msgtype":"m.text"},"ts":1600909981000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"very unfortunate","msgtype":"m.text"},"ts":1600909983000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah this doesn't feel procedurally acceptable","msgtype":"m.text"},"ts":1600910008000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"And I couldn't figure out what hax's point was over the last ten minutes","msgtype":"m.text"},"ts":1600910021000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"if that's a common opinion, it'd be great to get the chairs to weigh in on it.","msgtype":"m.text"},"ts":1600910024000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"hax, haxjs: would you please mute? I think there is a little background noise where you are","msgtype":"m.text"},"ts":1600910131000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"oh i forgot","msgtype":"m.text"},"ts":1600910145000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1600910146000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"muted.","msgtype":"m.text"},"ts":1600910170000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"our process just isn't scaling that well, there's some work to be done","msgtype":"m.text"},"ts":1600910184000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"but I also don't think we should subvert it just because it's not working for us right now","msgtype":"m.text"},"ts":1600910206000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"i agree with that too, as inconvenient it is for my own proposal.","msgtype":"m.text"},"ts":1600910236000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"if you look at it optimistically, we are getting more examples of exactly the kinds of situations we'd like our process changes to address","msgtype":"m.text"},"ts":1600910358000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"\"S.p.item: never again\"","msgtype":"m.text"},"ts":1600910371000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"our current process was modeled around \"PTCs: never again\"","msgtype":"m.text"},"ts":1600910420000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"Sorry i thought I could finish my summarize in 5 mins, but obviously it's a wrong estimation just like the case i estimate how long i need to finish a feature when programming :(","msgtype":"m.text"},"ts":1600910666000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"can't engines just add these as new objects that appears as existing arraybuffers? like how they have many internal kinds of arrays or whatever","msgtype":"m.text"},"ts":1600911304000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"as in, secretly use a resizable buffer internally if needed?","msgtype":"m.text"},"ts":1600911455000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"like, a big IF around `useResizable`, old one or new one","msgtype":"m.text"},"ts":1600911481000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"sort of lol","msgtype":"m.text"},"ts":1600911513000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"basically don't touch the code inside one of those branches","msgtype":"m.text"},"ts":1600911521000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1600911527000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"but idk dan's point seems interesting","msgtype":"m.text"},"ts":1600911527000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"would be weird if there were divergent bugs between the two impls","msgtype":"m.text"},"ts":1600911546000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"i think people are overestimating how often js people use arraybuffers/typedarrays directly","msgtype":"m.text"},"ts":1600911562000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well web developers rarely use them, but crypto miners and other various bad actors can freely use them","msgtype":"m.text"},"ts":1600911592000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"and even when they do use them, they're almost always treated as an opaque type","msgtype":"m.text"},"ts":1600911594000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rickbutton: yeah i mean people saying more types is bad dev ux","msgtype":"m.text"},"ts":1600911609000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah yeah","msgtype":"m.text"},"ts":1600911639000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"the invariant about the length being fixed is a JS developer-facing one, not just an implementation one","msgtype":"m.text"},"ts":1600911655000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1600911663000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm saying i think serving the immediate security stuff is worth having a bad api in this case","msgtype":"m.text"},"ts":1600911681000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"because hardly anyone uses the api","msgtype":"m.text"},"ts":1600911685000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I see what you mean now devsnek, I agree","msgtype":"m.text"},"ts":1600911700000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"Waldemar's idea seems fine; the difference would be superficial","msgtype":"m.text"},"ts":1600911704000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I like wsdferdksl's idea","msgtype":"m.text"},"ts":1600911716000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"what did he say","msgtype":"m.text"},"ts":1600911722000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"seems like something to resolve between now and stage 3","msgtype":"m.text"},"ts":1600911725000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1600911732000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"have arraybuffers be frozen-len by default but have an overload allowing you to get an unfrozen one","msgtype":"m.text"},"ts":1600911745000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"rather than a whole new type","msgtype":"m.text"},"ts":1600911751000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"engines would treat them as different types, users wouldn't have to","msgtype":"m.text"},"ts":1600911758000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"isn't that what mark said","msgtype":"m.text"},"ts":1600911759000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and sort of what i said i guess","msgtype":"m.text"},"ts":1600911765000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that is what devsnek said","msgtype":"m.text"},"ts":1600911767000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1600911768000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"Bakkot: what do you think about the tooling argument shane gave for different types?","msgtype":"m.text"},"ts":1600913039000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: to my knowledge TS does not give you any help for bounds checks right now, it just assumes all accesses are in bounds (or, with a new flag, that they are all out of bounds unless checked immediately before access)","msgtype":"m.text"},"ts":1600913092000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1600913106000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"is yulia here today","msgtype":"m.text"},"ts":1600913109000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I may not have understood the point, but if it's just about bounds checks I don't know that it matters","msgtype":"m.text"},"ts":1600913110000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ystartsev ^","msgtype":"m.text"},"ts":1600913120000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"devsnek: she is around in the evening half","msgtype":"m.text"},"ts":1600913123000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I think she's only in the afternoon sessions?","msgtype":"m.text"},"ts":1600913126000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1600913126000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"jorendorff is standing in for the earlier session","msgtype":"m.text"},"ts":1600913128000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1600913136000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"waves","msgtype":"m.emote"},"ts":1600913142000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"👋🏻","msgtype":"m.text"},"ts":1600913148000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bterlson: queue?","msgtype":"m.text"},"ts":1600913166000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rickbutton: there's an evening half?","msgtype":"m.text"},"ts":1600913169000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"for many it's always the evening half","msgtype":"m.text"},"ts":1600913199000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1600913207000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"queue needs to move","msgtype":"m.text"},"ts":1600913264000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i still don't think this proposal is worth it","msgtype":"m.text"},"ts":1600913278000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"queue's moved, thanks","msgtype":"m.text"},"ts":1600913354000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Berlin was 2019, but it has been a long long year","msgtype":"m.text"},"ts":1600913675000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"also i never went to berlin","msgtype":"m.text"},"ts":1600913740000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but i may have remoted into that one","msgtype":"m.text"},"ts":1600913747000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"man, 2018, really?","msgtype":"m.text"},"ts":1600913778000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i thought we were in berlin last year","msgtype":"m.text"},"ts":1600913782000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"we were","msgtype":"m.text"},"ts":1600913786000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"see above","msgtype":"m.text"},"ts":1600913791000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hard to remember travel, or how time works","msgtype":"m.text"},"ts":1600913805000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Just to check, its not still March right? Because march was looong...","msgtype":"m.text"},"ts":1600913868000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"my computer says it's September but who knows whether that can be trusted","msgtype":"m.text"},"ts":1600913917000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it seems like it'd be nice to create the notes docs from a *gmail* account, so that non-org members' names are allowed to show up","msgtype":"m.text"},"ts":1600913991000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: yeah that'd be nice","msgtype":"m.text"},"ts":1600914039000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"But where","msgtype":"m.text"},"ts":1600914545000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"everything has to be available sync anyway","msgtype":"m.text"},"ts":1600914597000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Ahh i see, in the agenda the link is updated, but in the notes it’s still the old link","msgtype":"m.text"},"ts":1600914597000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"because of the script api","msgtype":"m.text"},"ts":1600914601000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't get this proposal","msgtype":"m.text"},"ts":1600914605000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if there's a GetBuiltinSync api for scripts","msgtype":"m.text"},"ts":1600914918000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and it must work for everything (i assume)","msgtype":"m.text"},"ts":1600914924000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"how does the \"load async\" argument fit into this","msgtype":"m.text"},"ts":1600914934000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"polyfilling has this drawback in browsers today!","msgtype":"m.text"},"ts":1600915183000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"bradleymeck: My queue item is about this shimming thing","msgtype":"m.text"},"ts":1600915187000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"nobody really notices, it seems","msgtype":"m.text"},"ts":1600915189000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"it forces things to be loaded","msgtype":"m.text"},"ts":1600915199000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"I really think that, if we do this right, we can reduce this cost of polyfilling","msgtype":"m.text"},"ts":1600915204000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"i would love reduced polyfilling cost","msgtype":"m.text"},"ts":1600915226000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"async APIs on the global could be polyfilled asynchronously","msgtype":"m.text"},"ts":1600915245000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(and proposed an API in https://github.com/tc39/proposal-built-in-modules/issues/62 + 63","msgtype":"m.text"},"ts":1600915250000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"but i'm unclear on how we can do that if we have to load the source text of polyfill itself","msgtype":"m.text"},"ts":1600915257000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"...i think if this were the biggest problem with the proposal, yes, it's fixable","msgtype":"m.text"},"ts":1600915259000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"import map-based polyfilling also had this benefit, but we could do it with an imperative API as well","msgtype":"m.text"},"ts":1600915274000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I think this is something that we could do much more effectively through built-in modules than through globals with promise-based APIs","msgtype":"m.text"},"ts":1600915302000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: why?","msgtype":"m.text"},"ts":1600915323000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"banning using static import syntax also would work to make the Script/Module support the same matrix","msgtype":"m.text"},"ts":1600915325000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1600915346000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"since users don't have to explicitly await the promise, just import it","msgtype":"m.text"},"ts":1600915349000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Dealing with global invalidation is a serious pain in my modules","msgtype":"m.text"},"ts":1600915350000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"littledan why does that matter, with regards to how readily they can be polyfilled?","msgtype":"m.text"},"ts":1600915384000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: Because it reduces the overhead incurred by newer browsers that don't need the polyfill","msgtype":"m.text"},"ts":1600915480000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"the fetch for the polyfill code could be conditional","msgtype":"m.text"},"ts":1600915490000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ljharb doesn't seem to be convinced that this would be practical to deploy, in the issues, however","msgtype":"m.text"},"ts":1600915508000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: it can be conditional with an async API, too","msgtype":"m.text"},"ts":1600915511000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: Yes. The benefit over an async API is that you just import it, you don't have to await a promise. So it's practical to apply more broadly","msgtype":"m.text"},"ts":1600915532000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I think it'd be pretty bad ergonomics if you needed to await a Promise to use Temporal, but shipping a Temporal polyfill is still heavy","msgtype":"m.text"},"ts":1600915550000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"it's possible for the polyfill itself to sync-load the detection code, and async-load the replacement implementation, but the original module is still synchronously needed to *decide* if polyfilling is needed","msgtype":"m.text"},"ts":1600915570000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"with TLA I don't think it makes much difference in modules, and it makes no difference at all in scripts","msgtype":"m.text"},"ts":1600915573000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ljharb disagree","msgtype":"m.text"},"ts":1600915626000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"your sync shim replaces the async API with a thing with waits for the built-in API, checks if it's good, and then either returns immediately or fetches the polyfill and applies it","msgtype":"m.text"},"ts":1600915663000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"users see no difference","msgtype":"m.text"},"ts":1600915672000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that is, \"a thing which waits for the built-in API [when invoked]\"","msgtype":"m.text"},"ts":1600915700000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"what if browsers had `importScripts` in the main thread","msgtype":"m.text"},"ts":1600915707000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"... I can reword that if you want, that kind of got away from me","msgtype":"m.text"},"ts":1600915709000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: ah true, that's reasonable if the thing is only available async, and i can intercept all requests for it","msgtype":"m.text"},"ts":1600915722000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Bakkot: nah i think i got you, and you're right","msgtype":"m.text"},"ts":1600915728000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I would not want all Temporal users to have to write `let myTemporal = await Temporal.get()` at the top of their program","msgtype":"m.text"},"ts":1600915763000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"that would be very unfortunate","msgtype":"m.text"},"ts":1600915794000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"littledan: it is not obvious to me that that would be so much worse than `import { Temporal } from 'js:temporal'` that it warrants this much machinery","msgtype":"m.text"},"ts":1600915827000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"well, in practice, we're not going to give Temporal this Promise-based API, whereas as a built-in module, we would do that","msgtype":"m.text"},"ts":1600915878000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"what qualifies a builtin as important enough to be its own global","msgtype":"m.text"},"ts":1600915911000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there are entire categories of APIs and libraries that other programming languages provide through imports of various kinds","msgtype":"m.text"},"ts":1600915968000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"most other languages do not have a concept of the global","msgtype":"m.text"},"ts":1600916012000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"all their stuff is in imports, whereas all our stuff is on the global","msgtype":"m.text"},"ts":1600916024000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I don't think it makes much sense to make an optional view of things as a module","msgtype":"m.text"},"ts":1600916030000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"our role here is to define a single javascript language","msgtype":"m.text"},"ts":1600916047000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"i think appeals to other languages fall short because there're decades of history here","msgtype":"m.text"},"ts":1600916092000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"littledan: yes, and if \"1JS\" is the prioritized property to maintain, then we shouldn't have built-in modules","msgtype":"m.text"},"ts":1600916118000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I don't understand the purpose of raising this alternative. Hosts already have the machinery they need to define their own built-in modules.","msgtype":"m.text"},"ts":1600916160000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: moddable wants to use it, and they're already not caring about web compatible","msgtype":"m.text"},"ts":1600916181000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"moddable's whole \"we want it to be standard and we don't care about the wider ecosystem\" thing irks me","msgtype":"m.text"},"ts":1600916212000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"littledan: your suggestion is an api that's zalgo?","msgtype":"m.text"},"ts":1600916604000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"just to get a feel for the room, this doesn't appear to have enough justification for stage 2, right?","msgtype":"m.text"},"ts":1600916717000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"that's how it seems to me","msgtype":"m.text"},"ts":1600916749000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"feeling pretty icy by my thermometer","msgtype":"m.text"},"ts":1600916751000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: Yes :)","msgtype":"m.text"},"ts":1600916836000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: thanks, ṷ̵̫̺̲͌͊͐̀͜͞͞ñ͍̮̭̘̹͔̪̋̓̾͗̑̔̕͟d̫͇͓͕̋̊̀͒͆̽̈́̚̕͢e̲͍̲̼͉̐͛̋͂̒͢r̛͕̠̬̙͇̤̜̼̿̾̌͑͆̋̉̀s̴̛̠͉̣͓͈̯̞͎͉̋̈́͌̏̉̐̕͢͝t͇̝̱̼̩͇͓̥͈͇̂̈́͆̀̚͠ö̡͚̹͔̭̬̃̿̾̃́͛͐̌͡ỏ͓̤̞̟̯̯̉̋̓̕͢ͅḑ̲͇̣̗̘̟̘͓͊̏́̉̂͌̈͐","msgtype":"m.text"},"ts":1600916915000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek: remind me why your proposal does `dbg!(x)` instead of `debugger(x)`?","msgtype":"m.text"},"ts":1600917128000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: existing rust feature","msgtype":"m.text"},"ts":1600917139000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm not proposing any specific function or syntax","msgtype":"m.text"},"ts":1600917145000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1600917152000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it should be `debugger (x)` :)","msgtype":"m.text"},"ts":1600917181000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that's one of the options on the last slide iirc","msgtype":"m.text"},"ts":1600917191000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"approximately yes","msgtype":"m.text"},"ts":1600917196000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"anyway I like it","msgtype":"m.text"},"ts":1600917199000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"🎉","msgtype":"m.text"},"ts":1600917211000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I think using the rust syntax is going to trip some people up","msgtype":"m.text"},"ts":1600917229000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"e.g. waldemar","msgtype":"m.text"},"ts":1600917232000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"since it's so weird","msgtype":"m.text"},"ts":1600917239000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"from a JS perspective, and has ASI implications and so on","msgtype":"m.text"},"ts":1600917249000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i can swap it out","msgtype":"m.text"},"ts":1600917252000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah like, I'm plenty familiar with Rust but ! in a JS function call is so jarring that it's hard to not get hung up on","msgtype":"m.text"},"ts":1600917317000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"oh god i used screenshots","msgtype":"m.text"},"ts":1600917376000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"noooooooo","msgtype":"m.text"},"ts":1600917378000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"D used binary ! for compile time features, I loved it","msgtype":"m.text"},"ts":1600917457000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"big fan of ! for indicating mutation ala ruby/scheme","msgtype":"m.text"},"ts":1600917527000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"lul","msgtype":"m.text"},"ts":1600917550000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i do miss ? for predicates, that is nice readability","msgtype":"m.text"},"ts":1600917607000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"especially because it was pronounced \"huh\", like \"integer huh\"","msgtype":"m.text"},"ts":1600917644000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600917707000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I don't think I've ever heard of that. In my head I've always heard it like you were asking a question, like *integer?*","msgtype":"m.text"},"ts":1600917709000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"IIRC linear logic ? is pronounced \"why not\"","msgtype":"m.text"},"ts":1600917734000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rickbutton: maybe it was just the PLT Scheme folks, since i ran with those folks as an undergrad","msgtype":"m.text"},"ts":1600917790000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"to be fair I don't run with any scheme folks so I'm not the authority","msgtype":"m.text"},"ts":1600917842000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"from ruby i've also used the rising tone thing","msgtype":"m.text"},"ts":1600920035000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it means you should yell when you say `mutate!`","msgtype":"m.text"},"ts":1600920090000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"this is a good proposal","msgtype":"m.text"},"ts":1600920135000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"linked lists of errors ftw","msgtype":"m.text"},"ts":1600920143000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"FYI, I am in the rotation for taking notes during this shift, but I seem to have lost my sound over the break. I will try to get it working during the presentation","msgtype":"m.text"},"ts":1600920270000,"senderName":"ptomato","senderId":"ptomato@irc"},
{"content":{"body":"ljharb: aggregate errors are not inherently causally related","msgtype":"m.text"},"ts":1600920466000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in fact the opposite is generally implied, due to where aggregate errors come from","msgtype":"m.text"},"ts":1600920480000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and exceptions need not be an object either","msgtype":"m.text"},"ts":1600920487000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"extend my queue question to include \"or a userland subclass\"","msgtype":"m.text"},"ts":1600920512000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"you should never throw something that is not an instance of an error class provided by the engine","msgtype":"m.text"},"ts":1600920522000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1600920533000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that's an opinion you can have but not one the language may enshrine, i can throw null if i wanna","msgtype":"m.text"},"ts":1600920552000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I am +1ing this proposal","msgtype":"m.text"},"ts":1600920569000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"also +1","msgtype":"m.text"},"ts":1600920576000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it is fine to build convenience methods which are only convenient if you obey that discipline even if the language does not enforce that discipline","msgtype":"m.text"},"ts":1600920582000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"can the queue be advanced","msgtype":"m.text"},"ts":1600920584000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bterlson: ^","msgtype":"m.text"},"ts":1600920592000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the queue is good","msgtype":"m.text"},"ts":1600920593000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"jordan is talking","msgtype":"m.text"},"ts":1600920602000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i can't put in a reply","msgtype":"m.text"},"ts":1600920604000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"got it","msgtype":"m.text"},"ts":1600920610000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1600920613000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: fair","msgtype":"m.text"},"ts":1600920624000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I have sound again, so I'll take notes now. so sorry about that","msgtype":"m.text"},"ts":1600920677000,"senderName":"ptomato","senderId":"ptomato@irc"},
{"content":{"body":"I wonder if we have Netflix folk in the meeting.  They have a library that does rich errors (way beyond this proposal) called \"nerror\"","msgtype":"m.text"},"ts":1600920714000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"thank you @ptomato!","msgtype":"m.text"},"ts":1600920723000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"this issue has an example of how it looks in Java: https://github.com/wallabyjs/public/issues/2069","msgtype":"m.text"},"ts":1600920726000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(note that in an IDE you could click on the line number in any of the lines to go to that line, including in the \"caused by\" lines)","msgtype":"m.text"},"ts":1600920768000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"someone unmuted?","msgtype":"m.text"},"ts":1600920807000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"should we mute jack-works?","msgtype":"m.text"},"ts":1600920835000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1600920904000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"Can anyone contact Kris Kowal?","msgtype":"m.text"},"ts":1600921049000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"(we had to skip him)","msgtype":"m.text"},"ts":1600921059000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"Uhuuuuuuuuuuuuul <3","msgtype":"m.text"},"ts":1600921241000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"wut","msgtype":"m.text"},"ts":1600921280000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"very excited to add error.cause support to the actual product i work on","msgtype":"m.text"},"ts":1600921301000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"very excited to add error.cause support to util.inspect","msgtype":"m.text"},"ts":1600921327000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh wow didn't see that Rust syntax before","msgtype":"m.text"},"ts":1600921365000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"We do the same thing as amp on the error mutation.","msgtype":"m.text"},"ts":1600921418000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"yep I just had to fix a couple of cases where we didn't do that and instead did a weird wrapping like yesterday","msgtype":"m.text"},"ts":1600921465000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I'm excited to see where this proposal goes","msgtype":"m.text"},"ts":1600921522000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"double ended iterators are +1","msgtype":"m.text"},"ts":1600921600000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this should definitely be stage 1, in that it definitely outlines a problem we should solve","msgtype":"m.text"},"ts":1600921626000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"agree","msgtype":"m.text"},"ts":1600921636000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I like everything about this proposal except its name","msgtype":"m.text"},"ts":1600921644000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"I will need to think more about the the specific proposal to fix the problem presented here","msgtype":"m.text"},"ts":1600921644000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"infinite iterators should not be double-ended lol","msgtype":"m.text"},"ts":1600921645000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: stop shutting down my use cases 😭","msgtype":"m.text"},"ts":1600921675000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh, never mind it got weird","msgtype":"m.text"},"ts":1600921702000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"i was just about to say","msgtype":"m.text"},"ts":1600921714000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600921716000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"double-ended iterator should be its own protocol, surely","msgtype":"m.text"},"ts":1600921730000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1600921734000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Iterator.from better not give me a double-ended","msgtype":"m.text"},"ts":1600921738000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"or at least I shouldn't be expecting one","msgtype":"m.text"},"ts":1600921751000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"well i would say","msgtype":"m.text"},"ts":1600921760000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"double-ended iterator is basically https://github.com/tc39/proposal-reverseIterator (which oops, we never filled in past the initial presentation)","msgtype":"m.text"},"ts":1600921764000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"its like a subclass","msgtype":"m.text"},"ts":1600921766000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"a double ended iterator can be used anywhere expecting a normal iterator","msgtype":"m.text"},"ts":1600921777000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but not vice versa","msgtype":"m.text"},"ts":1600921783000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: yeah that's what I meant","msgtype":"m.text"},"ts":1600921792000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"ljharb: he did notice at least :P https://github.com/tc39/proposal-reverseIterator/issues/1#issuecomment-581320556","msgtype":"m.text"},"ts":1600921810000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"+1 shu","msgtype":"m.text"},"ts":1600921844000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling: lol yes","msgtype":"m.text"},"ts":1600921850000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"well i understand how they *could* but it isn't how they *should*","msgtype":"m.text"},"ts":1600921858000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"+1 to that","msgtype":"m.text"},"ts":1600921928000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"for the double-ended destructuring, which has precedence? [a, b, …, c, d] = [0, 1]","msgtype":"m.text"},"ts":1600922036000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I would assume the early ones","msgtype":"m.text"},"ts":1600922076000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i assume it would fill `a` and `b` and then hit the ellipsis and switch to taking from the back","msgtype":"m.text"},"ts":1600922081000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and at that point throw because it was empty","msgtype":"m.text"},"ts":1600922088000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that being said `d` filling before `c` is terrible and should be illegal","msgtype":"m.text"},"ts":1600922104000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"[a, b, c] = [0, 1] doesn't throw","msgtype":"m.text"},"ts":1600922104000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"not throw, just give undefined, right?","msgtype":"m.text"},"ts":1600922110000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"[a, b, … c, d] = [0, 1, 2]?","msgtype":"m.text"},"ts":1600922115000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yeah should be undefined, not throw","msgtype":"m.text"},"ts":1600922123000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"whatever it does","msgtype":"m.text"},"ts":1600922124000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"michaelficarra: a is 0, b is 1, d is 2, c is []","msgtype":"m.text"},"ts":1600922130000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"that case is fun","msgtype":"m.text"},"ts":1600922130000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"surprised that doesn't throw in a declaration","msgtype":"m.text"},"ts":1600922132000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"assignment is whatever","msgtype":"m.text"},"ts":1600922136000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"a = 0, d = 2, b and c are 0.5","msgtype":"m.text"},"ts":1600922164000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: oh wait no comma, hmm","msgtype":"m.text"},"ts":1600922165000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: typo","msgtype":"m.text"},"ts":1600922176000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: ok so if it's `...c` then what i said","msgtype":"m.text"},"ts":1600922189000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh this is a good point waldemar is making","msgtype":"m.text"},"ts":1600922203000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"michaelficarra: if it's `..., c` then i'd expect `[0, 1, [], undefined, 2]`","msgtype":"m.text"},"ts":1600922206000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"what if [a, b, ...c, d] = arr","msgtype":"m.text"},"ts":1600922228000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"[...a] = arr","msgtype":"m.text"},"ts":1600922248000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"rickbutton: `[0th, 1st, slice(2), 2nd]`","msgtype":"m.text"},"ts":1600922249000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rickbutton: that was ljharb's first answer","msgtype":"m.text"},"ts":1600922249000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"that you can write confusing patterns doesn't necessarily mean that \"what it does\" is actually hard to unravel, given the rules suggested above","msgtype":"m.text"},"ts":1600922286000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh i see","msgtype":"m.text"},"ts":1600922289000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"nice presentation, haxjs!","msgtype":"m.text"},"ts":1600922380000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yeah im a big fan of more expressive destructuring","msgtype":"m.text"},"ts":1600922407000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"Thank u everyone!","msgtype":"m.text"},"ts":1600922409000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"+10000 to gus proposal","msgtype":"m.text"},"ts":1600922519000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"yes, love this","msgtype":"m.text"},"ts":1600922552000,"senderName":"ptomato","senderId":"ptomato@irc"},
{"content":{"body":"I am a big fan of https://github.com/zestyping/q","msgtype":"m.text"},"ts":1600922559000,"senderName":"ptomato","senderId":"ptomato@irc"},
{"content":{"body":"+999","msgtype":"m.text"},"ts":1600922564000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"+Math.E","msgtype":"m.text"},"ts":1600922579000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"+Infinity","msgtype":"m.text"},"ts":1600922586000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"can't you just write `let debug = (x) -> { console.log(x); return x };` at the top of your file?","msgtype":"m.text"},"ts":1600922618000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"the thing hax wants sound more like `console.tap`, which browsers should absolutely add","msgtype":"m.text"},"ts":1600922626000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"michaelficarra: at the top of every file I ever debug?","msgtype":"m.text"},"ts":1600922691000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"you could but this is a really common desire, providing a common set of debug utilities seems useful","msgtype":"m.text"},"ts":1600922697000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"it's not even like it's hard to work out how to do it yourself","msgtype":"m.text"},"ts":1600922706000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I didn't realize this was just logging","msgtype":"m.text"},"ts":1600922709000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I am way less in support of this if it is just logging","msgtype":"m.text"},"ts":1600922716000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I dunno, it seems really easy to do if you want it","msgtype":"m.text"},"ts":1600922720000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"It is","msgtype":"m.text"},"ts":1600922725000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"`console.tap` seems great","msgtype":"m.text"},"ts":1600922727000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"It’s also easy as a language thing","msgtype":"m.text"},"ts":1600922734000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"I didn't think it was just logging, I assumed \"implementation defined\" meant that you could break on it","msgtype":"m.text"},"ts":1600922735000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I thought it would auto-thunk and conditionally evaluate or something","msgtype":"m.text"},"ts":1600922742000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"mmarchini: logging isn't easy, there's no i/o in the language","msgtype":"m.text"},"ts":1600922747000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(pedant hat: except for Date, which is I)","msgtype":"m.text"},"ts":1600922764000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"troo","msgtype":"m.text"},"ts":1600922781000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"eww Date","msgtype":"m.text"},"ts":1600922787000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"jridgewell: no debugger is a statement","msgtype":"m.text"},"ts":1600922826000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck which means we could introduce it in expression position","msgtype":"m.text"},"ts":1600922839000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"we'd need a NLTH but it should work","msgtype":"m.text"},"ts":1600922856000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1600922862000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"metaproperty on debugger?","msgtype":"m.text"},"ts":1600922869000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"michaelficarra: do we? you can't have a variable named debugger","msgtype":"m.text"},"ts":1600922873000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"gibson042: why? no need","msgtype":"m.text"},"ts":1600922877000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"oh but because of `debugger;`","msgtype":"m.text"},"ts":1600922879000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"we could require `debugger(…)`","msgtype":"m.text"},"ts":1600922891000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: we definitely do","msgtype":"m.text"},"ts":1600922892000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yeah sorry, i realized you're right","msgtype":"m.text"},"ts":1600922903000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: even still","msgtype":"m.text"},"ts":1600922904000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"debugger\\n(0)","msgtype":"m.text"},"ts":1600922904000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and even with the parens we'd need a NLTH yeah","msgtype":"m.text"},"ts":1600922910000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I don’t think the proposal is intended for production logging shu","msgtype":"m.text"},"ts":1600922911000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"I'm interested to hear this Kotlin solution","msgtype":"m.text"},"ts":1600922948000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"mmarchini: oh, am i misunderstanding the examples?","msgtype":"m.text"},"ts":1600922950000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I’m not speaking for Gus, but i wouldn’t except it to be used for prod logging","msgtype":"m.text"},"ts":1600922973000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1600922980000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that's fine, if the primary use case is actually debugging","msgtype":"m.text"},"ts":1600922987000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah I'm thinking this is a trap in expression position","msgtype":"m.text"},"ts":1600923011000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"If we use the debugger statement it would be good if implementations _can_ log though","msgtype":"m.text"},"ts":1600923014000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"but your devtools could disable that or just log or whatever if you wanted","msgtype":"m.text"},"ts":1600923023000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"Most of the time I’m debugging nodejs I don’t have the debugger open","msgtype":"m.text"},"ts":1600923030000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"debugger() expr sgtm","msgtype":"m.text"},"ts":1600923035000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah don't use this in production logging lmao","msgtype":"m.text"},"ts":1600923036000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"surely it'd be implementation-defined what it does","msgtype":"m.text"},"ts":1600923041000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"just like you can disable breakpoints","msgtype":"m.text"},"ts":1600923043000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"devsnek: people do use console.log for production logging, no?","msgtype":"m.text"},"ts":1600923052000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Also: don’t use console.log in production logging","msgtype":"m.text"},"ts":1600923053000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1600923055000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i stand corrected then","msgtype":"m.text"},"ts":1600923058000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600923062000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: oh no, they do, all the time","msgtype":"m.text"},"ts":1600923066000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Oh people definitely do. Don’t mean they should","msgtype":"m.text"},"ts":1600923072000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"okay i unstand","msgtype":"m.text"},"ts":1600923080000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"nothin wrong with me using console.log on my meme website","msgtype":"m.text"},"ts":1600923105000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I do read production as Node.js server, my bias definitely shows","msgtype":"m.text"},"ts":1600923126000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"i read production as \"sre's problem\"","msgtype":"m.text"},"ts":1600923142000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Gotta love be on the team that is SRE + developer","msgtype":"m.text"},"ts":1600923165000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"pl people","msgtype":"m.text"},"ts":1600923196000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600923202000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"'s production is \"getting it published\"","msgtype":"m.text"},"ts":1600923206000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"whoops","msgtype":"m.text"},"ts":1600923207000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"it should have an argument","msgtype":"m.text"},"ts":1600923341000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so that there is a sensible behavior when the devtools aren't open","msgtype":"m.text"},"ts":1600923352000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"no please no I/O in the language","msgtype":"m.text"},"ts":1600923505000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"positional parameters were a mistake","msgtype":"m.text"},"ts":1600923576000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"`(...[, , b]) => { }`","msgtype":"m.text"},"ts":1600923591000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"functions get 1 parameter, use an options bag if you want \"more\"","msgtype":"m.text"},"ts":1600923603000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"(or curry)","msgtype":"m.text"},"ts":1600923611000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"only good part of Objective-C","msgtype":"m.text"},"ts":1600923613000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"michaelficarra: i can't have this conversation right now","msgtype":"m.text"},"ts":1600923620000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"this might be a tough Stage 2 but it's an easy Stage 1, from my perspective","msgtype":"m.text"},"ts":1600923730000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ystartsev: the same thing we gain from optional catch, and eliding identifiers from array destructuring","msgtype":"m.text"},"ts":1600923737000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rkirsling: i agree with that sentiment","msgtype":"m.text"},"ts":1600923775000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb: comment from our end is that this seems like a paper cut, and doesn't seem worth introducing syntax to remove identifier names","msgtype":"m.text"},"ts":1600923776000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"I dunno, I am not convinced this identifies a problem worth solving","msgtype":"m.text"},"ts":1600923781000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i am not neutral on this being a problem worth solving","msgtype":"m.text"},"ts":1600923790000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"if all possibilities have technical issues, that makes me want to drop it than push harder","msgtype":"m.text"},"ts":1600923803000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"... in which direction?","msgtype":"m.text"},"ts":1600923803000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: -0","msgtype":"m.text"},"ts":1600923808000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"why not just use `a`, `b`, ... or any random character?","msgtype":"m.text"},"ts":1600923812000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"shu: what technical issues does elision have?","msgtype":"m.text"},"ts":1600923814000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"drousso: unneeded bindings are not good","msgtype":"m.text"},"ts":1600923822000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: i don't know, i haven't looked or reviewed the grammars in depth","msgtype":"m.text"},"ts":1600923825000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1600923828000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: but there was also a comment about it being confusing","msgtype":"m.text"},"ts":1600923845000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i don't have a gut intuition on if *i* think it is yet","msgtype":"m.text"},"ts":1600923853000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i don't see how `(_, _, _, x)` is perfectly clear but `(, , , x)` is confusing","msgtype":"m.text"},"ts":1600923870000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'd like to hear from jack works why he thinks it's confusing","msgtype":"m.text"},"ts":1600923889000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"cause i don't think i got that","msgtype":"m.text"},"ts":1600923894000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I don't hate this proposal, but I am afraid of the refactoring hazard where you accidentally leave an extra comma hanging around","msgtype":"m.text"},"ts":1600923944000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"especially when `const [, , , x] = arr` is a thing","msgtype":"m.text"},"ts":1600923945000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"In practice unused Params just end up as _ today","msgtype":"m.text"},"ts":1600923989000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"michaelficarra: thats a good dpoint","msgtype":"m.text"},"ts":1600923995000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"Not even _varName, just _","msgtype":"m.text"},"ts":1600923996000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"accurate","msgtype":"m.text"},"ts":1600924003000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: that should't've been a thing, just like holes shouldn't've been a thing, and no one should ever write it, so people should not need to know what it is, which means it is not a good argument for expecting people to understnad it","msgtype":"m.text"},"ts":1600924019000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`_`, `__`, ... or `_paramName` which is a waste to write for an unused binding.","msgtype":"m.text"},"ts":1600924023000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"mmarchini: then we don't really gain anything here","msgtype":"m.text"},"ts":1600924023000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"I’ve seen `fn(a, _ /* unused foo */, b)`","msgtype":"m.text"},"ts":1600924059000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"Bakkot: on holes we agree violently","msgtype":"m.text"},"ts":1600924067000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"michaelficarra: i agree with that worry","msgtype":"m.text"},"ts":1600924071000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ystartsev: We gain the ability to lose things from our code we don't need.","msgtype":"m.text"},"ts":1600924075000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"Bakkot: people use elision in array destructuring all the time, it's quite useful","msgtype":"m.text"},"ts":1600924079000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"mmarchini: you can't duplicate names","msgtype":"m.text"},"ts":1600924079000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1600924085000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"As a user, `fn(a, /* unused foo */, b)` seems a lot clearer that it’s not used","msgtype":"m.text"},"ts":1600924087000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"Its primarily useful for callbacks.","msgtype":"m.text"},"ts":1600924091000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"Bakkot: `const [, match] = str.match(re)`","msgtype":"m.text"},"ts":1600924097000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"mmarchini: more than `fn(a, unused_foo, b)`, how come?","msgtype":"m.text"},"ts":1600924106000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb `const match = str.match(re)[1]`, every time","msgtype":"m.text"},"ts":1600924115000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I mean duplicability of `_` would be one solution","msgtype":"m.text"},"ts":1600924129000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"well, actually, these days named capturing groups and named destructuring instead","msgtype":"m.text"},"ts":1600924135000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hence I think this is a worthy topic","msgtype":"m.text"},"ts":1600924138000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: idk i’m just showing what I see in the wild","msgtype":"m.text"},"ts":1600924141000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"Bakkot: a) widely used eslint rules force array destructuring instead of `[1]`, and b) many people prefer the destructuring form","msgtype":"m.text"},"ts":1600924146000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Bakkot: but yeah named groups is unarguably better","msgtype":"m.text"},"ts":1600924155000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"The vast majority of time","msgtype":"m.text"},"ts":1600924156000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"mmarchini: i'm not sure i follow, elisions aren't a thing in the wild, so what are you seeing?","msgtype":"m.text"},"ts":1600924157000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb those are dumb rules; I stand by \"no one should ever write that\" even if there is a lint rule which tells them to","msgtype":"m.text"},"ts":1600924175000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"_ being used as the sole way of shadowing an unused param (instead of _varName)","msgtype":"m.text"},"ts":1600924178000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"ystartsev: This is about parameters, not arguments though","msgtype":"m.text"},"ts":1600924180000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"rbuckton: the problem exists, even if she's mischaracterising it a bit","msgtype":"m.text"},"ts":1600924235000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"mmarchini: sorry, i was replying to that `fn(a, /* unused foo */, b)` is clearer than a dummy named parameter","msgtype":"m.text"},"ts":1600924243000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"rbuckton: yulia's point stands for parameters","msgtype":"m.text"},"ts":1600924261000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"when removing an internal parameter name, you could leave its comma and wind up with bad offsets on the successive parameters","msgtype":"m.text"},"ts":1600924265000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"Yeah, what I meant is that elision with a comment is more clear than a _ or _ with a comment","msgtype":"m.text"},"ts":1600924273000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1600924273000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"+1 to michaelficarra","msgtype":"m.text"},"ts":1600924277000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I understand that, but we already have existing semantics for how trailing `,` is handled in arrays and in destructuring, we would just need to be consistent.","msgtype":"m.text"},"ts":1600924278000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"it's not trailing that i'm worried about","msgtype":"m.text"},"ts":1600924286000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it's the preceding ones","msgtype":"m.text"},"ts":1600924290000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so I would prefer explicit syntax but I don't think it's worth the new syntax for this kind of problem","msgtype":"m.text"},"ts":1600924291000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"rbuckton: we're not talking about trailing commas here","msgtype":"m.text"},"ts":1600924327000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I see elision as a benefit to callbacks. I wouldn't generally want to use it for named functions.","msgtype":"m.text"},"ts":1600924344000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"michaelficarra: i think your point on readability puts me at a -0.5 from a -0","msgtype":"m.text"},"ts":1600924370000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh wow, the empty binding pattern is a good idea","msgtype":"m.text"},"ts":1600924371000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"has to be `{} = {}` to avoid errors though","msgtype":"m.text"},"ts":1600924396000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"one of those doesn't accept null/undefined though","msgtype":"m.text"},"ts":1600924398000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"which sucks","msgtype":"m.text"},"ts":1600924399000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"fails on null, same reason empty catch was needed","msgtype":"m.text"},"ts":1600924400000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh right","msgtype":"m.text"},"ts":1600924405000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"*optional catch","msgtype":"m.text"},"ts":1600924406000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1600924411000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1600924412000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1600924422000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1600924451000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I think we could reevaluate if entirely different possible solutions were presented","msgtype":"m.text"},"ts":1600924466000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"You can already elide trailing parameters in callbacks, you just don't bind them. There's just no way to do it for leading parameters.","msgtype":"m.text"},"ts":1600924469000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"sorry, \"no way\" is incorrect, there's still `(...[, , x]) => {}`","msgtype":"m.text"},"ts":1600924514000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"this really just feels like \"I'm blocking Stage 1 because I can't envision this reaching Stage 2\"","msgtype":"m.text"},"ts":1600924563000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"that fires off Array[Symbol.iterator] though which if you are being defensive might not be viable (stares angrily at node internals)","msgtype":"m.text"},"ts":1600924564000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"rkirsling: if you believe strongly enough that it *can't*, not just that it's unlikely, I think that's fine","msgtype":"m.text"},"ts":1600924593000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"rkirsling for my part I wasn't going to block, but I did think this did not successfully identify a problem worth solving","msgtype":"m.text"},"ts":1600924604000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"which is the criteria I use for stage 1","msgtype":"m.text"},"ts":1600924611000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"alright","msgtype":"m.text"},"ts":1600924612000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"just feels mildly unfair","msgtype":"m.text"},"ts":1600924621000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yep, thats what we identified as well","msgtype":"m.text"},"ts":1600924622000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"I personally think the problem was worth solving, but only if there was very little cost. New explicit syntax was too much cost, and adding elision was too risky IMO.","msgtype":"m.text"},"ts":1600924654000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I felt like I didn't hear a reason why making `_` duplicable would be so unreasonable","msgtype":"m.text"},"ts":1600924686000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"queue needs to be advanced","msgtype":"m.text"},"ts":1600924689000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling: mark and yulia said unnamed parameters are bad","msgtype":"m.text"},"ts":1600924708000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling: i find making _ special wildly unreasonable","msgtype":"m.text"},"ts":1600924711000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rkirsling: yeah I think a solution like that could be possible, so I would've supported at least stage 1","msgtype":"m.text"},"ts":1600924722000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"rkirsling: identifiers are identifiers","msgtype":"m.text"},"ts":1600924723000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rkirsling: allowing duplication of anything tho, i'd love","msgtype":"m.text"},"ts":1600924733000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1600924740000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"devsnek: you could try going the route ljharb suggests as an alternative to your proposal","msgtype":"m.text"},"ts":1600924834000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: that was open","msgtype":"m.text"},"ts":1600924861000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: one comment on your proposals: It is hard to tell what you are actually proposing","msgtype":"m.text"},"ts":1600924876000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"part of the reason i didn't say anything about debug is that the repo had so little information","msgtype":"m.text"},"ts":1600924894000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"divmod <3","msgtype":"m.text"},"ts":1600924913000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"and i was suprised by what was being proposed in the end, but couldn't think fast enough to actually say anything","msgtype":"m.text"},"ts":1600924917000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: what problem is proposed to be solved? or what solution is being suggested","msgtype":"m.text"},"ts":1600924918000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: devsnek just said that deduplication was an option for this","msgtype":"m.text"},"ts":1600924945000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"but that, in my opinion, is a wildly different proposal","msgtype":"m.text"},"ts":1600924957000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"proposals prior to stage 2 are about problems, not solutions","msgtype":"m.text"},"ts":1600924967000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it is weird to have Math.imul","msgtype":"m.text"},"ts":1600924968000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"i tried to be clear about it being \"lets do something about duplicated parameters\"","msgtype":"m.text"},"ts":1600924974000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i bring potential solutions to jog the room but this is just stage 1","msgtype":"m.text"},"ts":1600924989000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1600924998000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: duplicated parameters don't exist right now, so there isn't anything to be done about them","msgtype":"m.text"},"ts":1600925000000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"\"lets do something about unused parameters\"","msgtype":"m.text"},"ts":1600925002000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1600925008000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"sorry reading while writing :P","msgtype":"m.text"},"ts":1600925014000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and based on what was proposed, and the readme, it is not clear that this isn't actually to the detriment of the language. the problem is small and all of the proposed solutions had significant problems","msgtype":"m.text"},"ts":1600925042000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"FWIW I understood that we were trying to solve the unused leading parameters problem","msgtype":"m.text"},"ts":1600925050000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"the debug one, however....","msgtype":"m.text"},"ts":1600925061000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"presenting allowing duplicating *any* parameter is very different and requires a different review","msgtype":"m.text"},"ts":1600925066000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1600925075000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"ystartsev: i don't understand how a potential solution requires review prior to seeking stage 2 advancement","msgtype":"m.text"},"ts":1600925089000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so in the future, lean harder into enumerating actual solutions for stage 1?","msgtype":"m.text"},"ts":1600925101000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: this isn't a solution, its an entirely different problem","msgtype":"m.text"},"ts":1600925102000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"devsnek: please no","msgtype":"m.text"},"ts":1600925121000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"ystartsev: duplicating any param addresses the same problem, \"how do i avoid creating a bunch of unused bindings when i want unused params\"","msgtype":"m.text"},"ts":1600925127000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek: i think the problem was well stated in this case, it just wasn't one that we saw as significant enough to solve right now","msgtype":"m.text"},"ts":1600925138000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"(deduping creates 1 useless binding instead of n)","msgtype":"m.text"},"ts":1600925139000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ystartsev: that's fine","msgtype":"m.text"},"ts":1600925145000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm more concerned about my proposals being unclear","msgtype":"m.text"},"ts":1600925153000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: then we would block it on it causing such far reaching implications for the language for so small a gain. our block stands","msgtype":"m.text"},"ts":1600925171000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"But that’s stage 1","msgtype":"m.text"},"ts":1600925184000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"ystartsev: right but again, that's a \"seeking stage 2\" concern","msgtype":"m.text"},"ts":1600925191000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek: that is related to the debug proposal, which had no explanatory text","msgtype":"m.text"},"ts":1600925195000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"solutions *don't exist* prior to seeking stage 2","msgtype":"m.text"},"ts":1600925197000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"blocking stage 1 means \"the problem isn't worth any solution\"","msgtype":"m.text"},"ts":1600925208000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I'm specifically uncomfortable with this *in the context of* the current process document revision","msgtype":"m.text"},"ts":1600925210000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: as i said above, the problem is noted, but doesn't seem significant enough and our current solution is better","msgtype":"m.text"},"ts":1600925231000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"I have no expectation that this proposal would reach stage 2","msgtype":"m.text"},"ts":1600925232000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"like, things like this have gotten stage 1 with \"it will never get to stage 2 unless the solution is wildly different\"","msgtype":"m.text"},"ts":1600925234000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I think there is a good motivation to allowed unused param, it seems we create a too high bar for things like that.","msgtype":"m.text"},"ts":1600925237000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"can this proposal go straight to stage 3?","msgtype":"m.text"},"ts":1600925239000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: why stop there","msgtype":"m.text"},"ts":1600925249000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: have you already implemented it?","msgtype":"m.text"},"ts":1600925265000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"lol, no","msgtype":"m.text"},"ts":1600925276000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that has definitely happened in the history of this committee, though","msgtype":"m.text"},"ts":1600925312000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"1 to 4? I don't think so","msgtype":"m.text"},"ts":1600925328000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"1 to 3? maybe once","msgtype":"m.text"},"ts":1600925333000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"0 to 3? I don't think so either","msgtype":"m.text"},"ts":1600925345000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"i think stage 2 would be completely reasonable here","msgtype":"m.text"},"ts":1600925423000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"0 to 3 has happened","msgtype":"m.text"},"ts":1600925433000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek: me too","msgtype":"m.text"},"ts":1600925436000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"i think api like that could advance fast, but complicated feature (for example, syntax involved) should be very careful","msgtype":"m.text"},"ts":1600925437000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"didn't optional catch do that? or did it only do 0 to 2","msgtype":"m.text"},"ts":1600925441000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"nothing has ever skipped 3 that i'm aware of","msgtype":"m.text"},"ts":1600925454000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: ptc","msgtype":"m.text"},"ts":1600925461000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: I don't think optional catch skipped","msgtype":"m.text"},"ts":1600925462000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"devsnek: that was pre-stage process","msgtype":"m.text"},"ts":1600925478000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"while this is about as uncontroversial as it gets, that kind of leap gives me a lot of pause","msgtype":"m.text"},"ts":1600925481000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"michaelficarra: yeah was more a jab at it not having two implementations","msgtype":"m.text"},"ts":1600925490000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling: really what's being proposed here is a specific solution, so it should be fine","msgtype":"m.text"},"ts":1600925515000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yeah I mean like if the spec is there, it does seem to be already implementable","msgtype":"m.text"},"ts":1600925537000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"michaelficarra: https://github.com/tc39/notes/blob/8e8bfcbddcb29c09a10b0845a55af2e0d31b6f49/meetings/2017-07/summary.md says \"advanced straight to Stage 3\"","msgtype":"m.text"},"ts":1600925544000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"geez, the notes doc is freezing for like 30 seconds at a time","msgtype":"m.text"},"ts":1600925555000,"senderName":"ptomato","senderId":"ptomato@irc"},
{"content":{"body":"is that happening for anyone else?","msgtype":"m.text"},"ts":1600925572000,"senderName":"ptomato","senderId":"ptomato@irc"},
{"content":{"body":"yes ! i also lagged when i was presenting","msgtype":"m.text"},"ts":1600925605000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"make me very nervous...because i can't see the notes to catch all the questions...","msgtype":"m.text"},"ts":1600925624000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"ljharb: straight from stage 2! I dunno","msgtype":"m.text"},"ts":1600925658000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: that was the first presentation as far as i can tell","msgtype":"m.text"},"ts":1600925725000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: damn I'm good","msgtype":"m.text"},"ts":1600925778000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":":-p","msgtype":"m.text"},"ts":1600925783000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"should start a fantasy league","msgtype":"m.text"},"ts":1600925793000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"it's especially hard when you're trying to take the notes :-P","msgtype":"m.text"},"ts":1600925810000,"senderName":"ptomato","senderId":"ptomato@irc"},
{"content":{"body":"I can't unmute, but I'm also still interested","msgtype":"m.text"},"ts":1600925906000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"ljharb: is that something that can be worked out between you and hax and only involve the rest of committee if you make progress that needs additional eyes?","msgtype":"m.text"},"ts":1600926227000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: specifically, it's \"would a generic class brand check proposal obviate the need for `in`\" - https://github.com/tc39/proposal-private-fields-in-in/issues/13","msgtype":"m.text"},"ts":1600926266000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"if issue discussion can persuade folks that either a) no, `in` is needed regardless or b) the more general proposal is not viable, i think that'd do it","msgtype":"m.text"},"ts":1600926296000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i don't agree that class brand checks replace the need","msgtype":"m.text"},"ts":1600926312000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling: re the process document. I had included a line that stage 1 blocking was limited, but several delegates objected to that and it was removed","msgtype":"m.text"},"ts":1600926321000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"devsnek: comments to that effect appreciated","msgtype":"m.text"},"ts":1600926332000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so part of us blocking here was in line with the most recent reading of the document","msgtype":"m.text"},"ts":1600926335000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"you could, in theory, have several different objects sharing some private fields but not others","msgtype":"m.text"},"ts":1600926343000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"tying them together seems unfortunate","msgtype":"m.text"},"ts":1600926356000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: examples of just that would be helpful, i couldn't come up with one","msgtype":"m.text"},"ts":1600926359000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"with the private-decls proposal that would be common, even","msgtype":"m.text"},"ts":1600926362000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i spoke to devsnek, that if he wanted to try to advance it I would back down -- but it is unlikely to get to stage 2","msgtype":"m.text"},"ts":1600926363000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"hmm alright","msgtype":"m.text"},"ts":1600926374000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah I certainly agree about stage 2","msgtype":"m.text"},"ts":1600926380000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"chairs: TCQ isn't updated","msgtype":"m.text"},"ts":1600926393000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"they're working on it","msgtype":"m.text"},"ts":1600926428000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it was a marathon","msgtype":"m.text"},"ts":1600926461000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"ljharb did you want to say your thing about disliking video?","msgtype":"m.text"},"ts":1600926502000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"y","msgtype":"m.text"},"ts":1600926513000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I wanted to try out Teams' transcription. I tried it very briefly a few days ago, but I think there are issues with transcriptions for Guests (due to permissions)","msgtype":"m.text"},"ts":1600926513000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"should get on the queue I guess","msgtype":"m.text"},"ts":1600926517000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"lets make sure we're not just throwing tech at a problem","msgtype":"m.text"},"ts":1600926527000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we are better than the orange site","msgtype":"m.text"},"ts":1600926538000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"throwing tech at the problem is great","msgtype":"m.text"},"ts":1600926555000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that is what tech is for","msgtype":"m.text"},"ts":1600926558000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"alleviating human suffering","msgtype":"m.text"},"ts":1600926562000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"It’s great, you usually get another problem :)","msgtype":"m.text"},"ts":1600926570000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"lol i'm definitely saying tech can't help","msgtype":"m.text"},"ts":1600926574000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1600926578000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm definitely ***not*** saying tech can't help","msgtype":"m.text"},"ts":1600926588000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: super good job it's done so far","msgtype":"m.text"},"ts":1600926588000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rbucton: you can't be suggesting we use Teams for future meetings, have you seen how it has been (not) working for so many people?","msgtype":"m.text"},"ts":1600926595000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"Jk i think there’s room for improvements in the note taking area","msgtype":"m.text"},"ts":1600926599000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"ljharb https://ourworldindata.org/child-mortality","msgtype":"m.text"},"ts":1600926607000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I helped a few times and oof it’s hard","msgtype":"m.text"},"ts":1600926614000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"michaelficarra: I've been collecting some feedback to provide to the team.","msgtype":"m.text"},"ts":1600926633000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"Bakkot: that got dark quick","msgtype":"m.text"},"ts":1600926633000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"lol i can't really counter \"less kids die\", so bailing out of that one","msgtype":"m.text"},"ts":1600926651000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"michaelficarra I dunno, that's probably the single most hopeful chart I have ever seen","msgtype":"m.text"},"ts":1600926652000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"fewer*","msgtype":"m.text"},"ts":1600926660000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1600926667000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yeah exactly, it's like writing down every word in a lecture","msgtype":"m.text"},"ts":1600926715000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hitting the play button on those charts is insanely satisfying","msgtype":"m.text"},"ts":1600926722000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the animation is top notch","msgtype":"m.text"},"ts":1600926729000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Video + auto generated transcript is probably the best compromise we can get to alleviate note taking from delegates","msgtype":"m.text"},"ts":1600926763000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"does everyone else not just cmd+f their linitialism?","msgtype":"m.text"},"ts":1600926765000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"that's what i do","msgtype":"m.text"},"ts":1600926771000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"mmarchini: agree","msgtype":"m.text"},"ts":1600926788000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"someone had the idea to hire dedicated note taker(s)","msgtype":"m.text"},"ts":1600926792000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it'd take a lot of talking before reviewing my own comments for all 4 days takes even close to an hour","msgtype":"m.text"},"ts":1600926801000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"can stenotypes do codeblocks","msgtype":"m.text"},"ts":1600926810000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1600926816000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"let's hire mirabai","msgtype":"m.text"},"ts":1600926821000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"we should investigate hiring professionals","msgtype":"m.text"},"ts":1600926826000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I am really hoping we can get live transcriptions into a google doc","msgtype":"m.text"},"ts":1600926827000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"from google speech or whatever","msgtype":"m.text"},"ts":1600926832000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"with note takers just fixing errors","msgtype":"m.text"},"ts":1600926837000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and doing attribution","msgtype":"m.text"},"ts":1600926840000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"http://stenoknight.com 😍","msgtype":"m.text"},"ts":1600926846000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"imagine paying people to take complete notes and formatting them well and categorizing them","msgtype":"m.text"},"ts":1600926853000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"i don't know how well it will work, but if it works as well as google meet's transcriptions it would be _incredible_","msgtype":"m.text"},"ts":1600926857000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i can film my phone adding live captions, then OCR those into notepad and copy them into google drive","msgtype":"m.text"},"ts":1600926884000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I would be willing to help _post-edit_ notes but I find the current procedure intensely stressful","msgtype":"m.text"},"ts":1600926890000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Yeah same","msgtype":"m.text"},"ts":1600926905000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"rkirsling: same","msgtype":"m.text"},"ts":1600926908000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"that's why I never volunteer, in spite of feeling awful for not volunteering","msgtype":"m.text"},"ts":1600926908000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"When I help I can’t pay attention to the discussion as I’m just trying to type as fast as folks talk","msgtype":"m.text"},"ts":1600926934000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"chairs: I would really like to say my thing about my proposal before the end of this meeting, since it determines if I try to do the work before the next meeting","msgtype":"m.text"},"ts":1600926939000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"note-taking has made me miss opportunities to contribute and also just not fully follow the actual technical content of the conversation, so I just don't volunteer anymore","msgtype":"m.text"},"ts":1600926962000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"https://cloud.google.com/speech-to-text/docs/streaming-recognize#speech-streaming-recognize-nodejs","msgtype":"m.text"},"ts":1600926970000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"+ not being native English speaker I easily lose the discussion flow while typing","msgtype":"m.text"},"ts":1600926983000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"devsnek yeah that's the one I'm referring to","msgtype":"m.text"},"ts":1600926984000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"not sure if their api supports real time","msgtype":"m.text"},"ts":1600926993000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it does","msgtype":"m.text"},"ts":1600926996000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: you can try it out at the next meeting regardless, just point it at the notes google doc","msgtype":"m.text"},"ts":1600926996000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"it looks like it expects chunks of data","msgtype":"m.text"},"ts":1600927003000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"michaelficarra I need permission from everyone","msgtype":"m.text"},"ts":1600927008000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"legally","msgtype":"m.text"},"ts":1600927010000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if someone's going to object I want to know before doing the work","msgtype":"m.text"},"ts":1600927015000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"just ask at the beginning of the meeting then?","msgtype":"m.text"},"ts":1600927028000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"POO it","msgtype":"m.text"},"ts":1600927032000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"ask right now in your queue item","msgtype":"m.text"},"ts":1600927042000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'd be happy to help btw","msgtype":"m.text"},"ts":1600927047000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"waldemar is right","msgtype":"m.text"},"ts":1600927050000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"even an interim artifact that results in public notes?","msgtype":"m.text"},"ts":1600927066000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1600927084000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"technically if we're streaming voice data to google we're not recording it","msgtype":"m.text"},"ts":1600927115000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek re: chunks: https://cloud.google.com/speech-to-text has a demo you can see it does live","msgtype":"m.text"},"ts":1600927150000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(also their examples have the same thing)","msgtype":"m.text"},"ts":1600927158000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(their code samples, that is)","msgtype":"m.text"},"ts":1600927162000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i was reading the nodejs example","msgtype":"m.text"},"ts":1600927166000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: I haven't reviewed the PR yet, I'm sorry. I don't want to hold it up if this will cause extra work for you, but I don't understand why it is coupled or in a hurry. I won't be rejoining the call as I am exhausted and will go back to sleep.","msgtype":"m.text"},"ts":1600927167000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan no worries, it's not too much a burden, go back to sleep","msgtype":"m.text"},"ts":1600927183000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I'll revisit next meeting","msgtype":"m.text"},"ts":1600927185000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"littledan: too late, it's already held up","msgtype":"m.text"},"ts":1600927186000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"aha you can do it via ws","msgtype":"m.text"},"ts":1600927232000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"FYI google speech to text is *amazingly* accurate","msgtype":"m.text"},"ts":1600927273000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"also FYI we will still have to do our own attribution","msgtype":"m.text"},"ts":1600927350000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"Bakkot: streaming requests cut off after around 5 minutes","msgtype":"m.text"},"ts":1600927361000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"according to the docs","msgtype":"m.text"},"ts":1600927363000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek their code samples deal with that","msgtype":"m.text"},"ts":1600927377000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"they cut it off and make a new stream before the timeout","msgtype":"m.text"},"ts":1600927387000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh ok","msgtype":"m.text"},"ts":1600927399000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(at least, from what i've read; I haven't done the work yet)","msgtype":"m.text"},"ts":1600927404000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: if you hook into the meet call with an extension you could auto detect the person speaking","msgtype":"m.text"},"ts":1600927420000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"inb4 the hardest part is getting the text into google docs","msgtype":"m.text"},"ts":1600927428000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rickbutton yeah, though that will not be in v1.0","msgtype":"m.text"},"ts":1600927439000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"devsnek nah I've done that before, it's super easy","msgtype":"m.text"},"ts":1600927444000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"sure don't need it in an mvp","msgtype":"m.text"},"ts":1600927448000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"hardest part is getting the audio to the speech API","msgtype":"m.text"},"ts":1600927453000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"by far","msgtype":"m.text"},"ts":1600927454000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: like via an api or like puppeteering","msgtype":"m.text"},"ts":1600927458000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek an API","msgtype":"m.text"},"ts":1600927462000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1600927465000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"gdocs api is good/free","msgtype":"m.text"},"ts":1600927465000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"does webaudio let you do redirection shenanigans?","msgtype":"m.text"},"ts":1600927475000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"not that I've seen, and also I can't figure out how to connect to the speech api from websockets","msgtype":"m.text"},"ts":1600927492000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"RE the demo on the site","msgtype":"m.text"},"ts":1600927502000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"probably will need to use one of those virtual audio devices","msgtype":"m.text"},"ts":1600927508000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"yeah I can't figure out how their demo works","msgtype":"m.text"},"ts":1600927510000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ill stop backseating","msgtype":"m.text"},"ts":1600927513000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"rickbutton that's my current plan! specifically https://github.com/ExistentialAudio/BlackHole","msgtype":"m.text"},"ts":1600927531000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1600927553000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"Bakkot: just reverse engineer zoom's protocol smh","msgtype":"m.text"},"ts":1600927558000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek someday, someday","msgtype":"m.text"},"ts":1600927564000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"v2","msgtype":"m.text"},"ts":1600927570000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"just invent a new voice chat application that has this built in","msgtype":"m.text"},"ts":1600927576000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"call it meet","msgtype":"m.text"},"ts":1600927583000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600927593000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"just invent a new internet that is specifically used for routing our call","msgtype":"m.text"},"ts":1600927597000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"we can call it \"telephones\"","msgtype":"m.text"},"ts":1600927608000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"vonage","msgtype":"m.text"},"ts":1600927621000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"man using landlines would make the delay so much nicer","msgtype":"m.text"},"ts":1600927626000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"btw if someone else wants to build this google speech api -> google docs thing, please reach out","msgtype":"m.text"},"ts":1600927648000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i'd be interested in helping","msgtype":"m.text"},"ts":1600927658000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"as long as you use semicolons, that is","msgtype":"m.text"},"ts":1600927676000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you have to use standardjs","msgtype":"m.text"},"ts":1600927690000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"ofc, I'm not a heathen","msgtype":"m.text"},"ts":1600927691000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"prettier with 2 spaces","msgtype":"m.text"},"ts":1600927703000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"the horror","msgtype":"m.text"},"ts":1600927709000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"do people still use coffeescript","msgtype":"m.text"},"ts":1600927709000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"prettier has approximately the correct defaults","msgtype":"m.text"},"ts":1600927712000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"this is partly because I maintain it","msgtype":"m.text"},"ts":1600927716000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: false","msgtype":"m.text"},"ts":1600927717000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1600927720000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"shu: at least one very loud person does","msgtype":"m.text"},"ts":1600927721000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: oh? who?","msgtype":"m.text"},"ts":1600927733000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the guy who maintains it","msgtype":"m.text"},"ts":1600927739000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"who maintains it nowadays?","msgtype":"m.text"},"ts":1600927748000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"geoffrey booth","msgtype":"m.text"},"ts":1600927751000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh, hmm","msgtype":"m.text"},"ts":1600927758000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"most of the crazy stuff in node's current esm is due to his constraints for coffeescript","msgtype":"m.text"},"ts":1600927767000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"its a very weird story","msgtype":"m.text"},"ts":1600927770000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I don't think that coffeescript is the main cause of Node's ESM quirks","msgtype":"m.text"},"ts":1600927826000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"robpalme: not all of them","msgtype":"m.text"},"ts":1600927865000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but you would be surprised","msgtype":"m.text"},"ts":1600927868000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"robpalme: coffeescript → babel","msgtype":"m.text"},"ts":1600927952000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"robpalme: but also, what gus said","msgtype":"m.text"},"ts":1600927959000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I like coffee and javascript","msgtype":"m.text"},"ts":1600927991000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"as two separate things","msgtype":"m.text"},"ts":1600928004000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I'd generalize it more to be \"the code written by folk that loved ESM so much they wanted to use it to author CJS ahead of native support\", rather than pinning it on any one tool","msgtype":"m.text"},"ts":1600928030000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"robpalme: i sat through *years* of node esm meetings i'm too cynical","msgtype":"m.text"},"ts":1600928068000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i have sat through the same ones","msgtype":"m.text"},"ts":1600928090000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"again, I would refrain from blaming specific tools - they are just reflecting positive healthy demand for ESM.  maybe it's just a point of view thing.","msgtype":"m.text"},"ts":1600928143000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"well there's a rabbit hole there but we can leave it at demand for esm","msgtype":"m.text"},"ts":1600928181000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"anyway its 1am i'm going to log off, later folks","msgtype":"m.text"},"ts":1600928199000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"have a good night","msgtype":"m.text"},"ts":1600928208000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"dandclark: hi! could you please PM your email?","msgtype":"m.text"},"ts":1600985124000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"dandclark: i'd like to sync up on implementation work for import assertions in chromium","msgtype":"m.text"},"ts":1600985159000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: Sent you a PM","msgtype":"m.text"},"ts":1600986148000,"senderName":"dandclark","senderId":"dandclark@irc"}
]