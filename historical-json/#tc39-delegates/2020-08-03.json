[
{"content":{"body":"littledan: I'm not a big fan of trailing comma in the import conditions for `import()`","msgtype":"m.text"},"ts":1596473143000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"https://github.com/tc39/proposal-import-assertions/pull/77/files#diff-3540caefa502006d8a33cb1385720803R38","msgtype":"m.text"},"ts":1596473145000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"idk, it looks like an approach to make it similar to function calls, but it distorts from what we have today from other expressions","msgtype":"m.text"},"ts":1596473189000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"like void and typeof","msgtype":"m.text"},"ts":1596473193000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"it is not a big deal, but I definitely need to take it with a grain of salt","msgtype":"m.text"},"ts":1596473257000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"and while I see some motivation for function calls leaving a trailing comma, I don't see many for import, it's too specific and cannot really be monkey patched.","msgtype":"m.text"},"ts":1596473330000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"it's the same motivation","msgtype":"m.text"},"ts":1596473482000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i think import calls should always have had trailing commas","msgtype":"m.text"},"ts":1596473516000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"note that webpack requires special comments between `import(` and the specifier, and people often write them multiline - `import(\\n\\t/* webpack magic */\\n\\tspecifier\\n)`","msgtype":"m.text"},"ts":1596473519000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and by allowing a trailing comma, you minimize git diffs when adding or removing the import assertions - minimizing diffs imo is the motivation for trailing commas anywhere","msgtype":"m.text"},"ts":1596473542000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"+1 to `import()` should always have allowed trailing commas","msgtype":"m.text"},"ts":1596473551000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"hopefully it's not a problem that we don't allow leading comments!","msgtype":"m.text"},"ts":1596475430000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"leobalter: I could go either way on trailing commas for import assertions, personally","msgtype":"m.text"},"ts":1596475444000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I was persuaded by the argument devsnek and ljharb make above that really, all calls should have this","msgtype":"m.text"},"ts":1596475465000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"as I said, I need to accept this with a grain of salt","msgtype":"m.text"},"ts":1596475521000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"the motivations are not good enough for me, but shipping this little awful part is a better goal won't cause me harm on everyday usage or get me stuck on future code.","msgtype":"m.text"},"ts":1596475682000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"what is the comparison to void and typeof","msgtype":"m.text"},"ts":1596475729000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"they are all expressions like import","msgtype":"m.text"},"ts":1596475742000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I mean what do they have to do with trailing commas","msgtype":"m.text"},"ts":1596475754000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"they don't have a usage format with trailing commas","msgtype":"m.text"},"ts":1596475775000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"neither does addition","msgtype":"m.text"},"ts":1596475794000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"are you devaluaing my subjective point of view? Even when I say I'm ok with this \"feature\"?","msgtype":"m.text"},"ts":1596475854000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"no I'm trying to understand it","msgtype":"m.text"},"ts":1596475864000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I'm not sure where we can go from here","msgtype":"m.text"},"ts":1596475868000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I just don't understand what parallel there is between void and import in the context of trailing commas, and I wanted to understand it","msgtype":"m.text"},"ts":1596475907000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"they are all expressions","msgtype":"m.text"},"ts":1596475929000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"you can join expressions with commas","msgtype":"m.text"},"ts":1596475950000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is that what you're saying?","msgtype":"m.text"},"ts":1596475955000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not function calls, even if they look like function calls","msgtype":"m.text"},"ts":1596475959000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"void looks like a function call?","msgtype":"m.text"},"ts":1596475967000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh do you mean","msgtype":"m.text"},"ts":1596475977000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`void(0)`","msgtype":"m.text"},"ts":1596475980000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"void (x)?","msgtype":"m.text"},"ts":1596475981000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ok now I understand","msgtype":"m.text"},"ts":1596475987000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"do people actually do that","msgtype":"m.text"},"ts":1596476002000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: typeof(x) is seen enough for me to be familiar with","msgtype":"m.text"},"ts":1596477591000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"littledan: in the first position of `import()`? they're surely allowed","msgtype":"m.text"},"ts":1596481921000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"littledan: \"any expression\" is allowed there","msgtype":"m.text"},"ts":1596481930000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"leobalter: `super()` allows trailing commas: `class C extends Object { constructor() { super(3,); } }`","msgtype":"m.text"},"ts":1596481980000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"leobalter: `import()` is exactly like `super()`.","msgtype":"m.text"},"ts":1596481986000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(as opposed to being like typeof/void)","msgtype":"m.text"},"ts":1596481992000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"in my brain, super takes arguments. These arguments are arbitrarily-picked by the developer. Where the import() is an expression without args but a specific notation of settings.","msgtype":"m.text"},"ts":1596482141000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"it's subjective. It's weird that we came so long with `import(x)` not being a function that even empty args are invalid syntax","msgtype":"m.text"},"ts":1596482223000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"to me, `import()` is conceptually calling a function, just like `super()` is, and import assertions makes that even more true","msgtype":"m.text"},"ts":1596482225000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I meant, you can't do `import(\\n\\t/* webpack magic */,\\n\\tspecifier\\n)`","msgtype":"m.text"},"ts":1596482251000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"also tho, `void` and `typeof` are not function-like at all; `super()` and `import()` are.","msgtype":"m.text"},"ts":1596482259000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it was a joke; I don't think this is up for debate","msgtype":"m.text"},"ts":1596482263000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: without the comma you can :-p","msgtype":"m.text"},"ts":1596482272000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"heh yes","msgtype":"m.text"},"ts":1596482277000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"lol k","msgtype":"m.text"},"ts":1596482280000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"nit: `import()` itself is a syntax error","msgtype":"m.text"},"ts":1596482304000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"indeed, that is true","msgtype":"m.text"},"ts":1596482329000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and extend this to `import(/* magic */)`","msgtype":"m.text"},"ts":1596482332000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"consistency w/ Arguments is not a strong argument for me here (puns not intended) as we can never be completely consistent.","msgtype":"m.text"},"ts":1596482430000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"in any case, I'm not trying to block and I'm not insisting for us to change this.","msgtype":"m.text"},"ts":1596482506000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I personally don't like it","msgtype":"m.text"},"ts":1596482514000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"we could just permit Arguments in `import()`","msgtype":"m.text"},"ts":1596482525000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"and just ignore it if people give too many ,and cast from undefined if people give too few","msgtype":"m.text"},"ts":1596482536000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I'd prefer if this could be separate from Import Assertions, but not worth all the hassle","msgtype":"m.text"},"ts":1596482546000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I agree that these changes aren't worth much hassle one way or another","msgtype":"m.text"},"ts":1596482572000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"what if...we made `()` a value","msgtype":"m.text"},"ts":1596482691000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"oops this isn't TDZ","msgtype":"m.text"},"ts":1596482696000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I'm not sure what optimization do we want that prevents us from going with: `import Arguments`. Releasing a lot of static errors that are exclusively to `import()`","msgtype":"m.text"},"ts":1596482734000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"we could benefit from something like:","msgtype":"m.text"},"ts":1596482817000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"const settings = [specifier, opts];","msgtype":"m.text"},"ts":1596482817000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"import(...settings);","msgtype":"m.text"},"ts":1596482817000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I think there was some logic that, if import is a keyword, it shouldn't have call-like syntax","msgtype":"m.text"},"ts":1596482926000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I don't really get that argument","msgtype":"m.text"},"ts":1596482931000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I'd be fine to break out a separate PR to change the syntax of `import() `to take arbitrary Arguments","msgtype":"m.text"},"ts":1596482947000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"A PR for that should be relatively easy. I’d probably ask if we want empty arguments as valid too.","msgtype":"m.text"},"ts":1596483219000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"since empty arguments will *always* be a bug, detectable only asynchronously, why would we want to allow it?","msgtype":"m.text"},"ts":1596484970000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"same with spreading an empty array","msgtype":"m.text"},"ts":1596484973000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i don't think 100% consistency is more important than providing reasonable things everyone expects, like trailing commas, and prohibiting harmful things nobody expects to be permitted","msgtype":"m.text"},"ts":1596485005000,"senderName":"ljharb","senderId":"ljharb@irc"}
]