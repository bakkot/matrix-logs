[
{"content":{"body":"I want to drag up an old discussion: https://twitter.com/bmeurer/status/938260338704900096","msgtype":"m.text"},"ts":1589881856000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"Did anything ever happen with this?","msgtype":"m.text"},"ts":1589881861000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"more context: https://twitter.com/bmeurer/status/938651499420422144","msgtype":"m.text"},"ts":1589881902000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"I see some arguments around SES and webcompat, wondering if there is more documentation around this","msgtype":"m.text"},"ts":1589882114000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"i think if it was web compat to get rid of species, a lot of people would love to","msgtype":"m.text"},"ts":1589904198000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but imo if we can't get rid of it somewhat close to 100%, then it's better to keep the consistency","msgtype":"m.text"},"ts":1589904219000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i would love to get rid of species","msgtype":"m.text"},"ts":1589904811000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"let me see if v8 has any usecounters here already...","msgtype":"m.text"},"ts":1589904896000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ystartsev: if you are also serious about removing species, i suggest that all the browser vendors coordinate on shipping counters/telemetry to get a better picture","msgtype":"m.text"},"ts":1589904935000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"usually the argument for doing extra legwork is it's not worth it and we all got better things to do","msgtype":"m.text"},"ts":1589904957000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but species is worth removal because of the high security hazard borne out by past experience","msgtype":"m.text"},"ts":1589904974000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: ok, that sounds like a good idea.","msgtype":"m.text"},"ts":1589904984000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"i need to understand the web compat issues","msgtype":"m.text"},"ts":1589904991000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"can you tell me more about the security hazard? i'm only familiar with \"people think it's icky and unnecessary\"","msgtype":"m.text"},"ts":1589905003000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: valerie from project zero gave an invited talk at tc39 once","msgtype":"m.text"},"ts":1589905016000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"project zero had a field day with project zero","msgtype":"m.text"},"ts":1589905023000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but we were discussing it also and it looks like we are supporting this for a very limited use case, but it introduces a lot of performance issuse and complexity","msgtype":"m.text"},"ts":1589905026000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"the security hazard follows directly from the complexity it induces in JITs","msgtype":"m.text"},"ts":1589905043000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"because JITs are optimistic optimizers, they have to manually encode all failure modes to bail out","msgtype":"m.text"},"ts":1589905058000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"species is not something that's easy to get right","msgtype":"m.text"},"ts":1589905062000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and when you get it wrong, that often becomes exploitable","msgtype":"m.text"},"ts":1589905068000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"interesting, ok. i must have missed that one","msgtype":"m.text"},"ts":1589905081000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: was it the godaddy one?","msgtype":"m.text"},"ts":1589905088000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"err, i mean project zero had a field day with species, not project zero :)","msgtype":"m.text"},"ts":1589905097000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"or maybe europe last year","msgtype":"m.text"},"ts":1589905099000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: i don't remember, let me grep the notes...","msgtype":"m.text"},"ts":1589905103000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh thanks, i could do that too i suppose","msgtype":"m.text"},"ts":1589905109000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"my recollection is more than 2 years ago","msgtype":"m.text"},"ts":1589905115000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ah k, no worries","msgtype":"m.text"},"ts":1589905128000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the main problem is array species over other species","msgtype":"m.text"},"ts":1589905146000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"because so much work goes into optimizing array access","msgtype":"m.text"},"ts":1589905157000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"hm maybe there were no notes for this","msgtype":"m.text"},"ts":1589905235000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"am i misremembering...","msgtype":"m.text"},"ts":1589905239000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ah i misremembered the name of the researcher, my bad: Natalie Silvanovich","msgtype":"m.text"},"ts":1589905301000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ah i remember natalie's presentation, but i didn't recall species as a big part of it as much as indexed prototype access","msgtype":"m.text"},"ts":1589905336000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"subclassing was also big part of it","msgtype":"m.text"},"ts":1589905385000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb: https://docs.google.com/presentation/d/11fkQeEisoszNGF8SrautVT1ltSnsQBWRxJ4usoc-g_o/edit#slide=id.g2b34aaab4a_0_10 look at slide 4","msgtype":"m.text"},"ts":1589905600000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"trail of tears","msgtype":"m.text"},"ts":1589905603000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"we should just have a script that auto-removes features once it accumulates more than N CVEs and has less than M% uptake in the wild","msgtype":"m.text"},"ts":1589905641000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1589905711000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ime CVEs are mostly false positives, so that might be a bit too hair-trigger :-p","msgtype":"m.text"},"ts":1589905734000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but yeah, let's exterminate the species","msgtype":"m.text"},"ts":1589905745000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1589908996000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"should i put it on the agenda?","msgtype":"m.text"},"ts":1589909000000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: sure, happy to collaborate on it","msgtype":"m.text"},"ts":1589909086000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1589909110000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"lets set up a call late this week or early next week shu ljharb ?","msgtype":"m.text"},"ts":1589909129000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"do we need a call?","msgtype":"m.text"},"ts":1589909227000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"well, maybe not","msgtype":"m.text"},"ts":1589909237000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"(i mean it seems like we're already all on the same page, i meant more like be happy to help do slides)","msgtype":"m.text"},"ts":1589909242000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"just trying to think of how to organize it","msgtype":"m.text"},"ts":1589909244000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1589909247000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1589909249000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"yeah that sounds good","msgtype":"m.text"},"ts":1589909262000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"has it gotten any more CVEs since that presentation","msgtype":"m.text"},"ts":1589909263000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"dunno, worth asking about","msgtype":"m.text"},"ts":1589909286000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ystartsev see https://github.com/tc39/ecma262/issues/1313","msgtype":"m.text"},"ts":1589910200000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I would also love for the committee to get a coherent position on Symbol.species because the current state of things leaves us discussing it unproductively every time it comes up. e.g with Set.prototype.union","msgtype":"m.text"},"ts":1589910245000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ystartsev: also in the space of gauging backwards-incompat changes, i added a counter to v8 to measure use of the vars redeclaring catch bindings","msgtype":"m.text"},"ts":1589910329000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Bakkot: it seems like what ystartsev and i are thinking of is an even more radical version of domenic's suggestion in that issue, is that right?","msgtype":"m.text"},"ts":1589910371000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Domenic's proposal includes \"Consider removing it from any existing methods where doing so would be web-compatible\", so it's covered by it","msgtype":"m.text"},"ts":1589910392000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but yeah","msgtype":"m.text"},"ts":1589910393000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh i think v8 already has species use counters, let's see...","msgtype":"m.text"},"ts":1589910421000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it has things with species in the name","msgtype":"m.text"},"ts":1589910432000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i have no idea what they imply though","msgtype":"m.text"},"ts":1589910442000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"also the charts seem broken","msgtype":"m.text"},"ts":1589910478000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hm indeed the charts seem broken","msgtype":"m.text"},"ts":1589910576000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i guess *all* charts are broken?","msgtype":"m.text"},"ts":1589910608000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh, no","msgtype":"m.text"},"ts":1589910610000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"use counters seem like they'd be messed up by polyfills","msgtype":"m.text"},"ts":1589910617000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the regex `Symbol.match` one was","msgtype":"m.text"},"ts":1589910627000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i remain convinced that 100% of the usage of Symbol.match on a non-regex was core-js feature-testing Symbol.match","msgtype":"m.text"},"ts":1589910644000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Bakkot: polyfills of @@species?","msgtype":"m.text"},"ts":1589910654000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"V8SloppyMode was reporting 120% of page loads on may 1st","msgtype":"m.text"},"ts":1589910662000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu yeah","msgtype":"m.text"},"ts":1589910672000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"_i am technically on family time now so i will look at this tomorrow_","msgtype":"m.text"},"ts":1589910689000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"or things testing its existance","msgtype":"m.text"},"ts":1589910689000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"shu: https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L215 https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L486-L502","msgtype":"m.text"},"ts":1589910699000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh, i misunderstood","msgtype":"m.text"},"ts":1589910703000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"messed up in the sense of false positives","msgtype":"m.text"},"ts":1589910713000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1589910717000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: Bakkot i was thinking something along the lines of domenic's suggestion, but this was raised in spidermonkey discussions and I wanted to see what was possible. It is a pain point and seems to have limited use cases, and a huge cost","msgtype":"m.text"},"ts":1589910737000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"if you can find a way to delete core-js and es5-shim/es6-shim from use counters, we'd get much more deleteable results i suspect","msgtype":"m.text"},"ts":1589910740000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the problem of the data being busted right now is worse :)","msgtype":"m.text"},"ts":1589910743000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb: i think we scrub that level of info from the data","msgtype":"m.text"},"ts":1589910762000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ystartsev: agree 100% on huge cost","msgtype":"m.text"},"ts":1589910792000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"like the amount of slow paths and extra guards that v8 has here is really not worth it","msgtype":"m.text"},"ts":1589910803000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah the perf impact for us is huge,","msgtype":"m.text"},"ts":1589910814000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"sure it's \"done\" now, but it has cross-cutting concerns for future features as well","msgtype":"m.text"},"ts":1589910827000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"_gotta duck out_","msgtype":"m.text"},"ts":1589910845000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"have a good night","msgtype":"m.text"},"ts":1589910850000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: yeah i think you're right, which is unfortunate because it means there's no way for me to actually fix Symbol.match","msgtype":"m.text"},"ts":1589911160000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm wondering if the chart for these species use counters is busted because there is literally *no* data","msgtype":"m.text"},"ts":1589911202000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"like, they have never been hit","msgtype":"m.text"},"ts":1589911209000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"can you ask the owners to read the data from the database directly?","msgtype":"m.text"},"ts":1589913147000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"shu: they have proper readings on the main popularity page","msgtype":"m.text"},"ts":1589913239000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: Bakkot: i'm reading the data directly right now in the google-internal page","msgtype":"m.text"},"ts":1589913295000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i am kind of confused","msgtype":"m.text"},"ts":1589913301000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so the popularity page says it's the % of page loads that use the corresponding feature at least once...","msgtype":"m.text"},"ts":1589913399000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i feel like i need a data scientist for this","msgtype":"m.text"},"ts":1589916691000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the most conservative view i've been able to distill is that Array @@species in particular have decreased in time but still is around ~0.006% of all page views, which is actually moderately risky","msgtype":"m.text"},"ts":1589917061000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: is there any sort of domain masking behind the scenes to know how many domains are affected?","msgtype":"m.text"},"ts":1589920803000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"also i'm curious about what makes this a conservative vs normal view","msgtype":"m.text"},"ts":1589920867000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: conservative because it's just based off page view hits","msgtype":"m.text"},"ts":1589920908000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"bradleymeck: there is info on domains affected: bottom of https://chromestatus.com/metrics/feature/timeline/popularity/1391","msgtype":"m.text"},"ts":1589920951000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that counter is specifically for modifying Array[Symbol.species]","msgtype":"m.text"},"ts":1589921133000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: quick get/set trap on some of these and a lot seems to be from a Zones polyfill?","msgtype":"m.text"},"ts":1589921606000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"sec just moving to set trap","msgtype":"m.text"},"ts":1589921664000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i couldn't parse your last two sentences :)","msgtype":"m.text"},"ts":1589921710000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: there appears to be a semi-popular library common across a variety of these sites","msgtype":"m.text"},"ts":1589921760000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ah, now i got it, Zones like domenic's old zones proposal?","msgtype":"m.text"},"ts":1589921784000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"like that ambient context thing?","msgtype":"m.text"},"ts":1589921789000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"fascinating","msgtype":"m.text"},"ts":1589921804000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i'm going to start a doc documenting what web compat data we have now to gauge risk, since page views alone makes it look risky, but my hunch is that it isn't","msgtype":"m.text"},"ts":1589921830000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"bradleymeck: are you also interested in killing off @@species?","msgtype":"m.text"},"ts":1589921842000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: i once got asked in a JS meetup what I regret most about JS things that landed, I said @@species","msgtype":"m.text"},"ts":1589921869000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"my man","msgtype":"m.text"},"ts":1589921882000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"unclear on origin, but salesforce has a different lib doing typed array detection to polyfill a Node API oddly","msgtype":"m.text"},"ts":1589921897000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"TYPED_ARRAY_SUPPORT is the token that is shared around all of this regardless of the minification... checking","msgtype":"m.text"},"ts":1589921973000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"shu: thats a lot of code on github using this pattern, i'm surprised it is that low of a counter","msgtype":"m.text"},"ts":1589922217000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but one of the main libraries in question at least on github glance https://github.com/feross/buffer/commit/753c064753a174455701cabd9e9feadff7fc768d removed that code semi-recently","msgtype":"m.text"},"ts":1589922239000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"what is Buffer?","msgtype":"m.text"},"ts":1589922314000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that use counter is specifically for the Array constructor, not all uses of @@species","msgtype":"m.text"},"ts":1589922327000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"polyfill of node buffers","msgtype":"m.text"},"ts":1589922583000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"its automatically used by webpack and such","msgtype":"m.text"},"ts":1589922616000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: https://github.com/zloirock/core-js/blob/6e3106817aa46919273b80d6f961e75a65967d22/packages/core-js/internals/set-species.js is being hit a lot too, but trying to read through core-js minified stuff is making my head hurt","msgtype":"m.text"},"ts":1589922698000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: https://unminify.io/ will probably make it a lot more readable","msgtype":"m.text"},"ts":1589922823000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"bradleymeck: \"hit a lot\" meaning?","msgtype":"m.text"},"ts":1589922882000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Bakkot: i pretty printed it, does that do more?","msgtype":"m.text"},"ts":1589922882000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck yeah it does stuff like `foo && bar()` -> `if (foo) { bar(); }`","msgtype":"m.text"},"ts":1589922915000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"shu: E.G. https://www.bmw-m.com/en/index.html , `a(\"./$.species\")(Array)` always gets shimmed?","msgtype":"m.text"},"ts":1589922918000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but reading that code is... very abstract","msgtype":"m.text"},"ts":1589922940000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"what are you using to define the set traps and make sure that gets loaded at page start?","msgtype":"m.text"},"ts":1589922987000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"replacing Object.defineProperty and putting a getter/setter on Array[@@species]","msgtype":"m.text"},"ts":1589923040000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i'm asking the more mechanical question: how do you get that to run before any other scripts run?","msgtype":"m.text"},"ts":1589923073000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i'm assuming something in devtools lets you do this?","msgtype":"m.text"},"ts":1589923081000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: https://gist.github.com/bmeck/9633a2459ffe87b62feff1304a342db4","msgtype":"m.text"},"ts":1589923134000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i put a local override in and refresh","msgtype":"m.text"},"ts":1589923141000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"just at top of page html","msgtype":"m.text"},"ts":1589923151000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ah, neat","msgtype":"m.text"},"ts":1589923156000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i wonder if firefox has something like local overrides","msgtype":"m.text"},"ts":1589923254000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"wouldn't be too bad to implement :ponder:","msgtype":"m.text"},"ts":1589923331000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"honestly i should just write an extension to be more thorough than a local override, probably missing plenty of iframe shenanigans","msgtype":"m.text"},"ts":1589923366000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"why is core-js a million 2-line files","msgtype":"m.text"},"ts":1589923658000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"what is this","msgtype":"m.text"},"ts":1589923659000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":":jazz hands:","msgtype":"m.text"},"ts":1589923760000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"my question is really why does it shim it if it exists","msgtype":"m.text"},"ts":1589924060000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yes indeed","msgtype":"m.text"},"ts":1589924065000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: does that usage counter take into account if the value is unchanged? only descriptor bits?","msgtype":"m.text"},"ts":1589924141000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it does","msgtype":"m.text"},"ts":1589924164000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`if (DESCRIPTORS && C && !C[SPECIES])`","msgtype":"m.text"},"ts":1589924165000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bradleymeck: it's not that smart, that use counter logs any time @@species is passed as the property key to a set or define on the Array constructor","msgtype":"m.text"},"ts":1589924205000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"devsnek: sitting at a debugger statement where Array[@@species] === Array right before it defineProperties it to a weird get() {return this}","msgtype":"m.text"},"ts":1589924262000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"weird","msgtype":"m.text"},"ts":1589924338000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://usercontent.irccloud-cdn.com/file/hLWcbCL6/replacing-species-anyway.png","msgtype":"m.text"},"ts":1589924340000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: so using your local override i've been pondering libertypr.com","msgtype":"m.text"},"ts":1589924370000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i think it is bundling a very very old version of core-js","msgtype":"m.text"},"ts":1589924377000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"bradleymeck: at 0.7.0 of core-js, you have this file: https://github.com/zloirock/core-js/blob/9ed55e682ff0a9814b6bb0c15c8c058bdfb8d954/src/%24.species.js","msgtype":"m.text"},"ts":1589924438000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so, the weird thing is it is replacing it with ~ the spec","msgtype":"m.text"},"ts":1589924439000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"these names match up to the strings i see in the libertypr.com sources","msgtype":"m.text"},"ts":1589924455000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it is effectively not doing anything","msgtype":"m.text"},"ts":1589924461000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i have no idea what $.FW is but it's always defining a @@species with a getter that returns \"this\"","msgtype":"m.text"},"ts":1589924483000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so... awesome","msgtype":"m.text"},"ts":1589924485000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: thats the spec behavior tho","msgtype":"m.text"},"ts":1589924544000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://tc39.es/ecma262/#sec-get-array-@@species","msgtype":"m.text"},"ts":1589924556000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: i'm saying core-js is explicitly installing a getter regardless of if C[@@species] is already set","msgtype":"m.text"},"ts":1589924573000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"very old core-js is, anyway","msgtype":"m.text"},"ts":1589924578000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"which is what these sites are bundling, i guess, and that's what's hitting a lot of the counters","msgtype":"m.text"},"ts":1589924592000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i think we're just violently agreeing?","msgtype":"m.text"},"ts":1589924612000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"this is \"good\" in that the shim is doing something useless","msgtype":"m.text"},"ts":1589924618000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and is not a compat risk","msgtype":"m.text"},"ts":1589924622000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"probably, i'm kind of confused/angry/relieved","msgtype":"m.text"},"ts":1589924629000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that's just this one site","msgtype":"m.text"},"ts":1589924649000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: i'll script out the whole list and handle iframes if you really want that data","msgtype":"m.text"},"ts":1589924667000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i think if we do enough manual legwork and see that most of these counter hits are in fact benign","msgtype":"m.text"},"ts":1589924676000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but 🤷","msgtype":"m.text"},"ts":1589924679000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i am willing to make the case internally to try this backwards breaking thing","msgtype":"m.text"},"ts":1589924696000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"what would the ideal use counter be testing for?","msgtype":"m.text"},"ts":1589924705000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"would be good to nail down the exact semantics of our check we want","msgtype":"m.text"},"ts":1589924707000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1589924713000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that {return this} function body XD","msgtype":"m.text"},"ts":1589924735000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i feel like it's not on the \"set\" but on the \"get\"","msgtype":"m.text"},"ts":1589924740000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"probably, if you do a get on an Array subclass but it isn't the `this`","msgtype":"m.text"},"ts":1589924762000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"or ... perhaps if it isn't Array?","msgtype":"m.text"},"ts":1589924774000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yeah i think the actual counter is too expensive to ship","msgtype":"m.text"},"ts":1589924793000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it's something like:","msgtype":"m.text"},"ts":1589924795000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"trap every call to get @@species in a built-in function. if `this` in the get is one of {Array,Promise,...}, count a use if the return value of the get isn't the built-in constructor, else count a use (i.e. the subclassing case)","msgtype":"m.text"},"ts":1589924885000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"thats probably a lot of checks given all the usage of array fns","msgtype":"m.text"},"ts":1589924933000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck you have `args[1] =a== Symbol.species`","msgtype":"m.text"},"ts":1589925022000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"which seems like... not what you want","msgtype":"m.text"},"ts":1589925027000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: for testing when they replace Symbol.species?","msgtype":"m.text"},"ts":1589925052000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"note the `=a==`","msgtype":"m.text"},"ts":1589925063000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah, probably not","msgtype":"m.text"},"ts":1589925073000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"oh, not in the gist","msgtype":"m.text"},"ts":1589925093000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"thats me poking around and accidentally typing in devtools","msgtype":"m.text"},"ts":1589925105000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://gist.github.com/bmeck/9633a2459ffe87b62feff1304a342db4/edit is the code i run to breakpoint it","msgtype":"m.text"},"ts":1589925132000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"good good","msgtype":"m.text"},"ts":1589925136000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"shu: is there any point in crawling those sites to manually test that counter?","msgtype":"m.text"},"ts":1589925184000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"mtg, gimme 20 mins","msgtype":"m.text"},"ts":1589925233000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ill be making dinner, will reply async","msgtype":"m.text"},"ts":1589925248000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"unsure if meeting or magic the gathering","msgtype":"m.text"},"ts":1589925258000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"do i strike you as a mtg player","msgtype":"m.text"},"ts":1589925274000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"you could probably make a comic sans deck","msgtype":"m.text"},"ts":1589925306000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"everyone in this channel is a possible mtg player","msgtype":"m.text"},"ts":1589925325000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bradleymeck: by crawling those sites to manually test, do you mean one of us scripts this?","msgtype":"m.text"},"ts":1589926401000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I have stuff already in place with minimal mods to run tests like this","msgtype":"m.text"},"ts":1589926863000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"shu: yes","msgtype":"m.text"},"ts":1589926889000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: i am a noob at scripting the browser, but i would like to try this for the sites in the data set","msgtype":"m.text"},"ts":1589926928000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Sure, just let me know all relevant stats you want I'll revive the crawler we use","msgtype":"m.text"},"ts":1589927002000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ideally this has enough smarts to even know if it looks like an old core-js shim","msgtype":"m.text"},"ts":1589927019000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"It will be slowish so a few extra counter points isn't that expensive","msgtype":"m.text"},"ts":1589927041000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"like having $.species on the stack","msgtype":"m.text"},"ts":1589927069000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Just fn src of the getter enough?","msgtype":"m.text"},"ts":1589927073000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: i will spend the rest of the day writing up a google doc capturing what i know and next steps and share it with you and yulia","msgtype":"m.text"},"ts":1589927090000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"$.species gets minified sometimes but we can count it","msgtype":"m.text"},"ts":1589927096000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"we can work out the crawler details from there","msgtype":"m.text"},"ts":1589927099000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"K","msgtype":"m.text"},"ts":1589927102000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if you make this crawler reusable enough that i can use it for other feature tests, i would be very happy about that","msgtype":"m.text"},"ts":1589927466000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I'll ask, I don't see why not","msgtype":"m.text"},"ts":1589928696000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"there was a bigquery db somewhere","msgtype":"m.text"},"ts":1589929132000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"with a lot of useful data","msgtype":"m.text"},"ts":1589929142000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it might've been google's","msgtype":"m.text"},"ts":1589929148000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"do you mean HTTP Archive? that's google's","msgtype":"m.text"},"ts":1589930399000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that's where those urls came from","msgtype":"m.text"},"ts":1589930407000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but what i understand bradleymeck to be proposing is something that does more than crawl, like it'd try to script a browser to actually load the front page with a user script and observe some behavior?","msgtype":"m.text"},"ts":1589930462000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(because if not, then yeah, we'll just run bigquery oh HAR)","msgtype":"m.text"},"ts":1589930494000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Our internal http-interceptor uses debug protocol on a browser instance, not parsing HAR","msgtype":"m.text"},"ts":1589931612000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"}
]