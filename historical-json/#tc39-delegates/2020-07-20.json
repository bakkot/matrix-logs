[
{"content":{"body":"bterlson: forcing people to fill out attendance to get the meeting link? :P","msgtype":"m.text"},"ts":1595258475000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i like it","msgtype":"m.text"},"ts":1595258502000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I only noticed the request for RSVP on the reflector mtg 77 issue this morning","msgtype":"m.text"},"ts":1595258566000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"I've \"watched\" the repo now to hopefully avoid that in future","msgtype":"m.text"},"ts":1595258587000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"someone mentioned an \"event calendar\" on that same thread","msgtype":"m.text"},"ts":1595258599000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"where is that? I don't see anything in the how-we-work repo","msgtype":"m.text"},"ts":1595258612000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"brad4d: https://github.com/tc39/Reflector/issues/290","msgtype":"m.text"},"ts":1595258663000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1595258720000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"the link appears to be to edit the form itself and not to fill it out","msgtype":"m.text"},"ts":1595263206000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"bterlson: how do i change my name to say (OpenJS Foundation) instead of (Guest)","msgtype":"m.text"},"ts":1595263448000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek do you not get an option to set your name when joining the meeting?","msgtype":"m.text"},"ts":1595264027000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I put in \"Gus Caplan\"","msgtype":"m.text"},"ts":1595264038000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it added the (Guest)","msgtype":"m.text"},"ts":1595264042000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"> Ross Kirsling (Playstation) (Guest)","msgtype":"m.text"},"ts":1595264095000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i see some people with two \"(Guest)\"s","msgtype":"m.text"},"ts":1595264109000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and a few with none, including me, but i signed in as a guest","msgtype":"m.text"},"ts":1595264123000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"chicoxyzzy: ooh, good move putting your notes abbreviations in your name","msgtype":"m.text"},"ts":1595264140000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"you think its live account related?","msgtype":"m.text"},"ts":1595264141000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1595264144000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i did not sign in and i have (Guest) next to my name","msgtype":"m.text"},"ts":1595264156000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I have Guest too","msgtype":"m.text"},"ts":1595264288000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"weird","msgtype":"m.text"},"ts":1595264293000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i left to change my name and now i'm sitting in the queue - i assume it's just manual?","msgtype":"m.text"},"ts":1595264311000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bterlson: ^","msgtype":"m.text"},"ts":1595264387000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"am i the only one still waiting to get in?","msgtype":"m.text"},"ts":1595264596000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"nvm, i'm in","msgtype":"m.text"},"ts":1595264606000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"For the meeting scheduling, could we move custom numeric literals to after records and tuples + symbol as weakmap keys?","msgtype":"m.text"},"ts":1595264661000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"How do you actually get into the video conf? (Assuming teams is up)","msgtype":"m.text"},"ts":1595264668000,"senderName":"apaprocki","senderId":"apaprocki@irc"},
{"content":{"body":"I'm worried the latter two topics could run over time, and I'm fine with that time being cannibalized from custom numeric literals","msgtype":"m.text"},"ts":1595264678000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"(btw if there's someplace else I should make this request, let me know)","msgtype":"m.text"},"ts":1595264696000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"apaprocki https://github.com/tc39/Reflector/issues/288 links a google form you fill out to get the link","msgtype":"m.text"},"ts":1595264709000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and then you click the link","msgtype":"m.text"},"ts":1595264713000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Hm yeah I did that but didn’t get a mail","msgtype":"m.text"},"ts":1595264730000,"senderName":"apaprocki","senderId":"apaprocki@irc"},
{"content":{"body":"it doesn't send you mail","msgtype":"m.text"},"ts":1595264742000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it just has the link on the page that results from clicking submit","msgtype":"m.text"},"ts":1595264751000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Ah ok must have sped through it","msgtype":"m.text"},"ts":1595264772000,"senderName":"apaprocki","senderId":"apaprocki@irc"},
{"content":{"body":"apaprocki dm'd","msgtype":"m.text"},"ts":1595264815000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that delegates info form has Thursday after Friday","msgtype":"m.text"},"ts":1595265085000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"horrifying https://gc.gy/62970054.png","msgtype":"m.text"},"ts":1595265087000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jinx","msgtype":"m.text"},"ts":1595265094000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol 3 seconds","msgtype":"m.text"},"ts":1595265104000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"BTW what do people think of replacing first name/last name on the forms with just \"name\" next time? Not all cultures have a first name/last name split","msgtype":"m.text"},"ts":1595265197000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"this is actually something I previously raised to Ecma as something we should also avoid in forms","msgtype":"m.text"},"ts":1595265221000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"just name is easier to manage i think anyway","msgtype":"m.text"},"ts":1595265229000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"+littledan I agree, let's just ask for \"name\"","msgtype":"m.text"},"ts":1595265411000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1595265417000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"google \"falsehoods programmers believe about names\"; it's a great reference for those who haven't seen it :-)","msgtype":"m.text"},"ts":1595265444000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shout out to my friend whose legal name is er3in","msgtype":"m.text"},"ts":1595265482000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what is this notify command?","msgtype":"m.text"},"ts":1595265637000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"notify command?","msgtype":"m.text"},"ts":1595265661000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like the irc `/notify`?","msgtype":"m.text"},"ts":1595265719000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek: can you tell me more? I've been researching this topic and it seems like most places don't let you have anything novel in names?","msgtype":"m.text"},"ts":1595265802000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"I want to change my legal name to have a null character in the middle or a zwsp or something","msgtype":"m.text"},"ts":1595265826000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"is it 3 as in 'ayn?","msgtype":"m.text"},"ts":1595265828000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"bterlson: born in the us. apparently her birth certificate was submitted on new years eve and not checked properly","msgtype":"m.text"},"ts":1595265868000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"omg","msgtype":"m.text"},"ts":1595265880000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"FYI, Microsoft Teams apparently has an option for \"Turn off incoming video\" if Microsoft Teams is eating your CPU/RAM for breakfast :)","msgtype":"m.text"},"ts":1595265887000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"drousso: does that help?","msgtype":"m.text"},"ts":1595265911000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"rkirsling: it was supposed to be silent but she goes by \"erthreein\"","msgtype":"m.text"},"ts":1595265913000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well pronounces it like that, still spells it er3in","msgtype":"m.text"},"ts":1595265936000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"michaelficarra it seems to have helped for me!  but not sure if that was just circumstantial 😅","msgtype":"m.text"},"ts":1595265956000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"it would be cool to get some stats on the github pages specs","msgtype":"m.text"},"ts":1595266038000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"drousso: I am trying it now","msgtype":"m.text"},"ts":1595266049000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"it would be nice to have \"just show video for person speaking\"","msgtype":"m.text"},"ts":1595266072000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra FWIW (and you probably see this too), you can still see their shared screen","msgtype":"m.text"},"ts":1595266262000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"do we have beginners in the room who would appreciate simplifications of topics that are discussed?","msgtype":"m.text"},"ts":1595266521000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev:  I'd be interested, what form are you thinking that would take?","msgtype":"m.text"},"ts":1595266805000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"I (and others who are willing) would translate what is being discussed in a beginner friendly way","msgtype":"m.text"},"ts":1595266840000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"clear up any definitions","msgtype":"m.text"},"ts":1595266861000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"etc.","msgtype":"m.text"},"ts":1595266862000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"I can't get the /notify command working in irccloud. Does it work for anyone else?","msgtype":"m.text"},"ts":1595266870000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: hm, not working for me either","msgtype":"m.text"},"ts":1595266891000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"hm, maybe freenode disabled it","msgtype":"m.text"},"ts":1595266914000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"could the chairs recommend another way to contact them?","msgtype":"m.text"},"ts":1595266982000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ystartsev: yeah speaking for me, that'd be really helpful","msgtype":"m.text"},"ts":1595267053000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"(looking into it; it might be irccloud and not freenode; if so i'll take it up with them)","msgtype":"m.text"},"ts":1595267055000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"turns out it's `/notice` not `/notify` (sorry if your IRC client makes this intrusive)","msgtype":"m.text","isIrcNotice":true},"ts":1595267081000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1595267087000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"littledan: in case you missed that - `/notice`","msgtype":"m.text"},"ts":1595267115000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: could you post the slides from your status update in the notes?","msgtype":"m.text"},"ts":1595267117000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1595267122000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ah, thanks!","msgtype":"m.text"},"ts":1595267124000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"yeah, that worked I think","msgtype":"m.text"},"ts":1595267167000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"sffc: I made a slideshow for the rounding behaviour PR and added it to the agenda separately but if we get consensus about it right here, I suppose we could save some time?","msgtype":"m.text"},"ts":1595267283000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"seems not weird to me","msgtype":"m.text"},"ts":1595267380000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"link for that issue: https://github.com/tc39/proposal-smart-unit-preferences/issues/10","msgtype":"m.text"},"ts":1595267397000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"It only affects the default value behaviour on an edge case.","msgtype":"m.text"},"ts":1595267563000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"sffc: littledan: thanks!","msgtype":"m.text"},"ts":1595267674000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"rwaldron: could you post the slides for the test262 status update in the notes?","msgtype":"m.text"},"ts":1595267760000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"mpcsh: i invited you to #tc39-beginners, i will try to do a constant stream in there","msgtype":"m.text"},"ts":1595268808000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"sweet! thank you!","msgtype":"m.text"},"ts":1595268820000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"anyone who wants to help people on board or whatever please feel free to join, also if you are new-ish or have definitions questions","msgtype":"m.text"},"ts":1595268850000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"shu: strong agree with your comment there","msgtype":"m.text"},"ts":1595269205000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"can't hear waldemar at all","msgtype":"m.text"},"ts":1595269365000,"senderName":"bnb","senderId":"bnb@irc"},
{"content":{"body":"is it just me, or is waldemar's audio garbled?","msgtype":"m.text"},"ts":1595269368000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"was robotic","msgtype":"m.text"},"ts":1595269370000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"same here","msgtype":"m.text"},"ts":1595269384000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"whew, I thought it was just me at first","msgtype":"m.text"},"ts":1595269388000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"that's how you know opus isn't being used","msgtype":"m.text"},"ts":1595269420000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"+1 waldemar","msgtype":"m.text"},"ts":1595270710000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Either side will surprise parts of people, so only syntax error could protect people","msgtype":"m.text"},"ts":1595270978000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"the syntax error would probably surprise a lot more people than one of the choices, tho","msgtype":"m.text"},"ts":1595271107000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"At least it will tell them it may be not behave like u think","msgtype":"m.text"},"ts":1595271199000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"sorry for the \"proposer with weak opinion\" bit :p","msgtype":"m.text"},"ts":1595271280000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"direct eval is enough of a power-user feature that I think we can not worry about people who are specifically intending to get direct eval with new syntax being surprised by it not working","msgtype":"m.text"},"ts":1595271314000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"And eval?.() actually have no solid use cases. so we'd better ban it","msgtype":"m.text"},"ts":1595271325000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"is there a PR or issue for this item? where is it on the agenda?","msgtype":"m.text"},"ts":1595271465000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"@shu https://github.com/tc39/ecma262/issues/2062","msgtype":"m.text"},"ts":1595271511000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"no, not that one","msgtype":"m.text"},"ts":1595271525000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the one leo is presenting right now","msgtype":"m.text"},"ts":1595271528000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: way at the bottom of the agenda","msgtype":"m.text"},"ts":1595271534000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"https://github.com/tc39/ecma262/issues/2090","msgtype":"m.text"},"ts":1595271534000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"ah thanks","msgtype":"m.text"},"ts":1595271538000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"https://github.com/tc39/proposal-numeric-separator/issues/49","msgtype":"m.text"},"ts":1595271539000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"what is the etiquette around muting someone who is making noise and doesn't seem to know they are unmuted?","msgtype":"m.text"},"ts":1595271670000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I mute aggressively, personally.","msgtype":"m.text"},"ts":1595271831000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"anyone happier with teams this time around? There have been a few updates since last meeting...","msgtype":"m.text"},"ts":1595271867000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"bterlson: the biggest problem for me is that (on iOS at least) it's impossible to change which 4 people i'm looking at. i can't hide \"folks with no video\" nor can i scoot it through the list","msgtype":"m.text"},"ts":1595271921000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Is there way to show the name of speaker in teams?","msgtype":"m.text"},"ts":1595271992000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"bterlson: Teams are still going to town with the CPU usage if I use it as a native app on Mac OS","msgtype":"m.text"},"ts":1595273594000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I see myself forced to use the browser version, which is not problematic","msgtype":"m.text"},"ts":1595273624000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"let's see how Teams deals with me building JSC on the same machine","msgtype":"m.text"},"ts":1595274514000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ystartsev: yeah you can say it continues from where the Berlin presentation left off, maybe?","msgtype":"m.text"},"ts":1595274598000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"There some uncertainty in the last meeting regarding whether internal slots with non-primitive values pose a problem to avoid.","msgtype":"m.text"},"ts":1595274879000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"Was some resolution reached around that?","msgtype":"m.text"},"ts":1595274898000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"I believe someone said they would ask MM to present his views on this.","msgtype":"m.text"},"ts":1595274922000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"but I didn't see that when I skimmed through the agenda.","msgtype":"m.text"},"ts":1595274937000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"brad4d: yes","msgtype":"m.text"},"ts":1595274952000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"there was, there are two items on the agenda related to this","msgtype":"m.text"},"ts":1595274965000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"\"documenting intrinsics\" and \"specific intrinsics","msgtype":"m.text"},"ts":1595274972000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"i don't know if we will get to them","msgtype":"m.text"},"ts":1595274981000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"but the short story is that ses group dropped it's objection afaik","msgtype":"m.text"},"ts":1595274995000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"do you mean \"documenting invariants\"?","msgtype":"m.text"},"ts":1595275024000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"There's a small write up on the Intl docs","msgtype":"m.text"},"ts":1595275027000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"gah","msgtype":"m.text"},"ts":1595275028000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1595275029000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"_invariants_ in both cases","msgtype":"m.text"},"ts":1595275035000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"https://github.com/tc39/proposal-intl-segmenter/issues/96#issuecomment-661008571","msgtype":"m.text"},"ts":1595275039000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"shiny, thx for clarifying","msgtype":"m.text"},"ts":1595275042000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"starting in 3 mins","msgtype":"m.text"},"ts":1595275114000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"Does \"NonOctal\" specifically mean \"starts with a 0, but isn't an octal?\" rather than just \"not an octal\"?","msgtype":"m.text"},"ts":1595275650000,"senderName":"brad4d","senderId":"brad4d@irc"},
{"content":{"body":"brad4d: yeah","msgtype":"m.text"},"ts":1595275674000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"its a very scary part of js","msgtype":"m.text"},"ts":1595275691000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it's specifically when 8 or 9 pulls a switcheroo in an otherwise octal context","msgtype":"m.text"},"ts":1595275700000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"bterlson: mic might be accidentally unmuted","msgtype":"m.text"},"ts":1595275705000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"abbreviated \"noctal\"","msgtype":"m.text"},"ts":1595275725000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i'm excited that the rewrite of engine262 doesn't include legacy octals at all","msgtype":"m.text"},"ts":1595275732000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(because it's catchy, I assume)","msgtype":"m.text"},"ts":1595275735000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"devsnek: doesn't that translate to \"I'm excited that engine262 doesn't implement the whole spec\" though","msgtype":"m.text"},"ts":1595275758000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"annex b?","msgtype":"m.text"},"ts":1595275766000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we have consensus to pull the non-regex/html comments part of annex B into the main spec","msgtype":"m.text"},"ts":1595275783000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"editors are just busy with other stuff","msgtype":"m.text"},"ts":1595275788000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if someone moves it out of annex b i will be very excited to implement it","msgtype":"m.text"},"ts":1595275790000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there is so much editorial work to be done","msgtype":"m.text"},"ts":1595275793000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ooh, I am excited for this presentation","msgtype":"m.text"},"ts":1595275813000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"devsnek: ahh okay","msgtype":"m.text"},"ts":1595275816000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Bakkot: same!","msgtype":"m.text"},"ts":1595275824000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"also excited for this pres","msgtype":"m.text"},"ts":1595275824000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yay let's get cognitive","msgtype":"m.text"},"ts":1595275827000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"🧠","msgtype":"m.text"},"ts":1595275832000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i'm not used to using my brain on the job","msgtype":"m.text"},"ts":1595275850000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1595275857000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we've actually made a lot of progress reducing this \"secret language\" over the years lol, it used to be sooooo esoteric","msgtype":"m.text"},"ts":1595275959000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"this is where we learn tc39 is a programming language design noob","msgtype":"m.text"},"ts":1595275969000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"michaelficarra: yeah I feel like those particular examples are at least \"it means what you think it means\"","msgtype":"m.text"},"ts":1595276013000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1595276015000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"to be clear, I'm not trying to say we don't have plenty of examples of \"secret language\" today, just that they used to be worse and more common","msgtype":"m.text"},"ts":1595276070000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1595276079000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"also we started writing them down: https://github.com/tc39/how-we-work/blob/HEAD/terminology.md","msgtype":"m.text"},"ts":1595276083000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"worth its own weight\" is a general english idiom IME, right?","msgtype":"m.text"},"ts":1595276128000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"^ yes, but what \"weight\" means in this context is complicated","msgtype":"m.text"},"ts":1595276151000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I love this use of \"viscosity\"","msgtype":"m.text"},"ts":1595276156000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"(is my take)","msgtype":"m.text"},"ts":1595276157000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"michaelficarra: +1","msgtype":"m.text"},"ts":1595276170000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it is interesting that it's called viscosity instead of liquidity","msgtype":"m.text"},"ts":1595276179000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"heh, guess that's a question of vantage point","msgtype":"m.text"},"ts":1595276195000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: i guess its whether you're thinking of \"worth the pros\" vs \"worth the cons\"","msgtype":"m.text"},"ts":1595276202000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: right: https://en.wikipedia.org/wiki/Markedness","msgtype":"m.text"},"ts":1595276222000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I guess JS tends to have a viscosity level resembling molasses","msgtype":"m.text"},"ts":1595276261000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"lol i've found the opposite","msgtype":"m.text"},"ts":1595276277000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"“ viscosity” is really a secret language itself","msgtype":"m.text"},"ts":1595276330000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"js has the viscosity of helium","msgtype":"m.text"},"ts":1595276343000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i would say I find it easier to make changes in small JS programs than in e.g. Java, but usually harder to make large changes","msgtype":"m.text"},"ts":1595276351000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oooh no CDN is a terrible acronym","msgtype":"m.text"},"ts":1595276354000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh noo it's an overload for CDN","msgtype":"m.text"},"ts":1595276356000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Cognitive Delivery Network","msgtype":"m.text"},"ts":1595276370000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"rkirsling: I can see it both ways, typed FP languages are really rigid, but they also guide your hand when refactoring","msgtype":"m.text"},"ts":1595276377000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yeah that's basically my experience","msgtype":"m.text"},"ts":1595276395000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"not just FP","msgtype":"m.text"},"ts":1595276398000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I wonder if I misunderstood the term then","msgtype":"m.text"},"ts":1595276401000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"vs. malleability / rigidity","msgtype":"m.text"},"ts":1595276409000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah it depends on whether you define viscosity as \"ease of making local changes\" or \"ease of making changes that satisfy some constraint, correctness, or type soundness, etc\"","msgtype":"m.text"},"ts":1595276425000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"omg I love the idea to enumerate our language design guidelines","msgtype":"m.text"},"ts":1595276538000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: we've had the rationale repo for a long time, it's just been really hard to get off the ground","msgtype":"m.text"},"ts":1595276563000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"michaelficarra: i'm skeptical of utility, because i don't think we can really whittle them down","msgtype":"m.text"},"ts":1595276604000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: it doesn't need to be 100%, just a \"checklist\" as Felienne puts it, of things we should consider","msgtype":"m.text"},"ts":1595276662000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yeah, like \"these are the battles one often needs to fight\"","msgtype":"m.text"},"ts":1595276678000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"er like \"the perspectives one would want to have arguments toward\"","msgtype":"m.text"},"ts":1595276726000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ohh wow I thought it was viscosity of *design*","msgtype":"m.text"},"ts":1595276755000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"not of *use*","msgtype":"m.text"},"ts":1595276761000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"my bad","msgtype":"m.text"},"ts":1595276763000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i love that this is called a \"maneuver\"","msgtype":"m.text"},"ts":1595276836000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ystartsev: \"a double equals b\"","msgtype":"m.text"},"ts":1595276897000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"or \"a triple equals b\"","msgtype":"m.text"},"ts":1595276905000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"\"abstract equality\" and \"strict equality\"","msgtype":"m.text"},"ts":1595276940000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"\"abstractly equal\" and \"strictly equal\" don't roll off the tongue nearly as well to me :-p","msgtype":"m.text"},"ts":1595276977000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"\"equal\" and \"eichwal\"","msgtype":"m.text"},"ts":1595277024000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I don't think the spec-internal names are any worse than \"double/triple equals\" lol","msgtype":"m.text"},"ts":1595277028000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"triple equal actually not strict enough (+0, -0, NaN) :-)","msgtype":"m.text"},"ts":1595277032000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"double/triple is how it's already colloquially spoken aloud","msgtype":"m.text"},"ts":1595277040000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek: eichwal, wow","msgtype":"m.text"},"ts":1595277049000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"haxjs: SameValue","msgtype":"m.text"},"ts":1595277050000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"ljharb: i know i'm very proud","msgtype":"m.text"},"ts":1595277055000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that's amazing","msgtype":"m.text"},"ts":1595277126000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I really hope we can have a Truely Strict equal ... maybe `a is b` which use `Object.is` semantic","msgtype":"m.text"},"ts":1595277129000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"eichwal would be == though, yeah?","msgtype":"m.text"},"ts":1595277133000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"\"equal\" and \"typo: you forgot a =\" operators","msgtype":"m.text"},"ts":1595277188000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"devsnek: also can you tweet that so that I can RT it without taking credit from you","msgtype":"m.text"},"ts":1595277221000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1595277251000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling: one sec, putting into drake meme format","msgtype":"m.text"},"ts":1595277378000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Can we mute Caio?","msgtype":"m.text"},"ts":1595277383000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"is anyone else finding WH's language on this topic uncomfortably aggressive?","msgtype":"m.text"},"ts":1595277466000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"can delegates not talk in #tc39-editor-group ?","msgtype":"m.text"},"ts":1595277472000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I was not aware of that channel","msgtype":"m.text"},"ts":1595277489000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"bradleymeck: I think you should be able to","msgtype":"m.text"},"ts":1595277504000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"mpcsh: Yes, I agree","msgtype":"m.text"},"ts":1595277511000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I also agree","msgtype":"m.text"},"ts":1595277522000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"bradleymeck: oh sorry, I thought you were responding to me and saying that discussion was happening in that channel","msgtype":"m.text"},"ts":1595277527000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"rickbutton: if I wanted to stop using `x == null`, would I start using `!!(x ?? !0)`?","msgtype":"m.text"},"ts":1595277583000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"\"you've actually made it worse\" was particularly unacceptable to me","msgtype":"m.text"},"ts":1595277588000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"ditto \"[the definitions] are unusably fuzzy\"","msgtype":"m.text"},"ts":1595277603000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"michaelficarra: `/null|undefined/.test(x)` is the only valid way going forward","msgtype":"m.text"},"ts":1595277647000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"rickbutton: doesn't that fail for \"null\"?","msgtype":"m.text"},"ts":1595277699000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"yes :P i was joking","msgtype":"m.text"},"ts":1595277707000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"michaelficarra: i don't appear to be able to mmm","msgtype":"m.text"},"ts":1595277714000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: I see you in there","msgtype":"m.text"},"ts":1595277739000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: can't send messages","msgtype":"m.text"},"ts":1595277748000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ooohh","msgtype":"m.text"},"ts":1595277761000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"our linter rules disable == in all cases, and our style guide suggests checking for null and undefined explicitly, but really the callee should only return one or the other, not both, and should be documented","msgtype":"m.text"},"ts":1595277777000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"most common linter configs disable `==` except when it's `== null`, fwiw","msgtype":"m.text"},"ts":1595277804000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the only thing I use `==` for is `== null`","msgtype":"m.text"},"ts":1595277806000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I don't really have a strong opinion either way, if I read `== null` i will know what it means","msgtype":"m.text"},"ts":1595277827000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"put another way, i don't know any common linter configs that allow `==` for anything non-null","msgtype":"m.text"},"ts":1595277834000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"really hope we fixed == as JS 1.2  :-P","msgtype":"m.text"},"ts":1595278011000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"ljharb: how about \"equal-equal\" and \"equal-equal-equal\" for names?","msgtype":"m.text"},"ts":1595278207000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"we shorten \"2 and 2 and 2\" to \"2 cubed\" so why not shorten those to double and triple :-p","msgtype":"m.text"},"ts":1595278257000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so we will face the typo problem for eq-eq and eq-eq-eq just like == vs === :-P","msgtype":"m.text"},"ts":1595278298000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"trying to pronounce eq-eq-eq reminds me of the Knights of Ni","msgtype":"m.text"},"ts":1595278325000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: \"2 and 2 and 2\" is 6","msgtype":"m.text"},"ts":1595278333000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"oh lol sorry, wasn't paying full attention","msgtype":"m.text"},"ts":1595278351000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"🙃","msgtype":"m.text"},"ts":1595278397000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"robpalme: update the queue?","msgtype":"m.text"},"ts":1595278604000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck you had that proposal for `private` decls outside of class bodies, yeah?","msgtype":"m.text"},"ts":1595278737000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"is that still live?","msgtype":"m.text"},"ts":1595278743000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: jridgewell I believe is still handling it","msgtype":"m.text"},"ts":1595278752000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"cool, same question to jridgewell","msgtype":"m.text"},"ts":1595278761000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i just wanted to find someone to do it","msgtype":"m.text"},"ts":1595278763000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"whoa, new VariableEnvironment, hm","msgtype":"m.text"},"ts":1595279168000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"feel weird about that a bit","msgtype":"m.text"},"ts":1595279209000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"very weird","msgtype":"m.text"},"ts":1595279213000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"would prefer disallowing `var` maybe","msgtype":"m.text"},"ts":1595279215000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"just don't do anything with var","msgtype":"m.text"},"ts":1595279225000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"any concerns with letting them hoist?","msgtype":"m.text"},"ts":1595279225000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Yes, it's still alive","msgtype":"m.text"},"ts":1595279233000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"ya just let it hoist","msgtype":"m.text"},"ts":1595279233000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ehh... class is kind of a function boundary is the reason I assume","msgtype":"m.text"},"ts":1595279238000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"But waiting for Class Fields to land before I bring it back.","msgtype":"m.text"},"ts":1595279245000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"the constructor is a function boundary","msgtype":"m.text"},"ts":1595279254000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the \"static part\" is also?","msgtype":"m.text"},"ts":1595279260000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i don't have that intuition in any sense","msgtype":"m.text"},"ts":1595279267000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"same","msgtype":"m.text"},"ts":1595279272000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"someone should get on the queue","msgtype":"m.text"},"ts":1595279291000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I think that doesn't need to be solved at this stage","msgtype":"m.text"},"ts":1595279311000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but worth bringing up if you care a bunch I guess","msgtype":"m.text"},"ts":1595279317000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"shu well it changes the scoping of `this`","msgtype":"m.text"},"ts":1595279326000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"which is a lot like being a function boundary","msgtype":"m.text"},"ts":1595279332000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"this being different is also weird","msgtype":"m.text"},"ts":1595279340000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: interesting, would need to stew on that","msgtype":"m.text"},"ts":1595279350000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Bakkot: that seems better solved to me as requiring to use class name itself, unbind this, so i can think of the static block as a run-once, well, block","msgtype":"m.text"},"ts":1595279375000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but maybe i'm missing something","msgtype":"m.text"},"ts":1595279378000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i suppose consistency with field initializers, but those are the odd ones out in my mind","msgtype":"m.text"},"ts":1595279425000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i don't get why those need `this` either","msgtype":"m.text"},"ts":1595279453000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"instances fields definitely do","msgtype":"m.text"},"ts":1595279546000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"static field initializers","msgtype":"m.text"},"ts":1595279575000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it's nice to not have to repeat the class name","msgtype":"m.text"},"ts":1595279586000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"within the context of static it is weird to bring `this` into it","msgtype":"m.text"},"ts":1595279589000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"imo","msgtype":"m.text"},"ts":1595279590000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'd prefer \"class access expressions\" over using `this` tho","msgtype":"m.text"},"ts":1595279602000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"is that the uh","msgtype":"m.text"},"ts":1595279624000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`class.x` thing","msgtype":"m.text"},"ts":1595279626000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1595279639000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"+1 on that","msgtype":"m.text"},"ts":1595279647000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"since that proposal exists i don't see a point in binding `this`","msgtype":"m.text"},"ts":1595279665000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it doesn't exist yet tho","msgtype":"m.text"},"ts":1595279703000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"what doesn't exist yet","msgtype":"m.text"},"ts":1595279716000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that proposal has not advanced","msgtype":"m.text"},"ts":1595279729000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"to stage 4","msgtype":"m.text"},"ts":1595279733000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1595279738000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"right. it's still stage 1 iirc","msgtype":"m.text"},"ts":1595279740000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"if it was stage 4, then i'd have wanted static class fields to not have `this` available either","msgtype":"m.text"},"ts":1595279763000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm saying we should recognize the value of that here instead of hacking it in with `this`","msgtype":"m.text"},"ts":1595279763000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but since static class fields already bind the `this` i think it'd be very weird for static blocks not to","msgtype":"m.text"},"ts":1595279783000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"class.this.* is > than class.*","msgtype":"m.text"},"ts":1595279789000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1595279799000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"not even joking","msgtype":"m.text"},"ts":1595279804000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i don't understand","msgtype":"m.text"},"ts":1595279810000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"isn't that just `class.*`","msgtype":"m.text"},"ts":1595279814000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what is class.this?","msgtype":"m.text"},"ts":1595279815000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"`class.` is supposed to be a way to reference the current class constructor","msgtype":"m.text"},"ts":1595279823000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so like, `class C { static x() { return class.x === C.x; } } C.x() // true`","msgtype":"m.text"},"ts":1595279863000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"you're suggesting `class.this.x`?","msgtype":"m.text"},"ts":1595279871000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I mean what is `class.this` , it should be `this` property on the class?","msgtype":"m.text"},"ts":1595279871000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"devsnek: except it leaves space for any other meta-properties we may want","msgtype":"m.text"},"ts":1595279873000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"`class.this` definitely should be the \"this\" property on the class","msgtype":"m.text"},"ts":1595279882000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: what else would we want tho? the class is the constructor, conceptually","msgtype":"m.text"},"ts":1595279900000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"`class.#x` would work too, i assume","msgtype":"m.text"},"ts":1595279914000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"decorator stuff, exposing other things that aren't obvious (heritage?)","msgtype":"m.text"},"ts":1595279966000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"heritage is Object.getPrototypeOf(class)","msgtype":"m.text"},"ts":1595279985000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not if you don't use extends","msgtype":"m.text"},"ts":1595279996000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"then its not real heritage","msgtype":"m.text"},"ts":1595280008000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and not our problem","msgtype":"m.text"},"ts":1595280011000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it still inherits XD","msgtype":"m.text"},"ts":1595280015000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"we can argue about various possible futures, but if i got some time i could probably ramble on with ideas of things i might want to store","msgtype":"m.text"},"ts":1595280047000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if we want it to be static constructor why not just `static constructor`","msgtype":"m.text"},"ts":1595280058000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bradleymeck: `class.@decoratorStuff`","msgtype":"m.text"},"ts":1595280062000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh i guess that overrides the constructor property","msgtype":"m.text"},"ts":1595280073000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1595280075000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"anyway if that's the goal it should be a lot clearer","msgtype":"m.text"},"ts":1595280084000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Could we use `static.x` syntax instead of `class.x` ?","msgtype":"m.text"},"ts":1595280147000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"we could, but i don't see why that'd be clearer","msgtype":"m.text"},"ts":1595280181000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"haxjs: what's the advantage to using `static.`?","msgtype":"m.text"},"ts":1595280190000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"mapping to  static declaration I think.","msgtype":"m.text"},"ts":1595280205000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"rbuckton: maybe my concern can be addressed by simply changing the name of the feature to \"static constructor\"","msgtype":"m.text"},"ts":1595280272000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"haxjs: worth filing on https://github.com/tc39/proposal-class-access-expressions","msgtype":"m.text"},"ts":1595280277000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and communicating it both inside and outside of committee using that, while keeping the block syntax","msgtype":"m.text"},"ts":1595280290000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"using a function syntax would be interesting","msgtype":"m.text"},"ts":1595280312000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: I named it based on its syntax, I was worried calling it `static constructor` would be possibly confusing because `static constructor () {}` is legal: https://usercontent.irccloud-cdn.com/file/tEbveTEq/image.png","msgtype":"m.text"},"ts":1595280387000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"this is one of the most arcane parts of the web platform","msgtype":"m.text"},"ts":1595280427000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hope y'all are paying attention","msgtype":"m.text"},"ts":1595280433000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"this is all i think about","msgtype":"m.text"},"ts":1595280443000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rbuckton: `static #constructor`?","msgtype":"m.text"},"ts":1595280495000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"maybe too much magic","msgtype":"m.text"},"ts":1595280507000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"@ljharb filed https://github.com/tc39/proposal-class-access-expressions/issues/3","msgtype":"m.text"},"ts":1595280574000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Not a big fan of `static #constructor`, a lot to write, hard to remember, and too easy to do the wrong thing and forget the `#`","msgtype":"m.text"},"ts":1595280597000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"haxjs: ty","msgtype":"m.text"},"ts":1595280608000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rbuckton: yeah idk, i would be on board with the static constructor idea if it was clearer that it was like a function","msgtype":"m.text"},"ts":1595280634000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"also static blocks have precedent in languages like e.g. Java","msgtype":"m.text"},"ts":1595280635000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I prefer using the same syntax for things where it makes sense to do so","msgtype":"m.text"},"ts":1595280650000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"like even if we did getter style syntax `static ( ) Block` sort of thing","msgtype":"m.text"},"ts":1595280661000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"What will happen if have multiple static block?","msgtype":"m.text"},"ts":1595280698000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"if its not a function i don't think it should do function things","msgtype":"m.text"},"ts":1595280698000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"haxjs: i assumeearly error like multiple constructors","msgtype":"m.text"},"ts":1595280713000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the presentation said early error","msgtype":"m.text"},"ts":1595280759000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Java seems allow multiple static block","msgtype":"m.text"},"ts":1595280783000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"The problem with `static.x` is that `static` isn't a reserved word, so we could break existing code.","msgtype":"m.text"},"ts":1595280802000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"ah right","msgtype":"m.text"},"ts":1595280812000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rbuckton static is reserved word in strict mode, and class code is strict","msgtype":"m.text"},"ts":1595280829000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1595280843000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"let static = 1;","msgtype":"m.text"},"ts":1595280843000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"class C {","msgtype":"m.text"},"ts":1595280843000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"  static {","msgtype":"m.text"},"ts":1595280843000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"    static; // 1 or `this`?","msgtype":"m.text"},"ts":1595280843000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"  }","msgtype":"m.text"},"ts":1595280844000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"}","msgtype":"m.text"},"ts":1595280844000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1595280845000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"`static` by itself would be 1","msgtype":"m.text"},"ts":1595280860000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"static in a class body is a reserved word","msgtype":"m.text"},"ts":1595280868000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but if `let static = { x: 1 };` then `static.x` would be the question","msgtype":"m.text"},"ts":1595280872000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"fwiw I like `this` a lot better than this new syntax","msgtype":"m.text"},"ts":1595280882000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"devsnek: so `x = static.y;` is invalid?","msgtype":"m.text"},"ts":1595280890000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"not valid in class","msgtype":"m.text"},"ts":1595280900000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"ljharb: yes","msgtype":"m.text"},"ts":1595280908000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1595280924000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"static is a reserved word in strict mode","msgtype":"m.text"},"ts":1595280926000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I guess `static` is reserved in strict, but still it feels weird to reuse it.","msgtype":"m.text"},"ts":1595280929000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"and class bodies are strict","msgtype":"m.text"},"ts":1595280930000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"how can we ensure that people use the queue? it's highly disruptive and burdensome on the notetakers when people interrupt a presentation for what should be entered as a clarifying question on the queue. WH has done this twice today, despite my earlier reminder to use the queue after the first instance.","msgtype":"m.text"},"ts":1595280933000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"that being said","msgtype":"m.text"},"ts":1595280936000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't like using `static` for this","msgtype":"m.text"},"ts":1595280940000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"+1 for `class`","msgtype":"m.text"},"ts":1595280949000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Neither do I. I proposed `class.x` because there would be no ambiguity","msgtype":"m.text"},"ts":1595280956000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1595280964000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Well, that's it for me this TC39, I won't be available for the rest of it. Thanks all","msgtype":"m.text"},"ts":1595281068000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"rbuckton: thank you sir :)","msgtype":"m.text"},"ts":1595281077000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"bradleymeck: could you bind the function constructor or eval with the first argument being the string","msgtype":"m.text"},"ts":1595281106000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"mpcsh: Please stop the personal attacks","msgtype":"m.text"},"ts":1595281158000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"wsdferdksl: (assuming this is Waldemar) I didn't realize you were on IRC, will send a DM","msgtype":"m.text"},"ts":1595281261000,"senderName":"mpcsh","senderId":"mpcsh@irc"},
{"content":{"body":"shu: mark is saying if the base is null, delegate to the surrounding realm","msgtype":"m.text"},"ts":1595281473000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"s/base/referencingScriptOrModule/","msgtype":"m.text"},"ts":1595281592000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: i understood mark as saying delegate to the [[Realm]] that the eval came from","msgtype":"m.text"},"ts":1595281624000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"a second please","msgtype":"m.text"},"ts":1595281626000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"devsnek: thats unclear as the behavior seems to call the hook with the execution context that is enqueueing the job","msgtype":"m.text"},"ts":1595281636000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"an indirect eval should have the correct realm","msgtype":"m.text"},"ts":1595281658000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: that would be the active realm afaik","msgtype":"m.text"},"ts":1595281714000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: question is what if it itself doesn't have an active script?","msgtype":"m.text"},"ts":1595281748000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"at that point it is html's problem right? you have a realm that came from some page","msgtype":"m.text"},"ts":1595281790000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the specificity is \"the entire page\"","msgtype":"m.text"},"ts":1595281828000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it's not html's problem","msgtype":"m.text"},"ts":1595281921000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i mean it is, but it needs JS to tell it when to do the capture","msgtype":"m.text"},"ts":1595281933000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"which is what this is","msgtype":"m.text"},"ts":1595281943000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"bradleymeck: i am pretty sure incumbents are not polyfillable","msgtype":"m.text"},"ts":1595281951000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"given the active realm doesn't that give you the correct incumbent","msgtype":"m.text"},"ts":1595281959000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i wouldn't expect any host hook things to be polyfillable atm","msgtype":"m.text"},"ts":1595281961000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"you can't polyfill the unhandled rejection hook either","msgtype":"m.text"},"ts":1595281975000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: the backup incumbent stack, that is, nor the active script check for dynamic import() base url","msgtype":"m.text"},"ts":1595281985000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"bradleymeck: the question to you is why is that a goal?","msgtype":"m.text"},"ts":1595281992000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb: the problem is that if you polyfill Promise.prototype.finally it won't match a native impl ever","msgtype":"m.text"},"ts":1595282001000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: that's already true, because of `await`","msgtype":"m.text"},"ts":1595282019000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"well, i guess since it calls into a native `.then`, it'd work fine","msgtype":"m.text"},"ts":1595282046000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: that's a different problem, which is HTML's implementation of the hook isn't polyfillable, and therefore you can't polyfill a perfect replica of one integrated with HTML","msgtype":"m.text"},"ts":1595282060000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb: it would be relative to the polyfill not the document from my understanding","msgtype":"m.text"},"ts":1595282071000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: but in a host where there's no unhandled rejection behavior, it's not possible to provide that behavior","msgtype":"m.text"},"ts":1595282072000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: oh sorry i'm talking about unhandled rejections; not this one","msgtype":"m.text"},"ts":1595282085000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: i'm trying to claim that it's not a reasonable expectation to be able to polyfill any host hook","msgtype":"m.text"},"ts":1595282102000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: sure, but i'm just coming from node's perspective not purely HTML","msgtype":"m.text"},"ts":1595282106000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"and the behavior isn't necessarily problematic, but very unexpected","msgtype":"m.text"},"ts":1595282122000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"and that makes me not want to move forward on my level of review for this meeting","msgtype":"m.text"},"ts":1595282140000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if it just errored instead of resolving against the user code that is acting like native code, that seems fine","msgtype":"m.text"},"ts":1595282181000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"what errors? i am confused","msgtype":"m.text"},"ts":1595282195000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"alright we have four minutes to push monads through","msgtype":"m.text"},"ts":1595282208000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like the proposal is to add a host hook that by default is a nop, not to add any specific behavior","msgtype":"m.text"},"ts":1595282210000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: correct, and I am unclear on why we would ever want to have the expected usage of the hook behavior","msgtype":"m.text"},"ts":1595282239000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the expected behavior seems to misalign with my expectations","msgtype":"m.text"},"ts":1595282247000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"shu: i don't get why %eval%.[[Realm]] isn't the correct realm","msgtype":"m.text"},"ts":1595282265000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i do want to fix the code example, but the solution seems off","msgtype":"m.text"},"ts":1595282265000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: because the web already works this way for all web APIs, and firefox already works this way for Promises, and i want to reflect that reality in the spec instead of stringing together willful violations","msgtype":"m.text"},"ts":1595282283000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"bradleymeck: i'm fairly confident there isn't a significantly cleaner way to layer this","msgtype":"m.text"},"ts":1595282301000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"sorry for the technical issues, everyone. My computer seems to be really acting up today but I'm avoiding a restart because kernel updates 😅","msgtype":"m.text"},"ts":1595282308000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"shu: I'd agree but I don't really want hosts to diverge here and thats what the hook is encouraging","msgtype":"m.text"},"ts":1595282319000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ryzokuken: was fine tbh","msgtype":"m.text"},"ts":1595282323000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: thanks","msgtype":"m.text"},"ts":1595282335000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"also, i hate pulseaudio","msgtype":"m.text"},"ts":1595282340000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"but yes","msgtype":"m.text"},"ts":1595282343000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"shu: in part because, it is soo edge casey already, does it even need to be fixed?","msgtype":"m.text"},"ts":1595282369000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"do newer web APIs even have this behavior or are we trying to align with what is considered bad practice these days","msgtype":"m.text"},"ts":1595282406000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: yes, if you use WebIDL you basically have this behavior","msgtype":"m.text"},"ts":1595282420000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"bradleymeck: it needs to be fixed largely because HTML folks feel strongly that finalizers and promises should align with WebIDL here","msgtype":"m.text"},"ts":1595282442000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and i'd rather give them a clean point than willful violations","msgtype":"m.text"},"ts":1595282450000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"firefox especially feels that finalizers and promises should track incumbents","msgtype":"m.text"},"ts":1595282468000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: i'm not really sure how user code or node could align with that","msgtype":"m.text"},"ts":1595282470000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: they don't, that's why it's a host hook","msgtype":"m.text"},"ts":1595282484000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"full virtualizability is not a goal","msgtype":"m.text"},"ts":1595282492000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i understand you might desire that, but that's not true today","msgtype":"m.text"},"ts":1595282500000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: node doesn't need virtualizability","msgtype":"m.text"},"ts":1595282502000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"sorry i was responding to the \"how user code could align with that\"","msgtype":"m.text"},"ts":1595282513000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: just the host itself seems to be against this pattern","msgtype":"m.text"},"ts":1595282513000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"node COULD align with it by providing some privileged API that's like \"capture incumbent\"","msgtype":"m.text"},"ts":1595282528000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"we have no such existing APIs, and that seems very odd to me","msgtype":"m.text"},"ts":1595282546000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"do you have a rejection handler API, right?","msgtype":"m.text"},"ts":1595282557000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"err, s/right//","msgtype":"m.text"},"ts":1595282562000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1595282563000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"this would be along those lines if it was important to capture the backup incumbent stack behavior","msgtype":"m.text"},"ts":1595282590000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i don't understand that last sentence","msgtype":"m.text"},"ts":1595282605000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if it was important for node to capture the backup incumbent settings object stack behavior that HTML exhibits, then node could expose an API like \"capture incumbent\" and \"restore incumbent\" along the same lines of the already-provided rejection handler API","msgtype":"m.text"},"ts":1595282662000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i am unclear on what we need to capture, we already get the hook via the realm. I don't think stating everything related to \"backup\" + \"incumbent\" + (the settings object) is helping","msgtype":"m.text"},"ts":1595282745000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i'm familiar with settings and have some understanding of incumbent","msgtype":"m.text"},"ts":1595282765000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i tried to abstract all of that away with a notion of \"some ambient state at the point of passing a callback to an API that eventually schedules the job\" but that's even harder to talk about, i guess","msgtype":"m.text"},"ts":1595282796000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but none of this seems to align with my understanding of how this hook is supposed to enable a use case except for a very specific things for HTML and cause other hosts to have potentially drastic differences in how import() works","msgtype":"m.text"},"ts":1595282804000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ah, is that the actual concern, for import() divergence?","msgtype":"m.text"},"ts":1595282838000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: i think as long as we can align on what wouldn't cause node libs to require themselves to use privileged APIS and manage their own contexts it would be fine","msgtype":"m.text"},"ts":1595282853000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"shu: yes","msgtype":"m.text"},"ts":1595282856000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i think mark's is around grabbing the data from the execution context itself","msgtype":"m.text"},"ts":1595282874000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"which seems... bad to me","msgtype":"m.text"},"ts":1595282879000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but not fatal","msgtype":"m.text"},"ts":1595282882000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: do you have time to try to work through that right now?","msgtype":"m.text"},"ts":1595282884000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"nope, gotta feed a kid","msgtype":"m.text"},"ts":1595282891000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"k, let me schedule something for later then","msgtype":"m.text"},"ts":1595282901000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1595282905000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"devsnek: as for why eval's [[Realm]] wouldn't work, please read through the convoluted examples in https://html.spec.whatwg.org/#incumbent","msgtype":"m.text"},"ts":1595283380000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: I was looking through them, I don't get why it wouldn't","msgtype":"m.text"},"ts":1595283422000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the last one, with iframes","msgtype":"m.text"},"ts":1595283480000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"you could schedule a Promise.resolve('import(\"whatever\")').then(otherFrame.eval)","msgtype":"m.text"},"ts":1595283499000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the incumbent should still be yourself","msgtype":"m.text"},"ts":1595283503000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: I think the point was in that case it should be the other frame","msgtype":"m.text"},"ts":1595283650000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what do you mean \"it should\"?","msgtype":"m.text"},"ts":1595283669000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"idk, a value judgement","msgtype":"m.text"},"ts":1595283681000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that behavior is not up for debate, it is what it is today","msgtype":"m.text"},"ts":1595283694000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"only in firefox though right?","msgtype":"m.text"},"ts":1595283753000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"no, for all web APIs (setTimeout) in all browsers, and for Promises only in Firefox","msgtype":"m.text"},"ts":1595283773000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so the question is, if we refuse to add these hooks to ecma262, there'll always be this corner case that makes Job-queuing APIs in ecma262 different from those that use WebIDL","msgtype":"m.text"},"ts":1595283830000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that's one outcome","msgtype":"m.text"},"ts":1595283848000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but there's no outcome where we, as tc39, can legislate the behavior away","msgtype":"m.text"},"ts":1595283862000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"as long as promises observably stay the same, html can say they do additional things right?","msgtype":"m.text"},"ts":1595283899000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't understand what you mean by \"observably stay the same\"","msgtype":"m.text"},"ts":1595283937000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"like can't it just say \"insert this logic\"","msgtype":"m.text"},"ts":1595283967000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that's not violating ecma262","msgtype":"m.text"},"ts":1595283977000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"insert this logic in the middle of two algorithmic steps in a builtin?","msgtype":"m.text"},"ts":1595283986000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I guess something like that, yeah","msgtype":"m.text"},"ts":1595284005000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"technically it can do whatever it wants, but myself, as a 262 editor, and the html editors, want a well understood, structured way to interface the specs","msgtype":"m.text"},"ts":1595284033000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"thus host hooks","msgtype":"m.text"},"ts":1595284036000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"this is not a question of expressivity. willful violations are also possible","msgtype":"m.text"},"ts":1595284048000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah it just seems like a very undesirable behaviour we wouldn't want to encourage","msgtype":"m.text"},"ts":1595284070000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I'm not expressly against the hooks","msgtype":"m.text"},"ts":1595284080000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i lament that we will intentionally create a harder to read document because of a lack of real argument","msgtype":"m.text"},"ts":1595284081000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i don't get this encouraging point","msgtype":"m.text"},"ts":1595284092000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"you can almost do whatever you want with the module specifier right now","msgtype":"m.text"},"ts":1595284103000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but you weren't primed with that whatever's done right now is \"weird and arcane\"","msgtype":"m.text"},"ts":1595284115000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"like within the design of the language you'd want the \"context\" to be determined by the eval, not where the string was written","msgtype":"m.text"},"ts":1595284144000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"maybe that's what mark meant by dynamic scope","msgtype":"m.text"},"ts":1595284152000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that is what he's meant, but it's also not up to him or tc39 to decide, because that weirdness is already here with setTimeout","msgtype":"m.text"},"ts":1595284175000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"or at least i also believe that's what he meant","msgtype":"m.text"},"ts":1595284185000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"also it's not where the string is written, it's where the eval was passed","msgtype":"m.text"},"ts":1595284191000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"theoretically what happens if js stuff determines the incumbent differently","msgtype":"m.text"},"ts":1595284325000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what does that mean, it provides a different default implementation than no-op?","msgtype":"m.text"},"ts":1595284360000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"differently from setTimeout","msgtype":"m.text"},"ts":1595284387000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"theoretically nothing happens because theoretically there is no default implementation of job scheduling and running","msgtype":"m.text"},"ts":1595284426000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I mean what if it works like not firefox","msgtype":"m.text"},"ts":1595284452000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"then patterns like passing `postMessage.bind(whatever)` into Promise#then will behave differently from passing it into setTimeout","msgtype":"m.text"},"ts":1595284531000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"a rare gotcha","msgtype":"m.text"},"ts":1595284541000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it is also possible that HTML and browsers decide, well, we'll just do the behavior anyways without host hooks","msgtype":"m.text"},"ts":1595284556000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"in which case both will work the same but the specs will unfortunately obscure this fact","msgtype":"m.text"},"ts":1595284585000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"you could say all new APIs do the active realm trick and timers are the exception","msgtype":"m.text"},"ts":1595284598000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but it's not just all setTimeout, it's *all* WebIDL that takes callbacks","msgtype":"m.text"},"ts":1595284620000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and you could say that, but does that serve the web dev better than aligning?","msgtype":"m.text"},"ts":1595284635000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i haven't heard a good argument that it does","msgtype":"m.text"},"ts":1595284643000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I guess I'm having trouble imagining when any of these options provide any use to a web dev anyway","msgtype":"m.text"},"ts":1595284666000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"fair, but having complete interop semantics is the general strength of the web platform, and i'd like to keep that","msgtype":"m.text"},"ts":1595284752000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I assume the web breaks if you change webidl to use the builtin function's realm","msgtype":"m.text"},"ts":1595284939000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"for everything","msgtype":"m.text"},"ts":1595284946000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that's the assumption","msgtype":"m.text"},"ts":1595285101000,"senderName":"shu","senderId":"shu@irc"}
]