[
{"content":{"body":"the most hilarious thing","msgtype":"m.text"},"ts":1600647588000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"is that it is a national holiday in Japan","msgtype":"m.text"},"ts":1600647594000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I'm not sure how we didn't notice this...lol >_<","msgtype":"m.text"},"ts":1600647610000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I underestimated myself working on a Sunday night, after a weekend full of parenting duties.","msgtype":"m.text"},"ts":1600647671000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"yeah, today is 敬老の日 (Respect for the Aged Day) and tomorrow is 秋分の日 (Autumnal Equinox Day)","msgtype":"m.text"},"ts":1600648151000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so my Japanese colleagues are all off...oops","msgtype":"m.text"},"ts":1600648215000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Guten Morgen, fellow delegates.","msgtype":"m.text"},"ts":1600648651000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"leobalter: early Monday morning here, and I'd be _so_ much happier if it were Sunday evening lol","msgtype":"m.text"},"ts":1600648703000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"5 AM on monday morning is the worst, I wouldn't wish it on my worst enemies :D","msgtype":"m.text"},"ts":1600648724000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"the last GA meeting started at 4AM in my time zone :)","msgtype":"m.text"},"ts":1600648750000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"it was me held by a cup of coffee","msgtype":"m.text"},"ts":1600648760000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"leobalter: talking of coffee... :)","msgtype":"m.text"},"ts":1600648774000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"yeah time to make a 8:40PM cup of coffee","msgtype":"m.text"},"ts":1600648788000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600648797000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"are we using hubs again this time?","msgtype":"m.text"},"ts":1600648990000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"anyone on it yet?","msgtype":"m.text"},"ts":1600648993000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"tomoki_imai: 👋","msgtype":"m.text"},"ts":1600649577000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"of course my laptop picks this time for the gpu drivers to break","msgtype":"m.text"},"ts":1600649584000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh no","msgtype":"m.text"},"ts":1600649595000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"FWIW from Android, it only let me set my name once, and when I disconnected and reconnected, it remembered my name","msgtype":"m.text"},"ts":1600649733000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"so that's why I'm set to \"Daniel\", apologies","msgtype":"m.text"},"ts":1600649741000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"am i supposed to do something here https://gc.gy/68354869.png","msgtype":"m.text"},"ts":1600649873000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"can someone update the MOTD","msgtype":"m.text"},"ts":1600650750000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1600650844000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jinx","msgtype":"m.text"},"ts":1600650847000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i guess technically you beat me by 2s :-(","msgtype":"m.text"},"ts":1600650866000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh wait i can set the motd","msgtype":"m.text"},"ts":1600650872000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"neat","msgtype":"m.text"},"ts":1600650875000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"omg nothing works :-(","msgtype":"m.text"},"ts":1600651295000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"teams is so bad","msgtype":"m.text"},"ts":1600651298000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I HAD SO FEW COMPLAINTS ABOUT MICROSOFT COLLABORATION PRODUCTS UNTIL TWO WEEKS AGO AND NOW I ONLY TYPE IN CAPS","msgtype":"m.text"},"ts":1600651321000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"we should just standardize on a single tool for meetings","msgtype":"m.text"},"ts":1600651321000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"is it just me or do we see Aki's slides?","msgtype":"m.text"},"ts":1600651346000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"what have we used so far? zoom and teams?","msgtype":"m.text"},"ts":1600651346000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"apparently we could just take control","msgtype":"m.text"},"ts":1600651381000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"yeah. zoom worked well except for the privacy worries :-/","msgtype":"m.text"},"ts":1600651389000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"google meet?","msgtype":"m.text"},"ts":1600651394000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"i don't think we actually used meet","msgtype":"m.text"},"ts":1600651405000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"jitsi 🙈","msgtype":"m.text"},"ts":1600651412000,"senderName":"ryzokuken","senderId":"ryzokuken@irc"},
{"content":{"body":"discord :D","msgtype":"m.text"},"ts":1600651426000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"meet would seem fine; I just never had a huge meeting in it","msgtype":"m.text"},"ts":1600651431000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"don't even know what that is","msgtype":"m.text"},"ts":1600651435000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"imagine, all our chat and video in one place","msgtype":"m.text"},"ts":1600651437000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jitsi == oss zoom","msgtype":"m.text"},"ts":1600651442000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"MylesBorins: Its possible to upload a PowerPoint to Teams for a meeting which lets anyone move around within the slides without affecting everyone else, and I think that's what akirose was trying earlier. For some reason it took over sharing from Istvan.","msgtype":"m.text"},"ts":1600651492000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"super strange","msgtype":"m.text"},"ts":1600651504000,"senderName":"MylesBorins","senderId":"MylesBorins@irc"},
{"content":{"body":"¯\\_(ツ)_/¯","msgtype":"m.text"},"ts":1600651505000,"senderName":"MylesBorins","senderId":"MylesBorins@irc"},
{"content":{"body":"yeah it's what i was doing earlier and long long after i had given up and no longer had the sharing view, it apparently came back for everyone but me","msgtype":"m.text"},"ts":1600651531000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"that feature was broken last time we used teams too","msgtype":"m.text"},"ts":1600651534000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"rbuckton: unfortunately with that feature, it seems like it's really easy to lose \"the presenter advances the slides\" sync","msgtype":"m.text"},"ts":1600651538000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rbuckton: iow i've found i have to constantly manually advance a slide and hit \"to presenter\" to sync it up","msgtype":"m.text"},"ts":1600651552000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"there's a chrome extension internally that lets meeting participants control Slides sharing, and it is always chaos","msgtype":"m.text"},"ts":1600651561000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"a nice idea in theory","msgtype":"m.text"},"ts":1600651567000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"zoom is the only one of these which seems to consistently actually work","msgtype":"m.text"},"ts":1600651663000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"petition to only use zoom in the future","msgtype":"m.text"},"ts":1600651668000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"F5 has an account, we might be able to \"host\"","msgtype":"m.text"},"ts":1600651683000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"seconded","msgtype":"m.text"},"ts":1600651693000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I would support that","msgtype":"m.text"},"ts":1600651695000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"petition to try discord once first","msgtype":"m.text"},"ts":1600651695000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"banned from paypal computers i think","msgtype":"m.text"},"ts":1600651697000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"orz","msgtype":"m.text"},"ts":1600651711000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Bakkot: googlers are still discouraged from using the Zoom desktop client; requires an exception","msgtype":"m.text"},"ts":1600651842000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i've never used the web version, does that also work well","msgtype":"m.text"},"ts":1600651854000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i use the web version for things that require it, seems to be functional","msgtype":"m.text"},"ts":1600651879000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu is \"I need it to participate in the standards body of which I am editor, which uses it because it is the only functional video client\" a valid exception","msgtype":"m.text"},"ts":1600651912000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: they would take exception to the second phrase but it's certainly a valid exception","msgtype":"m.text"},"ts":1600651940000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but i am not the only googler, just saying it's not zero-friction","msgtype":"m.text"},"ts":1600651951000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Bakkot or ljharb can you give me a slides link for the notes when you have a sec","msgtype":"m.text"},"ts":1600652019000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"yeah, just seems like there's a bunch of friction with every client, except that the end result with Zoomo is that you have a functional meeting","msgtype":"m.text"},"ts":1600652041000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"we could give meet a try, but i","msgtype":"m.text"},"ts":1600652065000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"err","msgtype":"m.text"},"ts":1600652067000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but i've also never had a meeting of this size on Meet","msgtype":"m.text"},"ts":1600652075000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I've had meetings with 100+ people in a room and it works","msgtype":"m.text"},"ts":1600652091000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"no no, #2086 is a small PR!","msgtype":"m.text"},"ts":1600652124000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Bakkot: can you say how the meeting is not working?","msgtype":"m.text"},"ts":1600652180000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"how can I help","msgtype":"m.text"},"ts":1600652188000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"rickbutton: https://j.mp/262editor202009 - i'll add them to the agenda shortly","msgtype":"m.text"},"ts":1600652221000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"thx :)","msgtype":"m.text"},"ts":1600652230000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"bterlson I'm mostly referring to the thing where Aki struggled to present, but I'm also salty about a.) when presenting I can't see anyone's faces and b.) when not presenting I can only see at most 9 people","msgtype":"m.text"},"ts":1600652287000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"how was i meant to present in presenter view? I HAD NOTES","msgtype":"m.text"},"ts":1600652326000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"Bakkot: ok got it","msgtype":"m.text"},"ts":1600652371000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"bterlson: hm, i didn't see anything on TCQ","msgtype":"m.text"},"ts":1600652765000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"https://tcq.app/meeting/BSXq ?","msgtype":"m.text"},"ts":1600652780000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"oh whoops","msgtype":"m.text"},"ts":1600652794000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"ahhh the draft schedule has KfmX","msgtype":"m.text"},"ts":1600652795000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah that's last month","msgtype":"m.text"},"ts":1600652820000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"will tell aki to update","msgtype":"m.text"},"ts":1600652822000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"is it a problem that that just got exposed?","msgtype":"m.text"},"ts":1600652823000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"kk ty","msgtype":"m.text"},"ts":1600652826000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"not really","msgtype":"m.text"},"ts":1600652869000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"some random person could spam us with POO but that is unlikely","msgtype":"m.text"},"ts":1600652894000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if we had sensitive issues on the agenda it would be a concern","msgtype":"m.text"},"ts":1600652921000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"needs a github login so isn't anonymous","msgtype":"m.text"},"ts":1600652923000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I'm very happy about this SDO restructuring","msgtype":"m.text"},"ts":1600652927000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"we're switching from object oriented to pattern matching!","msgtype":"m.text"},"ts":1600652936000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"it's just so hard to read the current spec layout","msgtype":"m.text"},"ts":1600652946000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1600652948000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"pattern matching O.o","msgtype":"m.text"},"ts":1600652956000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I hadn't followed that work","msgtype":"m.text"},"ts":1600652959000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"which one is that again","msgtype":"m.text"},"ts":1600652982000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek https://github.com/tc39/ecma262/issues/1950","msgtype":"m.text"},"ts":1600653021000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"assuming I understand the question","msgtype":"m.text"},"ts":1600653025000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh i thought there was a pr","msgtype":"m.text"},"ts":1600653048000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"curious what \"pattern matching\" means in this context","msgtype":"m.text"},"ts":1600653056000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lol I love devsnek's `yes yes so much yes`","msgtype":"m.text"},"ts":1600653058000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"no, not yet","msgtype":"m.text"},"ts":1600653062000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"rkirsling: i have spent too much of my life jumping around the spec looking for early errors","msgtype":"m.text"},"ts":1600653076000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"no point in making the PR until we're ready, since it will merge-conflict with everything","msgtype":"m.text"},"ts":1600653078000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`this style ... was chosen ... on the basis that it was written in Word and Ecma liked Word`","msgtype":"m.text"},"ts":1600653143000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"oof","msgtype":"m.text"},"ts":1600653144000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"\"pattern matching\" means that it is defined like `SDO = match (node.type){ Expression => whatever, Statement => whatever}` instead of being defined like `Expression.SDO = whatever [...] Statement.SDO = whatever`","msgtype":"m.text"},"ts":1600653150000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if that makes sense","msgtype":"m.text"},"ts":1600653155000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Was it Ross rkirsling ?","msgtype":"m.text"},"ts":1600653159000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"who did Intl.Segmenter","msgtype":"m.text"},"ts":1600653163000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I reviewed the patch but Yusuke implemented it","msgtype":"m.text"},"ts":1600653183000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Yusuke Suzuki is amazing!","msgtype":"m.text"},"ts":1600653367000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1600653371000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"he literally is","msgtype":"m.text"},"ts":1600653397000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"that's interesting. if interop is not an aspiration of the standard, what is the value of the standard? similar general shapes?","msgtype":"m.text"},"ts":1600653711000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i had a similar line of questioning the other day on twitter","msgtype":"m.text"},"ts":1600653759000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in that case annex b but same idea","msgtype":"m.text"},"ts":1600653770000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: what's the relation to annex b?","msgtype":"m.text"},"ts":1600653793000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"people thinking annex b == don't need to impl and then learning some of it is ecosystem reality","msgtype":"m.text"},"ts":1600653838000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in ambulances?! 😱","msgtype":"m.text"},"ts":1600653854000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"or i guess, people saying it should remain annex b even though it is ecosystem reality","msgtype":"m.text"},"ts":1600653856000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: i don't think any implementers of web engines i know actually think that","msgtype":"m.text"},"ts":1600653867000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"well people who make not-web-engines tend to dislike annex b","msgtype":"m.text"},"ts":1600653886000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i suppose XS had to learn the hard way","msgtype":"m.text"},"ts":1600653886000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but they still have to implement substr","msgtype":"m.text"},"ts":1600653897000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Not all","msgtype":"m.text"},"ts":1600653921000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"C++ uses ECMAScript regular expressions. Merging in annex b would change how C++ regexps work.","msgtype":"m.text"},"ts":1600653946000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"yeah there's definitely stuff that needs a closer look","msgtype":"m.text"},"ts":1600653958000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"holy crap","msgtype":"m.text"},"ts":1600653973000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"devsnek: but annex b is still very much all about interop, the problem with annex b is that the subset of implementations it's intended to apply to doesn't match up with reality","msgtype":"m.text"},"ts":1600653978000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I didn't know that particular detail","msgtype":"m.text"},"ts":1600653981000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"wsdferdksl do you know offhand if it specifies a particular version?","msgtype":"m.text"},"ts":1600654060000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I don't have my copy of the C++ standard on hand","msgtype":"m.text"},"ts":1600654071000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"a particular version of ECMA-262, that is","msgtype":"m.text"},"ts":1600654087000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"It does. I'm not sure how often they update it.","msgtype":"m.text"},"ts":1600654118000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"It's kinda hard to get a hold of the official C++ standard","msgtype":"m.text"},"ts":1600654141000,"senderName":"wsdferdksl","senderId":"wsdferdksl@irc"},
{"content":{"body":"reading through the latex on the draft repo","msgtype":"m.text"},"ts":1600654159000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it appears to be the third edition","msgtype":"m.text"},"ts":1600654163000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"looks like it's on ES3, yeah: https://github.com/cplusplus/draft/blob/78534e3883c9f296ecec6a26c51e55f6cb1bb395/source/intro.tex#L42","msgtype":"m.text"},"ts":1600654172000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh boy","msgtype":"m.text"},"ts":1600654247000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"wow, I can't imagine dealing with test262 before jsvu / eshost","msgtype":"m.text"},"ts":1600654327000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I'm glad to have missed that era","msgtype":"m.text"},"ts":1600654334000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"leobalter: plz link slides link when you have a chance","msgtype":"m.text"},"ts":1600654812000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"rickbutton: I'm not sure if I want to share the slides. I'll let you know.","msgtype":"m.text"},"ts":1600654857000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"ah yes of course","msgtype":"m.text"},"ts":1600654871000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"if you decide that you want to just drop them in the notes","msgtype":"m.text"},"ts":1600654882000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"JSC date stuff is suuuuuper broken, take their result with a grain of salt","msgtype":"m.text"},"ts":1600654990000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"😢","msgtype":"m.text"},"ts":1600655018000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah JSC seems to implement everything in dates with signed 32-bit integers","msgtype":"m.text"},"ts":1600655079000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"and that leaks all over the place","msgtype":"m.text"},"ts":1600655085000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"+100 on separating \"normative optional\" from \"deprecated and discouraged\"","msgtype":"m.text"},"ts":1600655932000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"same","msgtype":"m.text"},"ts":1600655959000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I would be fine with adding more deprecated things over time, whereas I'm very skeptical of adding more optional things","msgtype":"m.text"},"ts":1600655987000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"yeah I think one way or another we should increase clarity around that delineation","msgtype":"m.text"},"ts":1600656009000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"when talking about __proto__ can we be clear about when we're talking about the syntax and when we're talking about the Object.prototype accessor","msgtype":"m.text"},"ts":1600656199000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"for clarity, what exactly are we asking for here? making the __proto__ getter/setter in the main spec but marked as normative optional? making __proto__ syntax normative non-optional?","msgtype":"m.text"},"ts":1600656212000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah same question as michaelficarra","msgtype":"m.text"},"ts":1600656217000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i believe this doesn't change syntax","msgtype":"m.text"},"ts":1600656242000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"accesor","msgtype":"m.text"},"ts":1600656251000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"when people are making statements, I don't know which they're talking about","msgtype":"m.text"},"ts":1600656261000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"if not both","msgtype":"m.text"},"ts":1600656263000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"fwiw I want `__proto__` syntax not to be marked as icky","msgtype":"m.text"},"ts":1600656375000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it's the only way to do the thing it does","msgtype":"m.text"},"ts":1600656390000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"same, __proto__ syntax is not bad","msgtype":"m.text"},"ts":1600656393000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"that's not to say it couldn't have been better with its own syntactic form, but it's not bad","msgtype":"m.text"},"ts":1600656433000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"it doesn't seem like to me we have consensus on this current proposal because there seems to be desire to have the discouragement note, which this PR doesn't have, and moreover, we don't have consensus that all things in the PR should be discouraged","msgtype":"m.text"},"ts":1600656495000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah also we have only briefly mentioned exactly which things are included and in exactly which forms","msgtype":"m.text"},"ts":1600656521000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I want to ask for consensus for the smaller question of, make the `__proto__` syntax required, and not marked as icky","msgtype":"m.text"},"ts":1600656538000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yes, there needs to be a condensed list of the asks","msgtype":"m.text"},"ts":1600656555000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I thought Gus's description was clear FWIW","msgtype":"m.text"},"ts":1600656568000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"Bakkot: fwiw i don't personally consider the syntax icky (just aesthetically displeasing, but that's not sufficient imo)","msgtype":"m.text"},"ts":1600656584000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"michaelficarra the problem is that this is framed as moving \"__proto__\" but it covers a bunch of other stuff","msgtype":"m.text"},"ts":1600656605000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"move __define{G,S}etter__ out of Annex B and make it mandatory; move __proto__ accessor out of Annex B and make it optional; move __proto__ syntax out of Annex B and make it mandatory","msgtype":"m.text"},"ts":1600656634000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"am I missing anything? that's all Gus listed","msgtype":"m.text"},"ts":1600656648000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: ftr personally, i'd like the define's marked icky, and perhaps the proto accessor i guess; otherwise no additional asks from me.","msgtype":"m.text"},"ts":1600656678000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"michaelficarra also `__lookupGetter__`","msgtype":"m.text"},"ts":1600656702000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(ah yes ty, i want all the non-proto dunders marked icky)","msgtype":"m.text"},"ts":1600656732000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: okay so you're just asking that they are marked as icky before being put in the main spec","msgtype":"m.text"},"ts":1600656753000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: before/while, yes","msgtype":"m.text"},"ts":1600656762000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I do prefer things to be required","msgtype":"m.text"},"ts":1600657135000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"was having troulbe unmuting","msgtype":"m.text"},"ts":1600657138000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: do you object to it being optional","msgtype":"m.text"},"ts":1600657201000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh nvm","msgtype":"m.text"},"ts":1600657208000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"FWIW I support littledan's comment","msgtype":"m.text"},"ts":1600657302000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"it's worth noting that inlining it in this way makes it easier to remove optionality in a future PR","msgtype":"m.text"},"ts":1600657332000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I'm definitely happy with devsnek 's work overall. Inline normative optional in the main spec!!!","msgtype":"m.text"},"ts":1600657336000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"What \"icky\" means?","msgtype":"m.text"},"ts":1600657346000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"haxjs: discouraged / not recommended, I guess","msgtype":"m.text"},"ts":1600657370000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"btw bterlson earlier noted possible accessibility issues in the normative optional CSS I wrote","msgtype":"m.text"},"ts":1600657372000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I think it'd be good for the editors to talk to a skilled a11y person to figure this out; I don't have the expertise myself :)","msgtype":"m.text"},"ts":1600657396000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"haxjs: it means roughly \"discouraged\"","msgtype":"m.text"},"ts":1600657397000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"haxjs: https://www.merriam-webster.com/dictionary/icky","msgtype":"m.text"},"ts":1600657398000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1600657398000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"haxjs: it's a slang word little kids use to describe something they don't like, especially messy things","msgtype":"m.text"},"ts":1600657398000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"\": offensive to the senses or sensibilities : distasteful \"","msgtype":"m.text"},"ts":1600657406000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan we've actually just come across this ourselves!","msgtype":"m.text"},"ts":1600657408000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I feel like this definition makes a lot of sense","msgtype":"m.text"},"ts":1600657412000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"was talking to michaelficarra about fixing it","msgtype":"m.text"},"ts":1600657414000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"So let's use \"discouraged\", not \"icky\" which is a slang.","msgtype":"m.text"},"ts":1600657416000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"(the accessibility thing)","msgtype":"m.text"},"ts":1600657418000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"haxjs: I believe the term \"icky\" has been used in this conversation as a placeholder, for something that we would definitely not really use","msgtype":"m.text"},"ts":1600657437000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"++","msgtype":"m.text"},"ts":1600657440000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1600657441000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"since it's \"obviously\" too informal","msgtype":"m.text"},"ts":1600657447000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I would like to say \"icky\" is \"icky\" :-)","msgtype":"m.text"},"ts":1600657452000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"I think it's like 讨厌","msgtype":"m.text"},"ts":1600657456000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: what the current annex b wording is missing the thing i'd like to add: *even if* a thing is deprecated, i want to call out that that doesn't imply discouragement in engines if that engine's goal is interop with the existing ecosystem","msgtype":"m.text"},"ts":1600657619000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that nuance is something we don't have with the current wording","msgtype":"m.text"},"ts":1600657632000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that's totally fair","msgtype":"m.text"},"ts":1600657638000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and, engines whose goals are greenfield ecosystems are rare, like moddable","msgtype":"m.text"},"ts":1600657648000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ie separating out \"discouraged to implement\" vs \"discouraged to use\"","msgtype":"m.text"},"ts":1600657648000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"not quite, it's discouraged to implement given an engine's goals","msgtype":"m.text"},"ts":1600657663000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"gotcha, agreed","msgtype":"m.text"},"ts":1600657673000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"web engines sure as hell won't be discouraged to implement","msgtype":"m.text"},"ts":1600657674000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and maybe, hermes too, even if it's not web","msgtype":"m.text"},"ts":1600657682000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"It's not easy for outside (especially the non-native speakers) to understand the slangs. for example i still remember first time i see \"sloppy\" about ten years ago, i didn't know what that mean, and it cost me long time to figure out it  just means \"non-strict\" :-)","msgtype":"m.text"},"ts":1600657790000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"sloppy is an interesting one, because when I started with TC39 I always wanted to call it \"loose\" mode","msgtype":"m.text"},"ts":1600657887000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but our use of \"icky\" here was the same idea as our use of \"smooth\"","msgtype":"m.text"},"ts":1600657902000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"*smoosh","msgtype":"m.text"},"ts":1600657905000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: i'm not sure i understand your point, but as a reference, Hermes deliberately avoids implementing plenty of stuff in Annex B because we don't need web compatibility - we've had to add parts of it due to feature requests, but mostly it's been ok for us","msgtype":"m.text"},"ts":1600657906000,"senderName":"avp","senderId":"avp@irc"},
{"content":{"body":"avp: i think our point is the \"we've had to add parts of it due to feature requests\" part","msgtype":"m.text"},"ts":1600657957000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i.e. it was intended to be \"obviously non-technical\" in order to postpone bikeshedding about names/terms. I can see how that obviousness may be assuming a certain level of English intuition 🤔 but I'm also not sure how to fix that...","msgtype":"m.text"},"ts":1600658020000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"avp: ah cool, okay. my point was that the \"discouragement\" isn't binary for implementers. we do a disservice to implementer readers of the spec if we don't add nuanced notes like \"if you're an implementation that cares about maximal interop, you are actually encouraged to implement this optional feature, even if it's discouraged from being used\"","msgtype":"m.text"},"ts":1600658026000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"avp: and i'd like the editorial leeway to do that as editor, without seeking consensus for it","msgtype":"m.text"},"ts":1600658046000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"does hermes target past es5 now","msgtype":"m.text"},"ts":1600658067000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: we're actively working on it - we've got a significant number of newer features implemented, but are still working our way through block scoping (variable resolution requires significant design changes in the compiler)","msgtype":"m.text"},"ts":1600658127000,"senderName":"avp","senderId":"avp@irc"},
{"content":{"body":"but we do support generators, all the JS library functions up to ES2020, as well as some minor features like `?.` and `??`","msgtype":"m.text"},"ts":1600658199000,"senderName":"avp","senderId":"avp@irc"},
{"content":{"body":"avp: oh boy, the amount of work each browser engine had to do to support block scoping...","msgtype":"m.text"},"ts":1600658228000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"especially parameter scopes, though thankfully that got simplified a few years after the fact...","msgtype":"m.text"},"ts":1600658252000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"even now JSC has outstanding work to do to ensure that TDZ checks don't add up to a significant perf hit","msgtype":"m.text"},"ts":1600658317000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: we've had a fun time reasoning about function declaration hoisting in the presence of `let`/`const` as well as `catch` vars","msgtype":"m.text"},"ts":1600658322000,"senderName":"avp","senderId":"avp@irc"},
{"content":{"body":"block scope was pretty easy in engine262 :^)","msgtype":"m.text"},"ts":1600658336000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"avp: reasoning to elide TDZ checks?","msgtype":"m.text"},"ts":1600658418000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"or correctness?","msgtype":"m.text"},"ts":1600658423000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"b.3.3, lol","msgtype":"m.text"},"ts":1600658453000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the worst part","msgtype":"m.text"},"ts":1600658461000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"proposal to move that to annex z","msgtype":"m.text"},"ts":1600658467000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://dev.to/rkirsling/tales-from-ecma-s-crypt-annex-b-3-3-56go","msgtype":"m.text"},"ts":1600658502000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yep that's the section","msgtype":"m.text"},"ts":1600658504000,"senderName":"avp","senderId":"avp@irc"},
{"content":{"body":"there's still outstanding issues with it too","msgtype":"m.text"},"ts":1600658535000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"https://github.com/tc39/ecma262/issues/913","msgtype":"m.text"},"ts":1600658550000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"scoping gave me some grief in the parser","msgtype":"m.text"},"ts":1600658568000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i wish all of js was like modules","msgtype":"m.text"},"ts":1600658587000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh you're implementing b.3.3? why, if web compat isn't needed?","msgtype":"m.text"},"ts":1600658603000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"comparing with other engines yielded behavior that we just couldn't reconcile with our mental model of the spec for a while - eventually we kind of understood it but we're still working on implementing all the variable resolution stuff in a way that works with our \"lazy mode\" compilation and our debugger information","msgtype":"m.text"},"ts":1600658609000,"senderName":"avp","senderId":"avp@irc"},
{"content":{"body":"i mean like, out of all things in annex b to not implement, b.3.3 is it","msgtype":"m.text"},"ts":1600658615000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"^ big true","msgtype":"m.text"},"ts":1600658638000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"html comments","msgtype":"m.text"},"ts":1600658689000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"^ medium true","msgtype":"m.text"},"ts":1600658729000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"that seemed like the sort of section we might really want to implement because lots of people using our code run third party npm modules which we want to try and be compatible with","msgtype":"m.text"},"ts":1600658839000,"senderName":"avp","senderId":"avp@irc"},
{"content":{"body":"plus, we really do want to support as much of the spec as we can without incurring significant size and/or perf costs, it's just that for chunks of Annex B it seems that the tradeoff would be bad (hence no `String.prototype.big`, etc)","msgtype":"m.text"},"ts":1600658980000,"senderName":"avp","senderId":"avp@irc"},
{"content":{"body":"hm, getting mixed signals about the web compat part","msgtype":"m.text"},"ts":1600659020000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah i'll clarify - there's certain feature requests that fall into \"compat\" which come from Annex B that we were explicitly asked to implement by users - `String.prototype.substr` comes to mind because it was actually used in code running on Hermes. HTML stuff like `String.prototype.big` was not because we're intended to be used in React Native which doesn't use traditional HTML.","msgtype":"m.text"},"ts":1600659174000,"senderName":"avp","senderId":"avp@irc"},
{"content":{"body":"substr ❤️","msgtype":"m.text"},"ts":1600659201000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"avp: ah, okay, and npm usage of things like `String#big` for packages react native codebases pull in is close to nil, i guess?","msgtype":"m.text"},"ts":1600659250000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I don't understand why `substr` is Annex B.","msgtype":"m.text"},"ts":1600659270000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"shu: correct","msgtype":"m.text"},"ts":1600659281000,"senderName":"avp","senderId":"avp@irc"},
{"content":{"body":"It's genuinely useful.","msgtype":"m.text"},"ts":1600659287000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"Put `substring` in Annex B instead, it's basicall `slice`.","msgtype":"m.text"},"ts":1600659302000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"i'm guilty of using substr","msgtype":"m.text"},"ts":1600659334000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jridgewell: how is it useful to you?","msgtype":"m.text"},"ts":1600659606000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(substring is indeed terrible, it sorts its arguments which is bizarre)","msgtype":"m.text"},"ts":1600659633000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"sometimes the thing you have on hand is an start index and a length, not a start index and an end index","msgtype":"m.text"},"ts":1600659646000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"we need `trimNull([startIndex])` that reads to the first occurrence of \\0 :P","msgtype":"m.text"},"ts":1600659707000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I don't know that I've ever had to find a null byte in a JS string","msgtype":"m.text"},"ts":1600660103000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I guess for encoding to bytes sometimes","msgtype":"m.text"},"ts":1600660114000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Using `length` as the second param is useful","msgtype":"m.text"},"ts":1600660300000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"I don't always know the end index, or want to add the current index to my already known length.","msgtype":"m.text"},"ts":1600660319000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"jridgewell `substring` is not `slice`,  substring may swap the index if i remember correctly","msgtype":"m.text"},"ts":1600661666000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Hence the \"basically\"","msgtype":"m.text"},"ts":1600661704000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"The common features are the same","msgtype":"m.text"},"ts":1600661715000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"But there are edge cases that are different","msgtype":"m.text"},"ts":1600661722000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"haxjs: substring sorts its arguments","msgtype":"m.text"},"ts":1600661740000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"The problem is `substring` may be also used as freqently as `substr` ... I'm not sure","msgtype":"m.text"},"ts":1600661744000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"(so `s.substring(a, b)` is identical to `s.substring(b, a)`)","msgtype":"m.text"},"ts":1600661785000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I really curious why these methods come from. It seems ES1 only have substring?","msgtype":"m.text"},"ts":1600661817000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"i still feel like \"i'm building a whole new separate ecosystem\" is \"i don't need 100% compat\" not \"the spec needs to cater to my case\"","msgtype":"m.text"},"ts":1600661831000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"haxjs usually it's that either Netscape or Internet Explorer shipped it without worrying about whether it was in the standard","msgtype":"m.text"},"ts":1600661886000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"consider there are some complains about codeunit vs codepoint, it seems \"string.p.slice\" would also \"icky\" for those people  :-)","msgtype":"m.text"},"ts":1600662015000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"yup it's bad","msgtype":"m.text"},"ts":1600662052000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"shoulda been sliceCodeUnits or something","msgtype":"m.text"},"ts":1600662073000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"slice is great. strings defaulting to code units is icky.","msgtype":"m.text"},"ts":1600662083000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"do we have chance to introduce any encoding-neutral string ?","msgtype":"m.text"},"ts":1600662123000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"i'm regretting being amenable on define/lookup getter/setter being optional now","msgtype":"m.text"},"ts":1600662134000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"why regreting that?","msgtype":"m.text"},"ts":1600662163000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"haxjs: you can already put whatever bytes you want into js strings","msgtype":"m.text"},"ts":1600662165000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yay, awesome, thanks rkirsling","msgtype":"m.text"},"ts":1600662213000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"thanks for the backup :D","msgtype":"m.text"},"ts":1600662227000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(Bakkot too)","msgtype":"m.text"},"ts":1600662232000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"devsnek: I mean dev need to remember codeunit/codepoint when they use string api. and when they use it, it also make the engine have to convert a utf8 encoding to utf16 encoding","msgtype":"m.text"},"ts":1600662309000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"engines don't always use utf8 internally","msgtype":"m.text"},"ts":1600662580000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I am very happy to see that this proposal restricts the exports to valid Unicode","msgtype":"m.text"},"ts":1600662582000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"v8 uses both","msgtype":"m.text"},"ts":1600662583000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(IIRC)","msgtype":"m.text"},"ts":1600662588000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"v8 has one and two byte representations","msgtype":"m.text"},"ts":1600662599000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"they are not called utf8 and utf16 because they don't have to be valid unicode","msgtype":"m.text"},"ts":1600662613000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't think anybody uses utf8 internally","msgtype":"m.text"},"ts":1600662671000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but everybody does have a 1byte vs 2byte distinction","msgtype":"m.text"},"ts":1600662690000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"FYI you can uncheck \"show comments\" in the upper right hamburger menu if you're trying to show off a diff","msgtype":"m.text"},"ts":1600662700000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"saves a lot of memory","msgtype":"m.text"},"ts":1600662701000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Tcq agenda item is still on the previous topic","msgtype":"m.text"},"ts":1600662754000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"(I think)","msgtype":"m.text"},"ts":1600662765000,"senderName":"mmarchini","senderId":"mmarchini@irc"},
{"content":{"body":"^ cc robpalme","msgtype":"m.text"},"ts":1600662771000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"shu: yeah, 1byte vs 2byte,  because if u want efficiency for current api, u can only have such presentation. what i ask is whether it's possible to add a encoding-neutal apis so allow engine use real utf8/utf16 which save the encoding/decoding for io.","msgtype":"m.text"},"ts":1600662843000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"oh I forgot to mention, on the detached arraybuffer semantics PR: if this doesn't already match shipping web reality, can I ask that we have 1-2 implementations to prove it out, and test262 tests, before landing?","msgtype":"m.text"},"ts":1600662876000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"thanks rick - fixed","msgtype":"m.text"},"ts":1600662888000,"senderName":"robpalme","senderId":"robpalme@irc"},
{"content":{"body":"wait is this actually true?","msgtype":"m.text"},"ts":1600662893000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I don't think so","msgtype":"m.text"},"ts":1600662897000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"is BOM not legal at the start of a unicode-16 string?","msgtype":"m.text"},"ts":1600662900000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"littledan: the PR matches SM and V8 behavior","msgtype":"m.text"},"ts":1600662908000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"littledan: JSC disagrees with subparts of the PR","msgtype":"m.text"},"ts":1600662922000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Oh, I see, carry on","msgtype":"m.text"},"ts":1600662929000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"but, test262?","msgtype":"m.text"},"ts":1600662931000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Bakkot: it's only valid in 16 and 32","msgtype":"m.text"},"ts":1600662935000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"disagrees meaning mismatches, not active disagreement","msgtype":"m.text"},"ts":1600662936000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"test262 i don't actually know, rkirsling?","msgtype":"m.text"},"ts":1600662944000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(sorry, it's 6:30 AM here, and I haven't slept tonight yet)","msgtype":"m.text"},"ts":1600662946000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"well i guess it's valid in 8, but it isn't used","msgtype":"m.text"},"ts":1600662973000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rwaldron was suggesting he was going to follow along with the PR and help with the tests","msgtype":"m.text"},"ts":1600662987000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"if that's not the case then I can contribute there","msgtype":"m.text"},"ts":1600662999000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"lol this isn't true either, ugh","msgtype":"m.text"},"ts":1600663012000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"need mathiasbynens here","msgtype":"m.text"},"ts":1600663053000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"https://tc39.es/ecma262/#sec-encodeuricomponent-uricomponent","msgtype":"m.text"},"ts":1600663056000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"the answer is yes; it's been stated several times. I think we can iterate on the wording on the issue","msgtype":"m.text"},"ts":1600663088000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Bakkot: +1","msgtype":"m.text"},"ts":1600663105000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"wait but shu there is the `configurable` bit","msgtype":"m.text"},"ts":1600663149000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Bakkot: why can't we volunteer michaelficarra as the new utf abyss gazer","msgtype":"m.text"},"ts":1600663151000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"littledan: rkirsling: oops, ross's right about the [[Configurable]] change, that's not in anyone's implementation","msgtype":"m.text"},"ts":1600663172000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"littledan: i'll ship that soon and be on the lookout for bugs","msgtype":"m.text"},"ts":1600663183000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"<3","msgtype":"m.text"},"ts":1600663186000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i see no way to actually usecounter that","msgtype":"m.text"},"ts":1600663191000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"OK, let's wait to land this until we get 1-2 shipping implementations","msgtype":"m.text"},"ts":1600663195000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"any concerns with that?","msgtype":"m.text"},"ts":1600663200000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"fine by me","msgtype":"m.text"},"ts":1600663217000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"sure, that should be fine","msgtype":"m.text"},"ts":1600663220000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"could someone note that on the PR?","msgtype":"m.text"},"ts":1600663254000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i will probably forget","msgtype":"m.text"},"ts":1600663257000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Bakkot: Is there any order for prototype methods generally in the spec? Is it the same as the order they are listed?","msgtype":"m.text"},"ts":1600663266000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"keith_miller nope","msgtype":"m.text"},"ts":1600663274000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hmm, ok","msgtype":"m.text"},"ts":1600663280000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"littledan: would you like to add a comment to that end?","msgtype":"m.text"},"ts":1600663286000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"people have proposed changing that","msgtype":"m.text"},"ts":1600663288000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"nope\" as in \"there is no order\", to be clear","msgtype":"m.text"},"ts":1600663308000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"rkirsling: I'll do that","msgtype":"m.text"},"ts":1600663312000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Bakkot: As long as its whatever the current JSC order is I'm happy :P","msgtype":"m.text"},"ts":1600663314000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"keith_miller to be clear, my length/name PR requires a change from JSC and not from anyone else","msgtype":"m.text"},"ts":1600663346000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I hope that was clear","msgtype":"m.text"},"ts":1600663348000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Oh, I know","msgtype":"m.text"},"ts":1600663356000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"ok good good","msgtype":"m.text"},"ts":1600663363000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I'm doing it now","msgtype":"m.text"},"ts":1600663364000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Bakkot: I'm just lazy :P","msgtype":"m.text"},"ts":1600663406000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"ain't we all","msgtype":"m.text"},"ts":1600663564000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I try to phrase these PRs in a way which allows the most people to be lazy, as a rule","msgtype":"m.text"},"ts":1600663576000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"re: \"valid unicode\", I guess the pedantic thing is \"is valid unicode if interpreted as a UTF-16BE string\"","msgtype":"m.text"},"ts":1600663611000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: pretty sure all your PRs from this meeting only require JSC changes","msgtype":"m.text"},"ts":1600663612000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"i'm not so much lazy as anxious","msgtype":"m.text"},"ts":1600663618000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"or, that's true at least wrt the BOM","msgtype":"m.text"},"ts":1600663627000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"does that mean we can't have 1cm 1deg , etc?","msgtype":"m.text"},"ts":1600663688000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"michaelficarra: womp womp","msgtype":"m.text"},"ts":1600663711000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"haxjs: Yeah, seems like it.","msgtype":"m.text"},"ts":1600663735000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"or is that mean 1cm is allowed but 0x1cm is not?","msgtype":"m.text"},"ts":1600663753000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Oh maybe you're right","msgtype":"m.text"},"ts":1600663776000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Worth a questino","msgtype":"m.text"},"ts":1600663780000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"push a question in the queue","msgtype":"m.text"},"ts":1600663841000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"I don't like that an _ would be mandatory whereas people are learning today that you can pretend they aren't there","msgtype":"m.text"},"ts":1600663949000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"i think it should be `@`","msgtype":"m.text"},"ts":1600663987000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"applies to the decorator idea and discourages people from using asi","msgtype":"m.text"},"ts":1600663996000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm pretty confident there's web code that depends on bigint literal keys in object literals","msgtype":"m.text"},"ts":1600664007000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"that is a remarkable claim","msgtype":"m.text"},"ts":1600664043000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"you think?","msgtype":"m.text"},"ts":1600664057000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i mean, bigints are new","msgtype":"m.text"},"ts":1600664066000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"michaelficarra: can you expand upon \"pretend they aren't there\"?","msgtype":"m.text"},"ts":1600664071000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"we have bigint landed not very long, so maybe not a big problem?","msgtype":"m.text"},"ts":1600664074000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"rkirsling: 1_2_3 === 123","msgtype":"m.text"},"ts":1600664085000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"but there was a bunch of discussion about bigint's toString not having the \"n\" for this exact reason so i'm very skeptical that this was a surprise","msgtype":"m.text"},"ts":1600664088000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ohhh","msgtype":"m.text"},"ts":1600664090000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"`{ 9007199254740993n: \"precise\" }`","msgtype":"m.text"},"ts":1600664113000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"yeah true, C++ uses ' as a separator so there's no clash with _ for custom literals","msgtype":"m.text"},"ts":1600664116000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb I just don't expect anyone to have wanted this","msgtype":"m.text"},"ts":1600664148000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I thought the toString thing was for access, not definition","msgtype":"m.text"},"ts":1600664156000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"as in `x[0n] === x[0]`","msgtype":"m.text"},"ts":1600664162000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"not `{ 0n: 'foo' }`, which is a very strange thing to write","msgtype":"m.text"},"ts":1600664177000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"iirc it came up in both contexts. the access reason was surely more pressing tho","msgtype":"m.text"},"ts":1600664185000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"certainly not making the claim that people *want* this but i'd be surprised if nobody shipped it by now","msgtype":"m.text"},"ts":1600664197000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Bakkot: same","msgtype":"m.text"},"ts":1600664198000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"I would be surprised if people shipped it","msgtype":"m.text"},"ts":1600664217000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah a lot of people use compilers","msgtype":"m.text"},"ts":1600664231000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"(to a website with nontrivial usage, anyway, where nontrivial is > 10 humans / week)","msgtype":"m.text"},"ts":1600664249000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"michaelficarra: ahh your tagged template point is a good one","msgtype":"m.text"},"ts":1600664434000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"they were called quasis in the beginning for a reason","msgtype":"m.text"},"ts":1600664471000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"(quasi as in quasi-literal)","msgtype":"m.text"},"ts":1600664566000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: is your concern that some suffixes are builtin and thus have a completely different analyzability / performance reasons?","msgtype":"m.text"},"ts":1600664690000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"devsnek: woah!!! with is fast in JSC","msgtype":"m.text"},"ts":1600664692000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"You get all the optimizations","msgtype":"m.text"},"ts":1600664709000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"michaelficarra: err, s/reasons/profile, dunno why i typed out reasons","msgtype":"m.text"},"ts":1600664725000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"keith_miller: not a problem for numeric suffixes then :P","msgtype":"m.text"},"ts":1600664730000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"keith_miller: does that mean it's no longer evil","msgtype":"m.text"},"ts":1600664733000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":" :p","msgtype":"m.text"},"ts":1600664747000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: no, my concern has nothing to do with performance and is all about language design and syntax budget","msgtype":"m.text"},"ts":1600664749000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"michaelficarra: well, i threw in analyzability in there","msgtype":"m.text"},"ts":1600664760000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i'll wait to hear it when we get to it","msgtype":"m.text"},"ts":1600664765000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"not that either, no","msgtype":"m.text"},"ts":1600664775000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"but i do think separate namespace is an actively more confusing/worse dev experience","msgtype":"m.text"},"ts":1600664780000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I think dan's motivation of separate namespace is good.","msgtype":"m.text"},"ts":1600664794000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"we should just use template literals","msgtype":"m.text"},"ts":1600664813000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"tagged templates, that is","msgtype":"m.text"},"ts":1600664818000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"they work fine for this use case","msgtype":"m.text"},"ts":1600664821000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"people are even starting to have their editors lint them","msgtype":"m.text"},"ts":1600664830000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"cm`123`","msgtype":"m.text"},"ts":1600664833000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://marketplace.visualstudio.com/items?itemName=frigus02.vscode-sql-tagged-template-literals","msgtype":"m.text"},"ts":1600664839000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"devsnek right","msgtype":"m.text"},"ts":1600664844000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that's perfect","msgtype":"m.text"},"ts":1600664846000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"sure why not","msgtype":"m.text"},"ts":1600664848000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you should bring it up","msgtype":"m.text"},"ts":1600664855000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"michaelficarra's already on the queue","msgtype":"m.text"},"ts":1600664865000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"gonna let him say it","msgtype":"m.text"},"ts":1600664867000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"devsnek: I wasn't actually following the context. I just wanted to call that out :P","msgtype":"m.text"},"ts":1600664871000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"consider someone write code `var x = 1m;` it's  possible  someone will add code like `let m = ...` and din't notice the `m` because it's suffix.","msgtype":"m.text"},"ts":1600664885000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"keith_miller: wasn't saying they must be slow, more that if they are slow, what's the point in making the `1px` inside them fast","msgtype":"m.text"},"ts":1600664900000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(at the cost of dev exp)","msgtype":"m.text"},"ts":1600664920000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh, I mean I hope we aren't making it harder than anything else","msgtype":"m.text"},"ts":1600664926000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"in a with scope","msgtype":"m.text"},"ts":1600664934000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"template literals like ``px`1``` ???","msgtype":"m.text"},"ts":1600664937000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"keith_miller: it seems like a function call so","msgtype":"m.text"},"ts":1600664943000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if you can optimize those","msgtype":"m.text"},"ts":1600664946000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hax yup","msgtype":"m.text"},"ts":1600664952000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I think dan want number from parse time","msgtype":"m.text"},"ts":1600664991000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"template string need runtime cost","msgtype":"m.text"},"ts":1600665004000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Yeah, I don't really care for inside a with scope as long as it's lexically obvious","msgtype":"m.text"},"ts":1600665012000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"this proposal definitely has runtime cost","msgtype":"m.text"},"ts":1600665015000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah it have runtime cost, but i think dan don't want the extra cost of `parseInt(s)`","msgtype":"m.text"},"ts":1600665060000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"don't think that cost warrants a new syntactic feature","msgtype":"m.text"},"ts":1600665078000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it not to save such cost , the proposal itself is for dev experience.","msgtype":"m.text"},"ts":1600665109000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"the weak link for me here is the constraint that \"decimal ought to be polyfillable\"","msgtype":"m.text"},"ts":1600665184000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"anecdotally I just moved an entire codebase off of tagged template literals for GraphQL queries, we found that editor support was less than ideal and was brittle","msgtype":"m.text"},"ts":1600665200000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"not having this doesn't imply decimal can't use a suffix, but that it can't be polyfilled with the same syntax","msgtype":"m.text"},"ts":1600665218000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i understand we may worry about the syntax budget here again, so maybe we could try to find some more general solution. For example old bind op allow u write `1::px()`","msgtype":"m.text"},"ts":1600665221000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"haxjs: the `px` function needs the source text of the numeric literal","msgtype":"m.text"},"ts":1600665256000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: current CSS.px do not need raw literal.","msgtype":"m.text"},"ts":1600665278000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"right but other things do","msgtype":"m.text"},"ts":1600665287000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like a decimal type","msgtype":"m.text"},"ts":1600665292000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we already found a more general solution: it's tagged templates. that's what they're for","msgtype":"m.text"},"ts":1600665293000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"even we need it, we could consider add such ability to bind op!","msgtype":"m.text"},"ts":1600665298000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Bakkot: inverted tagged templates though :P","msgtype":"m.text"},"ts":1600665314000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah template literal suffixes","msgtype":"m.text"},"ts":1600665331000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"what happens if you prefix and suffix it","msgtype":"m.text"},"ts":1600665341000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"tagged template have the bad order (prefix vs suffix) and only have raw string not parsed value.","msgtype":"m.text"},"ts":1600665341000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"templates can afford to call parseInt because they can cache it","msgtype":"m.text"},"ts":1600665367000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"parsing small integers is not slow, I don't think that's an actual problem","msgtype":"m.text"},"ts":1600665369000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if the parsed value isn't needed tho, then that seems like it's more efficient for most cases?","msgtype":"m.text"},"ts":1600665370000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek: pre``string``post => `post(pre(\"string\")`","msgtype":"m.text"},"ts":1600665375000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I don't hate tagged template suffixes, tbh","msgtype":"m.text"},"ts":1600665387000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i slightly dislike them","msgtype":"m.text"},"ts":1600665398000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I would love tagged template suffixes","msgtype":"m.text"},"ts":1600665401000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"is suffix viable to add? it is, right?","msgtype":"m.text"},"ts":1600665403000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"y devsnek","msgtype":"m.text"},"ts":1600665407000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"I don't hate that","msgtype":"m.text"},"ts":1600665407000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: ASI","msgtype":"m.text"},"ts":1600665408000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"``` `3`px ``` ?","msgtype":"m.text"},"ts":1600665408000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1600665412000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rickbutton: no objective reasons","msgtype":"m.text"},"ts":1600665427000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"There was a suggestion on the issue tracker to use `'` as a separator, as in `3'px`: https://github.com/tc39/proposal-extended-numeric-literals/issues/8#issuecomment-361714521","msgtype":"m.text"},"ts":1600665430000,"senderName":"rbuckton","senderId":"rbuckton@irc"},
{"content":{"body":"devsnek: yeah but like whitespace wouldn't be allowed, right?","msgtype":"m.text"},"ts":1600665438000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"devsnek: I read \"slightly\" as \"strongly\" whoops","msgtype":"m.text"},"ts":1600665445000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"the numeric suffixes proposal was an update, not asking for any advancement, right?","msgtype":"m.text"},"ts":1600665467000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1600665477000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"no advancement","msgtype":"m.text"},"ts":1600665477000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1600665503000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"rkirsling: String.raw\\nfoo is allowed, would be weird if you couldn't do it on the rhs i guess","msgtype":"m.text"},"ts":1600665537000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1600665545000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1600665569000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"weird but not fatal, I think","msgtype":"m.text"},"ts":1600665582000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"agree","msgtype":"m.text"},"ts":1600665590000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"js's motto","msgtype":"m.text"},"ts":1600665596000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"wow that is so strange to me","msgtype":"m.text"},"ts":1600665597000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"seems a bit weird to me to write that code on the lhs in the first place","msgtype":"m.text"},"ts":1600665600000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I did not realize you didn't need the ``","msgtype":"m.text"},"ts":1600665607000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(with the \\n)","msgtype":"m.text"},"ts":1600665610000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"wait until you learn about all the places you can put subscript operators","msgtype":"m.text"},"ts":1600665611000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling oh, you do need that","msgtype":"m.text"},"ts":1600665614000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the `` is necessary, it just can have a newline before it","msgtype":"m.text"},"ts":1600665625000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\" String.raw\\n` foo ` \" works","msgtype":"m.text"},"ts":1600665635000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"there are people who do `a.\\nb.\\nc`","msgtype":"m.text"},"ts":1600665636000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah sorry bad escaping, you still need the backticks","msgtype":"m.text"},"ts":1600665646000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"ohh what rickbutton works as-is but it's *because* of ASI, I see","msgtype":"m.text"},"ts":1600665662000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"\"works\" as in, doesn't thro","msgtype":"m.text"},"ts":1600665671000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"w","msgtype":"m.text"},"ts":1600665672000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"unless foo is undefined","msgtype":"m.text"},"ts":1600665682000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1600665686000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"devsnek: trailing dot, ick","msgtype":"m.text"},"ts":1600665731000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek: i've seen that pattern in ruby, is it common in other langs?","msgtype":"m.text"},"ts":1600665742000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i've seen it in js","msgtype":"m.text"},"ts":1600665747000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"people write it in JS","msgtype":"m.text"},"ts":1600665750000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"dunno about \"common\"","msgtype":"m.text"},"ts":1600665751000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"sometimes they complain in prettier's tracker / social media","msgtype":"m.text"},"ts":1600665758000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"they get shut down 'cause it's rare enough","msgtype":"m.text"},"ts":1600665765000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"gross","msgtype":"m.text"},"ts":1600665767000,"senderName":"rickbutton","senderId":"rickbutton@irc"},
{"content":{"body":"what you really have to worry about is the people who put each lexical token on its own line","msgtype":"m.text"},"ts":1600665768000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"keith_miller: that's good to confirm, I wondered if this was a watchpoint-y sorta thing","msgtype":"m.text"},"ts":1600666153000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I think it's just a named property","msgtype":"m.text"},"ts":1600666170000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Sometimes a custom property until you set it","msgtype":"m.text"},"ts":1600666185000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"just did a test in v8","msgtype":"m.text"},"ts":1600666214000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what' function.length be infinity mean? is it affect any other things?","msgtype":"m.text"},"ts":1600666218000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"setting length to infinity makes accessing `call` slower","msgtype":"m.text"},"ts":1600666224000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"does it?","msgtype":"m.text"},"ts":1600666235000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'd think it means the same as if you set the function's length to `'foo'`","msgtype":"m.text"},"ts":1600666241000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"why it would be slow?","msgtype":"m.text"},"ts":1600666243000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"Yeah, that's surprising","msgtype":"m.text"},"ts":1600666261000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"oh nice, Alexey is like Yusuke #2","msgtype":"m.text"},"ts":1600666271000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but I don't V8 so.. lol","msgtype":"m.text"},"ts":1600666272000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"I guess I overlooked that patch","msgtype":"m.text"},"ts":1600666303000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"looks like it completely destroys the IC","msgtype":"m.text"},"ts":1600666322000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"keith_miller: https://gc.gy/68371336.png","msgtype":"m.text"},"ts":1600666344000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so the conclusion is infinity?","msgtype":"m.text"},"ts":1600666463000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"haxjs yup","msgtype":"m.text"},"ts":1600666468000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"interesting :-)","msgtype":"m.text"},"ts":1600666488000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"devsnek: why f.call() and not f()?","msgtype":"m.text"},"ts":1600666488000,"senderName":"michaelficarra","senderId":"michaelficarra@irc"},
{"content":{"body":"as to \"what does it mean\", it doesn't really mean anything, and it doesn't affect anything else to my knowledge","msgtype":"m.text"},"ts":1600666489000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"michaelficarra: it affects the property access, not the call","msgtype":"m.text"},"ts":1600666512000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jridgewell: devsnek: so this change has no new performance implication","msgtype":"m.text"},"ts":1600666513000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i included the call itself because idk the specifics of v8's DCE","msgtype":"m.text"},"ts":1600666534000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"👍","msgtype":"m.text"},"ts":1600666538000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"if i'm reading correctly as devsnek noted, setting/defining .length on JSFunctions will transition the map","msgtype":"m.text"},"ts":1600666540000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but that's true today","msgtype":"m.text"},"ts":1600666549000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"As long as this isn't going to cause some weird cascade to other functions","msgtype":"m.text"},"ts":1600666550000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"this doesn't require the major engines to change","msgtype":"m.text"},"ts":1600666574000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah, it should transition the map of that function, not all functions","msgtype":"m.text"},"ts":1600666596000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"you could deopt all functions by changing F.p.length :P","msgtype":"m.text"},"ts":1600666639000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what happens is that .length is implemented in V8 as a getter/setter pair (even though at the language level it is not), except the setter is a magical engine thing that transitions the .length to a normal data property","msgtype":"m.text"},"ts":1600666657000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Does anyone see slides?","msgtype":"m.text"},"ts":1600666719000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"magic accessors are a theme in implementations","msgtype":"m.text"},"ts":1600666720000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jridgewell: yes","msgtype":"m.text"},"ts":1600666723000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: i'm not sure you can","msgtype":"m.text"},"ts":1600666738000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"how does that work?","msgtype":"m.text"},"ts":1600666743000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: changing f.p.length?","msgtype":"m.text"},"ts":1600666755000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah, how would that deopt all functions?","msgtype":"m.text"},"ts":1600666761000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"hm it might only be anonymous ones","msgtype":"m.text"},"ts":1600666767000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i would have to actually check","msgtype":"m.text"},"ts":1600666789000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i thought all functions have a their own length property on their maps","msgtype":"m.text"},"ts":1600666807000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"they should","msgtype":"m.text"},"ts":1600666814000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah but i don't remember what happens when the prototype map changes","msgtype":"m.text"},"ts":1600666826000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in terms of IC","msgtype":"m.text"},"ts":1600666830000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not 100% sure if it actually deopts all functions, was going for a joke more than anything else","msgtype":"m.text"},"ts":1600666858000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"wow it deoptimized property access off a named function","msgtype":"m.text"},"ts":1600666985000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"sffc: quickjs","msgtype":"m.text"},"ts":1600667144000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I'm pretty sure people do use QuickJS for stuff actually","msgtype":"m.text"},"ts":1600667211000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"it gets use in wasm","msgtype":"m.text"},"ts":1600667279000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"👍","msgtype":"m.text"},"ts":1600667286000,"senderName":"sffc","senderId":"sffc@irc"},
{"content":{"body":"I know some people use quickjs heavily","msgtype":"m.text"},"ts":1600667322000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"littledan: there is no such clause. you certainly can (and have) withhold consensus, but there's no deadline for anything but proposals. normative changes aren't all proposals.","msgtype":"m.text"},"ts":1600667532000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"needing more time to review something is ofc a legit reason not to provide consensus","msgtype":"m.text"},"ts":1600667552000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"OK, so that's what I'm saying","msgtype":"m.text"},"ts":1600667592000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"alrighty. you could say that even if it'd been on the agenda for 2 months, ftr.","msgtype":"m.text"},"ts":1600667618000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ryzokuken: if you're talking we can't hear you","msgtype":"m.text"},"ts":1600667632000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"I like to review everything ahead of the meetings in written format","msgtype":"m.text"},"ts":1600667637000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"even if not all TC39 delegates do these reviews, I like to do so","msgtype":"m.text"},"ts":1600667661000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I'm very happy that Bakkot is doing these changes to clarify these edge cases","msgtype":"m.text"},"ts":1600667672000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"and bring interoperability","msgtype":"m.text"},"ts":1600667677000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: i'm somewhat surprised by this. i thought the change small enough to review on the fly during his presentation","msgtype":"m.text"},"ts":1600667694000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I too thought it was quite trivial, if this is a per-case decision to make","msgtype":"m.text"},"ts":1600667722000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"robpalme: update the queue topic?","msgtype":"m.text"},"ts":1600667777000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i feel like all my items get changed during the presentation","msgtype":"m.text"},"ts":1600667778000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: that is a problem with people","msgtype":"m.text"},"ts":1600668133000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that is true","msgtype":"m.text"},"ts":1600668139000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"one way to combat this could be legalistic disclaimers, but we know how EULA works out even in a legal system *with* teeth","msgtype":"m.text"},"ts":1600668177000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"idk if some random person does this we can just tell them off","msgtype":"m.text"},"ts":1600668217000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"maybe we can start with \"standard\"js","msgtype":"m.text"},"ts":1600668268000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but i think the actual way to combat this is to make TC39 plenary less of a \"room where it all happens\", because it's not actually true anyway","msgtype":"m.text"},"ts":1600668274000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"littledan: the goal is to facilitate this to make it work. I know there are a lot to discuss","msgtype":"m.text"},"ts":1600668447000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"about the earlier topic from Kevin: I'm legitimately extremely tired. It's 8 AM and I didn't get to sleep all last night. This is a topic I'm interested in, and I've been trying to follow the work around it.","msgtype":"m.text"},"ts":1600668550000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I just am unable to take a nap before the meeting. I tried to sleep in late before, this but it wasn't enough.","msgtype":"m.text"},"ts":1600668634000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"right :( that really takes a lot of stamina","msgtype":"m.text"},"ts":1600668652000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"time zones are rough","msgtype":"m.text"},"ts":1600669682000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I expect next meeting to get a little silly","msgtype":"m.text"},"ts":1600669698000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hey, is there an IRC command that I can copy-paste to send a message to the chairs?","msgtype":"m.text"},"ts":1600690417000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I'd rather not bother one person individually, but last meeting, I had some kind of typo in the command I tried to use, and the message was silently lost","msgtype":"m.text"},"ts":1600690438000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ah sorry I see this in the topic :)","msgtype":"m.text"},"ts":1600690454000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"`/notice #tc39-chairs your message here`","msgtype":"m.text"},"ts":1600690465000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Bakkot: Are there tests for the length change? I want  to make sure I found all the places...","msgtype":"m.text"},"ts":1600707582000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"keith_miller not as yet. I'll try to come up with some to add to test262 before merging the PR","msgtype":"m.text"},"ts":1600707627000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: Ok, well, I'm going to land the change now then and double back once there are tests. If you remember, can you ping me when they land?","msgtype":"m.text"},"ts":1600707664000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1600707669000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1600707673000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"there's basically three categories: intrinsics like Function, weird intrinsics like %ThrowTypeError%, and synthesized on-the-fly functions like you get from `new Promise((f1, f2) => ...)` or `await { then: f => ... }` etc","msgtype":"m.text"},"ts":1600707726000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I am not gonna add comprehensive tests for the first kind because there are so many, but I'll try to be comprehensive about the latter two","msgtype":"m.text"},"ts":1600707808000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"gotcha, I think the first kind is the kind that we got wrong. I changed it so that the base class for the C++ functions takes a length so you have to get the right order. Assuming we want the order to be \"length\", \"name\", \"prototype\" eventually","msgtype":"m.text"},"ts":1600707902000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"I think all our functions that are wrapping \"built-in\" JS and user JS are correct","msgtype":"m.text"},"ts":1600707924000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"were correct*","msgtype":"m.text"},"ts":1600707931000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"That said, our implementation details don't really map to things in the spec. So I could be missing some cases","msgtype":"m.text"},"ts":1600707978000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"It's more just about whether something is implemented in JS or C++","msgtype":"m.text"},"ts":1600707999000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Bakkot: test262 has a list of top level intrinsics you can use","msgtype":"m.text"},"ts":1600708088000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we could abstract the logic here for testing the properties https://github.com/tc39/test262/blob/main/test/built-ins/Function/prototype/toString/built-in-function-object.js","msgtype":"m.text"},"ts":1600708193000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"keith_miller: also take a look at `console.log(Object.getOwnPropertyNames(Proxy.revocable({}, {}).revoke))`","msgtype":"m.text"},"ts":1600708239000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"devsnek neat","msgtype":"m.text"},"ts":1600708263000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":">>> Object.getOwnPropertyNames(Proxy.revocable({}, {}).revoke)","msgtype":"m.text"},"ts":1600708295000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"length,name","msgtype":"m.text"},"ts":1600708295000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Is what I get after my change","msgtype":"m.text"},"ts":1600708299000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"good good","msgtype":"m.text"},"ts":1600708318000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"is it legal to install additional properties between those","msgtype":"m.text"},"ts":1600708357000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`length,color,name`","msgtype":"m.text"},"ts":1600708372000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"more likely length, prototype, name","msgtype":"m.text"},"ts":1600708383000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"since prototype is unspecified IIUC","msgtype":"m.text"},"ts":1600708391000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"sure i just mean","msgtype":"m.text"},"ts":1600708398000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we should take that into account in the tests","msgtype":"m.text"},"ts":1600708402000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if its allowed","msgtype":"m.text"},"ts":1600708404000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Yeah, I think the spec doesn't say anything","msgtype":"m.text"},"ts":1600708409000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"What that means is... 🤷‍♂️","msgtype":"m.text"},"ts":1600708423000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"forbidden extensions: functions must not have colors","msgtype":"m.text"},"ts":1600708438000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"You could put something in the function constructor that says no properties should be added until after length and name","msgtype":"m.text"},"ts":1600708451000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"err function create operation (whatever that's called in the spec)","msgtype":"m.text"},"ts":1600708470000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"oh no i have name/length for some things","msgtype":"m.text"},"ts":1600708503000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what things?","msgtype":"m.text"},"ts":1600708524000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"hard to say for sure","msgtype":"m.text"},"ts":1600708545000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah I'm just going to assert on relative order, not the actual list","msgtype":"m.text"},"ts":1600708566000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i have `CreateBuiltinFunction()\\nSetFunctionName\\nSetFunctionLength()` sprinkled through a lot of the spec","msgtype":"m.text"},"ts":1600708568000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the source*","msgtype":"m.text"},"ts":1600708577000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"find-replace","msgtype":"m.text"},"ts":1600708603000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"idk how to find replace that","msgtype":"m.text"},"ts":1600708610000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm just grepping for SetFunctionName","msgtype":"m.text"},"ts":1600708626000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"SetFunctionName isn't inside CreateBuiltinFunction()? Seems like that would be the idiomatic way to do it","msgtype":"m.text"},"ts":1600708659000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"the point of this change is to make that change to the spec!","msgtype":"m.text"},"ts":1600708683000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"currently the spec just asserts the existence of these properties; we want to make it install them in CreateBuiltinFunction","msgtype":"m.text"},"ts":1600708709000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: For what it's worth I think you can get add a thing to the spec that says length, name must be the first two properties on all functions","msgtype":"m.text"},"ts":1600708712000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"well that's some poor phrasing lol","msgtype":"m.text"},"ts":1600708724000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"but I think you get the point","msgtype":"m.text"},"ts":1600708730000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"oh if it moves them to createbuiltinfunction","msgtype":"m.text"},"ts":1600708739000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that makes this way easier","msgtype":"m.text"},"ts":1600708747000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that would require V8 and Chakra to change","msgtype":"m.text"},"ts":1600708747000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but yeah probably","msgtype":"m.text"},"ts":1600708753000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"that would require V8 and Chakra to change\" is that in response to my comment?","msgtype":"m.text"},"ts":1600708772000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"keith_miller yeah","msgtype":"m.text"},"ts":1600708776000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"wait, SM and Chakra","msgtype":"m.text"},"ts":1600708785000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Where does that occur?","msgtype":"m.text"},"ts":1600708786000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"not V8","msgtype":"m.text"},"ts":1600708786000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Is prototype first or something?","msgtype":"m.text"},"ts":1600708798000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1600708807000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1600708812000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Seems like prototype should be 3rd because it's only sometimes there","msgtype":"m.text"},"ts":1600708845000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"but that's a nit","msgtype":"m.text"},"ts":1600708847000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"and I don't really care lol","msgtype":"m.text"},"ts":1600708853000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"devsnek https://github.com/tc39/ecma262/pull/2116/files#diff-3540caefa502006d8a33cb1385720803R8889-R8890","msgtype":"m.text"},"ts":1600708857000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah that's my feeling also","msgtype":"m.text"},"ts":1600708861000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"plus then it's alphabetic!","msgtype":"m.text"},"ts":1600708870000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"very exciting","msgtype":"m.text"},"ts":1600708880000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"\"alphabetic\" until you get to any other functions lol","msgtype":"m.text"},"ts":1600708887000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"well the signature of CreateBuiltinFunction is not exciting","msgtype":"m.text"},"ts":1600708889000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but oh well","msgtype":"m.text"},"ts":1600708895000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah...","msgtype":"m.text"},"ts":1600708898000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hope to get tooling to help with that eventually","msgtype":"m.text"},"ts":1600708908000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so you can see the signature of an AO if you hover over it, or something","msgtype":"m.text"},"ts":1600708917000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"we should integrate objective c's named arguments into the spec","msgtype":"m.text"},"ts":1600708920000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ehhhhhh","msgtype":"m.text"},"ts":1600708936000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I lowkey love that about Obj-C","msgtype":"m.text"},"ts":1600708937000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"It makes reading code so easy","msgtype":"m.text"},"ts":1600708942000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"yeah but my editor can just","msgtype":"m.text"},"ts":1600708956000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"which is what I'm doing like 90% of the time","msgtype":"m.text"},"ts":1600708960000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"insert the names anyway","msgtype":"m.text"},"ts":1600708960000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what do you mean by that?","msgtype":"m.text"},"ts":1600708979000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"like it takes the code `foo(a, b, c)` and renders it as `foo(arg1: a, arg2: b, arg3: c)`","msgtype":"m.text"},"ts":1600709003000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Oh, I see","msgtype":"m.text"},"ts":1600709022000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"i think vscode can do that too","msgtype":"m.text"},"ts":1600709030000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i know that's advertised as a feature of rust-analyzer","msgtype":"m.text"},"ts":1600709055000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"That doesn't work too well for C++ since it's common-ish practice to have the signature not have variable names only types","msgtype":"m.text"},"ts":1600709055000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"no reason the rendered spec couldn't pull that trick (as an opt-in mechanism); main issue would be discoverability probably","msgtype":"m.text"},"ts":1600709071000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"And you'd have to integrate with the compiler","msgtype":"m.text"},"ts":1600709077000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"which can be problematic if you're trying to get something compiling","msgtype":"m.text"},"ts":1600709086000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"yeah you have to use language servers","msgtype":"m.text"},"ts":1600709091000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rip battery life","msgtype":"m.text"},"ts":1600709096000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that said, that's a nice feature","msgtype":"m.text"},"ts":1600709099000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"i think this screenshot is from vscode https://user-images.githubusercontent.com/2690773/75099758-74d99400-55d6-11ea-856f-565e130a7e0c.png","msgtype":"m.text"},"ts":1600709152000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"intellij is reasonably good at this for java too","msgtype":"m.text"},"ts":1600709210000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"there is so much room for our tools to get better...","msgtype":"m.text"},"ts":1600709223000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I think about this a lot more since I started working with a smalltalker, since this is all they can talk abouot","msgtype":"m.text"},"ts":1600709258000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(that is, a person who worked on/with Smalltalk, the language)","msgtype":"m.text"},"ts":1600709279000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i think you mean smalltalk, the os","msgtype":"m.text"},"ts":1600709391000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bradleymeck: Did you get a chance to review https://tc39.es/proposal-import-assertions/?  It's on the schedule for today, and we've heard from the other Stage 3 reviewers; it would be great to confirm whether you've also been able to review.","msgtype":"m.text"},"ts":1600715772000,"senderName":"dandclark","senderId":"dandclark@irc"},
{"content":{"body":"dandclark: i've had reviews in meetings and had a final one on saturday to clear things up","msgtype":"m.text"},"ts":1600717355000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"shu and ljharb went over concerns about some editorial wording for the host constraint but other than that it looked fine from my end","msgtype":"m.text"},"ts":1600717390000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: Great, thanks!","msgtype":"m.text"},"ts":1600718125000,"senderName":"dandclark","senderId":"dandclark@irc"}
]