[
{"content":{"body":"could a node user enlighten me on the async contexts proposal, which seems to be largely lifted from the existing node api?","msgtype":"m.text"},"ts":1590712966000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"by \"automatic tracking through async tasks\", how is that implemented exactly?","msgtype":"m.text"},"ts":1590712982000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"any time a task or microtask is posted, the entered async local storage at the point of time of posting is remembered by the task? (is it COW?)","msgtype":"m.text"},"ts":1590713043000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: its like a linked list, each resource points to a parent resource","msgtype":"m.text"},"ts":1590713483000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"sorry, i don't understand what that means","msgtype":"m.text"},"ts":1590713525000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: talks on async hooks may be more enlightening on underlying structure of the hooks used","msgtype":"m.text"},"ts":1590713526000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"\"this promise was created in this timeout which was created in this callback from this fs function which happened in the AsyncContext.run callback\"","msgtype":"m.text"},"ts":1590713540000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it creates a new link like devsnek said in a kind of tree structure every time you queue a new async task","msgtype":"m.text"},"ts":1590713555000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ah, there's a linked list that functions remember at creation time?","msgtype":"m.text"},"ts":1590713582000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the link is by id not by a transition between actual references","msgtype":"m.text"},"ts":1590713582000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"no, not functions, that tasks remember at creation time?","msgtype":"m.text"},"ts":1590713599000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: not a real linked list, but an ordering of events that allows you to create one","msgtype":"m.text"},"ts":1590713611000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"shu: well the tasks when they go through various lifecycles keep the ids around","msgtype":"m.text"},"ts":1590713631000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"each task gets an id and via tracking init/before/after events of each task you can create a graph","msgtype":"m.text"},"ts":1590713653000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1590713670000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"are these ids tracked by node unconditionally?","msgtype":"m.text"},"ts":1590713679000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"no, it is somewhat expensive","msgtype":"m.text"},"ts":1590713689000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so when an AsyncContext.start or whatever is called, it tells node to start tracking task ids through tasks' lifetime state transitions","msgtype":"m.text"},"ts":1590713721000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah, and then it stores the relationships in a map somewhere","msgtype":"m.text"},"ts":1590713739000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1590713745000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"okay, that helps a lot, thank you!","msgtype":"m.text"},"ts":1590713749000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"this was not at all clear from the explainer","msgtype":"m.text"},"ts":1590713754000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"üëçüèª","msgtype":"m.text"},"ts":1590713843000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: https://gist.github.com/devsnek/07a61aec7d9f40d1495048790dd30a8f","msgtype":"m.text"},"ts":1590714069000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what does that module do?","msgtype":"m.text"},"ts":1590714161000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it does the map linked list stuff","msgtype":"m.text"},"ts":1590714170000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it might actually be missing some edge cases","msgtype":"m.text"},"ts":1590714175000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but it should give a bit of a picture","msgtype":"m.text"},"ts":1590714182000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh, it implements the async context","msgtype":"m.text"},"ts":1590714309000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1590714322000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"devsnek: did you want to update https://github.com/tc39/ecma262/pull/1781 ? Otherwise I'll force-push up some commits myself","msgtype":"m.text"},"ts":1590724347000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ljharb: re: https://github.com/tc39/Reflector/issues/282#issuecomment-635795520, the pdf link points to the older candidate too","msgtype":"m.text"},"ts":1590735213000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"whoops","msgtype":"m.text"},"ts":1590735223000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"fixing","msgtype":"m.text"},"ts":1590735224000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"clipboard fun","msgtype":"m.text"},"ts":1590735232000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yayyyyyyyy thanks for the fix","msgtype":"m.text"},"ts":1590735244000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"thanks, should be fixed","msgtype":"m.text"},"ts":1590735254000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"np, ty for catching it so fast","msgtype":"m.text"},"ts":1590735260000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm going to blame it on adobe acrobat stealing all my cpu :-p","msgtype":"m.text"},"ts":1590735299000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"that is one packed agenda","msgtype":"m.text"},"ts":1590736216000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"devsnek looks like you found the bug, but yes, we are implementing it now which is why we want to sort out the spec side of things","msgtype":"m.text"},"ts":1590736744000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"what is Michael Ficarra's nickname on here?","msgtype":"m.text"},"ts":1590757527000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"bterlson: could you please add Marja H√∂ltt√§ (marjakh) as a delegate so she can access the Reflector? (she works on V8)","msgtype":"m.text"},"ts":1590757741000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: you can open an issue here and we will onboard her: https://github.com/tc39/Admin-and-Business/issues","msgtype":"m.text"},"ts":1590758786000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: thanks, will do. fyi https://github.com/tc39/Reflector#readme still says to ping bterlson","msgtype":"m.text"},"ts":1590758833000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"ooo thanks for the heads up","msgtype":"m.text"},"ts":1590758934000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"will udpate","msgtype":"m.text"},"ts":1590758935000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: cheers!","msgtype":"m.text"},"ts":1590761182000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"ystartsev: btw, good luck with the stream later! i can't wait","msgtype":"m.text"},"ts":1590761204000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"_internal screaming_","msgtype":"m.text"},"ts":1590762014000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"see you there!","msgtype":"m.text"},"ts":1590762016000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"or","msgtype":"m.text"},"ts":1590762017000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"rather","msgtype":"m.text"},"ts":1590762019000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"you know what i mean","msgtype":"m.text"},"ts":1590762022000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"ystartsev: michael ficarra is not on IRC except during meetings, alas","msgtype":"m.text"},"ts":1590767981000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"he's probably reachable by email though","msgtype":"m.text"},"ts":1590768011000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ystartsev: is there a schedule somewhere for your future streams and tc39 q/a and whatnot","msgtype":"m.text"},"ts":1590768306000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: there should be a schedule here :https://www.twitch.tv/codehag/schedule","msgtype":"m.text"},"ts":1590771778000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"and","msgtype":"m.text"},"ts":1590771779000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"here: https://developer.mozilla.com/events/compiler-compiler-yulia-startsev/","msgtype":"m.text"},"ts":1590771805000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"that twitch link just shows me your last broadcast","msgtype":"m.text"},"ts":1590771836000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but the second link works, thx","msgtype":"m.text"},"ts":1590771888000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ystartsev: iterator slides are private","msgtype":"m.text"},"ts":1590774547000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: fixed","msgtype":"m.text"},"ts":1590774835000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1590774846000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ftr (unless the chairs want the notifications) yall don't need to make PRs to the agenda to add slides for anything that's not a stage advancement, or for schedule constraints, you can just commit directly to master","msgtype":"m.text"},"ts":1590775478000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: _i have done horrible things when pushing to master_","msgtype":"m.text"},"ts":1590777338000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"thats why i make prs :P","msgtype":"m.text"},"ts":1590777359000,"senderName":"ystartsev","senderId":"ystartsev@irc"},
{"content":{"body":"haha fair enough","msgtype":"m.text"},"ts":1590777429000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Why does Set use `set` to add things and Map use `add`... ugh","msgtype":"m.text"},"ts":1590777854000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"üò≠","msgtype":"m.text"},"ts":1590777866000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"keith_miller to support subclassing","msgtype":"m.text"},"ts":1590777908000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Can we add a Map.prototype.set and a Set.prototype.add that are just aliases of the other?","msgtype":"m.text"},"ts":1590777909000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Bakkot: ?","msgtype":"m.text"},"ts":1590777918000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"oh, wait, the different names","msgtype":"m.text"},"ts":1590777919000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"keith_miller: they take diff arg signatures","msgtype":"m.text"},"ts":1590777920000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1590777920000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"keith_miller: also Map uses set and Set uses add, i think?","msgtype":"m.text"},"ts":1590777935000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I thought you were asking about why the constructors invoke the methods","msgtype":"m.text"},"ts":1590777936000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ljharb: No I mean Map.prototype.set == Map.prototype.add","msgtype":"m.text"},"ts":1590777937000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"keith_miller: you set things in a map, you add things to a set","msgtype":"m.text"},"ts":1590777949000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Bakkot: Ah, on","msgtype":"m.text"},"ts":1590777951000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"ljharb: You have it backwards :P","msgtype":"m.text"},"ts":1590777963000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"you set things in a set and add things to a map","msgtype":"m.text"},"ts":1590777972000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1590777973000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"`Set.prototype.add` is the method that exists right now","msgtype":"m.text"},"ts":1590777976000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"lol i do not agree with your intuition","msgtype":"m.text"},"ts":1590777985000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh nvo","msgtype":"m.text"},"ts":1590777986000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"oh nvm","msgtype":"m.text"},"ts":1590777990000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"I just want to have the same name","msgtype":"m.text"},"ts":1590777996000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"a set is a list, you add things to it","msgtype":"m.text"},"ts":1590778002000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it is aggravating to have different names","msgtype":"m.text"},"ts":1590778003000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"right but they're different methods","msgtype":"m.text"},"ts":1590778007000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"you add one thing at a time to a set; you set a key in a map to have a value","msgtype":"m.text"},"ts":1590778019000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"You can add things to a map?","msgtype":"m.text"},"ts":1590778020000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"I also have to look this up almost every time","msgtype":"m.text"},"ts":1590778024000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"^ +!","msgtype":"m.text"},"ts":1590778027000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"I'm adding a new key to my map","msgtype":"m.text"},"ts":1590778031000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1590778034000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"that doesn't make any sense to me","msgtype":"m.text"},"ts":1590778042000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"without a value you're not mapping to anything","msgtype":"m.text"},"ts":1590778049000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I'd be cool with an add that returns a boolean if it's a new key or something","msgtype":"m.text"},"ts":1590778052000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"you don't add properties to an object either, you set them to a value","msgtype":"m.text"},"ts":1590778071000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the functions can have different signatures, but it'd be nice to have a `Map.prototype.add`","msgtype":"m.text"},"ts":1590778072000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"Oh, I'm not saying it has the same signature as Set.prototype.add","msgtype":"m.text"},"ts":1590778087000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"i would argue that that's semantics, not necessarily how developers think","msgtype":"m.text"},"ts":1590778095000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"if it has a different signature then it should have a different name imo","msgtype":"m.text"},"ts":1590778097000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"drousso: i would argue those two should overlap","msgtype":"m.text"},"ts":1590778102000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I find it more confusing that I have to figure out which name is which lol","msgtype":"m.text"},"ts":1590778121000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"fair","msgtype":"m.text"},"ts":1590778126000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"100% of the time","msgtype":"m.text"},"ts":1590778127000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"i don't think this is as universal as \"putting the usb plug in the wrong way\" tho","msgtype":"m.text"},"ts":1590778145000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"^ ditto","msgtype":"m.text"},"ts":1590778145000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"I think Map.prototype.add wouldn't be that confusing","msgtype":"m.text"},"ts":1590778151000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"especially if it returns a bool","msgtype":"m.text"},"ts":1590778158000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"i wish it returned a bool üò≠","msgtype":"m.text"},"ts":1590778168000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"then it wouldn't be chainable","msgtype":"m.text"},"ts":1590778173000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I'm ok with that","msgtype":"m.text"},"ts":1590778180000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"i've never once wanted to chain","msgtype":"m.text"},"ts":1590778188000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"If you want the chaining you can use set!","msgtype":"m.text"},"ts":1590778197000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"whereas i often want to know \"did this exist before\" in a single step","msgtype":"m.text"},"ts":1590778201000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"heck that could be the difference between `Map.prototype.set` and `Map.prototype.add`","msgtype":"m.text"},"ts":1590778220000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"err, `Set.prototype","msgtype":"m.text"},"ts":1590778228000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"although the lack of chaining may be confusing between Set and Map","msgtype":"m.text"},"ts":1590778232000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"the new method seems fine, but conflicting names isn't something i'd be ok with","msgtype":"m.text"},"ts":1590778237000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"also, there's already some weirdness with `String.prototype.indexOf` and `Array.prototype.indexOf`","msgtype":"m.text"},"ts":1590778247000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"Maybe we should add like item or something since that's what all the DOM containers have anyway?","msgtype":"m.text"},"ts":1590778271000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"although item is an awful name","msgtype":"m.text"},"ts":1590778278000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"drousso: wait, what weirdness?","msgtype":"m.text"},"ts":1590778283000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"they share the same name, and yet they don't do the same thing","msgtype":"m.text"},"ts":1590778296000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"drousso: in what way do they differ?","msgtype":"m.text"},"ts":1590778320000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"drousso: Yeah, we should have Map.prototype.indexOf :P","msgtype":"m.text"},"ts":1590778321000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"drousso: boy do i have bad news for you about natural languages","msgtype":"m.text"},"ts":1590778332000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"keith_miller: i am proposing to add item did you see","msgtype":"m.text"},"ts":1590778362000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb `Array.prototype.indexOf` finds an item in the array whereas `String.prototype.indexOf` finds a substring not an item","msgtype":"m.text"},"ts":1590778364000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"well, tab is, i'm championing","msgtype":"m.text"},"ts":1590778366000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: !!!!","msgtype":"m.text"},"ts":1590778372000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"shu i saw that and loved it","msgtype":"m.text"},"ts":1590778379000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"keith_miller: relative indexing","msgtype":"m.text"},"ts":1590778379000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Wait, for array?","msgtype":"m.text"},"ts":1590778380000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"drousso: ah, sure, that's fair","msgtype":"m.text"},"ts":1590778385000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"keith_miller: all number indexables","msgtype":"m.text"},"ts":1590778387000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"are we adding item to set and map?","msgtype":"m.text"},"ts":1590778389000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"nah","msgtype":"m.text"},"ts":1590778392000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh :(","msgtype":"m.text"},"ts":1590778394000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah well","msgtype":"m.text"},"ts":1590778396000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"drousso: but we're not trying to add a new thing named indexOf now :-p","msgtype":"m.text"},"ts":1590778397000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh yes true","msgtype":"m.text"},"ts":1590778406000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"shu: wait, strings too?","msgtype":"m.text"},"ts":1590778411000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: I wouldn't be opposed to adding an item to Map and Set","msgtype":"m.text"},"ts":1590778412000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"for consistency","msgtype":"m.text"},"ts":1590778416000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"ljharb that was more an example of  \"things with the same name doing different things\"","msgtype":"m.text"},"ts":1590778421000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"keith_miller: that... take integers? or just do something different?","msgtype":"m.text"},"ts":1590778425000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb: strings, arrays, typedarrays","msgtype":"m.text"},"ts":1590778430000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"strings are weird for .item because they have two notions of \"the nth thing\"","msgtype":"m.text"},"ts":1590778436000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I mean the array one presumably takes non-integers right?","msgtype":"m.text"},"ts":1590778441000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Or does it error?","msgtype":"m.text"},"ts":1590778444000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"I would assume it toNumbers them","msgtype":"m.text"},"ts":1590778453000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"keith_miller: yeah, it ToIntegers","msgtype":"m.text"},"ts":1590778459000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i like the proposal's semantics but am very questionable on the name \"item\"","msgtype":"m.text"},"ts":1590778459000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu love the negative value semantics especially","msgtype":"m.text"},"ts":1590778476000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"but also yeah, weird on strings wrt code units/points","msgtype":"m.text"},"ts":1590778484000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: So Map and Set presumably wouldn't do that...","msgtype":"m.text"},"ts":1590778495000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"name has to be item for reasons","msgtype":"m.text"},"ts":1590778496000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but otherwise would be the same?","msgtype":"m.text"},"ts":1590778500000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"see proposal","msgtype":"m.text"},"ts":1590778500000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"e.g. it's get","msgtype":"m.text"},"ts":1590778508000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"keith_miller: i'm open to that? i just haven't thought about it","msgtype":"m.text"},"ts":1590778511000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i saw, but i don't like those reasons","msgtype":"m.text"},"ts":1590778514000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: i'm gonna need a better reason than \"i don't like it\"","msgtype":"m.text"},"ts":1590778524000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: i haven't fully formed an opinion yet, but in general i don't like naming/semantics choices being made for us, especially when it's presented as \"we accept this coercion, or the proposal is withdrawn\"","msgtype":"m.text"},"ts":1590778586000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: But yeah, I support item. Even if I didn't the powers on high have told me to support it :P","msgtype":"m.text"},"ts":1590778593000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"ljharb: that seems like one of those things you will should learn to live with","msgtype":"m.text"},"ts":1590778610000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the name choice _has_ been made for us","msgtype":"m.text"},"ts":1590778616000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it does already exist","msgtype":"m.text"},"ts":1590778619000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"you can't unmake it","msgtype":"m.text"},"ts":1590778621000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"not on arrays etc","msgtype":"m.text"},"ts":1590778629000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah, i think this is the reality of working on the JS platform, which includes the web platform","msgtype":"m.text"},"ts":1590778635000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"at times it is, yes.","msgtype":"m.text"},"ts":1590778647000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I think the consequences of not having it on array is worse","msgtype":"m.text"},"ts":1590778652000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1590778657000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"^ ditto","msgtype":"m.text"},"ts":1590778657000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"i hope to hear about that during the presentation","msgtype":"m.text"},"ts":1590778663000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"unfortunately","msgtype":"m.text"},"ts":1590778664000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"^ ditto","msgtype":"m.text"},"ts":1590778668000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"I think item name was a poor choice fwiw but that ship has sailed for W3C","msgtype":"m.text"},"ts":1590778690000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"ljharb: i don't get the sense you can be receptive to it if your starting point is \"web platform is only part of the js ecosystem part of the time\"","msgtype":"m.text"},"ts":1590778705000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i'm receptive to places where the spec needs to change to match web reality","msgtype":"m.text"},"ts":1590778725000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i won't be making any new arguments than what's already in tab's explainer","msgtype":"m.text"},"ts":1590778749000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i don't think that's the same scenario as being forced (in the general case) to broadly support design choices, good or bad, just because the web made them elsewhere","msgtype":"m.text"},"ts":1590778754000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"like i said, i haven't fully formed an opinion, and def need to give the explainer a reread","msgtype":"m.text"},"ts":1590778773000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: also the presentation isn't \"accept this name or proposal is withdrawn\"","msgtype":"m.text"},"ts":1590778871000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb: it's \"there're actually some compat risk with naming it item, but everything would be better for the ecosystem if it _could_ be named item, so barring incompat data, strongly prefer 'item'\"","msgtype":"m.text"},"ts":1590778924000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: The upside of something like `item` over `at` is that it \"nicely\" extends to other container classes that have a single key","msgtype":"m.text"},"ts":1590778924000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"keith_miller: ah i didn't think about that","msgtype":"m.text"},"ts":1590778956000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"since `at` strongly implies index whereas I don't see item in the same way","msgtype":"m.text"},"ts":1590778961000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"i mean item is such a terrible java-ism name","msgtype":"m.text"},"ts":1590778974000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it is *java*script!","msgtype":"m.text"},"ts":1590778986000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"but it is generic like that","msgtype":"m.text"},"ts":1590778989000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"one time at jsconf eu some german dude saw a bunch of us coming out of the event venue and asked us what it was about","msgtype":"m.text"},"ts":1590779012000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: the explainer says the name is a requirement; i'm sure i saw the wording i used somewhere but def not in the explainer, so ¬Ø\\_(„ÉÑ)_/¬Ø","msgtype":"m.text"},"ts":1590779014000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"someone said javascript","msgtype":"m.text"},"ts":1590779025000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and the german dude was like \"yahweh script? is it religious?\"","msgtype":"m.text"},"ts":1590779035000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: I mean based on the strength of some peoples opinions on JS it's comparable to a religion! :P","msgtype":"m.text"},"ts":1590779172000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"prettier's official policy is to add styling options only if means avoiding taking sides in a holy war","msgtype":"m.text"},"ts":1590779518000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so: tabs vs spaces, semicolons","msgtype":"m.text"},"ts":1590779522000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ü§£ü§£ü§£ü§£ü§£","msgtype":"m.text"},"ts":1590779595000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"that is my new favorite thing ever","msgtype":"m.text"},"ts":1590779601000,"senderName":"drousso_","senderId":"drousso_@irc"},
{"content":{"body":"the problem here is that the proper name for both maps and sets is insert","msgtype":"m.text"},"ts":1590780469000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"personally, i would've been fine with that since they both had the same name","msgtype":"m.text"},"ts":1590781690000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"oof I'm honestly more bugged by the keys/values/entries situation in Set","msgtype":"m.text"},"ts":1590781945000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"orly?","msgtype":"m.text"},"ts":1590781966000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"what about?","msgtype":"m.text"},"ts":1590781967000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"keys is values and thus entries is just intentionally duplicated","msgtype":"m.text"},"ts":1590781989000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1590782018000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"¬Ø\\_(„ÉÑ)_/¬Ø","msgtype":"m.text"},"ts":1590782026000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"personally i'm ok with that cause it means there's consistency with `Map`","msgtype":"m.text"},"ts":1590782055000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"that is the stated motivation but I really wonder whether it's useful","msgtype":"m.text"},"ts":1590782088000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"the thing is that `get` is the thing you do with a populated Map but there is no `get`-like operation for a Set, so that implies that Map will have a `set` but says nothing of Set","msgtype":"m.text"},"ts":1590782163000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"get on a Set would be `s.has(k) ? k : undefined`, i suppose","msgtype":"m.text"},"ts":1590782240000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1590782254000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah I mean tbf that could exist, it just doesn't","msgtype":"m.text"},"ts":1590782268000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"and I could see people disliking `new Set().set`, so it doesn't surprise me that a different word was chosen","msgtype":"m.text"},"ts":1590782302000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hmm I guess Rust and C++ alike use `insert` as devsnek said","msgtype":"m.text"},"ts":1590782423000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"for both Map and Set","msgtype":"m.text"},"ts":1590782437000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i think some languages also use \"put\"","msgtype":"m.text"},"ts":1590782492000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"to me \"put\" weakly implies creation tho","msgtype":"m.text"},"ts":1590782842000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"wait what we're doin' Teams this time?","msgtype":"m.text"},"ts":1590783175000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"akirose: wait, we're using teams for this plenary?","msgtype":"m.text"},"ts":1590783178000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"why? zoom works great","msgtype":"m.text"},"ts":1590783186000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yay not zoom","msgtype":"m.text"},"ts":1590783195000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"teams' UX on ios is painful :-/","msgtype":"m.text"},"ts":1590783208000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"like, getting into the call, i mean","msgtype":"m.text"},"ts":1590783213000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"? have you tried lately? bc i just hopped onto a call from my personal computer and it was fill in name, click join","msgtype":"m.text"},"ts":1590783257000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"Zoom \"works great\" but a whole lotta people won't touch it with a 10-foot pole","msgtype":"m.text"},"ts":1590783277000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"because they are a garbage company","msgtype":"m.text"},"ts":1590783285000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"and their product has both privacy and security issues","msgtype":"m.text"},"ts":1590783304000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"i tried to get on a Teams call with daniel a month or two ago","msgtype":"m.text"},"ts":1590783306000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so far all the issues i'm aware of that are unique to zoom can be bypassed by using the web, or the ios app, instead of the native desktop app","msgtype":"m.text"},"ts":1590783347000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"¬Ø\\_(„ÉÑ)_/¬Ø feel free to hop on to the tech check","msgtype":"m.text"},"ts":1590783360000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"seems like a pretty big last minute change :-/","msgtype":"m.text"},"ts":1590783401000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I for one am excited to add a new entry to my menagerie of video chat clients","msgtype":"m.text"},"ts":1590783862000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"how long until we do plenary over discord","msgtype":"m.text"},"ts":1590783947000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"does discord have video yet?","msgtype":"m.text"},"ts":1590784137000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"eesh, nvm, i'll stop complaining about teams","msgtype":"m.text"},"ts":1590784167000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"akirose: it's had video for a while :P","msgtype":"m.text"},"ts":1590784218000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(in my experience the highest quality video too)","msgtype":"m.text"},"ts":1590784227000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lollll look i only use it for union organizing","msgtype":"m.text"},"ts":1590784237000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"uhh.","msgtype":"m.text"},"ts":1590784241000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"i mean.","msgtype":"m.text"},"ts":1590784242000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"NOTHING.","msgtype":"m.text"},"ts":1590784244000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1590784270000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: in that case idk i wouldn't rule anything out completely. i don't see it happening any time soon but never say never.","msgtype":"m.text"},"ts":1590784278000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"yeah i was mostly joking but its always good to have options","msgtype":"m.text"},"ts":1590784291000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"each channel can be its own video session which makes breakouts super duper easy","msgtype":"m.text"},"ts":1590784305000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah what clients do i have now... webex, zoom (which had to be uninstalled per corp policy), now teams, i guess not too many","msgtype":"m.text"},"ts":1590786419000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"fwiw rkirsling just joined from the web client and it seemed to work perfectly fine. he didn't test presenting from the web client though.","msgtype":"m.text"},"ts":1590786569000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":":nod:","msgtype":"m.text"},"ts":1590786582000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"linux version is a bit odd but it seems to work","msgtype":"m.text"},"ts":1590786629000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"one gotcha with the linux client: not 100% sure but it seems like there's no \"share window\" option, only \"share entire desktop\"","msgtype":"m.text"},"ts":1590786715000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"i think that depends on your window system","msgtype":"m.text"},"ts":1590786737000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i can double check","msgtype":"m.text"},"ts":1590786753000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah i'm only getting desktop option weird","msgtype":"m.text"},"ts":1590786842000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"mathiasbynens shu: do you know any historical bug for V8 setting extra own properties (non configurable) to function objects? Basically \"arguments\" and \"caller\"","msgtype":"m.text"},"ts":1590790167000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"ljharb just pointed me to https://tc39.es/ecma262/#sec-addrestrictedfunctionproperties","msgtype":"m.text"},"ts":1590790266000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I don't get where this abstraction happens. I need to go deeper there","msgtype":"m.text"},"ts":1590790283000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"looks like there's nothing that makes them be own properties, only prototype throwers","msgtype":"m.text"},"ts":1590790301000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"IIRC this is something that happens historically on v8 and jsc, as we can observe still happens today","msgtype":"m.text"},"ts":1590790374000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I'd like to find a specific bug to point it out","msgtype":"m.text"},"ts":1590790410000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"let's see what a google search gives me (not easy with these keywords)","msgtype":"m.text"},"ts":1590790429000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"got it! the search on v8's bug tracker is great, one would wonder why.","msgtype":"m.text"},"ts":1590790548000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"https://bugs.chromium.org/p/v8/issues/detail?id=5047&q=caller%20arguments%20own%20properties&can=2","msgtype":"m.text"},"ts":1590790549000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"also https://bugs.chromium.org/p/v8/issues/detail?id=6049","msgtype":"m.text"},"ts":1590790558000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"and we do have tests: https://github.com/tc39/test262/commit/a266cfa8cb8c17f5724298f2205c03c26c7c83e0","msgtype":"m.text"},"ts":1590790661000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"rkirsling  anything related to this in jsc?","msgtype":"m.text"},"ts":1590790787000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"https://test262.report/browse/built-ins/Object/internals/DefineOwnProperty/consistent-value-function-arguments.js","msgtype":"m.text"},"ts":1590790824000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I mean I have no background on this but searching found https://bugs.webkit.org/show_bug.cgi?id=158116","msgtype":"m.text"},"ts":1590790974000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"there is more background in https://github.com/tc39/ecma262/issues/562","msgtype":"m.text"},"ts":1590791978000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and https://github.com/tc39/ecma262/issues/877","msgtype":"m.text"},"ts":1590791980000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and https://github.com/claudepache/es-legacy-function-reflection/","msgtype":"m.text"},"ts":1590791988000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"specifically https://github.com/claudepache/es-legacy-function-reflection/blob/master/analysis.md","msgtype":"m.text"},"ts":1590792000000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"thanks for the links, Bakkot","msgtype":"m.text"},"ts":1590794066000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I'm afraid they focus more in arguments and caller inside the function rather than as properties of the function object","msgtype":"m.text"},"ts":1590794098000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"but it's a very weird behavior that makes some mess in a quick switch from strict to sloppy mode","msgtype":"m.text"},"ts":1590794138000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"Here is an example where this problem subtly affects other operations: https://gist.github.com/leobalter/0d67d314b66b14d34668d2d8308b9a6c","msgtype":"m.text"},"ts":1590794333000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"what is the ask here?","msgtype":"m.text"},"ts":1590795591000,"senderName":"shu","senderId":"shu@irc"}
]