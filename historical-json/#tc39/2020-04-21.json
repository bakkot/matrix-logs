[
{"content":{"body":"shu: you might wanna look at the PR first, it's using isView to distinguish AB and SAB","msgtype":"m.text"},"ts":1587442971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh i see, interesting","msgtype":"m.text"},"ts":1587444102000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it seems like an unfortunate way to test SABness but i don‚Äôt think there‚Äôre any plans to add isView to SAB","msgtype":"m.text"},"ts":1587444271000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: this is all fallout from that hiding you all proposed that I'm dealing with...","msgtype":"m.text"},"ts":1587444345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh my bad, shu, I meant to link https://github.com/web-platform-tests/wpt/pull/23112","msgtype":"m.text"},"ts":1587444402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, i‚Äôm not particularly happy about the price we pay for spectre either, but i‚Äôm willing to live with some oddness in wpt. in this case cross realm brand checks is a general JS issue though, how does it deal with other constructors where e.g. no Array.isArray is available?","msgtype":"m.text"},"ts":1587447416000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: this isn't about cross-realm","msgtype":"m.text"},"ts":1587447837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, i'm sorry i misunderstood, it's because SAB isn't available for the equality check?","msgtype":"m.text"},"ts":1587448032000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: yeah, it wants to check that what Wasm returns is actually a SAB","msgtype":"m.text"},"ts":1587448085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well the Wasm.Memory API","msgtype":"m.text"},"ts":1587448095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WebAssembly.Memory, sigh","msgtype":"m.text"},"ts":1587448102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i'd think checking @@toStringTag is a more direct check","msgtype":"m.text"},"ts":1587448179000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"or `.constructor.name` or whatever","msgtype":"m.text"},"ts":1587448248000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"will catch up tomorrow morning, sleep time now","msgtype":"m.text"},"ts":1587448308000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"wow, what a healthy bedtime","msgtype":"m.text"},"ts":1587448829000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"üõèÔ∏è","msgtype":"m.text"},"ts":1587448902000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"why would toStringTag or the mutable contructor property's mutable name property be a more direct check?","msgtype":"m.text"},"ts":1587449489000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"if you want it to *claim* to be an SAB, sure, but not if you want it to actually be one - that requires checking for the presence of internal slots.","msgtype":"m.text"},"ts":1587449509000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"generally platform tests exist to help cooperating implementations, not maximize the chances of tripping up an adversarial one","msgtype":"m.text"},"ts":1587449728000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah, fair, i suppose it's not important in tests","msgtype":"m.text"},"ts":1587451346000,"senderName":"ljharb","senderId":"ljharb@irc"}
]