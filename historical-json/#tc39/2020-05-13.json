[
{"content":{"body":"ruh roh","msgtype":"m.text"},"ts":1589400203000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"export {no_no_no_no_no as await};","msgtype":"m.text"},"ts":1589400211000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"did await as an identifier not have a strict mode angry ban in that specific location?","msgtype":"m.text"},"ts":1589400239000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"why would it?","msgtype":"m.text"},"ts":1589400285000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it's a valid identifier outside of an async function","msgtype":"m.text"},"ts":1589400297000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"altho that may actually present a problem for TLA, lol","msgtype":"m.text"},"ts":1589400334000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"not in module? you can't do `var await =` in a module","msgtype":"m.text"},"ts":1589400343000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"oh no, nvm, because of the space","msgtype":"m.text"},"ts":1589400345000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"are you sure? you can in strict mode.","msgtype":"m.text"},"ts":1589400355000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yes, await is reserved","msgtype":"m.text"},"ts":1589400363000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"hm, ok","msgtype":"m.text"},"ts":1589400366000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so you can't `import { await } from './mod'`?","msgtype":"m.text"},"ts":1589400389000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"or i guess you might be forced to rename it","msgtype":"m.text"},"ts":1589400400000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"in which case the export is \"fine\" for some value of fine","msgtype":"m.text"},"ts":1589400412000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yea... i guess but its... weird","msgtype":"m.text"},"ts":1589400462000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so is `then` as an export name","msgtype":"m.text"},"ts":1589400511000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"then only is weird due to how people consume it","msgtype":"m.text"},"ts":1589400548000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"exactly like `await`, then :-)","msgtype":"m.text"},"ts":1589400557000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"this is an id that can be exported but no var can be named that","msgtype":"m.text"},"ts":1589400561000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so on both ends it is strange","msgtype":"m.text"},"ts":1589400574000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"though, honestly i wish we would just allow arbitrary string names when renaming anyway...","msgtype":"m.text"},"ts":1589400598000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"you can have a named export `yield` too","msgtype":"m.text"},"ts":1589400676000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"probably all the reserved words","msgtype":"m.text"},"ts":1589400689000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but i mean, if you have to do `as` to export it then it seems reasonable to have to do `as` to import it","msgtype":"m.text"},"ts":1589400707000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"not all of them, but its weird","msgtype":"m.text"},"ts":1589400818000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://tc39.es/ecma262/#sec-exports-static-semantics-early-errors","msgtype":"m.text"},"ts":1589400819000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it only checks the names of the bindings? not what they are renamed to?","msgtype":"m.text"},"ts":1589400839000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"hmm, https://tc39.es/ecma262/#prod-NamedExports says `IdentifierName as IdentifierName`","msgtype":"m.text"},"ts":1589400948000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and that early error says \"For each IdentifierName n in ReferencedBindings of NamedExports\"","msgtype":"m.text"},"ts":1589400966000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"import side DGAF about what you grab","msgtype":"m.text"},"ts":1589400976000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"\"ReferencedBindings\" seems to restrict it to the LHS of the as","msgtype":"m.text"},"ts":1589400977000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"wait... :thinking:","msgtype":"m.text"},"ts":1589401010000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"well some things blow up if you put bad things on the RHS it seems","msgtype":"m.text"},"ts":1589401298000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i think somethign might be impl wrong (everywhere?) cause i can export `package` but it looks like no engine lets me import it...","msgtype":"m.text"},"ts":1589401842000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"even renamed?","msgtype":"m.text"},"ts":1589401851000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"that's fascinating, you could presumably get it off the namespace","msgtype":"m.text"},"ts":1589401860000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"correct https://tc39.es/ecma262/#sec-identifiers seems like package should be a banned rename","msgtype":"m.text"},"ts":1589401870000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"since RHS of export with the rename needs an identifier","msgtype":"m.text"},"ts":1589401890000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"and identifier should exclude reserved word","msgtype":"m.text"},"ts":1589401899000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"oh, but we are using IdentifierName not identifier...","msgtype":"m.text"},"ts":1589401912000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1589401915000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":":stare:","msgtype":"m.text"},"ts":1589401918000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"import uses IdentifierName too, but no one allows it to be a reserved word","msgtype":"m.text"},"ts":1589401968000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so is that a bug in engines, they should be allowing it?","msgtype":"m.text"},"ts":1589402158000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"sounds like a job for some test262 tests","msgtype":"m.text"},"ts":1589402169000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yea they should be allowing it *grumbling*","msgtype":"m.text"},"ts":1589402337000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"honestly given that... why aren't we allowing arbitrary string names?","msgtype":"m.text"},"ts":1589402409000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"export {x as \"why not\"};","msgtype":"m.text"},"ts":1589402427000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yeah that's a fair question","msgtype":"m.text"},"ts":1589402532000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"`export {_ as this}` is now my favorite","msgtype":"m.text"},"ts":1589402660000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"a module with only reserved words as exports, plus \"then\", so that the only way you can ever import it is synchronously as a namespace","msgtype":"m.text"},"ts":1589402864000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm particularly curious about this given JSON could have any key represented as a string","msgtype":"m.text"},"ts":1589403718000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"in my parser \"export { a as await }` and `import { await as b } from ''` are legal","msgtype":"m.text"},"ts":1589404663000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"also with s/await/if/ or whatever","msgtype":"m.text"},"ts":1589404668000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"could've sworn there were test262 tests for this","msgtype":"m.text"},"ts":1589404676000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i ran into `as` exports the other day","msgtype":"m.text"},"ts":1589404702000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it's quite confusing, there was an incorrect test262 test about named exports that happened to be named \"default\"","msgtype":"m.text"},"ts":1589404728000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"`this` works in both positions, but `package` and the ilk in that section are odd","msgtype":"m.text"},"ts":1589404734000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1589404775000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that is, if they're odd in the spec in that position, how are they odd?","msgtype":"m.text"},"ts":1589404786000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"implementations don't like you importing that name","msgtype":"m.text"},"ts":1589404825000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"spec says you should be allowed to `import {package as _}`","msgtype":"m.text"},"ts":1589404845000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"even more fun, abstract module record doesn't have any restrictions on exported names","msgtype":"m.text"},"ts":1589404869000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"pretty sure that could come back to bite things","msgtype":"m.text"},"ts":1589404919000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"seems to work fine in node?","msgtype":"m.text"},"ts":1589404970000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"let b = 0;","msgtype":"m.text"},"ts":1589405005000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"export { b as package };","msgtype":"m.text"},"ts":1589405005000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"import { package as a } from './import-reserved.mjs';","msgtype":"m.text"},"ts":1589405005000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"node --experimental-modules import-reserved.mjs import-reserved.mjs","msgtype":"m.text"},"ts":1589405014000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"works fine","msgtype":"m.text"},"ts":1589405015000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: don't even need the flag in 13.7+","msgtype":"m.text"},"ts":1589405126000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Bakkot: didn't work in the browsers i just tried mmm","msgtype":"m.text"},"ts":1589405180000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: works fine in Chrome","msgtype":"m.text"},"ts":1589405270000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"also Firefox","msgtype":"m.text"},"ts":1589405280000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"did you get the order of the `as` things backwards?","msgtype":"m.text"},"ts":1589405293000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(also safari)","msgtype":"m.text"},"ts":1589405317000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"maybe i did do a typo","msgtype":"m.text"},"ts":1589405320000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"or its the darn service workers","msgtype":"m.text"},"ts":1589405328000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":":stares at local dev:","msgtype":"m.text"},"ts":1589405338000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it should be any valid IdentifierName","msgtype":"m.text"},"ts":1589405380000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`export { a as function }`","msgtype":"m.text"},"ts":1589405387000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"thats a good one","msgtype":"m.text"},"ts":1589405407000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if that isn't valid in an engine its a bug","msgtype":"m.text"},"ts":1589405421000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the idea about allowing string literals there is interesting though","msgtype":"m.text"},"ts":1589405537000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'd be in favor","msgtype":"m.text"},"ts":1589405554000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i think either allowing everything or constraining would be fine, but right now it is in an odd place","msgtype":"m.text"},"ts":1589405644000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it seems fairly consistent to me atm","msgtype":"m.text"},"ts":1589405740000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i would actually worry that allowing strings would make people confuse it for a property name and they might write `x as [y]` or something","msgtype":"m.text"},"ts":1589405776000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well right now abstract module records can export arbitrary names","msgtype":"m.text"},"ts":1589405800000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so it isn't like other languages can't export these","msgtype":"m.text"},"ts":1589405810000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"wasm is the most glaring","msgtype":"m.text"},"ts":1589405834000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"its imports and exports are utf8 strings","msgtype":"m.text"},"ts":1589405840000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"actually that's an argument to allow export as \"string\", so you can interop with modules expecting those exports","msgtype":"m.text"},"ts":1589406213000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yea probably","msgtype":"m.text"},"ts":1589406245000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"well i think thats more pertinent than \"from 'foo' import\" so maybe we can swap that agenda item out","msgtype":"m.text"},"ts":1589406335000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i'd just add both but tell the chairs that that one is low priority","msgtype":"m.text"},"ts":1589406481000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1589406501000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"we should probably set aside a few hours for export as string, very high priority","msgtype":"m.text"},"ts":1589406509000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i somewhat doubt it breaks more than a hour given that wasm already can do it","msgtype":"m.text"},"ts":1589406538000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"oh yeah i was kidding lol","msgtype":"m.text"},"ts":1589406547000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'd assume 30 minutes at most","msgtype":"m.text"},"ts":1589406553000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you can also mention commonjs","msgtype":"m.text"},"ts":1589406574000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we are still arguing if we can support CJS named exports at all I thought? people were hesitant about a static analysis approach and pretty negative towards the other ones","msgtype":"m.text"},"ts":1589406638000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: generated esm wrappers can use it","msgtype":"m.text"},"ts":1589406889000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1589406912000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://github.com/tc39/agendas/pull/748","msgtype":"m.text"},"ts":1589407456000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"spec text wouldn't be too hard","msgtype":"m.text"},"ts":1589407540000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"}
]