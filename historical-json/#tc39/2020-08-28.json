[
{"content":{"body":"Bakkot sorry, I've been on vacation (still am). To answer your question: I don't believe that was intentional.","msgtype":"m.text"},"ts":1598648809000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"(back to vacation)","msgtype":"m.text"},"ts":1598648824000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron: sweet, thanks! enjoy vacation","msgtype":"m.text"},"ts":1598648976000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Can someone explain what the point of the invariants on Proxy object's [[Get]] are? Seems like they are kinda unnecessary, what do they actually prevent?","msgtype":"m.text"},"ts":1598649989000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"i'm not 100% sure why those invariants exist in the spec but they aren't specific to proxies","msgtype":"m.text"},"ts":1598650170000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"everything has to abide by them","msgtype":"m.text"},"ts":1598650176000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"keith_miller: which invariants?","msgtype":"m.text"},"ts":1598650609000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"The value reported for a property must be the same as the value of the corresponding target object property if the target object property is a non-writable, non-configurable own data property.","msgtype":"m.text"},"ts":1598650631000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"The value reported for a property must be undefined if the corresponding target object property is a non-configurable own accessor property that has undefined as its [[Get]] attribute.","msgtype":"m.text"},"ts":1598650642000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"devsnek: Seems silly because I could just use a different target that doesn't have any own properties.","msgtype":"m.text"},"ts":1598650664000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"i agree they are definitely annoying","msgtype":"m.text"},"ts":1598650679000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"keith_miller they are useful in combination with  the GetOwnProperty invariants","msgtype":"m.text"},"ts":1598650686000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: how so?","msgtype":"m.text"},"ts":1598650718000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"in combination with the GetOwnProperty invariants, they prevent you from observing the sequence \"let { value, writable, configurable} = Object.getOwnPropertyDescriptor(p, 'prop'); !writable && !configurable /* true */; !Object.is(p.prop, value)`","msgtype":"m.text"},"ts":1598650731000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the GetOwnProperty invariants prevent you from reporting a property as nonwritable-nonconfigurable unless the target actually has such a nonwritable-nonconfigurable property","msgtype":"m.text"},"ts":1598650768000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"what does it mean to observe the sequence?","msgtype":"m.text"},"ts":1598650771000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"uh, sorry","msgtype":"m.text"},"ts":1598650778000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"But why do I care?","msgtype":"m.text"},"ts":1598650784000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"If I want to get around the invariant a can just \"swizzle\" the target?","msgtype":"m.text"},"ts":1598650810000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"basically if a proxy reports a property existing and being nonwritable-nonconfigurable, then its value can't ever be reported to be something other than what it is reported to be at that point in time","msgtype":"m.text"},"ts":1598650812000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"you cannot just swizze the target","msgtype":"m.text"},"ts":1598650817000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Is there a way to observe the target?","msgtype":"m.text"},"ts":1598650820000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1598650825000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Then yeah, why does it matter what the target is?","msgtype":"m.text"},"ts":1598650835000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"I could just tell you you are Array.prototype but really just an array","msgtype":"m.text"},"ts":1598650856000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"you are looking at","msgtype":"m.text"},"ts":1598650862000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"*","msgtype":"m.text"},"ts":1598650863000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"I don't know that it does matter what the target is?","msgtype":"m.text"},"ts":1598650887000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but \"basically if a proxy reports a property existing and being nonwritable-nonconfigurable, then its value can't ever be reported to be something other than what it is reported to be at that point in time\" is still true","msgtype":"m.text"},"ts":1598650908000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i still don't get why that matters","msgtype":"m.text"},"ts":1598650952000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the way this is accomplished is that in order to report a property existing and being nonwritable-nonconfigurable, you have to sort of \"prove\" that you will be consistent about its value in the future, by having the target as a \"witness\" in the proof sense","msgtype":"m.text"},"ts":1598650955000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"But what's the point?","msgtype":"m.text"},"ts":1598650970000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"like if i want to confuse people with weird proxy traps why does ecma262 care","msgtype":"m.text"},"ts":1598650971000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek lotta code relies on that invariant, including security-sensitive code, is why that matters","msgtype":"m.text"},"ts":1598650973000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"how?","msgtype":"m.text"},"ts":1598650997000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"that's kinda SES's whole schtick","msgtype":"m.text"},"ts":1598651037000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Seems like SES should just reject any incoming proxy objects or something","msgtype":"m.text"},"ts":1598651067000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"if you can't rely on freezing something and having it stay frozen, a lot of code breaks","msgtype":"m.text"},"ts":1598651073000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"you cannot identify a proxy","msgtype":"m.text"},"ts":1598651076000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"keith_miller: you can't have an isProxy","msgtype":"m.text"},"ts":1598651079000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I was pretty sure there was a way to tell if an object is a proxy","msgtype":"m.text"},"ts":1598651088000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"you can identify a proxy to any builtin that has slots","msgtype":"m.text"},"ts":1598651091000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"It's some weird sequence of code","msgtype":"m.text"},"ts":1598651108000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"but you can't generically identify a proxy (unless you know it's claiming to be a slot-having builtin)","msgtype":"m.text"},"ts":1598651109000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"there is a way which works if the object has a mutable prototype chain, though this was unintentional","msgtype":"m.text"},"ts":1598651117000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh right","msgtype":"m.text"},"ts":1598651121000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"doesn't work if the whole proto chain is fixed though","msgtype":"m.text"},"ts":1598651135000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"So, 99% of the time you can tell then?","msgtype":"m.text"},"ts":1598651172000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"in the relevant cases? not sure that's true, no; 99% of objects don't have any nonwritable-nonconfigurable properties, and the remaining 1% are disproportionately likely to have fixed prototype chains as well","msgtype":"m.text"},"ts":1598651220000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but yes, you can tell some of the time, sure","msgtype":"m.text"},"ts":1598651249000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"this fact was not known when proxies were designed, mind","msgtype":"m.text"},"ts":1598651258000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Well the relevant case is that you used 5x the CPU time to do get","msgtype":"m.text"},"ts":1598651260000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"so in that case SES will forever have bad perf","msgtype":"m.text"},"ts":1598651277000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"If your property access involves running JS code I don't think it is too surprising that you're gonna take a severe perf hit","msgtype":"m.text"},"ts":1598651311000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"there are plenty of systems where perf doesn't really matter but correctness does","msgtype":"m.text"},"ts":1598651334000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Isn't that almost everything in SES","msgtype":"m.text"},"ts":1598651334000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"yup, SES takes a severe perf hit","msgtype":"m.text"},"ts":1598651351000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"though not everything!","msgtype":"m.text"},"ts":1598651358000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"in particular, _because_ of this invariant, they don't have to wrap transitively-frozen objects","msgtype":"m.text"},"ts":1598651373000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ljharb: Everyone says perf doesn't matter until they realize it's costing them 2+ hours of their phones battery life","msgtype":"m.text"},"ts":1598651380000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"i mean, i still use the facebook app on my iphone","msgtype":"m.text"},"ts":1598651406000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so i'm not sure it starts mattering even then :-p","msgtype":"m.text"},"ts":1598651425000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"SES has chosen to make the tradeoff between security and performance in favor of performance, which is a fine decision for them to make","msgtype":"m.text"},"ts":1598651463000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"most people aren't gonna have any proxies and so don't pay any penalty for these invariants being enforced for SES","msgtype":"m.text"},"ts":1598651488000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"So SES owns proxies?","msgtype":"m.text"},"ts":1598651495000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"no?","msgtype":"m.text"},"ts":1598651504000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"What about people that want proxies and want things to be fast","msgtype":"m.text"},"ts":1598651507000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"sorry, let me state that another way.","msgtype":"m.text"},"ts":1598651509000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: Also, for what it's worth getter's don't really cost you anything. At least in JSC, once the optimizing compiler kicks in","msgtype":"m.text"},"ts":1598651565000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Or the getter is crazy complicate","msgtype":"m.text"},"ts":1598651573000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"complicated*","msgtype":"m.text"},"ts":1598651577000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"which is exactly the problem here. I'd like to make the proxy traps effectively a getter but all the validation makes it too big to efficiently inline","msgtype":"m.text"},"ts":1598651608000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"the fact that proxies still enforce certain invariants means that all code in the entire ecosystem that wants to rely on those invariants can do so: otherwise every library would have potential bugs, including potential security bugs, if they assumed those invariants held as they did in ES5. and if they avoided bugs it would be at the expensive of significant complexity for every single user. I think it is good therefore that proxies","msgtype":"m.text"},"ts":1598651611000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":" do not allow you to violate language-level invariatns.","msgtype":"m.text"},"ts":1598651611000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"keith_miller: getters have a cost that has nothing to do with runtime perf :-p","msgtype":"m.text"},"ts":1598651618000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"even though that comes with some performance cost for people who _do_ use proxies: because that price is paid _only_ by code that choses to use proxies, not by users of every single library which wants to rely on object invariants.","msgtype":"m.text"},"ts":1598651642000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"*chooses","msgtype":"m.text"},"ts":1598651668000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(Now, I also happen to think that Proxies were a mistake in the first place. But I'm glad that they were done in such a way that you can still rely on certain invariants.)","msgtype":"m.text"},"ts":1598651731000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"+2","msgtype":"m.text"},"ts":1598651748000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Oh, I agree that Proxies were a bad choice, no argument there","msgtype":"m.text"},"ts":1598651751000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"keith_miller: so who are the people that want to use proxies and also have them be fast, and what are their use cases? (obv not implying there's no such people)","msgtype":"m.text"},"ts":1598651884000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: I've seen people use them for matrices on a single ArrayBuffer. That was the case I was trying to optimize","msgtype":"m.text"},"ts":1598651930000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"Basically they're migrating C code that has a float[3][3] and want to use the same coding style","msgtype":"m.text"},"ts":1598651969000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"do you think \"i want to use the same style as a different language\" is a reasonable justification for invalidating existing language invariants?","msgtype":"m.text"},"ts":1598652085000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: ? I don't think that's the only case where you'd want Proxies lol","msgtype":"m.text"},"ts":1598652548000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"I feel like that's a loaded gun question lol","msgtype":"m.text"},"ts":1598652656000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"fair, sorry, i'm trying to understand why the invariants being there are a problem :-)","msgtype":"m.text"},"ts":1598652950000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: Mostly the problem is that they're currently inconvenient for me :P","msgtype":"m.text"},"ts":1598653243000,"senderName":"keith_miller","senderId":"keith_miller@irc"},
{"content":{"body":"lol ok","msgtype":"m.text"},"ts":1598653276000,"senderName":"ljharb","senderId":"ljharb@irc"}
]