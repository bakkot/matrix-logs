[
{"content":{"body":"if initializing import.meta could fail","msgtype":"m.text"},"ts":1592572963000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like say there's a compartment hook for it","msgtype":"m.text"},"ts":1592572990000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what is a reasonable behaviour for it failing","msgtype":"m.text"},"ts":1592573014000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: probably like how import() failing doesn't need to cache the error, just fire the host hook again and have it fail again","msgtype":"m.text"},"ts":1592573241000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"seems scary","msgtype":"m.text"},"ts":1592573268000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"its just a thrown error I would assume","msgtype":"m.text"},"ts":1592573306000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1592573313000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't think it should get a value at least, and import.meta is always an object so, error","msgtype":"m.text"},"ts":1592573390000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yeah just the idea of it throwing multiple times feels weird","msgtype":"m.text"},"ts":1592573817000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: import() returns new rejected promises even if you cache the error","msgtype":"m.text"},"ts":1592575159000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"you could always add a .then() to all your import.meta objects and await it ;-)","msgtype":"m.text"},"ts":1592575194000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":".then is such a huge surface these days :-(","msgtype":"m.text"},"ts":1592575214000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Where can I find the proposal to reduce support for @@Species?","msgtype":"m.text"},"ts":1592588680000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: https://github.com/syg/proposal-rm-builtin-subclassing","msgtype":"m.text"},"ts":1592589504000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1592589616000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"can a chair block this user? https://github.com/tc39/ecma262/pull/1376#issuecomment-646777580","msgtype":"m.text"},"ts":1592590307000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"appears to be automated spam on a few of our repos","msgtype":"m.text"},"ts":1592590317000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"to me, anyway, unless someone else knows otherwise","msgtype":"m.text"},"ts":1592590336000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i reported them, maybe github will take care of it","msgtype":"m.text"},"ts":1592592877000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I have what may be a really stupid question, but here goes. Why does the lexical grammar even still exist in the spec?","msgtype":"m.text"},"ts":1592610580000,"senderName":"toddobryan","senderId":"toddobryan@irc"},
{"content":{"body":"toddobryan: how do you mean \"still\"? I think this this summarizes the interacting grammars quite nicely: https://v8.dev/blog/understanding-ecmascript-part-3#ecmascript-grammars","msgtype":"m.text"},"ts":1592610796000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I've been implementing a parser and, the best I can tell, it's impossible to write a tokenizer. The spec talks about InputElementDiv, InputElementRegExp, InputElementRegexpOrTemplateTail, and InputElementTemplateTail as alternative goals for parsing, but none of them are referenced in later grammars, which use literal symbols extensively.","msgtype":"m.text"},"ts":1592610826000,"senderName":"toddobryan","senderId":"toddobryan@irc"},
{"content":{"body":"The Whitespace production is only referred to in those rules, which, as mentioned, aren't reachable from any of the higher-level symbols like Program and Script.","msgtype":"m.text"},"ts":1592610924000,"senderName":"toddobryan","senderId":"toddobryan@irc"},
{"content":{"body":"@rkirsling That's the thing. You'd expect the syntactic grammar to be written in terms of tokens, but it's not. It's written in terms of characters.","msgtype":"m.text"},"ts":1592611142000,"senderName":"toddobryan","senderId":"toddobryan@irc"},
{"content":{"body":"where is it written in terms of characters","msgtype":"m.text"},"ts":1592611170000,"senderName":"devsnek","senderId":"devsnek@irc"}
]