[
{"content":{"body":"littledan: the other day we discussed the difference between after all microtasks and after a task, right?","msgtype":"m.text"},"ts":1557412035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yes?","msgtype":"m.text"},"ts":1557412054000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: a weird edge case here is UI input events from the user, those are a single task, but multiple microtask checkpoints (one after each JS callback, since we have a checkpoint whenever the \"JS engine stack\" is 0)","msgtype":"m.text"},"ts":1557412099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"interesting, didn't know about that","msgtype":"m.text"},"ts":1557412118000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: so it would in fact be quite observable which strategy you take here and I'm not sure why Domenic suggested otherwise (perhaps he forgot)","msgtype":"m.text"},"ts":1557412124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's very possible that I misunderstood Domenic","msgtype":"m.text"},"ts":1557412138000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: do you remember the relevant issue? I forgot most of the context","msgtype":"m.text"},"ts":1557412153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds like we should take some time in the June 2019  TC39 meeting to poll implementers to see what strategy they would really use","msgtype":"m.text"},"ts":1557412159000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"IMO microtask checkpoint timing just makes more sense here, but I imagine others have opposing intuitions","msgtype":"m.text"},"ts":1557412192000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I would urge you to coordinate with IndexedDB implementers, not just JS engine implementers, in this regard. Maybe a more broad web platform question too.","msgtype":"m.text"},"ts":1557412230000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's early for me, but on first glance I think annevk is right and there is an observable difference in that case which I forgot.","msgtype":"m.text"},"ts":1557412257000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Although I guess you could sweep that all under \"oh, the browser just didn't GC this microtask\"","msgtype":"m.text"},"ts":1557412290000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"only if they actually don't though","msgtype":"m.text"},"ts":1557412320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" I kind of doubt that browsers would actually queue a task to clear this list.","msgtype":"m.text"},"ts":1557412335000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"because at least from till it sounded like our impl strategy was after microtasks","msgtype":"m.text"},"ts":1557412336000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1557412347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(at some point I quoted my memory of what Till had said; if you heard it from me, we should probably check back with him)","msgtype":"m.text"},"ts":1557412373000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"at a high level, I think it'd be OK to tweak the exact semantics of the scope of holding these objects alive *after* Stage 3, as we get implementation feedback","msgtype":"m.text"},"ts":1557412420000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"we're in the same office and discussed it at lunch recentish","msgtype":"m.text"},"ts":1557412443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh you're in Berlin these days?","msgtype":"m.text"},"ts":1557412453000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1557412463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm visiting right now","msgtype":"m.text"},"ts":1557412465000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"(but for vacation)","msgtype":"m.text"},"ts":1557412474000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"(sorry, off-topic)","msgtype":"m.text"},"ts":1557412477000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"oh, enjoy, I think you're all here soonish for a meeting too","msgtype":"m.text"},"ts":1557412532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's right","msgtype":"m.text"},"ts":1557412578000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"annevk: will you at JSConf EU and/or TC39?","msgtype":"m.text"},"ts":1557412603000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yes/maybe/attending training ystartsev is organizing","msgtype":"m.text"},"ts":1557412642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nice","msgtype":"m.text"},"ts":1557412649000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, it'll be good to see everyone","msgtype":"m.text"},"ts":1557412701000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1557412725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"commented on https://github.com/tc39/proposal-weakrefs/issues/39#issuecomment-490934435","msgtype":"m.text"},"ts":1557413067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ecma402 reminder: CLDR bug tracker is readonly right now. moving to jira soon","msgtype":"m.text"},"ts":1557424366000,"senderName":"srl295","senderId":"srl295@irc"},
{"content":{"body":"Unicode, where irony is served fresh daily.  CLDR's bug database being converted, requires Node 8 due to unresolved native sqlite issues. So using a package instead of DurationFormat in progress metrics. https://github.com/unicode-org/icu-trac2jira/commit/003254474fc2e4c99fda2d7d4df05d2d81061b88#diff-b9cfc7f2cdf78a7f4b91a753d10865a2R16   … i guess i should have looked for the  Intl duration polyfill","msgtype":"m.text"},"ts":1557431704000,"senderName":"srl295","senderId":"srl295@irc"},
{"content":{"body":"Explain to me why Date.now() does not violate run to completion","msgtype":"m.text"},"ts":1557433180000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wat","msgtype":"m.text"},"ts":1557433473000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"Domenic: is there a deeper meaning to run-to-completion other than \"uninterrupted\"","msgtype":"m.text"},"ts":1557433599000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"I've heard it phrased as \"cannot observe changes from other code\"","msgtype":"m.text"},"ts":1557433648000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Which is connected, i.e. no other code ran concurrently and modified state you can see","msgtype":"m.text"},"ts":1557433672000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://w3ctag.github.io/design-principles/#js-rtc is where I am coming from","msgtype":"m.text"},"ts":1557433723000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"then we can never re-enable SABs?","msgtype":"m.text"},"ts":1557433725000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"Domenic: pretty sure Math.random and Date's ability to grab the current are both considered mistakes on that front","msgtype":"m.text"},"ts":1557433728000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: no, that's separate, that's ocap stuff.","msgtype":"m.text"},"ts":1557433743000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"cloudshu: Well SABs are definitely RTC violations","msgtype":"m.text"},"ts":1557433748000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm wondering if Date.now() is similar to them. It seems different, but I'm unsure of what definition would differentiate them.","msgtype":"m.text"},"ts":1557433788000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: hm, interesting","msgtype":"m.text"},"ts":1557433799000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"Date.now can preempt running code?","msgtype":"m.text"},"ts":1557433835000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if run-to-completion actually strictly means concurrently running code cannot affect your view of the world, then all timers violate RTC","msgtype":"m.text"},"ts":1557433862000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"like through a suspend point?","msgtype":"m.text"},"ts":1557433909000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I'm confused what the angle is here","msgtype":"m.text"},"ts":1557433924000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well, no, i mean, time is always a side channel that you can use to infer the state of the world that you aren't supposed to be privy to","msgtype":"m.text"},"ts":1557433939000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"like, how the browser chose to schedule you vs other code","msgtype":"m.text"},"ts":1557433951000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"how the OS does that","msgtype":"m.text"},"ts":1557433955000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"was the other code slow, etc","msgtype":"m.text"},"ts":1557433957000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"well that's sorta what I meant earlier","msgtype":"m.text"},"ts":1557433980000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Domenic: i feel like that's not the layman's understanding of the spirit of RTC anyways","msgtype":"m.text"},"ts":1557433983000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"it must admit time as a side channel","msgtype":"m.text"},"ts":1557433994000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"Yeah, I guess a starting point would be to find a more authoritative/academic definition of RTC","msgtype":"m.text"},"ts":1557434018000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So OK, the tricky question is, is isInputPending more like Date.now() or more like SABs. https://github.com/WICG/is-input-pending/issues/12","msgtype":"m.text"},"ts":1557434050000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"RTC allows yielding to a scheduler","msgtype":"m.text"},"ts":1557434050000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: it does not","msgtype":"m.text"},"ts":1557434059000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"devsnek: well OK an OS-level scheduler. But not a scheduler in the browser that can run other JS that might affect you.","msgtype":"m.text"},"ts":1557434086000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"are you saying like","msgtype":"m.text"},"ts":1557434123000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there should be no observable difference to your code if the VM decides to wait 10 minutes between two lines of code","msgtype":"m.text"},"ts":1557434148000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Domenic: interesting, at least one qualitative difference is the observable state programmatically mutable","msgtype":"m.text"},"ts":1557434270000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"Domenic: like, if there were a Date.superUnsafeSetEpoch then Date.now would more straightforwardly violate RTC in my mind","msgtype":"m.text"},"ts":1557434315000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"cloudshu: I don't think it is; it's based on the user's finger movements","msgtype":"m.text"},"ts":1557434318000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh boy","msgtype":"m.text"},"ts":1557434328000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"this \"input handling code\" you refer to in the issue is... browser code?","msgtype":"m.text"},"ts":1557434357000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1557434379000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i see, hrm, then i guess it comes down to having more rigorous understanding of what side channels HTML wants to admit and what HTML doesn't","msgtype":"m.text"},"ts":1557434412000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"i don't think tdresser's argument is compelling though","msgtype":"m.text"},"ts":1557434467000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"it doesn't follow from that we have a timing channel that we throw in the towel for more easily prohibited side channels","msgtype":"m.text"},"ts":1557434503000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"what's the context of all this","msgtype":"m.text"},"ts":1557434634000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"> So OK, the tricky question is, is isInputPending more like Date.now() or more like SABs. https://github.com/WICG/is-input-pending/issues/12","msgtype":"m.text"},"ts":1557434652000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"hmmmm","msgtype":"m.text"},"ts":1557434871000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"cloudshu: agreed, SAB existing does not mean we should necessarily add a bunch of higher-level APIs relying on it","msgtype":"m.text"},"ts":1557434915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: time always seemed weird to me too, FWIW","msgtype":"m.text"},"ts":1557434972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what good things do we get from this rtc guarantee as written in the w3c document","msgtype":"m.text"},"ts":1557434978000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"all of this v philosophical","msgtype":"m.text"},"ts":1557435012000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1557435019000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I'm just curious like","msgtype":"m.text"},"ts":1557435023000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"isInputPending and SAB seem like good things in general","msgtype":"m.text"},"ts":1557435031000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: well, think about languages without strong-ish RTC requirements","msgtype":"m.text"},"ts":1557435051000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"well we can contain data races to SAB","msgtype":"m.text"},"ts":1557435068000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: c++ is pretty hard to reason about if your entire memory value might change","msgtype":"m.text"},"ts":1557435073000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"yeah I agree","msgtype":"m.text"},"ts":1557435080000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: right, having well-scoped escapes to RTC is valuable, but RTC as a strong default for the rest of the language execution is the good thing we get","msgtype":"m.text"},"ts":1557435102000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"are touch events visible to web workers","msgtype":"m.text"},"ts":1557435368000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"input events*","msgtype":"m.text"},"ts":1557435376000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'd probably benchmark this on \"can it be implemented with a web worker and SAB\"","msgtype":"m.text"},"ts":1557435404000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"What's SAB? I'm being nosy and it's the one keyword I couldn't follow.","msgtype":"m.text"},"ts":1557435564000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"SharedArrayBuffers","msgtype":"m.text"},"ts":1557435617000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"devsnek: from the (very short) thread: \"If we don't implement this, I anticipate once off thread input is supported, folks will build this themselves this via off thread input and SAB\"","msgtype":"m.text"},"ts":1557435720000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1557435731000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: they are not yet but there are proposals to make them so","msgtype":"m.text"},"ts":1557435858000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if such a thing happens, it seems like a fairly conclusive end point","msgtype":"m.text"},"ts":1557435933000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: disagree; constraining values which can change during your code's turn without you touching them to Date.now(), Math.random(), and SABs seems valuable","msgtype":"m.text"},"ts":1557436411000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i just mean","msgtype":"m.text"},"ts":1557436443000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if something can be done with the base language","msgtype":"m.text"},"ts":1557436450000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"strong agree, small surface area = more analyzable","msgtype":"m.text"},"ts":1557436452000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"even if a higher level thing is reducible to some lower level thing","msgtype":"m.text"},"ts":1557436464000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"🤷","msgtype":"m.text"},"ts":1557436476000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(for similar reasons, I am opposed to Temporal having access to the current time without a user explicitly passing it in)","msgtype":"m.text"},"ts":1557436507000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"wait till i propose Atomics.rdtsc","msgtype":"m.text"},"ts":1557436622000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"or perhaps... Date.rdtsc","msgtype":"m.text"},"ts":1557436660000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"global.rdtsc","msgtype":"m.text"},"ts":1557437099000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"as a non-configurable property :D","msgtype":"m.text"},"ts":1557437106000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"s/property/getter/ even","msgtype":"m.text"},"ts":1557437123000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeaaaah","msgtype":"m.text"},"ts":1557437228000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"at that point, maybe just add a \"rdtsc\" keyword","msgtype":"m.text"},"ts":1557437230000,"senderName":"not-an-aardvark","senderId":"not-an-aardvark@irc"},
{"content":{"body":"statement contexts only","msgtype":"m.text"},"ts":1557437250000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"is this the beginning of a `std:x86` proposal","msgtype":"m.text"},"ts":1557437796000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"wait wait i got one better","msgtype":"m.text"},"ts":1557437826000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"Math.fldcw","msgtype":"m.text"},"ts":1557437833000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"the threat model went out the window with spectre anyway, so, you know, why not","msgtype":"m.text"},"ts":1557437859000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"also all of these: https://twitter.com/x86instructions","msgtype":"m.text"},"ts":1557437898000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that is one of my favorite twitters","msgtype":"m.text"},"ts":1557437920000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"https://twitter.com/x86instructions/status/1103399520329596928 so good","msgtype":"m.text"},"ts":1557437967000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"Found in the replies: https://twitter.com/drathier/status/1103614895055081474","msgtype":"m.text"},"ts":1557438057000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"(I am as we speak in the process of adding a rediculously specific instruction to the custom JS-in-JS vm I maintain for work, so this is all extra funny to me)","msgtype":"m.text"},"ts":1557438114000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"s/rediculously/ridiculously/, argh","msgtype":"m.text"},"ts":1557438129000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"merge all the x86 instructions into wasm, merge wasm into js","msgtype":"m.text"},"ts":1557438163000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: a big running joke back in the day for spidermonkey was JSOP_SUNSPIDER","msgtype":"m.text"},"ts":1557438197000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"haa","msgtype":"m.text"},"ts":1557438206000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oliverdunk: it gets better if you dig into the repo too -- https://github.com/xoreaxeaxeax/movfuscator/tree/master/validation/doom","msgtype":"m.text"},"ts":1557438398000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Oh no","msgtype":"m.text"},"ts":1557438425000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"god i love that repo","msgtype":"m.text"},"ts":1557438428000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there is no faster code than straightline code","msgtype":"m.text"},"ts":1557438508000,"senderName":"cloudshu","senderId":"cloudshu@irc"},
{"content":{"body":"x to doubt","msgtype":"m.text"},"ts":1557438515000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the real question is if we can get turbofan to only emit mov instructions :P","msgtype":"m.text"},"ts":1557438679000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"We could then say that the number of instructions needed has reduced by ~99.92%! (1278/1279)","msgtype":"m.text"},"ts":1557438966000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"}
]