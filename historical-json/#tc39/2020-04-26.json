[
{"content":{"body":"devsnek: my personal Most Jank Algorithm Step is still","msgtype":"m.text"},"ts":1587873224000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"> If replacing the FunctionDeclaration f with a VariableStatement that has F as a BindingIdentifier would not produce any Early Errors for func and F is not an element of parameterNames, then","msgtype":"m.text"},"ts":1587873226000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i found another step that just says \"for each character c\"","msgtype":"m.text"},"ts":1587873285000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"as in all of the unicode characters","msgtype":"m.text"},"ts":1587873326000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"... solid","msgtype":"m.text"},"ts":1587873373000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I guess that's probably clearer than expecting readers to know what \"preimage\" means","msgtype":"m.text"},"ts":1587873392000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1587873405000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(for other people, the step is \"For each character c not in set A where Canonicalize(c) is in A, add c to U.\")","msgtype":"m.text"},"ts":1587873406000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and that step is hit twice for every occurrence of a \\b or \\B","msgtype":"m.text"},"ts":1587873446000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"gotta be careful not to implement as written","msgtype":"m.text"},"ts":1587873462000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: preimage seems fair game if a definition is provided :)","msgtype":"m.text"},"ts":1587873545000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling yeah but if you are going to define a word and then use it exactly once you should just not define that word, as a rule","msgtype":"m.text"},"ts":1587873572000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"touch√©","msgtype":"m.text"},"ts":1587873582000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"on the plus side","msgtype":"m.text"},"ts":1587873585000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"regex is mostly working now","msgtype":"m.text"},"ts":1587873589000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and i'm seriously considering making a big editorial pr to refactor regex","msgtype":"m.text"},"ts":1587873643000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"don't forget about annex B","msgtype":"m.text"},"ts":1587873733000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1587873741000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i.e. the place regexes are actually defined","msgtype":"m.text"},"ts":1587873741000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it doesn't exist if i don't think about it","msgtype":"m.text"},"ts":1587873947000,"senderName":"devsnek","senderId":"devsnek@irc"}
]