[
{"content":{"body":"<continuing> yeah I guess I just assumed that indirect eval could never be returned to being direct eval but apparently that's false","msgtype":"m.text"},"ts":1592958681000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah, it's not a taint tracking model, it's much more brilliant where we just pick on one particular identifier :P","msgtype":"m.text"},"ts":1592958786000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"you can rename `eval` to `evil` and then you don't have to use (0, eval)","msgtype":"m.text"},"ts":1592958847000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: lol","msgtype":"m.text"},"ts":1592959123000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"am i the only one bothered by `promiseResolve` being after `promiseCapability` in that recent patch","msgtype":"m.text"},"ts":1592959276000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: but isn't that `evil` somewhat less evil than `eval` then","msgtype":"m.text"},"ts":1592959347000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"a non-zero amount of evil is still evil","msgtype":"m.text"},"ts":1592959368000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bakkot_: devsnek: do you either of you have an opinion about what you expected eval?.() to be?","msgtype":"m.text"},"ts":1592960324000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"not especially","msgtype":"m.text"},"ts":1592960349000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"i can't construct any meaningful rule about direct/indirect evals","msgtype":"m.text"},"ts":1592960369000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"wait till you hear about ablative eval","msgtype":"m.text"},"ts":1592962467000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"eval, but every time you use it one random name in scope is removed","msgtype":"m.text"},"ts":1592962512000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"that is the suffering passive","msgtype":"m.text"},"ts":1592962632000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"et tu eval","msgtype":"m.text"},"ts":1592962710000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ugh I think I'll still create an issue before the PR just so the PR doesn't come off like an attack","msgtype":"m.text"},"ts":1592965016000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: up to you, but i doubt that would be a problem","msgtype":"m.text"},"ts":1592968220000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: played it safe -- https://github.com/tc39/ecma262/issues/2062 https://github.com/tc39/ecma262/issues/2063","msgtype":"m.text"},"ts":1592968246000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: https://www.python.org/dev/peps/pep-0622/","msgtype":"m.text"},"ts":1593004220000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"littledan: thanks for your comment in https://github.com/tc39/proposal-promise-any/issues/38 ...  i didn't say anything, but i agree","msgtype":"m.text"},"ts":1593013312000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jridgewell: are there any major blocking points on private declarations recently","msgtype":"m.text"},"ts":1593013321000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Just waiting for private fields to ship before bringing it up again","msgtype":"m.text"},"ts":1593013352000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"littledan: it bothered me a little bit that Mark didn't reply to https://github.com/tc39/proposal-promise-any/issues/38#issuecomment-634822974","msgtype":"m.text"},"ts":1593013401000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"I'd love to understand what invariant is being proposed","msgtype":"m.text"},"ts":1593013446000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jridgewell: was the `outer` contextual keyword just to remove the [] / simplify the grammar?","msgtype":"m.text"},"ts":1593013559000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"or ... invoked, or whatever","msgtype":"m.text"},"ts":1593013604000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: all those internal slots are not reflected to JS as first class APIs","msgtype":"m.text"},"ts":1593013646000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"`outer` seems the simplest solution, and avoids me having to explain reification","msgtype":"m.text"},"ts":1593013649000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"what is `outer`","msgtype":"m.text"},"ts":1593013691000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`class Foo { [#bar] = 1 }` seems too much like I've reified the key and can use it as a value","msgtype":"m.text"},"ts":1593013692000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"jorendorff: the concern is around an internal slot not being able to be intercepted via a hook like other meta-object-protocol hooks","msgtype":"m.text"},"ts":1593013696000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"oh for shared private fields","msgtype":"m.text"},"ts":1593013720000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"can we not just reify them as values","msgtype":"m.text"},"ts":1593013726000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jridgewell: idc either way XD, it can be reified even if it isn't in the same value space!","msgtype":"m.text"},"ts":1593013726000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: I don't understand the \"as first class APIs\" part of the distinction","msgtype":"m.text"},"ts":1593013736000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"lets not add value spaces","msgtype":"m.text"},"ts":1593013736000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://github.com/tc39/proposal-private-declarations","msgtype":"m.text"},"ts":1593013746000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"why do we need first class syntax for this aaaa","msgtype":"m.text"},"ts":1593013761000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jorendorff: fn.environment isn't a thing, basically even if the internal slot stores state it isn't able to be reached by user JS","msgtype":"m.text"},"ts":1593013767000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: [[Prototype]] has a getter (`.__proto__`)","msgtype":"m.text"},"ts":1593013779000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yes, and that has a Proxy MOP hook","msgtype":"m.text"},"ts":1593013800000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: [[ViewedArrayBuffer]] also has a getter https://tc39.es/ecma262/#sec-get-%typedarray%.prototype.buffer","msgtype":"m.text"},"ts":1593013862000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"devsnek: to get me to stop using super override?","msgtype":"m.text"},"ts":1593013866000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: i mean why are we not just making them values","msgtype":"m.text"},"ts":1593013886000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jorendorff: yes, and a review of stuff was being done by caridy about all those cases as they break membranes.","msgtype":"m.text"},"ts":1593013898000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"making a private version of every possible use of properties seems like a poor design path","msgtype":"m.text"},"ts":1593013913000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: because lack of prototype lookup would be hella confusing","msgtype":"m.text"},"ts":1593013937000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Making a private field value is difficult to get through","msgtype":"m.text"},"ts":1593013950000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"it doesn't have to lack prototype lookup","msgtype":"m.text"},"ts":1593013955000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: i'd state it must","msgtype":"m.text"},"ts":1593013962000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"why lol","msgtype":"m.text"},"ts":1593013967000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"match fields","msgtype":"m.text"},"ts":1593013971000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1593013977000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"also matches weakmaps","msgtype":"m.text"},"ts":1593013978000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"we aren't making weakmaps we're making access control","msgtype":"m.text"},"ts":1593013996000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"basically private lookups in JS haven't historically been delegated","msgtype":"m.text"},"ts":1593014001000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"internal slots, private fields, weak map, all of them do not delegate","msgtype":"m.text"},"ts":1593014024000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so, it should be something else if it seeks to delegate","msgtype":"m.text"},"ts":1593014051000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"first class access control doesn't exist in js yet","msgtype":"m.text"},"ts":1593014081000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm a little confused as to whether we're having one conversation or two","msgtype":"m.text"},"ts":1593014088000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"what isn't first class?","msgtype":"m.text"},"ts":1593014091000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"jorendorff: I am having 2","msgtype":"m.text"},"ts":1593014095000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1593014104000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"I think there are 2","msgtype":"m.text"},"ts":1593014104000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"there was a discussion about private field syntax","msgtype":"m.text"},"ts":1593014118000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and i'm ranting about private symbols","msgtype":"m.text"},"ts":1593014125000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bradleymeck: so another example is that Map and Set are nothing *but* methods that provide access to data stored in private slots","msgtype":"m.text"},"ts":1593014159000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: per your topic ECMA402 was at the SES meeting (2?) times ago and wanted to plug a similar hole","msgtype":"m.text"},"ts":1593014199000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"jorendorff: yes, but the concern isn't about the values themselves it is the ability to intercept things","msgtype":"m.text"},"ts":1593014231000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: ok, intercept how?","msgtype":"m.text"},"ts":1593014265000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"you can to some extent replace builtin methods to \"patch\" out the issue, but there is push back even within the Realms call (not just SES)","msgtype":"m.text"},"ts":1593014267000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"jorendorff: replace methods with userland wrappers","msgtype":"m.text"},"ts":1593014285000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: it should be possible to express this clearly, as an adversarial game perhaps","msgtype":"m.text"},"ts":1593014287000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"bradleymeck: but if there is a known technique for this (replace features on the builtin prototype) then it would work just as well for new things as for existing things","msgtype":"m.text"},"ts":1593014319000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"various membranes have to do this where they freeze Map.prototype, but have to replace all the methods in order to intercept the values in/out","msgtype":"m.text"},"ts":1593014322000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"jorendorff: it isn't actually applied to all kinds of membranes","msgtype":"m.text"},"ts":1593014337000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"a lot of things like salesforce have much more minimal membranes and would wrap the Map as it crosses rather than each .get/.set","msgtype":"m.text"},"ts":1593014364000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i need to join an ses call at some point to ask about boxes for records","msgtype":"m.text"},"ts":1593014401000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"its really the realms call","msgtype":"m.text"},"ts":1593014420000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"like 50% of people there aren't using SES","msgtype":"m.text"},"ts":1593014426000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"whoever it is that takes issue with boxes","msgtype":"m.text"},"ts":1593014441000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the concerns are just that you cannot intercept these internal slot lookups with a Proxy","msgtype":"m.text"},"ts":1593014450000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"devsnek: thats the call you want to join","msgtype":"m.text"},"ts":1593014457000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"which","msgtype":"m.text"},"ts":1593014465000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you can even add it to the agenda https://docs.google.com/document/d/1FZ95-NZIQE9fw3A8Sgcz2BKep6MlC_Kng0dlf1ehabQ/edit#heading=h.f8mfwudm59mq","msgtype":"m.text"},"ts":1593014483000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"devsnek: its on the tc39 calendar \"SES Strategy - Weekly\" (had that name for years)","msgtype":"m.text"},"ts":1593014523000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"> We had an engaging conversation with the champions of Records and Tuples, and the related proposals for deep paths and boxes.","msgtype":"m.text"},"ts":1593014535000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://calendar.google.com/calendar/embed?src=mozilla.com_l7b50itpaa9bnrvr61nebqrne8%40group.calendar.google.com&ctz=America%2FChicago","msgtype":"m.text"},"ts":1593014548000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i guess there's no notes policy for these","msgtype":"m.text"},"ts":1593014553000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: they are recorded to youtube","msgtype":"m.text"},"ts":1593014566000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://www.youtube.com/channel/UCpY91oQLh_Lp0mitdZ5bYWg/videos","msgtype":"m.text"},"ts":1593014579000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"oh nice","msgtype":"m.text"},"ts":1593014727000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bradleymeck: it's a known flaw of proxies that they can't intercept internal slot lookups. but normally the result of that is that access fails (e.g. RequireInternalSlot is attempted on a proxy; it'll always fail and throw)","msgtype":"m.text"},"ts":1593014776000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"bradleymeck: are we talking about some scenario in which access can't be blocked?","msgtype":"m.text"},"ts":1593014795000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"my private symbols setup allowed you to pass symbols you wanted to intercept to the proxy constructor","msgtype":"m.text"},"ts":1593014819000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://www.youtube.com/watch?v=QzASLxg2VIk","msgtype":"m.text"},"ts":1593014820000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"maybe something similar could be done with private fields","msgtype":"m.text"},"ts":1593014844000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jorendorff: having a 2nd context that has a builtin and running it on the value as a receiver","msgtype":"m.text"},"ts":1593014845000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"though they'd need to be reified in some way for that","msgtype":"m.text"},"ts":1593014850000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jorendorff: join the call this week as this topic is the only agenda item?","msgtype":"m.text"},"ts":1593014877000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i'm just explaining the concern to my understanding","msgtype":"m.text"},"ts":1593014913000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I'd so much rather have this written down somewhere","msgtype":"m.text"},"ts":1593014931000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"but maybe we can work toward that","msgtype":"m.text"},"ts":1593014944000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: it will be recorded at least","msgtype":"m.text"},"ts":1593014955000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: I don't see the Realms meeting on the TC39 calendar","msgtype":"m.text"},"ts":1593014975000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"I see an SES Strategy meeting","msgtype":"m.text"},"ts":1593014980000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: yes thats the call. it has had that name for years / has historically been the focus but SES as a proposal has started splitting up into other things like Realms/Compartments these days","msgtype":"m.text"},"ts":1593015064000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ugh, i can't make it this week, it's the one day i have an appointment i can't move :-P","msgtype":"m.text"},"ts":1593015105000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"it would be cool if compartments had a hook for math.random","msgtype":"m.text"},"ts":1593015137000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"either seeding it or just controlling it outright","msgtype":"m.text"},"ts":1593015147000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: just replace the global XD","msgtype":"m.text"},"ts":1593015157000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i guess","msgtype":"m.text"},"ts":1593015176000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Realms/Compartments are seeing pretty big pushback due to how much they do already so they got stripped down once","msgtype":"m.text"},"ts":1593015189000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"couldn't it get access to the original by creating a new realm","msgtype":"m.text"},"ts":1593015204000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jorendorff: We're planning on discussing this topic in the SES call tomorrow","msgtype":"m.text"},"ts":1593015234000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"devsnek: yes, you have to wrap the Realm constructor :-/","msgtype":"m.text"},"ts":1593015246000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the SES Strategy meeting","msgtype":"m.text"},"ts":1593015249000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I can't make that meeting, unfortunately, but maybe someone from Moz can be there","msgtype":"m.text"},"ts":1593015260000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"bradleymeck: also, seeding might be preferable for perf reasons","msgtype":"m.text"},"ts":1593015263000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we had a bunch of talks about how to not force people to wrap the realm constructor","msgtype":"m.text"},"ts":1593015264000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"well its not that big a deal except for","msgtype":"m.text"},"ts":1593015286000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Date.now","msgtype":"m.text"},"ts":1593015289000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Math.random","msgtype":"m.text"},"ts":1593015290000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Symbol.for","msgtype":"m.text"},"ts":1593015293000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is there anything else","msgtype":"m.text"},"ts":1593015303000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there are a variety of things you have to wrap, but if you don't wrap then you have to make a composition model and some people didn't like that","msgtype":"m.text"},"ts":1593015325000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"could have a hook for CreateRealm","msgtype":"m.text"},"ts":1593015351000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hm i guess we sort of already do with InitializeHostDefinedRealm","msgtype":"m.text"},"ts":1593015366000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"could, but then it needs to nest","msgtype":"m.text"},"ts":1593015368000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yeah i mean realms created inside would automatically delegate to the parent for that","msgtype":"m.text"},"ts":1593015385000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"a lot of the complaints are about nesting e.g. not having the same Web Settings object faces pushback from some Web standards","msgtype":"m.text"},"ts":1593015409000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: I still don't understand this: \"having a 2nd context that has a builtin and running it on the value as a receiver\"","msgtype":"m.text"},"ts":1593015431000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yea, the delegation is part of the complaints, because the deeper you go the more costly it is to create another realm","msgtype":"m.text"},"ts":1593015432000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: because applying any (non-generic) builtin to a proxy will just fail","msgtype":"m.text"},"ts":1593015452000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: in web terms, make a same origin iframe and use the intrinsic getter function and call it on the value from the original frame","msgtype":"m.text"},"ts":1593015461000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"membranes that just do deep freezing won't prevent that","msgtype":"m.text"},"ts":1593015500000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: if there is no Proxy around the value, then I don't understand the complaint that this can't be intercepted. Of course if you don't have a proxy there, you won't be intercepting anything","msgtype":"m.text"},"ts":1593015508000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"if there is a Proxy around the value, the getter just won't work","msgtype":"m.text"},"ts":1593015517000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"proposal: `import { #promiseState, #promiseResult } from 'std:private-fields/promise'; new Proxy(promise, handler, { intercept: [#promiseState, #promiseResult] })`","msgtype":"m.text"},"ts":1593015527000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jorendorff: agreed on both, but there are people not using Proxies around all values","msgtype":"m.text"},"ts":1593015537000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"they only put proxies on the boundary","msgtype":"m.text"},"ts":1593015547000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: well ... I guess I don't understand why such users would complain about private slots","msgtype":"m.text"},"ts":1593015675000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"if there's no proxy there... what is the expectation to be able to intercept something?","msgtype":"m.text"},"ts":1593015692000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"...Anyway, regardless of such details, a concrete statement of the desired rule would help","msgtype":"m.text"},"ts":1593016375000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"If someone could refactor InitializeHostDefinedRealm to not be weird that'd be great","msgtype":"m.text"},"ts":1593019142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"devsnek: thanks, i'll add it","msgtype":"m.text"},"ts":1593019844000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"annevk: what's the weirdness?","msgtype":"m.text"},"ts":1593020036000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: the way you have to allocate global and global this are rather awkward","msgtype":"m.text"},"ts":1593020460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"here's my idea: CreateRealm(global, thisValue)","msgtype":"m.text"},"ts":1593020842000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"performs all the intrinsic allocation and setting of globals and stuff","msgtype":"m.text"},"ts":1593020856000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if a host needs to add additional properties after that it can just do that, no need to specifically make a step for it","msgtype":"m.text"},"ts":1593020874000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: i think those need to be abstract closures that do the actual creation","msgtype":"m.text"},"ts":1593021410000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"since you presumably want to allocate the new stuff inside the create Realm, not outside of it","msgtype":"m.text"},"ts":1593021431000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the created*","msgtype":"m.text"},"ts":1593021437000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i'm not entirely sure what you mean","msgtype":"m.text"},"ts":1593021449000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"annevk: how does that sound? passing in closures?","msgtype":"m.text"},"ts":1593021454000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"do you mean a closure for performing arbitrary host setup of the realm?","msgtype":"m.text"},"ts":1593021562000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm not sure why that needs to be part of the spec","msgtype":"m.text"},"ts":1593021571000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: when hosts want to create a global object for a new Realm, it seems most natural to create the global object in the scope of the created Realm instead of somewhere else","msgtype":"m.text"},"ts":1593021589000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"OH i see what you mean","msgtype":"m.text"},"ts":1593021605000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah that makes sense","msgtype":"m.text"},"ts":1593021616000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: yeah, something like that would be good","msgtype":"m.text"},"ts":1593021723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i'm still working on a relatively large PR that separates out the notion of a \"host\" as an implementation that layers with ecma262 via some set of enumerated host APIs instead of any arbitrary implementation-defined/dependent points","msgtype":"m.text"},"ts":1593021779000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: i'll put this on the queue after that","msgtype":"m.text"},"ts":1593021789000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1593021791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jsc people, why are all the releases missing https://webkitgtk.org/jsc-built-products/x86_64/release/","msgtype":"m.text"},"ts":1593023169000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling: ^","msgtype":"m.text"},"ts":1593023184000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"webkitgtk is its own project so you'd have to ask an Igalian that works on it","msgtype":"m.text"},"ts":1593023383000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"the JSCOnly builders don't have an archive upload step (https://build.webkit.org/waterfall?category=misc) but GTK build archives are located at the usual archive.webkit.org (e.g. https://build.webkit.org/builders/GTK%20Linux%2064-bit%20Release%20%28Build%29/builds/35021/steps/transfer-to-s3/logs/stdio)","msgtype":"m.text"},"ts":1593023787000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so at a glance, I don't think anything for webkitgtk.org would happen automatically","msgtype":"m.text"},"ts":1593023807000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"https://gc.gy/60728945.png","msgtype":"m.text"},"ts":1593023951000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I don't know what that's coming from","msgtype":"m.text"},"ts":1593024289000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: archives.webkit.org uploads a zip with README.md containing that","msgtype":"m.text"},"ts":1593024539000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"luckily i found a way to get around that","msgtype":"m.text"},"ts":1593024545000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://github.com/devsnek/esvu/commit/988ed899cd126f5faab8f63634c7459f7d2c182d","msgtype":"m.text"},"ts":1593024553000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh I see","msgtype":"m.text"},"ts":1593024555000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"these archives are huge","msgtype":"m.text"},"ts":1593024762000,"senderName":"devsnek","senderId":"devsnek@irc"}
]