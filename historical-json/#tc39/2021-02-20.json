[
{"content":{"body":"i really wish stage 3 required tests","msgtype":"m.text"},"ts":1613780220000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you could propose it as a requirement","msgtype":"m.text"},"ts":1613780318000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if you add the word \"initial\" then it should be uncontroversial","msgtype":"m.text"},"ts":1613780469000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"open PR to test262 with initial tests","msgtype":"m.text"},"ts":1613780479000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1613780484000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"that","msgtype":"m.text"},"ts":1613780485000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"problem is a lot of people don't know how to write tests","msgtype":"m.text"},"ts":1613780488000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"otoh, this would incentize them to learn","msgtype":"m.text"},"ts":1613780498000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it's easier than writing a polyfill lol","msgtype":"m.text"},"ts":1613780505000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"*incentivize","msgtype":"m.text"},"ts":1613780507000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"debatable","msgtype":"m.text"},"ts":1613780513000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"well that depends if your polyfill is ljharb level or not","msgtype":"m.text"},"ts":1613780627000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if it's not, would would call it a \"prollyfill\"","msgtype":"m.text"},"ts":1613780676000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"*would you","msgtype":"m.text"},"ts":1613780682000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1613780739000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rkirsling: and it is def not easier than writing a polyfill :-p","msgtype":"m.text"},"ts":1613780753000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"altho i suppose test262 tests for polyfillable things aren't so bad","msgtype":"m.text"},"ts":1613780771000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i still haven't taken the time to figure out how to write `#x in obj` test262 tests :-/","msgtype":"m.text"},"ts":1613780782000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"fair, it depends on the proposal","msgtype":"m.text"},"ts":1613780800000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(a prollyfill, ftr, is a polyfill that only does what it can - like es6-shim's Map/Set is a prollyfill in ES3 envs, because it can't fake getters)","msgtype":"m.text"},"ts":1613781237000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh no was I not the first to make that pun :P","msgtype":"m.text"},"ts":1613781732000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"wow so many google results","msgtype":"m.text"},"ts":1613781768000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I feel definitively unspecial now","msgtype":"m.text"},"ts":1613781777000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: https://twitter.com/getify/status/563522031954558976 is probably where i got it from, and i used it here https://github.com/es-shims/es-shim-api/commit/8377ed3fb9f030dd7afbbc44b3e0108ad1974eab ; i'm trying to figure out where it was first used","msgtype":"m.text"},"ts":1613782248000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1613782263000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I mean it's a very apt name for something subject to change","msgtype":"m.text"},"ts":1613782288000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hm, https://github.com/sindresorhus/object-assign/commit/37cc2c168ee3f0f640f8850f40b483491996d71e#diff-dedb6c21fdaac9cba4da4afde881ffe5c80f80896274dbf7971d312fc6f5207dR21 predates those","msgtype":"m.text"},"ts":1613782291000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"what is the deal with ponyfill","msgtype":"m.text"},"ts":1613782309000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1613782343000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"basically, there's not a universal definition of \"polyfill\". in my world, a \"polyfill\" is a non-self-installing spec-compliant implementation, a \"shim\" is a self-installing polyfill","msgtype":"m.text"},"ts":1613782371000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but one particular package author decided they wanted a term for \"non-self-installing spec-compliant implementation\" and decided on \"ponyfill\", which means nothing and is just silly","msgtype":"m.text"},"ts":1613782394000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"heh I see","msgtype":"m.text"},"ts":1613782537000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"if i can ever come up with an actual unambiguous word that isn't childish, i'd try to popularize it, but i haven't been able to","msgtype":"m.text"},"ts":1613782549000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the most mystifying thing is that \"polyfill\" stuck in the first place, when nobody actually knows the thing it's referencing","msgtype":"m.text"},"ts":1613783018000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it's a genuinely terrible term lol","msgtype":"m.text"},"ts":1613783051000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"polyfilla?","msgtype":"m.text"},"ts":1613784607000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"“spackle” would definitely have been a better term tho","msgtype":"m.text"},"ts":1613784627000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oo some `#x in obj` test262 tests would be lovely. I'm just doing the tsc implementation atm","msgtype":"m.text"},"ts":1613813801000,"senderName":"aclaymore","senderId":"aclaymore@irc"},
{"content":{"body":"we should add subscripts to duplicate productions","msgtype":"m.text"},"ts":1613863226000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"idk what a good syntax would be though","msgtype":"m.text"},"ts":1613863254000,"senderName":"devsnek","senderId":"devsnek@irc"}
]