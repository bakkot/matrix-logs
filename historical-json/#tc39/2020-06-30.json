[
{"content":{"body":"Oooh, that pattern-matching PEP is making many of the same choices we appear to be settling on for JS, nice.","msgtype":"m.text"},"ts":1593475593000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Big difference being that we're planning on separating out destructuring and class-based matching, while they're sticking them together, implicitly destructuring with either a sequence or mapping destructure written like a constructor call.","msgtype":"m.text"},"ts":1593476018000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(That ends up being quite weird imo; it's designed to let you make a match clause *look like* a constructor, but it actually matches off of the returned value, which can have no relation whatsoever to how you'd actually construct a value.)","msgtype":"m.text"},"ts":1593476225000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But still, otherwise it mostly accords with our thoughts, nice.","msgtype":"m.text"},"ts":1593476236000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, actually the PEP's inability to match based on an expression result is problematic; you can't, say, match against a range.","msgtype":"m.text"},"ts":1593476391000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"other big difference is that it's statement-position-only","msgtype":"m.text"},"ts":1593476422000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"ljharb: i think your changes to asyncfromsynciteratorprototype changed the length properties of the methods, that's expected right?","msgtype":"m.text"},"ts":1593493377000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"s/expected/intended/","msgtype":"m.text"},"ts":1593493384000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yes, since the methods arenâ€™t observable itâ€™s non-normative","msgtype":"m.text"},"ts":1593493515000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ah yeah true","msgtype":"m.text"},"ts":1593493586000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"statement-position only is very Pythonic, I don't consider that to be a significant difference here (that is, not something we should draw conclusions about JS from)","msgtype":"m.text"},"ts":1593493765000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"agree","msgtype":"m.text"},"ts":1593493839000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"in a way that Rejected Ideas section is some of the most interesting content","msgtype":"m.text"},"ts":1593493887000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rbuckton: https://github.com/rbuckton/proposal-enum/ would you like to move this to stage 1? I'd like to see ADT enum comes true ðŸŒŸ","msgtype":"m.text"},"ts":1593525914000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"jackworks: I'd also love to see this. rbuckton if you'd like to revive this I can lend a hand","msgtype":"m.text"},"ts":1593554598000,"senderName":"mpcsh","senderId":"mpcsh@irc"}
]