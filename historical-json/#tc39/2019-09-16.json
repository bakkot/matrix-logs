[
{"content":{"body":"rofl why is the `lang` of the HTML spec \"en-US-x-hixie\"","msgtype":"m.text"},"ts":1568607990000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: cuz Hixie wrote the spec","msgtype":"m.text"},"ts":1568608023000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"damn it tim","msgtype":"m.text"},"ts":1568608027000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i was about to answer this","msgtype":"m.text"},"ts":1568608031000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"TimothyGu: lol yeah, but, seems an odd choice to put an easter egg in an accessibility attribute","msgtype":"m.text"},"ts":1568608049000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I guess it's also to test language tag parsers","msgtype":"m.text"},"ts":1568608064000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"per BCP 47 the \"x\" is private use or whatever","msgtype":"m.text"},"ts":1568608101000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"¯\\_(ツ)_/¯","msgtype":"m.text"},"ts":1568608117000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it's a valid en-US","msgtype":"m.text"},"ts":1568608124000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"just has extra data","msgtype":"m.text"},"ts":1568608132000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1568608156000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: It's... technically correct, yes. Indicating a sub-ideolect, specific to Hixie.","msgtype":"m.text"},"ts":1568608972000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It is derived from en-GB-Hixie: https://ian.hixie.ch/bible/english","msgtype":"m.text"},"ts":1568609592000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: is that where chrome's practice of using || for code comes from?","msgtype":"m.text"},"ts":1568609729000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: no I think that's from a long time ago","msgtype":"m.text"},"ts":1568609743000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Like old computers","msgtype":"m.text"},"ts":1568609748000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ic","msgtype":"m.text"},"ts":1568609755000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i've never seen it outside of chromium commits, until today","msgtype":"m.text"},"ts":1568609772000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I first saw it in Mozilla","msgtype":"m.text"},"ts":1568609780000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"huh? what's ||","msgtype":"m.text"},"ts":1568609807000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"like backticks","msgtype":"m.text"},"ts":1568609829000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"some code is |1 + 1|","msgtype":"m.text"},"ts":1568609836000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1568609865000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"...wtf is up with Hixie's \"-us pluralizes to -ii\" rule, that doesn't match anyone ever","msgtype":"m.text"},"ts":1568609907000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"lol i was just talking about that with someone","msgtype":"m.text"},"ts":1568609924000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i like it","msgtype":"m.text"},"ts":1568609926000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"-ii literally only occurs in words like radius","msgtype":"m.text"},"ts":1568609927000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"motion to adopt en-US-x-Hixie on all tc39 documents","msgtype":"m.text"},"ts":1568609988000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Singular: bus. Plural: bii. Alternative plural: buses.","msgtype":"m.text"},"ts":1568610318000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh why","msgtype":"m.text"},"ts":1568610340000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"us -> ii, it's the rule","msgtype":"m.text"},"ts":1568611985000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"clearly, 1 radius = 2 radiii","msgtype":"m.text"},"ts":1568612292000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but for real i am 100% certain Hixie does *not* pronounce the plural of cactus as \"kack-tee-eye\"","msgtype":"m.text"},"ts":1568612345000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think some of it is in jest :p","msgtype":"m.text"},"ts":1568615224000,"senderName":"FireFly","senderId":"FireFly@irc"},
{"content":{"body":"thinks we should start using diaeresis over subsequent i's, as in Iberian languages and en-GB-x-Economist, to indicate that they're a separate syllable","msgtype":"m.emote"},"ts":1568635450000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ljharb: getting back to your request for \"post-ES2015 spec changes that aren't backwards compatible\", I remember one around use of built-in vs. custom `then` with Promises, I believe related to the timing of `await`","msgtype":"m.text"},"ts":1568641032000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"https://github.com/tc39/ecma262/commit/e985e41c2ac1906ea69226f24966ba1a1f82340b","msgtype":"m.text"},"ts":1568641287000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"err, that link is wrong","msgtype":"m.text"},"ts":1568641330000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"it was https://github.com/tc39/ecma262/commit/a2647114b7f2d42b02e7c04c8c3a05787846f6e5","msgtype":"m.text"},"ts":1568641333000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"and https://github.com/tc39/ecma262/issues/1577 is related","msgtype":"m.text"},"ts":1568641712000,"senderName":"gibson042","senderId":"gibson042@irc"},
{"content":{"body":"what if we had a Map#take https://gc.gy/36354699.png","msgtype":"m.text"},"ts":1568649767000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is it possible to link modules from different realms","msgtype":"m.text"},"ts":1568652240000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i can't tell if this is a limitation of v8 or a limitation of the spec","msgtype":"m.text"},"ts":1568652254000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: what do you mean by \"link\"?","msgtype":"m.text"},"ts":1568653330000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: make them part of the same graph","msgtype":"m.text"},"ts":1568653349000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"which graph?","msgtype":"m.text"},"ts":1568653355000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"a module graph","msgtype":"m.text"},"ts":1568653359000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like respond to HostResolveImportedModule with a module from a different realm","msgtype":"m.text"},"ts":1568653373000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah, then I'm not sure","msgtype":"m.text"},"ts":1568653375000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I am pretty sure HTML doesn't allow this, but don't know about the ES spec","msgtype":"m.text"},"ts":1568653391000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(it doesn't explicitly disallow it, just doesn't provide a mechanism for it)","msgtype":"m.text"},"ts":1568653407000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"My reading of 12.1.1 is that `yiel\\u{64}` is a valid Identifier, except in strict mode code","msgtype":"m.text"},"ts":1568653519000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"So that `var yield = 0;` is illegal in a non-strict generator, but `var yiel\\u{64} = 0;` is OK","msgtype":"m.text"},"ts":1568653544000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"wait, no, there's a rule covering that case","msgtype":"m.text"},"ts":1568653618000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"it's a valid Identifier but not a valid BindingIdentifier or IdentifierReference","msgtype":"m.text"},"ts":1568653636000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: \"It is a Syntax Error if this production has a [Yield] parameter and StringValue of Identifier is \"yield\".\"","msgtype":"m.text"},"ts":1568653650000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ayup","msgtype":"m.text"},"ts":1568653657000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"littledan: the New Yorker still does that too","msgtype":"m.text"},"ts":1568658389000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah I think certain cases like naïve are quite common","msgtype":"m.text"},"ts":1568658436000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"coöperation looks table-flipping ridiculous though lol","msgtype":"m.text"},"ts":1568658458000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"not sure if any other american publications do, but New Yorker loves itself some diareses","msgtype":"m.text"},"ts":1568658498000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"rkirsling: perhaps we should start pronouncing cooperation like coop-er-ation a la chicken coop out of spite","msgtype":"m.text"},"ts":1568658932000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"👎🏻","msgtype":"m.text"},"ts":1568658979000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: I bet you could make it like a personal speaking gimmick","msgtype":"m.text"},"ts":1568658990000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"you'd just have to always keep a straight face / not slow down but just act like it's completely natural","msgtype":"m.text"},"ts":1568659030000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I for one would just start giggling, I think","msgtype":"m.text"},"ts":1568659042000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"naturally, yes","msgtype":"m.text"},"ts":1568659042000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that's point of order territory","msgtype":"m.text"},"ts":1568659102000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"POO: did you really","msgtype":"m.text"},"ts":1568659356000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"devsnek: It seems to me that Script Record's [[Environment]] field is never consulted (or set to anything interesting). What does engine262 say?","msgtype":"m.text"},"ts":1568659636000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"script record?","msgtype":"m.text"},"ts":1568659659000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://tc39.es/ecma262/#sec-script-records","msgtype":"m.text"},"ts":1568659680000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"rkirsling: perhaps you mean POÖ","msgtype":"m.text"},"ts":1568659712000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah i can't think of any reason for it to have that field","msgtype":"m.text"},"ts":1568659730000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: 😂 you win","msgtype":"m.text"},"ts":1568659818000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"jmdyck: you could try modifying Environment to be a getter/setter that throw, and then running test262","msgtype":"m.text"},"ts":1568659845000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"It looks like it's never been used.","msgtype":"m.text"},"ts":1568660252000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1568660323000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I think it's just there by analogy with Module Record's [[Environment]] field.","msgtype":"m.text"},"ts":1568660332000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"gibson042: thanks, the await microtask change in https://github.com/tc39/ecma262/pull/1250 ?","msgtype":"m.text"},"ts":1568663366000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah, defining \"keyword\" is beyond me","msgtype":"m.text"},"ts":1568663586000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"it'd be something like: a terminal symbol of the syntactic grammar that is presented in monospace font, and is composed only of letters","msgtype":"m.text"},"ts":1568664043000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Involving a font choice seems flakey, but the spec doesn't really give us a different way to identify such things.","msgtype":"m.text"},"ts":1568664135000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"\"something that looks like an identifier but has special meaning to the language\" would almost cover it","msgtype":"m.text"},"ts":1568664197000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(maybe \"can have in at least one context\". but then \"enum\" is screwy any way you cut it here)","msgtype":"m.text"},"ts":1568664245000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it depends on exactly where you want the definition's boundary to be, which depends on how you're using the term","msgtype":"m.text"},"ts":1568664274000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"You're probably better off not trying to define it, if that works.","msgtype":"m.text"},"ts":1568664330000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"true...","msgtype":"m.text"},"ts":1568664364000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"jmdyck: i rebased your big editorial PR; i added a commit which is just this line: https://github.com/tc39/ecma262/pull/1636/files#diff-3540caefa502006d8a33cb1385720803R37200 can you take a look and confirm it's fine, before i merge?","msgtype":"m.text"},"ts":1568666588000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"looking...","msgtype":"m.text"},"ts":1568666838000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"It seems like the kebab id was only in master for 3 days (2018-07-09 to 2018-07-12). Is that long enough to warrant an oldid?","msgtype":"m.text"},"ts":1568667608000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1568667644000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"peak v8 is switching to a new faster code running api but it also means some of the code just doesn't happen at all","msgtype":"m.text"},"ts":1568667677000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jmdyck: yeah, that's a fair point","msgtype":"m.text"},"ts":1568667715000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(but i might be misreading the logs: git seems to prefer telling me when something was originally committed rather than when it was merged)","msgtype":"m.text"},"ts":1568667733000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"git does prefer author dates over commit dates; github, unfortunately, differs and prefers commit dates","msgtype":"m.text"},"ts":1568667761000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'll just remove my new commit and look into it later","msgtype":"m.text"},"ts":1568667775000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Ahh... so much nicer when master has no parsing errors.","msgtype":"m.text"},"ts":1568668158000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: is your code for that public","msgtype":"m.text"},"ts":1568669260000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://github.com/jmdyck/ecmaspeak-py","msgtype":"m.text"},"ts":1568669299000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1568669316000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is this actually executing the spec yet, or just checking it","msgtype":"m.text"},"ts":1568669329000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"no execution yet.","msgtype":"m.text"},"ts":1568669411000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(Though I did do some execution in an older version.)","msgtype":"m.text"},"ts":1568669450000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"that's pretty cool","msgtype":"m.text"},"ts":1568669479000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"To do execution, I need a functioning ES parser -- derived from the ES grammar and producing syntax trees that respect that grammar.","msgtype":"m.text"},"ts":1568669574000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"a small detail :P","msgtype":"m.text"},"ts":1568669602000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Which I *sort of* have, but it punts on a lot of tricky points.","msgtype":"m.text"},"ts":1568669626000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I recently had an insight on how to handle things like [lookahead blah] and \"X but not Y\", but it's going to take a while to get it working.","msgtype":"m.text"},"ts":1568669710000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"In the meantime, the static analysis is moderately useful.","msgtype":"m.text"},"ts":1568669835000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(Mind you, the static *type* analysis is super kludgey.)","msgtype":"m.text"},"ts":1568669942000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"There are so few \"type declarations\" in the spec that it basically has to do \"whole program\" type inference on the whole spec.","msgtype":"m.text"},"ts":1568670107000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(As opposed to, say, just checking that operation-invocations respect their declarations.)","msgtype":"m.text"},"ts":1568670151000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"btw, I am seeking another stage 3 reviewer for my for-in order proposal: https://github.com/tc39/proposal-for-in-order","msgtype":"m.text"},"ts":1568670545000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and also just more eyes on the spec text, even if they aren't formal reviews","msgtype":"m.text"},"ts":1568670572000,"senderName":"Bakkot","senderId":"Bakkot@irc"}
]