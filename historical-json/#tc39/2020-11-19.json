[
{"content":{"body":"Can someone remind me what the point of AsyncFromSyncIterator is again? I know I wrote the spec, but now I can't figure out when it's used...","msgtype":"m.text"},"ts":1605822905000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In particular, I can only find GetIterator(, async) calls in for-await-of, which already uses Await() on the return value of next(), so doesn't seem like it'd need it.","msgtype":"m.text"},"ts":1605822948000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(Since Await() does promise-unwrapping.)","msgtype":"m.text"},"ts":1605822955000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh... https://github.com/tc39/ecma262/issues/1765","msgtype":"m.text"},"ts":1605823035000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I assume exe-boss's comment is the reason, revisiting that thread","msgtype":"m.text"},"ts":1605823060000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Maybe... I wonder if I did that on purpose or not...","msgtype":"m.text"},"ts":1605823086000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or, wait, maybe that comment is not true","msgtype":"m.text"},"ts":1605823097000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah I think that comment is false","msgtype":"m.text"},"ts":1605823119000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so yeah I have no idea why this is here, except maybe the microtask ticks?","msgtype":"m.text"},"ts":1605823130000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"https://github.com/tc39/proposal-async-iteration/issues/15#issuecomment-247768427 maybe","msgtype":"m.text"},"ts":1605823186000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"No, that doesn't seem to be it","msgtype":"m.text"},"ts":1605823204000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(I got there via https://github.com/tc39/proposal-async-iteration/commit/fc15b0a8cd06dad4e84e3f7c38b1cb435b6b8292 )","msgtype":"m.text"},"ts":1605823218000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"exe-boss's comment is accurate in the Chrome console","msgtype":"m.text"},"ts":1605823418000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Although I'm not sure it's because AFSI","msgtype":"m.text"},"ts":1605823426000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Right, that's what I meant.","msgtype":"m.text"},"ts":1605823616000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`for await` does unwrap yielded promises, but it does that because of the `Await` you mention, not because of AFSI","msgtype":"m.text"},"ts":1605823640000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I think AFSI is necessary to unwrap .value properties","msgtype":"m.text"},"ts":1605823652000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I only see code in for-await to unwrap Promise<{ value, done }>","msgtype":"m.text"},"ts":1605823663000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But if you have Promise<{ value: Promise, done }>, or you have just { value: Promise, done }, then AFSI gets involved","msgtype":"m.text"},"ts":1605823693000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If that's true, it sure seems like overkill...","msgtype":"m.text"},"ts":1605823781000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"aha! yeah, that seems likely to be the reason.","msgtype":"m.text"},"ts":1605825347000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Which I guess is what exe-boss was saying in the first place; I just confused myself about \"a promise for the iterator result\" and \"an iterator result holding a promise\"","msgtype":"m.text"},"ts":1605825493000,"senderName":"Bakkot","senderId":"Bakkot@irc"}
]