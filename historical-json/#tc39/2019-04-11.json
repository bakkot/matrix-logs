[
{"content":{"body":"am I reading this correctly?  in 9.5.11[[OwnPropertyKeys]] ( ), step 12 means essentially \"the List of keys must be either String or Symbol primitives\"?  meaning if it encountered an Object in the List, it would *not* attempt to use the ToPrimitive algorithm to coerce these into primitives?","msgtype":"m.text"},"ts":1554960470000,"senderName":"boneskull","senderId":"boneskull@irc"},
{"content":{"body":"...and if that is true, is there a use-case for the \"ownKeys\" Proxy trap other than side-effects?  if that trap returns a key that is not actually present, the key is discarded (because of step 16a)","msgtype":"m.text"},"ts":1554960679000,"senderName":"boneskull","senderId":"boneskull@irc"},
{"content":{"body":"I suppose you could omit certain keys from the list","msgtype":"m.text"},"ts":1554960712000,"senderName":"boneskull","senderId":"boneskull@irc"},
{"content":{"body":"but certainly not add any that weren't there","msgtype":"m.text"},"ts":1554960719000,"senderName":"boneskull","senderId":"boneskull@irc"},
{"content":{"body":"boneskull: No, the assertion means that it *cannot* encounter an Object in the List.","msgtype":"m.text"},"ts":1554983522000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ljharb: https://github.com/tc39/ecma262/commit/3fc53bc4a56d58b3ba757764baa2add7aacf2614#diff-3540caefa502006d8a33cb1385720803L30893","msgtype":"m.text"},"ts":1554998398000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this line got intended","msgtype":"m.text"},"ts":1554998403000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"indented*","msgtype":"m.text"},"ts":1554998411000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"was this intentional?","msgtype":"m.text"},"ts":1554998421000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"It couldn't have been","msgtype":"m.text"},"ts":1554998437000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i'm assuming it wasn't","msgtype":"m.text"},"ts":1554998445000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"because the preceding line is unconditional return","msgtype":"m.text"},"ts":1554998454000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1554998467000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I've got a commit that fixes it (among several), should PR within an hour.","msgtype":"m.text"},"ts":1554998500000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"üëç","msgtype":"m.text"},"ts":1554998540000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jmdyck: did you catch https://tc39.github.io/ecma262/#sec-asyncfromsynciteratorcontinuation step 5","msgtype":"m.text"},"ts":1554999647000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"should be value instead of [value]","msgtype":"m.text"},"ts":1554999656000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yup, back in February: https://github.com/tc39/ecma262/pull/1456/commits/20068280eb736fcc0484cdcd8f7ffa099d821994","msgtype":"m.text"},"ts":1554999799000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"oof","msgtype":"m.text"},"ts":1555000348000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oof?","msgtype":"m.text"},"ts":1555000363000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: unfortunate that it's been open so long","msgtype":"m.text"},"ts":1555000664000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah, sigh.","msgtype":"m.text"},"ts":1555000679000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck I don't think I understand the distinction.  if you return a list of Objects from a `ownKeys` Proxy handler trap, then something throws a `TypeError` when you try to use `Object.keys()` on that object.  is it not that assertion?","msgtype":"m.text"},"ts":1555001401000,"senderName":"boneskull","senderId":"boneskull@irc"},
{"content":{"body":"s/on that object/on that Proxy","msgtype":"m.text"},"ts":1555001455000,"senderName":"boneskull","senderId":"boneskull@irc"},
{"content":{"body":"assertions aren't evaluated","msgtype":"m.text"},"ts":1555001538000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"they're marking invariants of the spec","msgtype":"m.text"},"ts":1555001546000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"maybe I'm asking in the wrong channel","msgtype":"m.text"},"ts":1555001746000,"senderName":"boneskull","senderId":"boneskull@irc"},
{"content":{"body":"am I referring to implementation details?","msgtype":"m.text"},"ts":1555001773000,"senderName":"boneskull","senderId":"boneskull@irc"},
{"content":{"body":"If your `ownKeys` handler returns a list of Objects, then Proxy's [[OwnPropertyKeys]]'s call to CreateListFromArrayLike will throw  a TypeError, it looks like.","msgtype":"m.text"},"ts":1555001843000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck thanks, I think that's what I was lokoing for.","msgtype":"m.text"},"ts":1555001873000,"senderName":"boneskull","senderId":"boneskull@irc"},
{"content":{"body":"4lokoing for?","msgtype":"m.text"},"ts":1555001886000,"senderName":"boneskull","senderId":"boneskull@irc"},
{"content":{"body":"l:eyes:king","msgtype":"m.text"},"ts":1555001899000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lüëÄking","msgtype":"m.text"},"ts":1555001906000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"PR is almost ready, but I must break for lunch","msgtype":"m.text"},"ts":1555001959000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"devsnek: no, not intentional; i'll take care of it","msgtype":"m.text"},"ts":1555002899000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"jmdyck: as for 1456, i'll try to get that in today","msgtype":"m.text"},"ts":1555002917000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"jmdyck: for future reference tho it's easier when PRs are for a single change instead of \"misc editorial\" ;-)","msgtype":"m.text"},"ts":1555002934000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: not easier for me","msgtype":"m.text"},"ts":1555004911000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ljharb: my commits are ready to push, but I can hold back if a change in master is imminent","msgtype":"m.text"},"ts":1555008912000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: nah go ahead, i won't get to it for another hour or three","msgtype":"m.text"},"ts":1555009754000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"an hour or three I can wait.","msgtype":"m.text"},"ts":1555009900000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"one thing though: 1456 has conflicts. I have commits to resolve those, but I'm not sure how to push them and not the rest of the branch.","msgtype":"m.text"},"ts":1555009964000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"would it work to do a hard reset to the conflict-resolving commit, then push, then hard reset to the current HEAD commit?","msgtype":"m.text"},"ts":1555010293000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Yay, that seemed to work.","msgtype":"m.text"},"ts":1555012425000,"senderName":"jmdyck","senderId":"jmdyck@irc"}
]