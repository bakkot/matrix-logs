[
{"content":{"body":"java beat us to switch expressions","msgtype":"m.text"},"ts":1583293484000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"for real?","msgtype":"m.text"},"ts":1583295036000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"that's embarrassing, I won't lie","msgtype":"m.text"},"ts":1583295046000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"we need to just","msgtype":"m.text"},"ts":1583295056000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"make everything expressions","msgtype":"m.text"},"ts":1583295059000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"our switch is gross","msgtype":"m.text"},"ts":1583295731000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"we need pattern matching","msgtype":"m.text"},"ts":1583295735000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"java has a huge advantage over us in adding switch expressions, namely, a type system","msgtype":"m.text"},"ts":1583299764000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"switch expressions are a natural fit for java","msgtype":"m.text"},"ts":1583299774000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"also I see they're using `yield` for producing the value from the expression","msgtype":"m.text"},"ts":1583299857000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"which is neat","msgtype":"m.text"},"ts":1583299862000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"actually I guess their switch expressions aren't the thing I was thinking of and aren't really something they're in any better of a position to add","msgtype":"m.text"},"ts":1583299989000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"looks like they're adding them mostly because they want to use them with type guards, though","msgtype":"m.text"},"ts":1583300002000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if I am reading the JEP right","msgtype":"m.text"},"ts":1583300017000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I recall they were discussing adding a proper match expression at some point","msgtype":"m.text"},"ts":1583300047000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i'd guess matching is actually pretty easy in modern js engines with all the hidden shape classes","msgtype":"m.text"},"ts":1583308331000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"sucks if you don't have that optimization though","msgtype":"m.text"},"ts":1583308343000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: it gets complicated by transitions not being uniform always. shape x getting a y property added then a z property, might not be the same shape as x getting a z property then a y property","msgtype":"m.text"},"ts":1583334981000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yes whatever did happen to the pattern matching proposal","msgtype":"m.text"},"ts":1583351196000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"its champion doesn't seem to be doing much JS stuff anymore","msgtype":"m.text"},"ts":1583351451000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: i just meant its faster than doing complete object comparison with checking individual properties and such","msgtype":"m.text"},"ts":1583356487000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you'll still have to do that for many cases","msgtype":"m.text"},"ts":1583359040000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"which is what bradley's saying","msgtype":"m.text"},"ts":1583359048000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"hopefully not tooooo often","msgtype":"m.text"},"ts":1583359068000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"maybe with libraries like acorn where everything is changing shape all the time","msgtype":"m.text"},"ts":1583359092000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"depends on your objects, right","msgtype":"m.text"},"ts":1583359113000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"dictionary mode objects aren't that rare","msgtype":"m.text"},"ts":1583359140000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"mfw strict mode didn't get rid of delete","msgtype":"m.text"},"ts":1583359155000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't even know the last time i used delete","msgtype":"m.text"},"ts":1583359160000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I used it a few days ago, but I can't recall why.","msgtype":"m.text"},"ts":1583360009000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh yeah, I wanted to remove a key from an object, duh: https://github.com/tabatkins/railroad-diagrams/blob/gh-pages/railroad.js#L303","msgtype":"m.text"},"ts":1583360056000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I iterate the object to set attributes later, so I can't just set it to null or something.)","msgtype":"m.text"},"ts":1583360079000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, strict mode should not have gotten rid of delete; the thing it does is a reasonable thing to want to do","msgtype":"m.text"},"ts":1583360152000,"senderName":"Bakkot","senderId":"Bakkot@irc"}
]