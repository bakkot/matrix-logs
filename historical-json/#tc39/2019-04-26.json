[
{"content":{"body":"i made an attempt to specify web reality for Array.prototype.join on cyclic arrays, please tell me if it's horrible: https://github.com/tc39/ecma262/pull/1518","msgtype":"m.text"},"ts":1556240245000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"mfw [[Seen]]","msgtype":"m.text"},"ts":1556242318000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: join sees you","msgtype":"m.text"},"ts":1556245422000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: is \"i think strange global de-duplication is ugly\" a good reason for annex b","msgtype":"m.text"},"ts":1556245491000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i dunno. we already have that in a number of places, i think","msgtype":"m.text"},"ts":1556245513000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"for..in i think?","msgtype":"m.text"},"ts":1556245524000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"for..in wouldn't have any issues with circular structures","msgtype":"m.text"},"ts":1556245550000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"honestly i feel like randomly empty makes less sense than throwing","msgtype":"m.text"},"ts":1556245586000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah true, i think maybe setPrototypeOf and JSON.stringify are the only places that deal with circularity","msgtype":"m.text"},"ts":1556245590000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and they both throw","msgtype":"m.text"},"ts":1556245637000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"instead of having nonsensical effects","msgtype":"m.text"},"ts":1556245646000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so would you want it to throw in the main spec but be empty in annex b?","msgtype":"m.text"},"ts":1556245700000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"because i think the current spec behavior mandates an infinite loop, no?","msgtype":"m.text"},"ts":1556245711000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"current behaviour is throw","msgtype":"m.text"},"ts":1556245713000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"because of stack limits","msgtype":"m.text"},"ts":1556245720000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well implicit throw","msgtype":"m.text"},"ts":1556245724000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"maybe not with tco","msgtype":"m.text"},"ts":1556245734000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"uhhhh","msgtype":"m.text"},"ts":1556245747000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't think TCO applies here","msgtype":"m.text"},"ts":1556245759000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah TCO can't apply here","msgtype":"m.text"},"ts":1556245799000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"easy tco \"if the execution context stopped existing here could this function continue\"","msgtype":"m.text"},"ts":1556245835000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you could rewrite the algorithm to be observably the same and recursive, no?","msgtype":"m.text"},"ts":1556245847000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"hmmmmm","msgtype":"m.text"},"ts":1556245899000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it isn't just about being recursive","msgtype":"m.text"},"ts":1556246005000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the recursion has to occur in a place where the current execution context can be ditched","msgtype":"m.text"},"ts":1556246019000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"right - so like, `return current + nextToString(arr, index)` or something?","msgtype":"m.text"},"ts":1556246053000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"depending on language details, that can hold open the + expression, and thus not be tc0","msgtype":"m.text"},"ts":1556246093000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"in the end","msgtype":"m.text"},"ts":1556246182000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"engine262 throws","msgtype":"m.text"},"ts":1556246185000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and i like it that way :P","msgtype":"m.text"},"ts":1556246189000,"senderName":"devsnek","senderId":"devsnek@irc"}
]