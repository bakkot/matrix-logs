[
{"content":{"body":"has anyone else noticed that test262.report sometimes says things are failing that definitely don't fail in your tests","msgtype":"m.text"},"ts":1601389260000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"do suugestions on ECMA262 PRs not work for anyone else?","msgtype":"m.text"},"ts":1601394123000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: accepting them doesnâ€™t work when the suggester has write access, iirc. github bug.","msgtype":"m.text"},"ts":1601394500000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek this isn't the place to report issues with test262.report. You can tell me directly, or file an issue here: https://github.com/bocoup/test262-report-issue-tracker/issues","msgtype":"m.text"},"ts":1601412161000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"shu_ (or maybe Bakkot if you're around) -- is it our intention that attempted deletion of an integer-indexed element will still throw in strict mode? I hadn't adequately considered this case myself","msgtype":"m.text"},"ts":1601412676000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"the note here (https://tc39.es/ecma262/#sec-delete-operator-runtime-semantics-evaluation) mentions that it'll throw for `[[Configurable]]: false` in strict mode but the actual behavior is checking what `[[Delete]]` returned","msgtype":"m.text"},"ts":1601412741000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"and the `[[Delete]]` override that anba suggested returns `false` just when we refused to delete an integer-indexed element","msgtype":"m.text"},"ts":1601412785000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1601413306000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"this is normatively okay but it may make the non-normative description of \"what `delete` does in strict mode\" feel weird","msgtype":"m.text"},"ts":1601413373000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"the note is talking about regular properties","msgtype":"m.text"},"ts":1601413385000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"wait hang on I thought the plan was to make these _configurable_","msgtype":"m.text"},"ts":1601413416000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the note doesn't say anything about `configurable: true` properties","msgtype":"m.text"},"ts":1601413437000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"does Chakra have some weird allowance for strings as import/export names already... ? https://app.circleci.com/pipelines/github/tc39/test262/2113/workflows/f8b33c25-a1f4-4356-98a0-ebd53010cad1/jobs/18454","msgtype":"m.text"},"ts":1601413546000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"rkirsling e.g. `'use strict'; delete (new Proxy({ a: 0 }, { deleteProperty: () => false })).a` throws, despite not falling into either case described in the note","msgtype":"m.text"},"ts":1601413615000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: ah right yeah","msgtype":"m.text"},"ts":1601413643000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah the note is not incorrect if read strictly","msgtype":"m.text"},"ts":1601413655000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it's just easy to misread it as exhaustive when it isn't","msgtype":"m.text"},"ts":1601413675000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I would accept an editorial PR adding \", or otherwise cannot be deleted\" after the \"has the attribute { [[Configurable]]: false }\" bit","msgtype":"m.text"},"ts":1601413766000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1601413936000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"or chakra just... passes randomly if it tries to do anything with modules?","msgtype":"m.text"},"ts":1601414320000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"rwaldron-: i filed an issue in april https://github.com/bocoup/test262-report-issue-tracker/issues/19","msgtype":"m.text"},"ts":1601415233000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Oh right, I saw that but you didn't actually describe what issues you were encountering.","msgtype":"m.text"},"ts":1601415270000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"rwaldron-: for example https://test262.report/browse/built-ins/RegExp/lookBehind/alternations.js","msgtype":"m.text"},"ts":1601415331000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"engine262 passes this test","msgtype":"m.text"},"ts":1601415341000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I have to go for the day, can I move this to the issue?","msgtype":"m.text"},"ts":1601415367000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"Bakkot: https://github.com/tc39/ecma262/pull/2195","msgtype":"m.text"},"ts":1601415869000,"senderName":"rkirsling","senderId":"rkirsling@irc"}
]