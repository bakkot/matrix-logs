[
{"content":{"body":"whether or IsArray is useful or not as it stands isn't really material, the question is more like","msgtype":"m.text"},"ts":1578617595000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"if we want observable behavior to be able to depend on \"if obj is a Foo exotic object\", that check should be decidable","msgtype":"m.text"},"ts":1578617651000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i am very surprised this is contentious","msgtype":"m.text"},"ts":1578617681000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"same","msgtype":"m.text"},"ts":1578617686000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"though i am heartened by allen chiming in in agreement","msgtype":"m.text"},"ts":1578617722000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"devsnek: (re 3 hrs ago): I wondered that myself. Here's another: can you write a proxy that behaves exactly like an ordinary object?","msgtype":"m.text"},"ts":1578618463000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"that i know you can do","msgtype":"m.text"},"ts":1578618490000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ok, then it's a wider issue than just \"X is a Foo exotic object\"","msgtype":"m.text"},"ts":1578618598000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1578618629000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the spec has visibility into a Proxy that behaves like an ordinary object in evaluation and an ordinary object","msgtype":"m.text"},"ts":1578618659000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"If the semantics of \"X is a Foo object\" were \"X exhibits behavior that conforms to the spec for Foo objects\" and some alg said \"If X is an ordinary object, ...\" then that would accept a proxy (or some other non-standard exotic) that's behaving like an ordinary, which we presumably don't want, so that'd be another argument against me. (Except that I don't think the spec ever says anything like \"If X is an ordinary object\". Ther","msgtype":"m.text"},"ts":1578619518000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"sertions, but I'm guessing they wouldn't be a problem.)","msgtype":"m.text"},"ts":1578619518000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1578619618000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yes i can't say there are any special checking for ordinary objects, only exotics","msgtype":"m.text"},"ts":1578619651000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"in fact, it's a little odd that the spec *does* have \"If X is a Foo exotic object\". Places where the MOP doesn't entirely abstract away different behaviors","msgtype":"m.text"},"ts":1578620065000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"that i agree with","msgtype":"m.text"},"ts":1578620110000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'd rather see abstract operations, something concrete","msgtype":"m.text"},"ts":1578620128000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"There's not a huge number of them; it might be do-able.","msgtype":"m.text"},"ts":1578620295000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i feel like we need some sort of strategic initiative to spend time improving our spec tooling, consistency, etc","msgtype":"m.text"},"ts":1578629319000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like just pause proposals for a few months","msgtype":"m.text"},"ts":1578629324000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lol I would support that so hard","msgtype":"m.text"},"ts":1578629354000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i started to outline what i think would be a cool syntax for defining spec","msgtype":"m.text"},"ts":1578629387000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(would give me some time to work on ecmaspeak)","msgtype":"m.text"},"ts":1578629402000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i don't know how to write vim highlighting files though so it looks very drab","msgtype":"m.text"},"ts":1578629403000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is ecmaspeak your spec evaluator","msgtype":"m.text"},"ts":1578629412000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"more like linter so far, but yeah","msgtype":"m.text"},"ts":1578629439000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"what's your cool syntax look like?","msgtype":"m.text"},"ts":1578629497000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(and do you think it has a hope of being adopted, or is this just for fun?)","msgtype":"m.text"},"ts":1578629627000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"https://gc.gy/46334636.png","msgtype":"m.text"},"ts":1578629641000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it's still in the \"rough sketch\" stage","msgtype":"m.text"},"ts":1578629656000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i need to figure out a better sigil for variables","msgtype":"m.text"},"ts":1578629704000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is it completely markdown-ish, or are there html tags elsewhere?","msgtype":"m.text"},"ts":1578629727000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"there are not any html tags yet","msgtype":"m.text"},"ts":1578629737000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i should say, the goal is not to approximate markdown","msgtype":"m.text"},"ts":1578629749000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the dash was chosen because typing `1.` each time is awkward and visually confusing","msgtype":"m.text"},"ts":1578629770000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i chose it over `*` because `*` is often rendered at the top of the line","msgtype":"m.text"},"ts":1578629796000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I'm also trying to make sure the structure is really consistent so it can be parsed","msgtype":"m.text"},"ts":1578629824000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is there a way to distinguish (what in the current spec is) an <emu-alg> from a <ol> from a <ul>?","msgtype":"m.text"},"ts":1578629893000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i haven't gotten to ol/ul yet","msgtype":"m.text"},"ts":1578629941000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jmdyck: i also had an idea of making it much more like actual code, but i'm not sure it if would catch on","msgtype":"m.text"},"ts":1578630306000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"just the emu-alg stuff, you mean?","msgtype":"m.text"},"ts":1578630331000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1578630358000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it would render out mostly the same though","msgtype":"m.text"},"ts":1578630413000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"actual code in an actual programming language?","msgtype":"m.text"},"ts":1578630417000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"not in a current programming language","msgtype":"m.text"},"ts":1578630430000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"just a very regular syntax","msgtype":"m.text"},"ts":1578630434000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":" just actual code in a hypothetical language","msgtype":"m.text"},"ts":1578630437000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"where you use like `==` instead of \"is\"","msgtype":"m.text"},"ts":1578630439000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://gc.gy/46335461.png","msgtype":"m.text"},"ts":1578630466000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"notes could be // comments or something","msgtype":"m.text"},"ts":1578630476000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"much easier to edit","msgtype":"m.text"},"ts":1578630484000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and if we render it right, much more regular patterns when reading","msgtype":"m.text"},"ts":1578630493000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"You're saying that would render out mostly the same as currently? E.g., the \"} else {\" would render as \"Else,\" ?","msgtype":"m.text"},"ts":1578630698000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1578630706000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"my thinking is","msgtype":"m.text"},"ts":1578630737000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the build tooling would parse it completely, understand it, validate it","msgtype":"m.text"},"ts":1578630746000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and then with all that knowledge of the structure","msgtype":"m.text"},"ts":1578630752000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we can output nice human readable stuff","msgtype":"m.text"},"ts":1578630759000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"It's possible, but spec-authors might find the difference confusing.","msgtype":"m.text"},"ts":1578630799000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1578630813000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there are downsides to everything tbh","msgtype":"m.text"},"ts":1578630833000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"e.g., see something in rendered spec, want to find correponding thing in source.","msgtype":"m.text"},"ts":1578630834000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"right now the spec is so horrid to edit","msgtype":"m.text"},"ts":1578630842000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that actually might not be as hard as you think","msgtype":"m.text"},"ts":1578630857000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rendered spec can retain links to the exact line/column of the source","msgtype":"m.text"},"ts":1578630882000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well, i don't find the current spec horrid to edit, so who knows what I'd find hard.","msgtype":"m.text"},"ts":1578630904000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i mean relatively","msgtype":"m.text"},"ts":1578630913000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like think how easy it is to edit some python code","msgtype":"m.text"},"ts":1578630921000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"compared to how easy it is to edit some es spec logic","msgtype":"m.text"},"ts":1578630932000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"feels about the same to me","msgtype":"m.text"},"ts":1578630960000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ok maybe a language that doesn't have significant whitespace","msgtype":"m.text"},"ts":1578630970000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but again: do you think it has a hope of being adopted, or is this just for fun?","msgtype":"m.text"},"ts":1578631283000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"either way its for fun","msgtype":"m.text"},"ts":1578631298000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but if i got something seriously working","msgtype":"m.text"},"ts":1578631302000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and people liked it","msgtype":"m.text"},"ts":1578631312000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if it were adopted, that'd be a huge diff and a ton of merge conflicts for in-flight PRs.","msgtype":"m.text"},"ts":1578631317000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1578631322000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and all the git history would be lost","msgtype":"m.text"},"ts":1578631339000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well, not lost, but harder to see","msgtype":"m.text"},"ts":1578631354000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i'm also looking into ways to manually reattribute the history","msgtype":"m.text"},"ts":1578631367000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(e.g., in a 'blame')","msgtype":"m.text"},"ts":1578631371000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"but i don't think i can parse the current spec with enough regularity to map the blames","msgtype":"m.text"},"ts":1578631383000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not sure what you mean there. Attributing chunks of the new spec to the commits that were responsible for the corresponding chunk of the old spec?","msgtype":"m.text"},"ts":1578631483000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1578631496000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like creating fake commit history","msgtype":"m.text"},"ts":1578631503000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is that even theoretically possible?","msgtype":"m.text"},"ts":1578631509000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"with the same author information and stuff","msgtype":"m.text"},"ts":1578631509000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1578631513000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"its just difficult","msgtype":"m.text"},"ts":1578631518000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ok, i think i get it now.","msgtype":"m.text"},"ts":1578631528000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"the whole history?","msgtype":"m.text"},"ts":1578631553000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"no just one layer of indirection","msgtype":"m.text"},"ts":1578631561000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"don't know what that means in this context","msgtype":"m.text"},"ts":1578631591000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"you'd end up looking at the current spec for anything more than one commit back","msgtype":"m.text"},"ts":1578631596000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"from whenever we rewrote it","msgtype":"m.text"},"ts":1578631601000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"its hard to describe","msgtype":"m.text"},"ts":1578631623000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but would 'blame' work?","msgtype":"m.text"},"ts":1578631648000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"sort of","msgtype":"m.text"},"ts":1578631666000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"basically it would look like","msgtype":"m.text"},"ts":1578631673000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you click blame on the rewrite","msgtype":"m.text"},"ts":1578631679000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and you see something on some line like \"xyz: blah blah blah <link to actual commit>\"","msgtype":"m.text"},"ts":1578631705000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"basically a fake placeholder commit","msgtype":"m.text"},"ts":1578631713000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that just targets those lines","msgtype":"m.text"},"ts":1578631722000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so that the blame is in the correct spot","msgtype":"m.text"},"ts":1578631729000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I think I'd need to see a few lines from the current blame (involving a few different commits) and then the corresponding lines from the new blame. (Not that I'm asking for it now, just a suggestion if you want to propose it.)","msgtype":"m.text"},"ts":1578631869000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah i would figure it all out first","msgtype":"m.text"},"ts":1578631982000,"senderName":"devsnek","senderId":"devsnek@irc"}
]