[
{"content":{"body":"seems like we lack test262 cases for using Promise#finally with thenable objects","msgtype":"m.text"},"ts":1565989433000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(https://trac.webkit.org/changeset/248793/webkit was just landed but we already pass all tests: https://test262.report/browse/built-ins/Promise/prototype/finally)","msgtype":"m.text"},"ts":1565989455000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling I'm going into a 10 days vacation, so I might take a little while until I'm into Test262","msgtype":"m.text"},"ts":1565990490000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"I'll be happy to add these tests if they are still necessary","msgtype":"m.text"},"ts":1565990501000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"no worries, I'll make an issue","msgtype":"m.text"},"ts":1565990529000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: https://github.com/tc39/test262/tree/master/test//built-ins/Promise/prototype/finally/this-value-non-promise.js","msgtype":"m.text"},"ts":1565990530000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rkirsling: that should have been failing if you brand-check for Promise","msgtype":"m.text"},"ts":1565990543000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"since \"IsPromise\" checks internal slots, which don't go through proxies","msgtype":"m.text"},"ts":1565990572000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I think we only missed one specific path","msgtype":"m.text"},"ts":1565990599000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"this was the test that was added WK-side: https://github.com/WebKit/webkit/blob/master/JSTests/stress/promise-finally-should-accept-non-promise-objects.js","msgtype":"m.text"},"ts":1565990608000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it'd be great to add that to test262, and also to https://github.com/es-shims/Promise.prototype.finally/blob/master/test/tests.js :-)","msgtype":"m.text"},"ts":1565990656000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but yeah ljharb if it looks like WK is doing something observably derpy wrt proxies feel free to file a bug, I really just noticed Yusuke's patch and wanted to make sure stuff got conveyed back here","msgtype":"m.text"},"ts":1565995447000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Iâ€™m not really sure how IsPromise works in wk","msgtype":"m.text"},"ts":1565995534000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"hmm https://github.com/WebKit/webkit/blob/master/Source/JavaScriptCore/builtins/PromiseOperations.js#L29-L35","msgtype":"m.text"},"ts":1565995675000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"that seems legit: https://tc39.es/ecma262/#sec-ispromise","msgtype":"m.text"},"ts":1565995853000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(but my proxy foo is weak)","msgtype":"m.text"},"ts":1565995884000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: that check should always return false on a proxy","msgtype":"m.text"},"ts":1565996945000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rkirsling: how does `@getByIdDirectPrivate` work?","msgtype":"m.text"},"ts":1565996961000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"seems to just be `.` for stuff that can't be accessed from userland, but the interesting thing is that we do pass basically everything non-realm-related under built-ins/Proxy","msgtype":"m.text"},"ts":1565997032000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"is this really so unique? ðŸ¤”","msgtype":"m.text"},"ts":1565997054000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(er, \"do pass every test262 test that's ...\" if that mid-sentence context-switch was confusing)","msgtype":"m.text"},"ts":1565997132000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"someone made this pr to node https://github.com/nodejs/node/pull/29101","msgtype":"m.text"},"ts":1565997934000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i think it looks useful enough to exist in the language","msgtype":"m.text"},"ts":1565997956000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: can you tldr it?","msgtype":"m.text"},"ts":1565999669000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"is it a new type, ArrayBufferView, that lets you make a DataView on an ArrayBuffer instead of on a TypedArray?","msgtype":"m.text"},"ts":1565999730000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"%TypedArray%.createView(something) for either arraybuffer or another typed array in which case it uses the backing array buffer and offsets and all that","msgtype":"m.text"},"ts":1565999737000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"typedarrays are views","msgtype":"m.text"},"ts":1565999756000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"perhaps a confusing naming scheme","msgtype":"m.text"},"ts":1565999765000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh right","msgtype":"m.text"},"ts":1565999882000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek: so `new DataView(buffer)` can't do this?","msgtype":"m.text"},"ts":1565999937000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1565999972000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"its not the same goal anyway","msgtype":"m.text"},"ts":1565999975000,"senderName":"devsnek","senderId":"devsnek@irc"}
]