[
{"content":{"body":"why don't we allow `export default const foo = ...`?","msgtype":"m.text"},"ts":1604690891000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"making a local name and the \"default\" export at the same time","msgtype":"m.text"},"ts":1604690919000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i can see string forms being pretty rare and not needing convenience but i feel like default is pretty common","msgtype":"m.text"},"ts":1604690954000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i don't believe `export default` is a live binding - so if you did `export default let foo = 3; foo = 4;`, it would still export 3","msgtype":"m.text"},"ts":1604691093000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and i also don't believe we ban let anywhere we allow const","msgtype":"m.text"},"ts":1604691112000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"export default is live but to a non-reference-able \"thing\"","msgtype":"m.text"},"ts":1604693800000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"import(`data:text/javascript,export default class X {}; X = 2; console.log(X)`)","msgtype":"m.text"},"ts":1604693881000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"we allow this in class/function","msgtype":"m.text"},"ts":1604693892000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but not const/let/var?","msgtype":"m.text"},"ts":1604693897000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i think it would be bad to allow multiple bound names to follow it, is that why? `export VariableStatement` allows `export var x, y;` but that wouldn't make sense for `export default var x, y`","msgtype":"m.text"},"ts":1604694085000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that also sounds bad","msgtype":"m.text"},"ts":1604694857000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i think `export default class X { }` is less of a problem because people are highly unlikely to even attempt to reassign X","msgtype":"m.text"},"ts":1604694876000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i mean, i'd be fine if it only allowed const in that position","msgtype":"m.text"},"ts":1604695242000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but reading code after my wife pointed out the pattern of `class X {}; export default X` is super common got me pondering","msgtype":"m.text"},"ts":1604695285000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that seems technically workable but unlikely to be widely palatable","msgtype":"m.text"},"ts":1604695286000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the issue appears to be since var/let/const don't work in those positions it just led to that pattern from short talks","msgtype":"m.text"},"ts":1604695311000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so i think it is a real thing, people are actively avoiding something due to lack of support of another thing","msgtype":"m.text"},"ts":1604695335000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"also, they didn't use `export {X as default}` which was interesting","msgtype":"m.text"},"ts":1604695356000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"no opinion on that bit","msgtype":"m.text"},"ts":1604695368000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"imo `as default` is a wart that exists for consistency","msgtype":"m.text"},"ts":1604695393000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"X as \"default\"","msgtype":"m.text"},"ts":1604695431000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"fixed it for ya","msgtype":"m.text"},"ts":1604695436000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1604695439000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i don't really come to judge usage, i'm just trying to make the coding less boilerplate / unintended effects","msgtype":"m.text"},"ts":1604695466000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so, adding `export default VariableStatement` seemed prudent to consider given people are avoiding other things in that position because it doesn't exist","msgtype":"m.text"},"ts":1604695496000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"tbh that trend does surprise me","msgtype":"m.text"},"ts":1604695595000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i wouldn't expect people to often try to export-default a variable while creating it","msgtype":"m.text"},"ts":1604695625000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(given a lot of folks put exports at the end of the file, like returns at the end of functions)","msgtype":"m.text"},"ts":1604695641000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"enough to cause a medium sized corp to avoid stuff","msgtype":"m.text"},"ts":1604695695000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i'm more curious as to why it would be bad to add since we have strange corollary only for FunctionDeclaration and ClassDeclaration","msgtype":"m.text"},"ts":1604695887000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck you would normally `export default 42` or whatever; creating two bindings at once is weird","msgtype":"m.text"},"ts":1604695938000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: yet we already do for `export default Class X {}`","msgtype":"m.text"},"ts":1604695958000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the fact that `export default function f(){}` also creates a local `f` is IMO a mistake","msgtype":"m.text"},"ts":1604695968000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"we ain't gonna fix it","msgtype":"m.text"},"ts":1604695977000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"no but we don't need to use it as precedent","msgtype":"m.text"},"ts":1604695987000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"lean into it to make things less confusing to people","msgtype":"m.text"},"ts":1604695994000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"what about it is a mistake i guess is the question","msgtype":"m.text"},"ts":1604696005000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it does too many things, basically","msgtype":"m.text"},"ts":1604696039000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: `export default` <- makes a default export, `class X {}` makes a class `X`?","msgtype":"m.text"},"ts":1604696123000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"at top level classes always make a local","msgtype":"m.text"},"ts":1604696130000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the question is whether it is at the top level","msgtype":"m.text"},"ts":1604696163000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"this feels to me more like `return class X{}`, which does not declare a local binding","msgtype":"m.text"},"ts":1604696178000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(it feels that way because you can `export default 0`, etc)","msgtype":"m.text"},"ts":1604696204000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but i can have `0;` as a whole program too","msgtype":"m.text"},"ts":1604696224000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1604696229000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"can't have `class {}` as a program though!","msgtype":"m.text"},"ts":1604696237000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but can both `return` and `export default` a `class {}`","msgtype":"m.text"},"ts":1604696245000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"fair, but class {} doesn't make a local","msgtype":"m.text"},"ts":1604696261000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"anyway, point is that you _wouldn't_ have a `0` as a whole program","msgtype":"m.text"},"ts":1604696266000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that would be a weird thing to doo","msgtype":"m.text"},"ts":1604696269000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"*do","msgtype":"m.text"},"ts":1604696271000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"apparently exporting a value is weird to an entire company","msgtype":"m.text"},"ts":1604696292000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"both `return` and `export default` feel like operations which take a value, basically","msgtype":"m.text"},"ts":1604696317000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i dont find this kind of judgement too beneficial personally as the mental model doesn't seem clear","msgtype":"m.text"},"ts":1604696319000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Bakkot: and you wouldn't consider a variable a value?","msgtype":"m.text"},"ts":1604696360000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"does `export` take an operand?","msgtype":"m.text"},"ts":1604696368000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"no default","msgtype":"m.text"},"ts":1604696371000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I would not consider a variable _declaration_ to be a value, no. it's a declaration.","msgtype":"m.text"},"ts":1604696383000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`export` takes a declaration","msgtype":"m.text"},"ts":1604696409000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`export default`, is `default` the declaration then?","msgtype":"m.text"},"ts":1604696428000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"there isn't really a declaration involved?","msgtype":"m.text"},"ts":1604696440000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"no more than there is in `return`","msgtype":"m.text"},"ts":1604696444000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"bradleymeck: to be fair, a medium-sized company usually takes its style choices from a very small number of passionate engineers","msgtype":"m.text"},"ts":1604696444000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: they are using a public lint rule and it isn't complaining","msgtype":"m.text"},"ts":1604696460000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i think the point is something is lacking due to the inconsistency","msgtype":"m.text"},"ts":1604696473000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: sure, lint rules are only built when people feel the need to force a style","msgtype":"m.text"},"ts":1604696481000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and the statement that the inconsistency is a mistake isn't useful without proving why","msgtype":"m.text"},"ts":1604696485000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1604696494000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"statements of it takes a value vs a declaration are interesting because `export default` takes both","msgtype":"m.text"},"ts":1604696514000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it shouldn't, is my point","msgtype":"m.text"},"ts":1604696529000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"^ i agree with that","msgtype":"m.text"},"ts":1604696534000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it's weird that it takes both","msgtype":"m.text"},"ts":1604696537000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Bakkot: regardless of what you want, it does","msgtype":"m.text"},"ts":1604696543000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"and it only takes *some* declarations","msgtype":"m.text"},"ts":1604696551000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"and that because of the way the live bindings works in consumers, it conceptually only takes a value. that function/class produce a binding is weird and surprising","msgtype":"m.text"},"ts":1604696558000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"which is what brought this up enough for my wife to rope me in","msgtype":"m.text"},"ts":1604696560000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the only 2 declarations it takes *appear* like they're expressions","msgtype":"m.text"},"ts":1604696567000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: that is not true to their conversation","msgtype":"m.text"},"ts":1604696577000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck the fact that it does is a weird quirk of the language which no one should ever have to think about, except when they have to figure out why they can't redeclare a name which good style would dictate they not redeclare anyway","msgtype":"m.text"},"ts":1604696594000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i know it's not actually the case, because it makes the bindings, but it would look identical if they were treated as expressions instead of declarations","msgtype":"m.text"},"ts":1604696603000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Bakkot: they did think about it on a call today?","msgtype":"m.text"},"ts":1604696607000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Bakkot: so they did think about it, and didn't think it was a quick but a missing feature?","msgtype":"m.text"},"ts":1604696620000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"hence me coming up","msgtype":"m.text"},"ts":1604696636000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"to be clear, that nonzero people are asking about this makes it worth discussing, but it doesn't invalidate a general sentiment that very few people will likely run into it","msgtype":"m.text"},"ts":1604696642000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck right, I'm not saying people _don't_ think about it","msgtype":"m.text"},"ts":1604696647000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but I think that's a failure of pedagogy","msgtype":"m.text"},"ts":1604696653000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: so they are incorrect in how they chose to see consistency?","msgtype":"m.text"},"ts":1604696668000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"just like how people think about how `[] == ''` sometimes","msgtype":"m.text"},"ts":1604696669000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"bradleymeck uhhhh I don't think that's a thing people can be correct about?","msgtype":"m.text"},"ts":1604696690000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: i think you are dismissing without consideration the fact that there is a potential to reduce overall inconsistency","msgtype":"m.text"},"ts":1604696699000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"reducing overall inconsistency wouldn't harm us","msgtype":"m.text"},"ts":1604696716000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I would not regard it as a reduction in inconsistency, is my point","msgtype":"m.text"},"ts":1604696717000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: then would it be an increase?","msgtype":"m.text"},"ts":1604696727000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if it is neither, why is it undesirable","msgtype":"m.text"},"ts":1604696737000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it would be an increase in inconstancy to my mental model, while being a decrease in theirs","msgtype":"m.text"},"ts":1604696756000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: does your mental model not seek to align with spec?","msgtype":"m.text"},"ts":1604696774000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"uhhhh not really?","msgtype":"m.text"},"ts":1604696790000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and if your mental model never uses declarations would it ever surface in code?","msgtype":"m.text"},"ts":1604696798000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"there are parts of the language I avoid using and hope to avoid ever reading code which uses","msgtype":"m.text"},"ts":1604696814000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and this allows a simpler mental model for every day life","msgtype":"m.text"},"ts":1604696840000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so you would seek to avoid ever moving towards advancing those parts of the language?","msgtype":"m.text"},"ts":1604696841000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if you don't use the feature i don't think this would affect everyday life","msgtype":"m.text"},"ts":1604696862000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"uh, yeah, pretty much; I am opposed, e.g., to adding any affordances to `with`, ever","msgtype":"m.text"},"ts":1604696864000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: that is avoiding affordances to support `with` not about ever doing something with `with`","msgtype":"m.text"},"ts":1604696903000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if other people use it, it affects everyday life; more time spent reading than writing code, as we always say","msgtype":"m.text"},"ts":1604696904000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: then this applies to *all* features","msgtype":"m.text"},"ts":1604696916000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if they do not fit your mental model, they should not advance?","msgtype":"m.text"},"ts":1604696924000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"um","msgtype":"m.text"},"ts":1604696924000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if something does not fit my mental model and I don't think that the mental model it suggests is superior to the mental model I have, and the only reason to add it is because it increases the consistency of someone else's mental model, then yes I am going to be opposed to adding it","msgtype":"m.text"},"ts":1604696975000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"not, like, dead against, if I am persuaded that my way of thinking is unusual","msgtype":"m.text"},"ts":1604696993000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"just that I would need to be convinced of it","msgtype":"m.text"},"ts":1604697003000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"or there would need to be some reason to add it other than consistency with some mental model","msgtype":"m.text"},"ts":1604697021000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it also makes you have to write less code `let X; export X` -> `export let X;` avoids potential refactoring of 2 locations, and means that `export default` operates on all hoistables","msgtype":"m.text"},"ts":1604697062000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"none of those are mental model","msgtype":"m.text"},"ts":1604697069000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"\"operates on all hoistables\" is","msgtype":"m.text"},"ts":1604697106000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it currently operates on 2 out of 5","msgtype":"m.text"},"ts":1604697116000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that is not a mental model thing","msgtype":"m.text"},"ts":1604697123000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"again, I think that fact is a weird quirk of the language programmers should not need to have in their mental model","msgtype":"m.text"},"ts":1604697154000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it is absolutely a mental model thing","msgtype":"m.text"},"ts":1604697162000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it is not, it came up today in a call from a random person about why it works this way","msgtype":"m.text"},"ts":1604697181000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"why the implementation *acts* a way","msgtype":"m.text"},"ts":1604697188000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"saying it operates on 0 out of 5 hoistables isn't true and is thought about","msgtype":"m.text"},"ts":1604697217000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"wanting it to be true won't make it true","msgtype":"m.text"},"ts":1604697224000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"observable behavior isn't mental modelling","msgtype":"m.text"},"ts":1604697232000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I also want it to be true that variable names are purely programmer-level and not observable by any code, but that's false too; nevertheless I would encourage programmers to think of it as if they were","msgtype":"m.text"},"ts":1604697273000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"do you consider this to expose variable names outside of the programmer-level?","msgtype":"m.text"},"ts":1604697296000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"no it's just an analogy","msgtype":"m.text"},"ts":1604697306000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i don't see the direct argument against this feature then, except that you object to a different feature","msgtype":"m.text"},"ts":1604697334000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"let me draw it out then","msgtype":"m.text"},"ts":1604697344000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i mean, i've said in the past, i can use mental models to claim just about anything if I have time, and that can block anything so my bar is very high for a claim about mental models","msgtype":"m.text"},"ts":1604697385000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"and it seems to be the inverse here","msgtype":"m.text"},"ts":1604697391000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"there are a number things which are false by a strict reading of the specification, for which I think programmers should, most of the time, act and reason about their programs as if those things were true. \"variable names are purely programmer-level\" is such a thing. so is, _to me_, \"`export default` takes values and also several declaration forms, two of which exist nowhere else in the language\"","msgtype":"m.text"},"ts":1604697478000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I don't think we can ever get away from talking about mental models; they're one of the most important things in language design","msgtype":"m.text"},"ts":1604697497000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I'm not saying I am blocking or whatever, just explaining why I personally dislike this proposal","msgtype":"m.text"},"ts":1604697519000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i think they are abused as a front to avoid discussing reality and it causes programmers to fall into surprises","msgtype":"m.text"},"ts":1604697526000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so i feel incredibly strongly that a mental model claim needs harsh scrutiny because i can pull it out just about anything if i wanted to imagine JS was a nicer language than it is","msgtype":"m.text"},"ts":1604697562000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but we need to scrutinize the actual language and not just what we desire it to be","msgtype":"m.text"},"ts":1604697574000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so, apologies on the interrogation but to me, it is extremely important","msgtype":"m.text"},"ts":1604697602000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"mm. I basically just disagree I guess.","msgtype":"m.text"},"ts":1604697613000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I don't think that's likely to be reconcilable.","msgtype":"m.text"},"ts":1604697621000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the central theme is that we should never re-introduce a form that takes both declarations and values i think","msgtype":"m.text"},"ts":1604697624000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"at least from what I am understanding?","msgtype":"m.text"},"ts":1604697641000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I think it would be good to avoid such a thing in the future, yeah, though I don't know if I'd call it a central theme","msgtype":"m.text"},"ts":1604697670000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"for me i have no qualms about never introducing a new form like that, but i do think addressing existing forms seems prudent","msgtype":"m.text"},"ts":1604697681000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if there is a claim we shouldn't fix edge cases because we don't want similar features in the future, that seems a hard discussion","msgtype":"m.text"},"ts":1604697717000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i would also like to avoid such a thing in the future","msgtype":"m.text"},"ts":1604697724000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the disagreement is about whether this is \"fixing\" an edge case or making it worse","msgtype":"m.text"},"ts":1604697737000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I think it would make it worse","msgtype":"m.text"},"ts":1604697742000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ljharb: i have no objections to putting an invariant down and marking this as an existing exception","msgtype":"m.text"},"ts":1604697745000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Bakkot: the edge case exists regardless and ignoring it won't make it go away","msgtype":"m.text"},"ts":1604697765000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it is in use so like you said it affects your everyday life already","msgtype":"m.text"},"ts":1604697780000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"to me, `export` forms just decorate and not operate so i guess that is different","msgtype":"m.text"},"ts":1604697831000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"to me they operate on the module","msgtype":"m.text"},"ts":1604697882000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"iow they're not a trait of the thing being exported, but of the module itself","msgtype":"m.text"},"ts":1604697893000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(this specific point came up during the \"@dec export\" vs \"export @dec\" discussions)","msgtype":"m.text"},"ts":1604697918000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i guess that would still be compatible with my view","msgtype":"m.text"},"ts":1604697923000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bindings and modules are intertwined","msgtype":"m.text"},"ts":1604697950000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"}
]