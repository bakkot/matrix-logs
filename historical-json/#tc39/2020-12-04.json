[
{"content":{"body":"can anyone justify the behavior here?","msgtype":"m.text"},"ts":1607053138000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"https://github.com/tc39/test262/blob/main/test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-custom.js","msgtype":"m.text"},"ts":1607053138000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"this is the \"normal\" case of this completely absurd path","msgtype":"m.text"},"ts":1607053161000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(the docblock there is out of date but you can see https://tc39.es/ecma262/#sec-initializetypedarrayfromtypedarray)","msgtype":"m.text"},"ts":1607053194000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"my earlier \"construct typed array from existing typed array with custom ArrayBuffer\" is evidently a simplified description","msgtype":"m.text"},"ts":1607053249000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"what we actually do is create the typed array we meant to create with a normal ArrayBuffer...but ensure that that ArrayBuffer's prototype is set to inputTypedArray.constructor[@@species].prototype","msgtype":"m.text"},"ts":1607053301000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I just made a patch to support this in JSC but I feel like I want to take a shower","msgtype":"m.text"},"ts":1607053328000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"is there a reason for this path to exist?","msgtype":"m.text"},"ts":1607053381000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"could we remove it if said patch is not landed?","msgtype":"m.text"},"ts":1607053399000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling that test does not say `inputTypedArray.constructor[@@species].prototype`","msgtype":"m.text"},"ts":1607053898000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it says `inputTypedArray.buffer.constructor[@@species].prototype`","msgtype":"m.text"},"ts":1607053910000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"aaaargh typos","msgtype":"m.text"},"ts":1607053919000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1607053922000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"which is marginally more reasonable","msgtype":"m.text"},"ts":1607053922000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"my position on this is that we should get rid of symbol.species in general but _especially_ for ArrayBuffers, which are intended to be low-level","msgtype":"m.text"},"ts":1607053981000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"cc shu ^","msgtype":"m.text"},"ts":1607053985000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that would be amazing","msgtype":"m.text"},"ts":1607054227000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"and a natural next step in this long crusade lol","msgtype":"m.text"},"ts":1607054241000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Bakkot: definitely agreed","msgtype":"m.text"},"ts":1607055108000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"we should add an api to convert between string and Uint16Array","msgtype":"m.text"},"ts":1607055322000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: shu: do we know about any web compat obstacles?","msgtype":"m.text"},"ts":1607056024000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I'm not aware of any, and would be... pretty surprised to learn there were any (for ArrayBuffer in particular)","msgtype":"m.text"},"ts":1607057688000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1607057901000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"maybe we can hash out a plan","msgtype":"m.text"},"ts":1607058052000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: Bakkot: i'm landing a flag in V8 that lets you toggle builtin subclassing","msgtype":"m.text"},"ts":1607098116000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"waiting to see if we can get an intern to do it as an intern project before trying to staff it otherwise","msgtype":"m.text"},"ts":1607098140000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"someone would need to modify all the built-ins to toggle behavior depending on the flag, then run it to see what breaks","msgtype":"m.text"},"ts":1607098156000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"if the answer is \"everything breaks\", then i'm thinking we dial it back bit by bit to test the things we want to remove surgically, like ABs","msgtype":"m.text"},"ts":1607098185000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"\"Google Sending Wave Of Interns to Break The Web\"","msgtype":"m.text"},"ts":1607099635000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"are you a staff writer for The Register?","msgtype":"m.text"},"ts":1607100740000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: no but it seems i have potential ðŸ˜„","msgtype":"m.text"},"ts":1607102588000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: oh duh I totally spaced on that proposal","msgtype":"m.text"},"ts":1607115276000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: no worries, i don't think it's very urgent","msgtype":"m.text"},"ts":1607115353000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"another few months won't change the compat risk","msgtype":"m.text"},"ts":1607115360000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1607115533000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: do you think we should leave the relevant tests failing as web compat insurance?","msgtype":"m.text"},"ts":1607116412000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I'm leaning toward yes myself","msgtype":"m.text"},"ts":1607116443000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(or I guess a different phrasing is \"does it make your case any easier to argue for?\")","msgtype":"m.text"},"ts":1607119071000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: sorry, which tets?","msgtype":"m.text"},"ts":1607121367000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"tests*","msgtype":"m.text"},"ts":1607121368000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the ones for \"constructing a typed array from an existing typed array with a custom ArrayBuffer\"","msgtype":"m.text"},"ts":1607121411000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i must've missed something, why would they start failing now?","msgtype":"m.text"},"ts":1607122588000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"or have they always failed?","msgtype":"m.text"},"ts":1607122591000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: they always have, I just wrote a patch to correct them last night","msgtype":"m.text"},"ts":1607122668000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ah ha","msgtype":"m.text"},"ts":1607122686000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yes, let's leave them in","msgtype":"m.text"},"ts":1607122697000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I guess Yusuke thought by the look of the proposal that it might take quite a while and it would be easy to reverse the implementation part","msgtype":"m.text"},"ts":1607122852000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but hmm","msgtype":"m.text"},"ts":1607122855000,"senderName":"rkirsling","senderId":"rkirsling@irc"}
]