[
{"content":{"body":"maybe a mildly dumb question, but if I have an ECMAScript spec (specifically the 402 spec) and separately a proposal to modify it, I can build that proposal for HTML rendering with |npm install; npm run build;| -- but how do I merge that proposal backward into the original spec?  manually?  (this seems very unlikely)","msgtype":"m.text"},"ts":1573872775000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"my understanding is that it actually is manual 😓","msgtype":"m.text"},"ts":1573873197000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"oh that is such garbage :-)","msgtype":"m.text"},"ts":1573874074000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"\"someone should make better tooling for this\"","msgtype":"m.text"},"ts":1573874087000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: i've been formulating a rewrite of ecmarkup for a while","msgtype":"m.text"},"ts":1573874904000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"multiple files is the big thing","msgtype":"m.text"},"ts":1573874941000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hopefully then people would just put the changes in an actual fork of the spec","msgtype":"m.text"},"ts":1573874959000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: you think the spec being single-file prevents people from putting the changes in a fork?","msgtype":"m.text"},"ts":1573875334000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: well two separate problems","msgtype":"m.text"},"ts":1573875638000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"#1 is that keeping track of your changes in a 40k line file is difficult","msgtype":"m.text"},"ts":1573875662000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"#2 is that they want to group changes together","msgtype":"m.text"},"ts":1573875672000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"good static understanding of the spec source and using separate files can provide both of those","msgtype":"m.text"},"ts":1573875700000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"re #1, it seems to me that keeping track of your changes in a bunch of files totalling 40k lines isn't going to be any easier","msgtype":"m.text"},"ts":1573875802000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(might be worse)","msgtype":"m.text"},"ts":1573875836000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"people do alright with 100k line codebases","msgtype":"m.text"},"ts":1573875877000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not in one file","msgtype":"m.text"},"ts":1573875884000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek, I tried removing like 4K lines, but the maintainers waited 10 months merge it. :\\","msgtype":"m.text"},"ts":1573875906000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"I mean if you remove lines there will just be more later though","msgtype":"m.text"},"ts":1573875927000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Honestly you could just use custom elements to shrink most of it more, but they're against that.","msgtype":"m.text"},"ts":1573875934000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"not being able to git blame from the GH UI is horrible","msgtype":"m.text"},"ts":1573875938000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i'd like to just make a custom format","msgtype":"m.text"},"ts":1573875953000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"That would be nice.","msgtype":"m.text"},"ts":1573875991000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"Sirisian: editors were backlogged for a while but it should be better now / soon","msgtype":"m.text"},"ts":1573876153000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"custom elements could shrink it some, but I suspect not much.","msgtype":"m.text"},"ts":1573876280000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Most of the spec is headers, paragraphs, and algorithms, and I don't think custom elements will make those smaller.","msgtype":"m.text"},"ts":1573876336000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Sirisian: yeah, what bakkot said. I had an editorial patch stalled for a year too","msgtype":"m.text"},"ts":1573876377000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"our editorial process is kind of weird","msgtype":"m.text"},"ts":1573876393000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"a custom format is an interesting idea, but it'd presumably be a big jump. (massive merge conflicts for every open PR)","msgtype":"m.text"},"ts":1573876603000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"bakkot, Curious. You post a bit in the class fields proposal. If the proposal didn't care about supporting private variables that could be the same name as public ones would that change anything?","msgtype":"m.text"},"ts":1573876615000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"devsnek: otoh, if you provided a script that could 'upgrade' any version of the spec to the new format, that would quell some of the revolt","msgtype":"m.text"},"ts":1573876776000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1573876800000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"honestly i'd be most concerned about commit history","msgtype":"m.text"},"ts":1573876827000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1573876875000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Clearly just use the conversion script to convert every version retroactively in the GIT history. That's possible right?","msgtype":"m.text"},"ts":1573877016000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1573877101000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I mean yeah the blame would temporarily be blotted out by the \"touch everything\" commit but","msgtype":"m.text"},"ts":1573877141000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"any solution that would make it possible to have git blame work via GH UI would require that","msgtype":"m.text"},"ts":1573877174000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I don't understand: having git blame work via GH UI is within 'our' power?","msgtype":"m.text"},"ts":1573877313000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"oh it doesn't work because the file is too big so it refuses to display the whole thing","msgtype":"m.text"},"ts":1573877348000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ah, i see.","msgtype":"m.text"},"ts":1573877359000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"what's the biggest it will display?","msgtype":"m.text"},"ts":1573877381000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"hmm good question","msgtype":"m.text"},"ts":1573877392000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it also just randomly breaks","msgtype":"m.text"},"ts":1573877419000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like when you try to expand a section","msgtype":"m.text"},"ts":1573877430000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it will just be missing lines","msgtype":"m.text"},"ts":1573877434000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i just always run git blame locally.","msgtype":"m.text"},"ts":1573877503000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Apparently it's possible to split a file and have git blame 'see through' the split: https://devblogs.microsoft.com/oldnewthing/20190916-00/?p=102892","msgtype":"m.text"},"ts":1573877807000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"devsnek: but I imagine a custom format would need to have some pretty compelling features to outweigh the bother.","msgtype":"m.text"},"ts":1573877966000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: lots of static analysis, no html entities, etc","msgtype":"m.text"},"ts":1573878053000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"basically i'd want to just reify everything we do manually in html","msgtype":"m.text"},"ts":1573878085000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"\"no html entities\" = easier to edit, you mean?","msgtype":"m.text"},"ts":1573878097000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1573878103000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but i just especially hate &gt; and stuff","msgtype":"m.text"},"ts":1573878110000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"explain more about \"reify...\" ?","msgtype":"m.text"},"ts":1573878171000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"stuff like emu-xref","msgtype":"m.text"},"ts":1573878184000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"or giving tables ids","msgtype":"m.text"},"ts":1573878193000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so what might it look like to 'reify' emu-xref?","msgtype":"m.text"},"ts":1573878298000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i dunno","msgtype":"m.text"},"ts":1573878312000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i haven't really started on the design","msgtype":"m.text"},"ts":1573878319000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i just have a lot of goals","msgtype":"m.text"},"ts":1573878321000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what sorts of static analysis?","msgtype":"m.text"},"ts":1573878450000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"stuff like type checking","msgtype":"m.text"},"ts":1573878537000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so, not just expressing the current content in a new format, but adding more info as well.","msgtype":"m.text"},"ts":1573878634000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"My PR #545 isn't getting much enthusiasm, and it doesn't discard any HTML-isms. A proposal that banished pointy brackets as well might sit on the shelf for a while too.","msgtype":"m.text"},"ts":1573879051000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(possibly indefinitely)","msgtype":"m.text"},"ts":1573879220000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: interestingly, getting more into the html version short-term would make it easier to export to a new format","msgtype":"m.text"},"ts":1573879591000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1573879624000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"🤷🏻","msgtype":"m.text"},"ts":1573879642000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if igalia takes me on for a code experience project maybe i can ask to work on rewriting ecma262","msgtype":"m.text"},"ts":1573879671000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(i can't discern what that emoji is)","msgtype":"m.text"},"ts":1573879674000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"shrugging","msgtype":"m.text"},"ts":1573879695000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that'd be sweet","msgtype":"m.text"},"ts":1573879874000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"https://www.igalia.com/coding-experience/ ?","msgtype":"m.text"},"ts":1573880375000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ya","msgtype":"m.text"},"ts":1573880395000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1573880415000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i've heard it takes them a long time to respond","msgtype":"m.text"},"ts":1573880440000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"did you enter for the November round?","msgtype":"m.text"},"ts":1573880512000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i just filled out the form","msgtype":"m.text"},"ts":1573880548000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"a few weeks ago","msgtype":"m.text"},"ts":1573880563000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1573880570000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"🤞","msgtype":"m.text"},"ts":1573880574000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i filled it out for the compiler team though","msgtype":"m.text"},"ts":1573880588000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I mean you're quite a known quantity so I feel like your chances are pretty darn good","msgtype":"m.text"},"ts":1573880601000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: fwiw i've reported to github in their maintainer feedback group specifically about ecma262 and how it should be reviewable on the web, so hopefully they'll fix it at some point","msgtype":"m.text"},"ts":1573881765000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: i think its kind of a lost cause","msgtype":"m.text"},"ts":1573882493000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"eventually you have too many elements and it gets laggy","msgtype":"m.text"},"ts":1573882515000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: for everything and find-in-page, perhaps, but it could still be made somewhat functional","msgtype":"m.text"},"ts":1573882965000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"one nice thing would be if they put a command to clone the pr locally in the \"this is too big\" ui","msgtype":"m.text"},"ts":1573883013000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: anything would be great","msgtype":"m.text"},"ts":1573884332000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"alternatively if github supported following renames, we could split up the file","msgtype":"m.text"},"ts":1573884372000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"what i want to do is build up a blame of each section of the spec","msgtype":"m.text"},"ts":1573884460000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like blame of all changes to Promise.any","msgtype":"m.text"},"ts":1573884469000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"then we could modify the commit history of the new files to contain those commits as history","msgtype":"m.text"},"ts":1573884491000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"with the final commit being the rewrite","msgtype":"m.text"},"ts":1573884496000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Sirisian: probably yes, but also if it didn't have that it probably wouldn't be worth having","msgtype":"m.text"},"ts":1573891404000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"I gather discussing this might be tiring by now. One of my friends pointed out it's at stage 3 which piqued my interest. Would it allow for just doing private x; syntax with this.x being valid, still using the WeakMap concept? class A { private x; ... f(a) { this.x = a.x; }); const a1 = new A(); const a2 = new A(); a1.f(a2); My thinking is this.x would first check private(this).x and if it's undefined then fallback to public properties. Could probably be","msgtype":"m.text"},"ts":1573893102000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"optimized since \"this.x\" must(?) refer to the private property. let foo = this; foo.x; would complicate that though maybe.","msgtype":"m.text"},"ts":1573893102000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"Was scrolling through all the slides on the proposal the other day trying to convince myself the proposal is the best/only way forward for JS.","msgtype":"m.text"},"ts":1573893205000,"senderName":"Sirisian","senderId":"Sirisian@irc"}
]