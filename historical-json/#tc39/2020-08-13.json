[
{"content":{"body":"I wish JS had labelled return statement","msgtype":"m.text"},"ts":1597333211000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"bendtherules: it does","msgtype":"m.text"},"ts":1597333260000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Like reusable return logic (return if something is not correct, but as reusable code)","msgtype":"m.text"},"ts":1597333278000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"you're saying you wish js had goto","msgtype":"m.text"},"ts":1597333289000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I mean if x is not correct, return from caller itself","msgtype":"m.text"},"ts":1597333355000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"non-local return?","msgtype":"m.text"},"ts":1597333375000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Say, how engine262 implements returnIfAbrupt","msgtype":"m.text"},"ts":1597333394000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"non-local return","msgtype":"m.text"},"ts":1597333411000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"But without using macros","msgtype":"m.text"},"ts":1597333411000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"Yes, i guess","msgtype":"m.text"},"ts":1597333418000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"yeah in some ways its cool","msgtype":"m.text"},"ts":1597333420000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but its kind of a mess imo","msgtype":"m.text"},"ts":1597333426000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Hmm true. If say, return was first-class","msgtype":"m.text"},"ts":1597333465000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"I could return a return completion ðŸ˜‚","msgtype":"m.text"},"ts":1597333480000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"in engine262 they just model exceptions, in real code I'd use throw","msgtype":"m.text"},"ts":1597333528000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Yes, was thinking about throw. Maybe if throw-catch was easier, as a expression","msgtype":"m.text"},"ts":1597333580000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"using exceptions for control flow is generally regarded as bad practice","msgtype":"m.text"},"ts":1597340315000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"you can always do `ret: { if (!x) break ret; foo(); return all_was_good_; } return all_was_not_good;`","msgtype":"m.text"},"ts":1597340941000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but, uh, don't","msgtype":"m.text"},"ts":1597340945000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(except in a code generator or whatever)","msgtype":"m.text"},"ts":1597340994000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"wrote similar code to that... today","msgtype":"m.emote"},"ts":1597340995000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i have a codemod for inlining functions somewhere","msgtype":"m.text"},"ts":1597341030000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: ready for review btw https://github.com/tc39/ecmarkup/pull/238","msgtype":"m.text"},"ts":1597349968000,"senderName":"devsnek","senderId":"devsnek@irc"}
]