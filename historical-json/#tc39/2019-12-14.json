[
{"content":{"body":"ljharb: My hesitancy about opt 1 was probably unfounded. I messed around with mixed-types-throws a bit, and superficially it seems like it is always easy enough to debug.","msgtype":"m.text"},"ts":1576290124000,"senderName":"metanomial","senderId":"metanomial@irc"},
{"content":{"body":"metanomial: that's good to hear, thanks for testing it out","msgtype":"m.text"},"ts":1576294629000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"That being said, I still personally favor Opt 2, just for clarity. But it's not hard to get used to Opt 1","msgtype":"m.text"},"ts":1576294717000,"senderName":"metanomial","senderId":"metanomial@irc"},
{"content":{"body":"`Math.symbol.<method>`? https://gist.github.com/metanomial/76189a1d82602f6624837641e438d6be?ts=4","msgtype":"m.text"},"ts":1576295598000,"senderName":"metanomial","senderId":"metanomial@irc"},
{"content":{"body":"a new protocol seems pretty overkill to me","msgtype":"m.text"},"ts":1576296125000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"let alone a dozen","msgtype":"m.text"},"ts":1576296134000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it's too early to focus on the solution tho, that's a stage 1 thing. this isn't any stage yet :-)","msgtype":"m.text"},"ts":1576296175000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"is there any difference between  `obj?.a?.b` and `(obj?.a)?.b`","msgtype":"m.text"},"ts":1576307331000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't think there is","msgtype":"m.text"},"ts":1576307632000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: not in that case, but `obj?.a.b` and `(obj?.a).b` are different","msgtype":"m.text"},"ts":1576308636000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1576308644000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i really need to stop using estree in engine262 ðŸ˜ž","msgtype":"m.text"},"ts":1576308719000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I often see multiple `Object.definePropert(y|ies)` in groups, and it just makes for ugly code. Would a definition operator shorthand be useful?","msgtype":"m.text"},"ts":1576347367000,"senderName":"metanomial","senderId":"metanomial@irc"},
{"content":{"body":"`a = \"foo\"; // [[Set]]`","msgtype":"m.text"},"ts":1576347441000,"senderName":"metanomial","senderId":"metanomial@irc"},
{"content":{"body":"`a := { value: \"foo\" }; // [[Define]]`","msgtype":"m.text"},"ts":1576347441000,"senderName":"metanomial","senderId":"metanomial@irc"},
{"content":{"body":"convenient for some folks (self included), sure. worth the confusion for everybody else ... seems unlikely?","msgtype":"m.text"},"ts":1576348895000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"It would make for much cleaner code inside of classes if you could define fields outside of the constructor.","msgtype":"m.text"},"ts":1576349126000,"senderName":"metanomial","senderId":"metanomial@irc"},
{"content":{"body":"Is that not addressed by the instance fields proposal?","msgtype":"m.text"},"ts":1576349459000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"(https://github.com/tc39/proposal-class-fields)","msgtype":"m.text"},"ts":1576349477000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"(InitializeInstanceFields -> DefineField -> CreateDataPropertyOrThrow -> CreateDataProperty -> [[DefineOwnProperty]])","msgtype":"m.text"},"ts":1576349636000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"No room for setting configurability, etc there, so maybe that doesnâ€™t help for your case.","msgtype":"m.text"},"ts":1576349700000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"Class fields already use [[Define]] semantics. `:=` would just allow additional properties beyond `value` when defining fields","msgtype":"m.text"},"ts":1576350437000,"senderName":"metanomial","senderId":"metanomial@irc"},
{"content":{"body":"https://gist.github.com/metanomial/e0c56861af0c3cfaf0268c6aa30bdb82?ts=4","msgtype":"m.text"},"ts":1576350795000,"senderName":"metanomial","senderId":"metanomial@irc"},
{"content":{"body":"adding that syntax was suggested as part of class fields, to make = be Set and := be Define.","msgtype":"m.text"},"ts":1576356402000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i doubt it would be possible now.","msgtype":"m.text"},"ts":1576356407000,"senderName":"ljharb","senderId":"ljharb@irc"}
]