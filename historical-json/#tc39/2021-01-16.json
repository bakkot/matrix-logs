[
{"content":{"body":"ljharb I am hyped for revisiting RegExp.escape","msgtype":"m.text"},"ts":1610755911000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"woot","msgtype":"m.text"},"ts":1610755965000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Bakkot: did you forget to deal with \"The `do`-`while` Statement\" and \"The `while` Statement\", or did you decide that it's okay to leave them empty?","msgtype":"m.text"},"ts":1610762643000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck I'm intending to refactor IterationStatement to define DoWhileStatement and WhileStatement, just decided that belonged in a different PR","msgtype":"m.text"},"ts":1610764959000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1610764971000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"how many follow-ups have you got?","msgtype":"m.text"},"ts":1610764987000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"that is one of the cleanup things I gotta do","msgtype":"m.text"},"ts":1610764994000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1610765001000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that one, getting https://github.com/tc39/ecmarkup/pull/276 upstreamed, and linting for newlines before <emu-clause> are the immediate ones","msgtype":"m.text"},"ts":1610765063000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and then I would like to write descriptive headers for each SDO, as we have for most AOs, but that's less immediate","msgtype":"m.text"},"ts":1610765126000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"also have a note to get https://github.com/tc39/ecma262/pull/2275 merged (which needs a rebase now, I suppose)","msgtype":"m.text"},"ts":1610765161000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and I wanted to go through the ordering issues you sent me and fix any which were definitely wrong","msgtype":"m.text"},"ts":1610765212000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I'll probably get to 2275 tonight","msgtype":"m.text"},"ts":1610765220000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I've got 3-4 PRs that have merge conflicts.","msgtype":"m.text"},"ts":1610765252000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(depending on whether you count 1867, which doesn't seem to be going anywhere)","msgtype":"m.text"},"ts":1610765294000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"the annex B upstreaming gets more contentious every time it's discussed in committee, it seems like","msgtype":"m.text"},"ts":1610765332000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"we're doing it more piecemeal now","msgtype":"m.text"},"ts":1610765353000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I'll make a note to bring this piece of it back at the meeting after this one (it being slightly too late to bring it to this one)","msgtype":"m.text"},"ts":1610765380000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"tx","msgtype":"m.text"},"ts":1610765399000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i feel like the progress we made with __proto__ and the conventions around *how* to move stuff from annex b","msgtype":"m.text"},"ts":1610765429000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"actually made it less contentious","msgtype":"m.text"},"ts":1610765435000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah, that's fair","msgtype":"m.text"},"ts":1610765439000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"slightly more complex, but less contentious in that the complexity satisfies everyone","msgtype":"m.text"},"ts":1610765453000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(... that is, the complexity allows it to satisfy everyone, not that people are happy about the complexity per se)","msgtype":"m.text"},"ts":1610765484000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"What does it mean when github says \"This branch has conflicts that must be resolved\", but when I rebase to master locally, I don't get any conflicts?","msgtype":"m.text"},"ts":1610767709000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I've never been able to figure that out, personally","msgtype":"m.text"},"ts":1610767866000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Would \"descriptive headers for each SDO\" include standard-form preambles?","msgtype":"m.text"},"ts":1610767987000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"something like it, yeah","msgtype":"m.text"},"ts":1610768026000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the \"performs the following steps when called\" part would need to be rephrased, at the least","msgtype":"m.text"},"ts":1610768047000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1610768052000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(or dropped)","msgtype":"m.text"},"ts":1610768070000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1610768081000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"in today's js is there anything good for this pattern of code: https://gc.gy/78479702.png","msgtype":"m.text"},"ts":1610774706000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"matching along two values with the combined logic","msgtype":"m.text"},"ts":1610774724000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rn i'm thinking an array of [x, y, fn] that is iterated over and compares the values","msgtype":"m.text"},"ts":1610774755000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`if (isRef(a)) { ... } else if (isRef(b)) { ... } else if (isUnkown(a)) {... } ...`","msgtype":"m.text"},"ts":1610774806000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah :(","msgtype":"m.text"},"ts":1610774819000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not that I'd call that \"good\", but it's what I'd write; it's clear, at least","msgtype":"m.text"},"ts":1610774827000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I guess `if (isRef(a) || isRef(b)) { ... }`, etc, given that the first few arms come in matching pairs","msgtype":"m.text"},"ts":1610774899000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i pray that one day js will have matching","msgtype":"m.text"},"ts":1610774923000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"does anyone know why HasCallInTailPosition allows tail calls in `for in` and `for await of` but not `for of`? that seems weird","msgtype":"m.text"},"ts":1610822709000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I can see why `for of` wouldn't count - you have to close the iterator, which happens after the tail call - but it seems like `for await of` would be in exactly the same situation","msgtype":"m.text"},"ts":1610822760000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that seems like a bug","msgtype":"m.text"},"ts":1610822763000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I guess PTC doesn't apply to async functions anyway","msgtype":"m.text"},"ts":1610823233000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(filed https://github.com/tc39/ecma262/issues/2279)","msgtype":"m.text"},"ts":1610823325000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"is \"enumeration statement\" a reasonable name for the collection \"for in\", \"for of\", \"for await of\" ?","msgtype":"m.text"},"ts":1610823653000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I guess I could just have \"ForInStatement\", \"ForOfStatement\", and \"ForAwaitOfStatement\"","msgtype":"m.text"},"ts":1610823796000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"why are IterationStatement and PrimaryExpression the only productions with an explicit Semantics subsection","msgtype":"m.text"},"ts":1610824392000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Well, they both have subsections for subsyntax, so maybe AWB didn't think it would be good to have sdo subsections at the same level.","msgtype":"m.text"},"ts":1610826135000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"On the other hand, Unary Operators is a counter-example.","msgtype":"m.text"},"ts":1610826151000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"so maybe just \"it seemed like a good idea at the time.\"","msgtype":"m.text"},"ts":1610826216000,"senderName":"jmdyck","senderId":"jmdyck@irc"}
]