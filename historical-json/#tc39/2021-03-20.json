[
{"content":{"body":"jmdyck: ping","msgtype":"m.text"},"ts":1616204427000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"pong","msgtype":"m.text"},"ts":1616204432000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"re: 545, I was thinking (and briefly discussed with the other editors) what the actual format should be","msgtype":"m.text"},"ts":1616204449000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I have a few goals here:","msgtype":"m.text"},"ts":1616204456000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"1) structured","msgtype":"m.text"},"ts":1616204462000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"2) minimal repetition","msgtype":"m.text"},"ts":1616204465000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"3) nice for human editors of the specification","msgtype":"m.text"},"ts":1616204472000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"with that in mind, I'm inclined to suggest that the name and kind of the AO, and the parameter list and their optionality, be structured in the way they currently are: namely, by an `<h1>` which is written in a particular format","msgtype":"m.text"},"ts":1616204524000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so the DL would just contain the description, the parameter types, and the return type","msgtype":"m.text"},"ts":1616204545000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"along the lines of `<emu-clause id=\"sec-example-ao\" type=\"ao\"><h1>ExampleAO ( _foo_ [ , _bar_ ] )</h1><dl><dt>parameters</dt><dd>foo: a Number</dd><dd>bar: an Object</dd> <dt>returns</dt>[etc]</dl><emu-alg>...`","msgtype":"m.text"},"ts":1616204663000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"thoughts?","msgtype":"m.text"},"ts":1616204664000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and ecmarkup would rewrite that to the thing which is currently output","msgtype":"m.text"},"ts":1616204685000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"<h1> format doesn't currently convey `kind` (completely)","msgtype":"m.text"},"ts":1616204718000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"What's not covered?","msgtype":"m.text"},"ts":1616204732000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"e.g., you can't distiguish a 'regular' ao from an record-method","msgtype":"m.text"},"ts":1616204760000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Isn't the `[[` sufficient to distinguish?","msgtype":"m.text"},"ts":1616204782000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"record-method like \"CreateMutableBinding ( _N_, _D_ )\"","msgtype":"m.text"},"ts":1616204804000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ahh","msgtype":"m.text"},"ts":1616204823000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"could just give those a different type","msgtype":"m.text"},"ts":1616204826000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`<emu-clause type=\"cm\"`, say","msgtype":"m.text"},"ts":1616204837000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah, hm.","msgtype":"m.text"},"ts":1616204850000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"different point: having param names in <h1> and also <dl> goes against \"minimal repetition\".","msgtype":"m.text"},"ts":1616204992000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah, shu was talking about maybe trying to invent some syntax to put the types in the h1, but we decided that was overkill","msgtype":"m.text"},"ts":1616205019000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I think the benefit in readability is worth the cost in repetition","msgtype":"m.text"},"ts":1616205049000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"source-readability, you mean.","msgtype":"m.text"},"ts":1616205073000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1616205076000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I agree that trying to put the 'types' in the h1 probably wouldn't work well, as in general it isn't a 'type', it's basically an assertion, and can be long/awkward enough that it wouldn't fit well in the <h1>. (Even if ecmarkup stripped it out of the <h1> on rendering, it would still be awkward in source)","msgtype":"m.text"},"ts":1616205251000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah. for the ones which are just like \"a Number\" it's fine but even \"an ECMAScript language value\" is pretty unwieldy","msgtype":"m.text"},"ts":1616205367000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yup.","msgtype":"m.text"},"ts":1616205388000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"although i'm thinking we should introduce a shorter term for the latter.","msgtype":"m.text"},"ts":1616205423000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah, possibly, but probably separately from this PR","msgtype":"m.text"},"ts":1616205450000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"in any case there's other ugly types, like \"a List of names of ECMAScript Language Types\"","msgtype":"m.text"},"ts":1616205475000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"or \"an Object that has [[Foo]] and [[Bar]] internal slots\"","msgtype":"m.text"},"ts":1616205517000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"or \"either ~foo~, ~bar~, or ~baz~\"","msgtype":"m.text"},"ts":1616205570000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1616205578000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"anyway if this seems reasonable I'll put together and publish a branch of ecmarkup which consumes headers in this format and we can see how it works in the PR","msgtype":"m.text"},"ts":1616205598000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"could you get the auto-render to use that branch?","msgtype":"m.text"},"ts":1616205636000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1616205641000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"will need to push a commit to the branch which specifies the new version, is all","msgtype":"m.text"},"ts":1616205670000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(or I could just tell you the version and you could do that yourself if you'd prefer)","msgtype":"m.text"},"ts":1616205696000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh, btw, don't worry about trying to split it into multiple commits, I think; since the plan is to generate HTML which matches what's currently there, modulo some minor differences, my intention is to review the diff of the ecmarkup output rather than the input","msgtype":"m.text"},"ts":1616205775000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh, you mean push a commit to the 545 branch","msgtype":"m.text"},"ts":1616205779000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1616205782000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"re reviewing the diff of rendered: yeah, that had occurred to me. was going to suggest it if at some point.","msgtype":"m.text"},"ts":1616205838000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"one snag i can think of: there are a few ops that don't have their own emu-clause or <h1>.","msgtype":"m.text"},"ts":1616205949000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"seems like maybe something we ought to change anyway","msgtype":"m.text"},"ts":1616205998000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"one set is thisBooleanValue, thisSymbolValue, etc","msgtype":"m.text"},"ts":1616206084000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"those deserve their own clauses, definitely","msgtype":"m.text"},"ts":1616206197000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"But if you just make a sub-clause in the obvious place, you're saying that it's a property of the Foo Prototype Object, which it isn't.","msgtype":"m.text"},"ts":1616206263000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"natural place for those seems like the top level of their type's clause","msgtype":"m.text"},"ts":1616206340000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"e.g. adjacent to Properties of the Boolean Constructor","msgtype":"m.text"},"ts":1616206356000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(probably as the last subclause under Boolean Objects)","msgtype":"m.text"},"ts":1616206371000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"you mean new 20.3.5?","msgtype":"m.text"},"ts":1616206506000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1616206541000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"or I guess 20.3.1, by analogy to 25.2.1","msgtype":"m.text"},"ts":1616206607000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"new 20.3.1 \"Abstract Operations for Boolean Objects\"?","msgtype":"m.text"},"ts":1616206699000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"given that there's only one such AO I'm inclined to leave it at the top level","msgtype":"m.text"},"ts":1616206834000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"personally, I think I'd prefer at the end 20.3.5","msgtype":"m.text"},"ts":1616206850000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I'm fine either way; the actual placement of stuff doesn't end up mattering that much, given that generally people navigate by clicking through references rather than scrolling around","msgtype":"m.text"},"ts":1616206892000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1616206930000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"re only one so leave it at \"top level\": but then if someone adds another, there's more diff","msgtype":"m.text"},"ts":1616207010000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"unless they add it as another top-level.","msgtype":"m.text"},"ts":1616207124000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah but I'm not really anticipating any new AOs for booleans","msgtype":"m.text"},"ts":1616207177000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that said, I'm fine with that too","msgtype":"m.text"},"ts":1616207182000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"though, if we do have a wrapper clause, it definitely belongs as .1 rather than .5","msgtype":"m.text"},"ts":1616207198000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"following 25.2.1, 25.3.1, etc","msgtype":"m.text"},"ts":1616207264000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Other cases: https://tc39.es/ecma262/#sec-makearggetter \"An ArgGetter function is ...\"","msgtype":"m.text"},"ts":1616207419000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ditto Setter","msgtype":"m.text"},"ts":1616207430000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"that's not an AO at all, though","msgtype":"m.text"},"ts":1616207449000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"The abstract operation TypedArraySortCompare","msgtype":"m.text"},"ts":1616207465000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(and will be refactored as of https://github.com/tc39/ecma262/pull/2109, or shortly thereafter)","msgtype":"m.text"},"ts":1616207492000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"TypedArraySortCompare deserves its own clause; SortCompare already has its own","msgtype":"m.text"},"ts":1616207519000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and i have a PR to give it one, but I'm listing it anyhow","msgtype":"m.text"},"ts":1616207546000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"There's the algorithm in https://tc39.es/ecma262/#sec-array.prototype-@@unscopables","msgtype":"m.text"},"ts":1616207560000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"hah, so you do","msgtype":"m.text"},"ts":1616207563000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that algorithm is not an AO, so no problem there","msgtype":"m.text"},"ts":1616207607000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"well, i wasn't limiting myself to AOs","msgtype":"m.text"},"ts":1616207625000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I'm looking at all cases where an <emu-alg> *isn't* what the <h1> advertises.","msgtype":"m.text"},"ts":1616207688000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"let me rephrase: that algorithm is weird enough that I don't think we should be trying to stretch the header format to accomadate it","msgtype":"m.text"},"ts":1616207708000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(*accommodate)","msgtype":"m.text"},"ts":1616207728000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but that does raise the question of what you want <dl>s for.","msgtype":"m.text"},"ts":1616207800000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"well, I'd thought the goal was just abstract operations, at least to start","msgtype":"m.text"},"ts":1616207891000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that's what the title of the PR implies, at least","msgtype":"m.text"},"ts":1616207898000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"though i see michael also asked for them for built-in functions, sigh","msgtype":"m.text"},"ts":1616208007000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"on that question, it is much less obvious to me that there's value in having structured headers for built-in functions, since those all always take ES values","msgtype":"m.text"},"ts":1616208073000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(plus we haven't done the exercise of making them consistent yet)","msgtype":"m.text"},"ts":1616208095000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but I will raise it with the other editors, again...","msgtype":"m.text"},"ts":1616208108000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I do prefer keeping the scope relatively small, to start","msgtype":"m.text"},"ts":1616208134000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so that there's some hope of landing it before another five years pass","msgtype":"m.text"},"ts":1616208150000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"test","msgtype":"m.text"},"ts":1616242805000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I can see you","msgtype":"m.text"},"ts":1616247838000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"Bakkot: i just noticed we're allowing control flow in do expressions now :O","msgtype":"m.text"},"ts":1616261271000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"tentatively, yes","msgtype":"m.text"},"ts":1616261659000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"very exciting","msgtype":"m.text"},"ts":1616261698000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"curious what made you change your mind","msgtype":"m.text"},"ts":1616261705000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"waldemar said he'd block the proposal as being not worth the syntax cost, was the proximate cause","msgtype":"m.text"},"ts":1616262074000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and then I surveyed delegates and slight majority of those who responded were in favor of allowing","msgtype":"m.text"},"ts":1616262099000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1616262149000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"going to try to run a brief user study to make sure it's not too confusing, also","msgtype":"m.text"},"ts":1616262328000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"👍🏻","msgtype":"m.text"},"ts":1616262656000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: re including parameter 'type' info in the heading: it occurs to me that it would be fairly readable-in-source if we put each parameter + 'type' on a separate line.  (remembering that ecmarkup can still generate the <h1> as it likes)","msgtype":"m.text"},"ts":1616284527000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"strawman example:","msgtype":"m.text"},"ts":1616284537000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"<h1>","msgtype":"m.text"},"ts":1616284545000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"  CreateDataProperty(","msgtype":"m.text"},"ts":1616284545000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"    O : an Object","msgtype":"m.text"},"ts":1616284545000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"    P : a property key","msgtype":"m.text"},"ts":1616284545000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"    V : an ECMAScript language value","msgtype":"m.text"},"ts":1616284545000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"  )","msgtype":"m.text"},"ts":1616284545000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"</h1>","msgtype":"m.text"},"ts":1616284545000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yesterday I was thinking of trying to stuff it all onto one line, which would be hard to read, but I think something like the above could work.","msgtype":"m.text"},"ts":1616284610000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"hmm, yeah, interesting thought","msgtype":"m.text"},"ts":1616284647000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and then that would eliminate the repetition of param names between <h1> and <dl>.","msgtype":"m.text"},"ts":1616284721000,"senderName":"jmdyck","senderId":"jmdyck@irc"}
]