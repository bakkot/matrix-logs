[
{"content":{"body":"should we have a way of specifying sync and async generators directly in the spec","msgtype":"m.text"},"ts":1565544009000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like how we can specify regular builtin functions","msgtype":"m.text"},"ts":1565544021000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that way is pretty gross Rn, and needs revamping","msgtype":"m.text"},"ts":1565544277000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: wdym","msgtype":"m.text"},"ts":1565544342000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it takes a lot of boilerplate, and internal slots, to do what is very concise to express as a closure in js","msgtype":"m.text"},"ts":1565544384000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i mean what is \"that way\"","msgtype":"m.text"},"ts":1565544450000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"defining algorithm steps, then using CreateBuiltinFunction and assigning internal slots","msgtype":"m.text"},"ts":1565544505000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i think this looks pretty nice though https://gc.gy/33249528.png","msgtype":"m.text"},"ts":1565544563000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: so instead of assigning internal slots you'd rather reference aliases from an outer operation-scope?","msgtype":"m.text"},"ts":1565554829000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: i don’t have a “rather” necessarily, I’m just not a fan of the current approach","msgtype":"m.text"},"ts":1565555560000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1565556810000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"there's an open issue about it i think, from a few years back","msgtype":"m.text"},"ts":1565557221000,"senderName":"ljharb","senderId":"ljharb@irc"}
]