[
{"content":{"body":"aw man, V8 decided to call ?? just \"the nullish operator\", huh","msgtype":"m.text"},"ts":1565139230000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"this is unfortunate","msgtype":"m.text"},"ts":1565139234000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ooo","msgtype":"m.text"},"ts":1565139289000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what a weird implementation","msgtype":"m.text"},"ts":1565139373000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"wow devsnek your design doc is so thorough o_o","msgtype":"m.text"},"ts":1565154834000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"what is `Star` anyway? get value?","msgtype":"m.text"},"ts":1565154845000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"store accumulator in register","msgtype":"m.text"},"ts":1565154865000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and Lda is load accumulator","msgtype":"m.text"},"ts":1565154882000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"right I figured it must be store in register right after typing that question","msgtype":"m.text"},"ts":1565154893000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i'm glad someone likes my doc","msgtype":"m.text"},"ts":1565154908000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"couldn't remember what A was in either case though üòÖ","msgtype":"m.text"},"ts":1565154909000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i thought it was rather skimpy","msgtype":"m.text"},"ts":1565154917000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if it were me I would've just linked the README and called it a day lol","msgtype":"m.text"},"ts":1565154974000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"v8 requires design docs for everything","msgtype":"m.text"},"ts":1565155010000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(I mean in addition to typing out a general description like I did in the WK changelog)","msgtype":"m.text"},"ts":1565155013000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"often helpful, sometimes superfluous, like in this case","msgtype":"m.text"},"ts":1565155027000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"guess I didn't realize","msgtype":"m.text"},"ts":1565155028000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"one interesting thing is how the bytecode generator reorders stores and loads","msgtype":"m.text"},"ts":1565155088000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jumps after stores","msgtype":"m.text"},"ts":1565155146000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i assume thats for cache locality or something","msgtype":"m.text"},"ts":1565155153000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hm hm","msgtype":"m.text"},"ts":1565155203000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but yeah in your case all the more you'd want that new jump op","msgtype":"m.text"},"ts":1565155227000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"is this a thing https://gc.gy/32860336.png","msgtype":"m.text"},"ts":1565155340000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"or did someone just make an account named anonymous nyan cat","msgtype":"m.text"},"ts":1565155349000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lol whaaa","msgtype":"m.text"},"ts":1565155354000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"oh no its actually a thing","msgtype":"m.text"},"ts":1565155376000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I think it's me though? which means it's a thing","msgtype":"m.text"},"ts":1565155381000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I just happened to open it in incognito for no particular reason","msgtype":"m.text"},"ts":1565155394000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"apparently there's also an anonymous kraken, pumpkin, and ifrit","msgtype":"m.text"},"ts":1565155436000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`An ifrit is an enormous winged creature of fire,`","msgtype":"m.text"},"ts":1565155452000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and more importantly a perennial FF summon","msgtype":"m.text"},"ts":1565155477000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I'm using entirely too many super override classes for private fields","msgtype":"m.text"},"ts":1565187325000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"mmm trying to figure out if this is a v8 bug or proper spec... if I have a super override to init private fields, it seems like calling super(o); twice will initialize the private fields twice and thus throw errors, so the fix is to try/catch before calling super and return if o already has them installed?","msgtype":"m.text"},"ts":1565190020000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"calling super twice sounds dangerous","msgtype":"m.text"},"ts":1565190148000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: its a hell of a drug","msgtype":"m.text"},"ts":1565190228000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"also only real way to do private fields in a sharable way for now :-/","msgtype":"m.text"},"ts":1565190246000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"moving off weakmaps and seeing speed gains :choo choo:","msgtype":"m.text"},"ts":1565190265000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"latest chrome seems to differ from node on this","msgtype":"m.text"},"ts":1565190303000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://codepen.io/bradleymeck/pen/GVQaNv?editors=0012 works, but is... ugly?","msgtype":"m.text"},"ts":1565190471000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that try/catch makes me so irrationally angry","msgtype":"m.text"},"ts":1565190615000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the hasInstance one I mean","msgtype":"m.text"},"ts":1565190631000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1565190654000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i'd love `has`","msgtype":"m.text"},"ts":1565190663000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://www.npmjs.com/package/@snek/private","msgtype":"m.text"},"ts":1565190699000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this is what I've been using","msgtype":"m.text"},"ts":1565190705000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"no thanks ;p","msgtype":"m.text"},"ts":1565190708000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"this works pretty well even if it looks gross it means I don't have a C++ dep","msgtype":"m.text"},"ts":1565190732000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"which is something i'd like to keep for distribution issues","msgtype":"m.text"},"ts":1565190751000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yeah probably not ideal for libraries","msgtype":"m.text"},"ts":1565190773000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"leobalter: very exciting to see TLA tests üëçüèª","msgtype":"m.text"},"ts":1565195254000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"nice :) there are more to come today","msgtype":"m.text"},"ts":1565195270000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"leobalter: I think we also need tests for `09.1_1` and `09e1_1` being errors","msgtype":"m.text"},"ts":1565196591000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling would you open a PR for this, please?","msgtype":"m.text"},"ts":1565196669000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"sure!","msgtype":"m.text"},"ts":1565196682000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"devsnek: guess that answers my feature flag question üòé","msgtype":"m.text"},"ts":1565198447000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hmm?","msgtype":"m.text"},"ts":1565198460000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh that evidently it is flipped on in Safari TP","msgtype":"m.text"},"ts":1565198685000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"nullish coalescing?","msgtype":"m.text"},"ts":1565198749000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yup!","msgtype":"m.text"},"ts":1565198764000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i really wish we had a way to consume a stream of JSON values","msgtype":"m.text"},"ts":1565200238000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i think whatwg had an async json or json streaming thing","msgtype":"m.text"},"ts":1565200296000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i know .json() theoretically allows off thread allocation to happen","msgtype":"m.text"},"ts":1565200518000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i wonder if for unknown values, parse off thread and copy is better than parse on main thread","msgtype":"m.text"},"ts":1565200636000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"using serdes","msgtype":"m.text"},"ts":1565200652000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"serdes would need to do the allocations into the vm heap still, probably won't beat existing stuff speed wise. also does serdes preserve key ordering??","msgtype":"m.text"},"ts":1565200737000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if main thread is janking or has a queue for jobs its probably safe to start off thread since it would require a new tick to actually make the value available to user code","msgtype":"m.text"},"ts":1565200809000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"serdes is how engines do structured cloning","msgtype":"m.text"},"ts":1565200817000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"postMessage and such","msgtype":"m.text"},"ts":1565200831000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"afaik they all just copy memory from one heap to another","msgtype":"m.text"},"ts":1565200849000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but thats full serialization, that removes the refs and hydrates them on other end for things like Array.prototype and Object.prototype?","msgtype":"m.text"},"ts":1565200889000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i don't see serdes in v8's default serializer at least","msgtype":"m.text"},"ts":1565200940000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i mean the intermediate bytes are basically just a memory copy","msgtype":"m.text"},"ts":1565200954000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in v8, they can also get away with not modifying prototypes and stuff because they all share root prototype maps","msgtype":"m.text"},"ts":1565201003000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"would be nice","msgtype":"m.text"},"ts":1565201153000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i think they had a blog post about sharing intrinsics at some point","msgtype":"m.text"},"ts":1565201226000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"thats the mem refs for the code of intrinsics, but the object refs on heap are still unique and allocated","msgtype":"m.text"},"ts":1565201484000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i just mean like, in every heap, the object for array's prototype has the same offset","msgtype":"m.text"},"ts":1565201534000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"otherwise Object.freeze in one thread would affect other threads","msgtype":"m.text"},"ts":1565201547000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"not that they share objects","msgtype":"m.text"},"ts":1565201555000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah, yes","msgtype":"m.text"},"ts":1565201559000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"devsnek WDYT? https://github.com/tc39/test262/pull/2274/commits/31d9a7ae2b28971876597fbc4f2adbab6f556fa6","msgtype":"m.text"},"ts":1565204495000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"devsnek nevermind, some stuff to fix in there :P","msgtype":"m.text"},"ts":1565204625000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"leobalter: if you want, somewhere in engine262's commit history there should be an implementation of TLA","msgtype":"m.text"},"ts":1565204811000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"might be on the experimental branch","msgtype":"m.text"},"ts":1565204818000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I removed it back in December so the memory is fuzzy","msgtype":"m.text"},"ts":1565204843000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek this one is correct... https://github.com/tc39/test262/pull/2274/commits/db51745742bf91eb09df8bd7bf7954388b2d4568","msgtype":"m.text"},"ts":1565205072000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"devsnek hopefully it's back soon :)","msgtype":"m.text"},"ts":1565205086000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"MylesBorins devsnek rkirsling this is ready for reviews if anyone is interested. https://github.com/tc39/test262/pull/2274","msgtype":"m.text"},"ts":1565210424000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"the deeply-nested ones made me laugh üòÇ","msgtype":"m.text"},"ts":1565210503000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"mfw 200 files","msgtype":"m.text"},"ts":1565211179000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://gc.gy/32916200.png","msgtype":"m.text"},"ts":1565211202000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well, there is a lot of tests for syntax and we end up with files matching each production","msgtype":"m.text"},"ts":1565212829000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"the one on the pic: lots of Blocks and an Object literal at the end :P","msgtype":"m.text"},"ts":1565212868000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"https://github.com/tc39/test262/pull/2274/files#diff-c11ccae7ea60da1e6dc9af0edb170779","msgtype":"m.text"},"ts":1565213323000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"devsnek: grats sir","msgtype":"m.text"},"ts":1565215649000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"üëçüèª","msgtype":"m.text"},"ts":1565215662000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I'm a little sad you beat me to the punch :p","msgtype":"m.text"},"ts":1565215670000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"well, i don't know if mine passes test262 yet","msgtype":"m.text"},"ts":1565215687000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i have to do that in a separate change","msgtype":"m.text"},"ts":1565215697000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"‚àÄ test ‚àà ‚àÖ ... lol","msgtype":"m.text"},"ts":1565215770000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"all tests that are a member of the empty set?","msgtype":"m.text"},"ts":1565215819000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah I mean it'll pass test262 so long as there's nothing to check :p","msgtype":"m.text"},"ts":1565215897000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"oh haha","msgtype":"m.text"},"ts":1565215905000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh wait a few were merged weren't they","msgtype":"m.text"},"ts":1565215910000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah two days ago","msgtype":"m.text"},"ts":1565215916000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but apparently if i want to update test262, i have to also triage *every failure* that happens as a result of it","msgtype":"m.text"},"ts":1565215957000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you sure do! :p","msgtype":"m.text"},"ts":1565215978000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so i figured i'd leave that to someone with a bit more comfort in v8","msgtype":"m.text"},"ts":1565215984000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah I lucked out with my early ref error abolishment patch","msgtype":"m.text"},"ts":1565215999000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"in that if I updated juuuust to the sha hash I needed then I didn't incur any new irrelevant failures","msgtype":"m.text"},"ts":1565216023000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"chicoxyzzy: looking into how a feature flag can be flipped","msgtype":"m.text"},"ts":1565218757000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I too was misled by the announcement :sad_panda:","msgtype":"m.text"},"ts":1565218771000,"senderName":"rkirsling","senderId":"rkirsling@irc"}
]