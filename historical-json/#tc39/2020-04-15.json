[
{"content":{"body":"what is one supposed to do when the spec says \"If R contains any GroupName\" or \"ith capture of R\"","msgtype":"m.text"},"ts":1586912073000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"implicitly reparse the [[OriginalSource]] of R?","msgtype":"m.text"},"ts":1586912115000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the spec doesn't really tell you how you should implement things, just what their observable behavior should be","msgtype":"m.text"},"ts":1586912251000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"reparsing would work; in practice I am pretty sure everyone just stores things on the internal representation of the regex","msgtype":"m.text"},"ts":1586912288000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i mean that it's not really defined what \"r contains any groupname means\"","msgtype":"m.text"},"ts":1586912430000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"move the last quote over one word :(","msgtype":"m.text"},"ts":1586912447000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that's just the static semantics for Contains, no?","msgtype":"m.text"},"ts":1586912616000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: the problem here is that R is a RegExp instance, not a parse node","msgtype":"m.text"},"ts":1586912635000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1586912642000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but the original source is kept around in the spec machinery i imagine","msgtype":"m.text"},"ts":1586912770000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"through enough unwrappings of [[OriginalSource]]","msgtype":"m.text"},"ts":1586912778000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: that's a source text though, not a parse node","msgtype":"m.text"},"ts":1586915650000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: my guess is, that was written without thinking about what it meant in terms of the spec's model.","msgtype":"m.text"},"ts":1586965691000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"RegExp instance maybe needs a [[PatternContainsAGroupName]] slot","msgtype":"m.text"},"ts":1586965909000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"wow, does eshost do some sort of weird script-wrapping?","msgtype":"m.text"},"ts":1586984867000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"`print('x:', 'y');` collapses for just JSC, but `'x', 'y';` collapses for everyone","msgtype":"m.text"},"ts":1586984896000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(of course both of those are totally fine without eshost)","msgtype":"m.text"},"ts":1586985036000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: it tries to parse errors using regex","msgtype":"m.text"},"ts":1586985794000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the regex for jsc and quickjs are apparently lax enough to just match `x: y`","msgtype":"m.text"},"ts":1586985818000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://gc.gy/54690676.png","msgtype":"m.text"},"ts":1586985825000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"QuickJS is one thing but it seems like it's trying to have JSC resolve `y`?","msgtype":"m.text"},"ts":1586985922000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"wdym","msgtype":"m.text"},"ts":1586985940000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"dunno why else it would say `y: undefined`","msgtype":"m.text"},"ts":1586985957000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"the group its trying to access is undefined","msgtype":"m.text"},"ts":1586985969000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"on the regex","msgtype":"m.text"},"ts":1586985970000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh hm","msgtype":"m.text"},"ts":1586985976000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"are you talking about a regex inside JSC or something for JSC that eshost has?","msgtype":"m.text"},"ts":1586986001000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"eshost has it","msgtype":"m.text"},"ts":1586986009000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't really know why it does","msgtype":"m.text"},"ts":1586986014000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"maybe a long time ago the shells exited 0 even if they failed","msgtype":"m.text"},"ts":1586986030000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this reminds me again that i was going to try to modernize eshost","msgtype":"m.text"},"ts":1586986063000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this is causing at least one bogus test262 result :(","msgtype":"m.text"},"ts":1586986133000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I mean we're failing that test anyway but it prevents us from even trying","msgtype":"m.text"},"ts":1586986147000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"https://github.com/bterlson/eshost/blob/master/lib/agents/jsc.js","msgtype":"m.text"},"ts":1586986258000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`x: y\\n` matches this regex","msgtype":"m.text"},"ts":1586986263000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1586986532000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"that is horrible","msgtype":"m.text"},"ts":1586986535000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so yeah `print('x: ', 'y')` is even okay","msgtype":"m.text"},"ts":1586986548000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I don't understand what needs to be done there","msgtype":"m.text"},"ts":1586986567000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i don't really know why any error parsing is needed","msgtype":"m.text"},"ts":1586986691000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i would just make stderr red and call it a day","msgtype":"m.text"},"ts":1586986706000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I think JSC did previously exit with 0 on error","msgtype":"m.text"},"ts":1586986839000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"all the engines have it","msgtype":"m.text"},"ts":1586986996000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"maybe its so it turns red for test262 printing out Test262Errors","msgtype":"m.text"},"ts":1586987026000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://github.com/bterlson/eshost/issues/106","msgtype":"m.text"},"ts":1586987417000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: what happens if you just remove it and run test262","msgtype":"m.text"},"ts":1586989391000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like does anything thats supposed to be detected as failure accidentally succeed","msgtype":"m.text"},"ts":1586989411000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"could try in a bit","msgtype":"m.text"},"ts":1586989455000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"request for feedback on a possible editorial change: https://github.com/tc39/ecma262/issues/1950","msgtype":"m.text"},"ts":1586990209000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i've spent so much time over the past week ctrl+f'ing around the document while trying to implement various operations for engine262","msgtype":"m.text"},"ts":1586990333000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this would be so nice","msgtype":"m.text"},"ts":1586990340000,"senderName":"devsnek","senderId":"devsnek@irc"}
]