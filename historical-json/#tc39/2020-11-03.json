[
{"content":{"body":"phew https://github.com/tc39/ecma262/pull/2221","msgtype":"m.text"},"ts":1604362923000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"damn rkirsling","msgtype":"m.text"},"ts":1604364379000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"Nice work","msgtype":"m.text"},"ts":1604364381000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"thanks :D","msgtype":"m.text"},"ts":1604364650000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: thanks so much for cleaning up buffers and views!","msgtype":"m.text"},"ts":1604409776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rkirsling: beautiful work, and you have also uncovered more ripple effects :)","msgtype":"m.text"},"ts":1604426449000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: my pleasure!","msgtype":"m.text"},"ts":1604433335000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: oh geez, and it's the ones that I'm just doing for sake of completion, huh","msgtype":"m.text"},"ts":1604433368000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: i guess maximal consistency would be for indexOf and friends to treat as if it were an array of [[ArrayLength]] full of undefineds","msgtype":"m.text"},"ts":1604434625000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it feels weirder than the \"continue iteration\" case for the iteration built-ins, and i'm not sure why since it's the same mechanic","msgtype":"m.text"},"ts":1604434648000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"just looking through the interesting cases now but what's interesting is that like","msgtype":"m.text"},"ts":1604434762000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"right off the bat, `includes` was basically as-is, in that it didn't have any HasProperty checks to eliminate","msgtype":"m.text"},"ts":1604434791000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I mean this is clearly important to address since everyone's doing it differently","msgtype":"m.text"},"ts":1604434919000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"SM is pretty consistent","msgtype":"m.text"},"ts":1604434951000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(except for `join`, which i think SM should fix)","msgtype":"m.text"},"ts":1604434969000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah, SM is","msgtype":"m.text"},"ts":1604434993000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"thanks to anba, I imagine? haha","msgtype":"m.text"},"ts":1604435003000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"what's your take on what indexOf and includes ought to do?","msgtype":"m.text"},"ts":1604435093000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so it's not that I necessarily *like* the behavior","msgtype":"m.text"},"ts":1604435217000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but given that I was only aiming to clarify and not actually modify, SM is doing the correct thing","msgtype":"m.text"},"ts":1604435255000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"and like","msgtype":"m.text"},"ts":1604435366000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"having arg `undefined` match get-after-detach `undefined` isn't unthinkable","msgtype":"m.text"},"ts":1604435411000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so it gets a little weirder since the current underspecified behavior talks about aligning with Arrays","msgtype":"m.text"},"ts":1604435443000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh no, wait, i think i'm mistaken","msgtype":"m.text"},"ts":1604435507000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so, *because* of the HasProperty check in Array#indexOf, this returns -1:","msgtype":"m.text"},"ts":1604435575000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"let a = [1,2,3,4];","msgtype":"m.text"},"ts":1604435588000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"print(a.indexOf(undefined, { valueOf() { a.length = 0; return 0; } }));","msgtype":"m.text"},"ts":1604435588000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ahhh that is an interesting example","msgtype":"m.text"},"ts":1604435641000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so since the current prose says, behave like Arrays, mutadis mutandis","msgtype":"m.text"},"ts":1604435651000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I'd only thought of holes but `length = 0` is very similar to detachment","msgtype":"m.text"},"ts":1604435664000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"right so","msgtype":"m.text"},"ts":1604435675000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it doesn't help with `includes` or `join` but","msgtype":"m.text"},"ts":1604435706000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah includes actually returns `true` for the a.length = 0 analogue for Arrays too","msgtype":"m.text"},"ts":1604435725000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(and engines do agree)","msgtype":"m.text"},"ts":1604435741000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1604435747000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"we *could* leave the HasProperty for indexOf","msgtype":"m.text"},"ts":1604435748000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"that's an interesting middle path yes","msgtype":"m.text"},"ts":1604435764000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I only removed it because I believed it to have no impact on observable behavior","msgtype":"m.text"},"ts":1604435772000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it's really the callback-taking methods that I'm worried about so all of these are like bonus content ðŸ˜‚","msgtype":"m.text"},"ts":1604435791000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"haha yeah","msgtype":"m.text"},"ts":1604435819000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I believe that assumption is true for `reverse` though?","msgtype":"m.text"},"ts":1604435837000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"because Set will early out","msgtype":"m.text"},"ts":1604435871000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i think so, yes","msgtype":"m.text"},"ts":1604435875000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"we should quickly discuss this in committee","msgtype":"m.text"},"ts":1604435925000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1604435960000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I'm really happy you thought of the `array.length = 0` example","msgtype":"m.text"},"ts":1604435980000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I think we should align with that, and I'll reinstate HasProperty for indexOf/lastIndexOf","msgtype":"m.text"},"ts":1604436000000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"thanks, that's one axis to align on","msgtype":"m.text"},"ts":1604436005000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"another one is double down on the \"well, the length is cached and there aren't HasProperty checks\"","msgtype":"m.text"},"ts":1604436022000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"given the existing spec prose i lean towards the first being the intention","msgtype":"m.text"},"ts":1604436034000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah. they're both fair game but the first feels smoother to argue for","msgtype":"m.text"},"ts":1604436149000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"either one works, i'm optimistic whatever we choose will be web compatible","msgtype":"m.text"},"ts":1604436243000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1604436321000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"https://github.com/tc39/ecma262/pull/2210 is the other one that needs to be added to the agenda, right?","msgtype":"m.text"},"ts":1604436936000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"^ shu Bakkot","msgtype":"m.text"},"ts":1604437818000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1604437854000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"how do we typically indicate \"on behalf of\"","msgtype":"m.text"},"ts":1604438142000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"also yes","msgtype":"m.text"},"ts":1604438399000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"rkirsling: that phrase works?","msgtype":"m.text"},"ts":1604438411000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i've just said \"for\"","msgtype":"m.text"},"ts":1604438419000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ah true","msgtype":"m.text"},"ts":1604438423000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: you okay with presenting 2221?","msgtype":"m.text"},"ts":1604438486000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"if you want to confuse people you can say \"original author in absentia\"","msgtype":"m.text"},"ts":1604438500000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"hahaha","msgtype":"m.text"},"ts":1604438525000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: sure, you don't want to?","msgtype":"m.text"},"ts":1604438525000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I do but I don't think I'll be present","msgtype":"m.text"},"ts":1604438536000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i would _like_ to be in absentia truth be told","msgtype":"m.text"},"ts":1604438549000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1604438552000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but yeah sure put my name down","msgtype":"m.text"},"ts":1604438561000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I just put a comma for now","msgtype":"m.text"},"ts":1604438578000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"https://github.com/tc39/agendas/blob/master/2020/11.md#agenda-items","msgtype":"m.text"},"ts":1604438580000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"in case I were to end up attending just enough to present for myself","msgtype":"m.text"},"ts":1604438596000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1604438628000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh yeah I forgot about how DST would affect this meeting","msgtype":"m.text"},"ts":1604441322000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so it starts at midnight PST?","msgtype":"m.text"},"ts":1604441332000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah, I think so","msgtype":"m.text"},"ts":1604443120000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"https://everytimezone.com/?t=5fb1c100,1e0","msgtype":"m.text"},"ts":1604443132000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"1am i think","msgtype":"m.text"},"ts":1604443269000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"since daylight savings time just ended","msgtype":"m.text"},"ts":1604443274000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"also that website is ðŸ¤©","msgtype":"m.text"},"ts":1604443304000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"... midnight, since DST just ended, right?","msgtype":"m.text"},"ts":1604443371000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"west coast is now on Pacific Standard Time, which is UTC-8; meeting starts at 10AM in UTC+2; 10 - (2 - -8) = 0 i.e. midnight","msgtype":"m.text"},"ts":1604443409000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"http://www.timebie.com/std/centraleuropeansummer.php?q=10","msgtype":"m.text"},"ts":1604443437000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"oh hmmm","msgtype":"m.text"},"ts":1604443460000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"it's no longer CEST tho, so i dunno","msgtype":"m.text"},"ts":1604443467000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1604443509000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah, agenda says CEST, but budapest is not on CEST","msgtype":"m.text"},"ts":1604443521000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"timezones are confusing","msgtype":"m.text"},"ts":1604443523000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"oh it is 1am","msgtype":"m.text"},"ts":1604443528000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it's either 12am or 1am","msgtype":"m.text"},"ts":1604443532000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"I didn't realize the S was for Summer and not for Standard","msgtype":"m.text"},"ts":1604443538000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"that's very confusing","msgtype":"m.text"},"ts":1604443549000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it says UTC +2, which is unambiguously 10 hours ahead of west coast, currently","msgtype":"m.text"},"ts":1604443564000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"however, it's also an hour ahead of budapest, currently","msgtype":"m.text"},"ts":1604443573000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that one hour would be so helpful","msgtype":"m.text"},"ts":1604443598000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1604443601000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I mean I don't think this is resolved","msgtype":"m.text"},"ts":1604443615000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it's not like we are actually in budapest","msgtype":"m.text"},"ts":1604443622000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"we gotta get the chairs or host to make an unambiguous ruling","msgtype":"m.text"},"ts":1604443638000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(partially joking) use the unix timestamp for meeting start times from now on","msgtype":"m.text"},"ts":1604443693000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"we should*","msgtype":"m.text"},"ts":1604443705000,"senderName":"drousso","senderId":"drousso@irc"},
{"content":{"body":"cc akirose robpalme - the agenda is confusing, when does the meeting start?","msgtype":"m.text"},"ts":1604443712000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i wonder if i can train a gpt model to ask questions in my stead","msgtype":"m.text"},"ts":1604443928000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1604443941000,"senderName":"rkirsling","senderId":"rkirsling@irc"}
]