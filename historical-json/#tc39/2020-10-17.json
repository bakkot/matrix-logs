[
{"content":{"body":"shu https://github.com/tc39/test262/pull/2869","msgtype":"m.text"},"ts":1602894566000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"Also, nice additions!","msgtype":"m.text"},"ts":1602894609000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"I will fix the $DONOTEVALUATE() calls ;)","msgtype":"m.text"},"ts":1602894630000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"rwaldron- Shu rkirsling I can take a look on Monday. Should it be a full review on the existing detach buffer tests?","msgtype":"m.text"},"ts":1602950344000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"leobalter: Rick's been working on the list of adjustments that I found here https://github.com/tc39/test262/pull/2833#issuecomment-709635850 ; the trickiest part is the ripple effects on tests that *aren't* overtly about detached buffers","msgtype":"m.text"},"ts":1602971798000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Bakkot: ljharb: does this make sense? https://github.com/tc39/ecma262/pull/2207","msgtype":"m.text"},"ts":1602974738000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"will look once it renders","msgtype":"m.text"},"ts":1602974808000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1602974920000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah, seems reasonable","msgtype":"m.text"},"ts":1602975050000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1602975066000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"q: should [[OwnPropertyKeys]] also return the empty list for TAs backed by detached buffers?","msgtype":"m.text"},"ts":1602975164000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"'cause it doesn't","msgtype":"m.text"},"ts":1602975166000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"damn. that's a good question","msgtype":"m.text"},"ts":1602975279000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"this sure is a thorny subject","msgtype":"m.text"},"ts":1602975287000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I think yes","msgtype":"m.text"},"ts":1602975379000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the other methods all pretend those indices don't exist","msgtype":"m.text"},"ts":1602975389000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"should check impl. reality I guess","msgtype":"m.text"},"ts":1602975399000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"am i correct that this test is wrong now? https://gc.gy/70680667.png","msgtype":"m.text"},"ts":1602975667000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling also you should've pinged shu as well probably; he's the editor who has the most experience with TA stuff","msgtype":"m.text"},"ts":1602975684000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh nvm","msgtype":"m.text"},"ts":1602975725000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling: thanks for compiling that list of test issues","msgtype":"m.text"},"ts":1602975731000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: agreed but I thought he might not want to be pinged on a Saturday ðŸ˜…","msgtype":"m.text"},"ts":1602975758000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"devsnek: snarky answer is that it is impossible to tell because `%TypedArray%.prototype.findIndex` is specified with hand-wavy prose instead of an actual algorithm","msgtype":"m.text"},"ts":1602975759000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"devsnek: you're welcome","msgtype":"m.text"},"ts":1602975780000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Bakkot: it's not specific to findIndex","msgtype":"m.text"},"ts":1602975791000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"point 5 in rkirsling's comment","msgtype":"m.text"},"ts":1602975804000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling not sure what that says about me :P","msgtype":"m.text"},"ts":1602975805000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: lol sorry. you're right anyway","msgtype":"m.text"},"ts":1602975830000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"tbf we need to make sure that everyone's happy with the \"don't throw or even stop iterating\" interpretation on Monday-ish","msgtype":"m.text"},"ts":1602975868000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"because that's SM's behavior already","msgtype":"m.text"},"ts":1602975878000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1602975883000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but V8 stops iterating","msgtype":"m.text"},"ts":1602975885000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ideally should've done that before landing I guess","msgtype":"m.text"},"ts":1602975890000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"which is sensible _without_ looking at the spec but weird in that (considering the spec before my PR) they were *doubly* breaking spec","msgtype":"m.text"},"ts":1602975918000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Bakkot: yeah I think I underestimated how piecemeal-addressable this matter would be","msgtype":"m.text"},"ts":1602976002000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I don't regret it, it's just requiring a lot of post-consensus reality-checking","msgtype":"m.text"},"ts":1602976027000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling https://github.com/tc39/ecma262/pull/2164#issuecomment-711092235","msgtype":"m.text"},"ts":1602976540000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1602976618000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"an alternate solution would be to have [[ArrayLength]] actually get cleared","msgtype":"m.text"},"ts":1602976639000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but that would be a larger changed","msgtype":"m.text"},"ts":1602976649000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"-d","msgtype":"m.text"},"ts":1602976651000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I think that would be editorial after the change I suggest there","msgtype":"m.text"},"ts":1602976687000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1602976699000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(I noticed it by auditing access of `[[ArrayLength]]`)","msgtype":"m.text"},"ts":1602976703000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1602976708000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I could add it to the fix PR if I make it \"IsDetachedBuffer should be checked before accessing [[ArrayLength]]\"","msgtype":"m.text"},"ts":1602976804000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"/shrug","msgtype":"m.text"},"ts":1602976881000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I feel like we don't need to regain consensus for things that \"should have been addressed before merge\" but not sure if controversial","msgtype":"m.text"},"ts":1602976969000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah it's always tricky","msgtype":"m.text"},"ts":1602977181000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I think since you specifically phrased the PR as trying to match web reality in this space it's probably fine to assume things which are web reality have consensus","msgtype":"m.text"},"ts":1602977261000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but otoh it's not like there's much harm in waiting and asking","msgtype":"m.text"},"ts":1602977275000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"we can see how other editors feel","msgtype":"m.text"},"ts":1602977300000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I'll just add it to the fix PR and we can discuss in one bucket","msgtype":"m.text"},"ts":1602977319000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"for once i have no opinions","msgtype":"m.text"},"ts":1602977621000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what is the preferred spec style for what would be defining a variable with a ternary","msgtype":"m.text"},"ts":1602978104000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"`1. if foo, let _x_ be whatever. 1. else, let _x_ be whatever`","msgtype":"m.text"},"ts":1602978129000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"cool. figured it was either that or \"let > if > set\"","msgtype":"m.text"},"ts":1602978153000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"oh wait we have a one-line version in the optional chaining stuff","msgtype":"m.text"},"ts":1602978207000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"`If the code matched by this OptionalChain is strict mode code, let strict be true; else let strict be false.`","msgtype":"m.text"},"ts":1602978211000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1602978216000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah, we do sometimes have single-line if-else","msgtype":"m.text"},"ts":1602978294000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"in sufficiently simple cases","msgtype":"m.text"},"ts":1602978302000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"updated","msgtype":"m.text"},"ts":1602978630000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling it seems a little weird to have the `if` set the upper bound for the loop to 0 instead of just guarding the loop entirely","msgtype":"m.text"},"ts":1602978730000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1602978743000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"fair point","msgtype":"m.text"},"ts":1602978748000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"repushed","msgtype":"m.text"},"ts":1602979022000,"senderName":"rkirsling","senderId":"rkirsling@irc"}
]