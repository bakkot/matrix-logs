[
{"content":{"body":"cool, that's what I figured.","msgtype":"m.text"},"ts":1551916948000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ljharb: https://github.com/web-platform-tests/wpt/pull/15720 might be of interest","msgtype":"m.text"},"ts":1551963587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hello all. Would this be a good place to see if there's any interest in a new language feature? I've already searched ESDiscuss and couldn't find any real discussion on it, though it was touched upon.","msgtype":"m.text"},"ts":1551966501000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"superamadeus3: It's an appropriate place. Whether it's a *good* (i.e., useful) place varies over time, I'd say.","msgtype":"m.text"},"ts":1551968657000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Well, I'll take my chances! The proposal is for a \"try expression\" which allows for imperative error handling patterns similar to how it's typically done in Go. While I came up with the semantics organically, it resembles a discussion I found on ESDiscuss from 3 years ago (specifically this post: https://esdiscuss.org/topic/just-try#content-4).","msgtype":"m.text"},"ts":1551968952000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"Here's a github gist with my attempt at an overview of it's behavior: https://gist.github.com/superamadeus/e81c0524d6991c6977cb4ab34b82321a . I apologize ahead of time if this has been proposed before, as it seems like it shouldn't be that novel of an idea.","msgtype":"m.text"},"ts":1551969003000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1551978341000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"superamadeus3: can you add some examples that don’t use await?","msgtype":"m.text"},"ts":1551978395000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i don't understand this example","msgtype":"m.text"},"ts":1551978419000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"or what this is doing in general","msgtype":"m.text"},"ts":1551978427000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh wait i see now","msgtype":"m.text"},"ts":1551978444000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it's an approximation of how go returns errors","msgtype":"m.text"},"ts":1551978450000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Hey,","msgtype":"m.text"},"ts":1551982760000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"I updated the gist to show examples without await.","msgtype":"m.text"},"ts":1551982768000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"Here's the link again for convenience https://gist.github.com/superamadeus/e81c0524d6991c6977cb4ab34b82321a","msgtype":"m.text"},"ts":1551982898000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"Yes, the goal of the proposal is to resemble this error handling pattern. It essentially wraps any expression into a result type `Result<TValue, TError> = [TValue, undefined] | [undefined, TError]`.","msgtype":"m.text"},"ts":1551983255000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"Also, sorry if this is spammy. I'm not totally used to IRC. If there's a better place for this discussion I would be happy to move it/set it up!","msgtype":"m.text"},"ts":1551983299000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"superamadeus3: i think we’d first need a Result before we’d want to add syntax to produce it","msgtype":"m.text"},"ts":1551983387000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1551983655000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: For sure. Would that have to be a separate proposal, or could it be part of the same one?","msgtype":"m.text"},"ts":1551983696000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"I’d think separate","msgtype":"m.text"},"ts":1551983706000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"syntax is expensive, and a hard hill to walk up","msgtype":"m.text"},"ts":1551983715000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Cool, thanks.","msgtype":"m.text"},"ts":1551984133000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"What might the next steps be if I want to work on this? Make a repo for the proposals and work on documentation and a spec for it and hope the community takes interest?","msgtype":"m.text"},"ts":1551984319000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"(Not to simplify the work that must go into it)","msgtype":"m.text"},"ts":1551984401000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"},
{"content":{"body":"you might consider checking with the Promise.allSettled champions if they'd consider using a more general result type","msgtype":"m.text"},"ts":1551984787000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the thing they're currently returning refers to promises in particular, but if there were a pattern for Result in JS, they could use that instead.","msgtype":"m.text"},"ts":1551984841000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(\"checking with\" = opening an issue on https://github.com/tc39/proposal-promise-allSettled )","msgtype":"m.text"},"ts":1551984858000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but more generally, I don't know that this would be worth it, especially if we end up with syntax for statements in expression position more generally - you could just write `let [user, err] = do { try { [foo()] } catch (e) { [void 0, e] } }` instead of `let [user, err] = try foo()`","msgtype":"m.text"},"ts":1551985075000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: thanks for the lead! I'll check out that proposal. And hm, that's valid! I think it's worth exploring at least academically, or even if it just ends up being a babel plugin that I use myself :)","msgtype":"m.text"},"ts":1551986308000,"senderName":"superamadeus3","senderId":"superamadeus3@irc"}
]