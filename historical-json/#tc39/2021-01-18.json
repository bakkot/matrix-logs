[
{"content":{"body":"Has TC39 reviewed or been asked to review https://wicg.github.io/js-self-profiling/?","msgtype":"m.text"},"ts":1610963173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not AFAIK; I've been aware of that proposal but I wasn't sure what kind of feedback would be welcome.","msgtype":"m.text"},"ts":1610964428000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I'm hoping any","msgtype":"m.text"},"ts":1610964453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I liie the Promise usage!","msgtype":"m.text"},"ts":1610964453000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Is this intended to be useful outside of the Web?","msgtype":"m.text"},"ts":1610964459000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"No idea, but if it could be and is not I think it's worth addressing","msgtype":"m.text"},"ts":1610964496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for example, we could reach out to Node.js, Deno and Cloudflare people, to get some non-Web environment feedback","msgtype":"m.text"},"ts":1610964502000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Sounds good to me, they asked for Mozilla's position and I think it'd be interesting to know that","msgtype":"m.text"},"ts":1610964565000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK, I'll ask around","msgtype":"m.text"},"ts":1610964722000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ta!","msgtype":"m.text"},"ts":1610964786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we could add this to the TC39 agenda for discussion at the end if we have time, but it looks like the meeting is mostly fully","msgtype":"m.text"},"ts":1610966727000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"it might be worth just taking a few minutes to flag it so that people know it's happening and they'll have to review if they care, even if you don't have time to go into it","msgtype":"m.text"},"ts":1610967159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"one way to reach the committee asynchronously is to file a Reflector issue calling it out (including saying where to give feedback)","msgtype":"m.text"},"ts":1610968181000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"can do","msgtype":"m.text"},"ts":1610968730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess the part that stands out to me is https://wicg.github.io/js-self-profiling/#the-profilerframe-dictionary","msgtype":"m.text"},"ts":1610969357000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"it seems like it could be a little brittle with sourcemaps, for example","msgtype":"m.text"},"ts":1610969386000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I'm curious if there was a consideration to include the function identity of what's running","msgtype":"m.text"},"ts":1610969413000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"(posted issues)","msgtype":"m.text"},"ts":1610970022000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"MDN says \"It is strongly recommended that the assignment operators (+, +=) are used instead of the concat() method.\"","msgtype":"m.text"},"ts":1610988702000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Is this true? Why is that the case?","msgtype":"m.text"},"ts":1610988707000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"for strings? I would guess it's just that it's easier to optimize","msgtype":"m.text"},"ts":1610988768000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"croraf: I’m not sure why. the reason to use + is that it’s syntax and thus is robust, but concat uses toString while + uses valueOf, so concat is actually better for some edge cases","msgtype":"m.text"},"ts":1610988794000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but better than both at this point is using template literals.","msgtype":"m.text"},"ts":1610988802000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(since it’s both syntax, and uses toString)","msgtype":"m.text"},"ts":1610988827000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(babel transpiles template literals to .concat, for example, for correctness reasons)","msgtype":"m.text"},"ts":1610988891000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"You mean using `asd` + `asd` uses .toString on `asd`, and 'asd' + 'asd' uses .value of on 'asd's?","msgtype":"m.text"},"ts":1610988934000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"You think recognizing + as a syntax token can make some optimizations?","msgtype":"m.text"},"ts":1610988984000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yes, because `a + b` on two strings always means concatenate but `a.concat(b)` requires the engine to check that no one has replaced `String.prototype.concat` before it can make that assumption","msgtype":"m.text"},"ts":1610989106000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"croraf: telling the difference requires having an object that toStrings to one thing and valueOfs to another, like a Date instance or a custom object. + looks at valueOf first, then toString.","msgtype":"m.text"},"ts":1610990066000,"senderName":"ljharb","senderId":"ljharb@irc"}
]