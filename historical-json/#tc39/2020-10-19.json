[
{"content":{"body":"custom sections as in Slack?","msgtype":"m.text"},"ts":1603067821000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"or maybe https://www.dassmetal.com/products/custom-sections/","msgtype":"m.text"},"ts":1603067928000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"https://webassembly.github.io/spec/core/appendix/custom.html ?","msgtype":"m.text"},"ts":1603068004000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: wasm","msgtype":"m.text"},"ts":1603068283000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"then we wouldn't need the import assertion proposal","msgtype":"m.text"},"ts":1603068317000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: Bakkot: seems we have another issue that AlexeyS noticed","msgtype":"m.text"},"ts":1603138563000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"integer-indexed [[Set]] early outs with `false` but this would throw in strict mode, whereas V8 and SM currently just fail silently (when setting to a detached buffer or OOB index)","msgtype":"m.text"},"ts":1603138639000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"oh, I assumed that was intentional","msgtype":"m.text"},"ts":1603138769000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the spec part?","msgtype":"m.text"},"ts":1603138905000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"the change to throw","msgtype":"m.text"},"ts":1603138911000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1603138913000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I guess the PR says it was supposed to not do that, though","msgtype":"m.text"},"ts":1603138925000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I was being short-sighted and not thinking sufficiently about strict mode :(","msgtype":"m.text"},"ts":1603138945000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I think it's entirely justifiable to keep things as they are right now in the spec, as that flag is called `succeeded` and we clearly didn't succeed","msgtype":"m.text"},"ts":1603138976000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"there's no compat issue since JSC was always different but the current behavior of V8 and SM made me second-guess myself","msgtype":"m.text"},"ts":1603139025000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: working on some backlogged stuff, but i plan to look at the detach stuff today or tomorrow. we should chat about a plan, but first need to get up to date...","msgtype":"m.text"},"ts":1603140528000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"aye-aye","msgtype":"m.text"},"ts":1603140537000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rwaldron-: ping, around?","msgtype":"m.text"},"ts":1603142498000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu yes","msgtype":"m.text"},"ts":1603142515000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"rwaldron-: looks like https://github.com/tc39/test262/issues/2866 still has an outstanding issue; also would appreciate https://github.com/tc39/test262/pull/2873 (i'm rolling a new test262 right now into v8)","msgtype":"m.text"},"ts":1603142667000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Sure thing","msgtype":"m.text"},"ts":1603142680000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"tyty","msgtype":"m.text"},"ts":1603142684000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Those missing includes tests are odd... I don't see why atomicsHelper is needed for those tests...?","msgtype":"m.text"},"ts":1603142719000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"OMG.","msgtype":"m.text"},"ts":1603142725000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":":ü§¶üèº‚Äç‚ôÇÔ∏èü§¶üèº‚Äç‚ôÄÔ∏è:","msgtype":"m.text"},"ts":1603142734000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"it's the $262.agent.setTimeout","msgtype":"m.text"},"ts":1603142748000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"YEP","msgtype":"m.text"},"ts":1603142754000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"My local eshost is on a branch where I'm working on implementing that in all of the agents","msgtype":"m.text"},"ts":1603142765000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"What an absolute dummy.","msgtype":"m.text"},"ts":1603142771000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"ah ha, i see","msgtype":"m.text"},"ts":1603142774000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Sorry about that.","msgtype":"m.text"},"ts":1603142781000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1603142791000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"what's the plan for implementing them in all agents?","msgtype":"m.text"},"ts":1603142797000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i think it might be worth test262's time to just manually define setTimeout with its current polyfill","msgtype":"m.text"},"ts":1603142812000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"d8's setTimeout doesn't actually do any wall-clock time counting","msgtype":"m.text"},"ts":1603142843000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Ah, good to know. I had planned to do a campaign similar to monotonicNow, but that seems reasonable.","msgtype":"m.text"},"ts":1603143075000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"When I say \"campaign\", I mean that I would go around and implement it in V8, JSC, and SM, or ask for an implementer to help out)","msgtype":"m.text"},"ts":1603143131000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"But yeah, there is usually a fallback in place, which in this case I will take your suggestion.","msgtype":"m.text"},"ts":1603143151000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"shu also: https://github.com/tc39/test262/pull/2875/files","msgtype":"m.text"},"ts":1603143598000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"I have to head out now, have a good night.","msgtype":"m.text"},"ts":1603144055000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"I'll check back in a few hours (after the kiddo is in bed), just to make sure you get that test262 roll done","msgtype":"m.text"},"ts":1603144137000,"senderName":"rwaldron-","senderId":"rwaldron-@irc"},
{"content":{"body":"rwaldron-: awesome, thanks","msgtype":"m.text"},"ts":1603144284000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"rwaldron-: thanks for the test work! not sure if you caught the discussion above this one ^ but it looks like we'll need to make sure that when [[Set]] returns false that we throw in strict mode","msgtype":"m.text"},"ts":1603145392000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(this is counter to what V8/SM have done but I believe it's necessary)","msgtype":"m.text"},"ts":1603145430000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rwaldron-: current tip of test262 tree lgtm","msgtype":"m.text"},"ts":1603150880000,"senderName":"shu","senderId":"shu@irc"}
]