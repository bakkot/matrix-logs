[
{"content":{"body":"Random question. Whatever happened to making getters and setters async compatible?","msgtype":"m.text"},"ts":1588034986000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"Sirisian: lack of real need, just return a Promise?","msgtype":"m.text"},"ts":1588035467000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"adding them gets a bit confusing, even doing class init async is pretty wonky but still being looked at","msgtype":"m.text"},"ts":1588035496000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"also, always returning a new Promise is probably undesirable usually, and async functions always make a new promise","msgtype":"m.text"},"ts":1588035553000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I had a friend writing an API wrapper. He kind of wanted to write await foo.value = 10; but instead just made the operation synchronous which locked up his main thread. (He was fine with this). I had an old project that did something similar with network calls but did .set('value', 10) type stuff.","msgtype":"m.text"},"ts":1588035865000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"using async `setValue` methods seems better than trying to have async setters","msgtype":"m.text"},"ts":1588037111000,"senderName":"Bakkot","senderId":"Bakkot@irc"}
]