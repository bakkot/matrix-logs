[
{"content":{"body":"i feel like spec that is this dense and complex invites bugs https://tc39.github.io/proposal-iterator-helpers/#sec-asynciteratorprototypemapiteratorprototype-next","msgtype":"m.text"},"ts":1556337434000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"especially considering the amount of abstraction over the original intent","msgtype":"m.text"},"ts":1556337446000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"which is basically `for await (const v of it) { yield await mapper(v) }`","msgtype":"m.text"},"ts":1556337470000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"does anyone have any suggestions for how to make this better","msgtype":"m.text"},"ts":1556337577000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"eee","msgtype":"m.text"},"ts":1556339657000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"the title alone","msgtype":"m.text"},"ts":1556339689000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: i know right :9","msgtype":"m.text"},"ts":1556340629000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":":( *","msgtype":"m.text"},"ts":1556340634000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: hmm the async versions are much worse than the sync. Would using Await() help?","msgtype":"m.text"},"ts":1556345102000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I.e. I'm wondering if there's a way to make the async versions about as simple as the sync. (Which is still not fully simplified, but I think is a big improvement.)","msgtype":"m.text"},"ts":1556345129000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh I see it's already using Await()","msgtype":"m.text"},"ts":1556345211000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"devsnek: how about just AsyncMapIteratorPrototype","msgtype":"m.text"},"ts":1556345237000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"So the problems are: IfAbruptRejectPromise instead of ?, three-step process for brand-check rejection (can be replaced with return PromiseReject?), three-step process for return values (can be replaced with return PromiseResolve?), and not using IteratorStep (seems like you could?)","msgtype":"m.text"},"ts":1556345357000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"For the IfAbruptRejectPromise, consider factoring all the sync steps out into a sub-algorithm or something, so that you can have a single IfAbruptRejectPromise around all of them.","msgtype":"m.text"},"ts":1556345433000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Something like this https://gist.github.com/domenic/17d0d9102c7c1fba6f0df9a71061942d","msgtype":"m.text"},"ts":1556345855000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You could even factor my SubMap() into something that took an async/sync argument and only did the Await()s if async","msgtype":"m.text"},"ts":1556345915000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Then you could re-use it for the sync version","msgtype":"m.text"},"ts":1556345930000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"does the spec limit movement of values between agents","msgtype":"m.text"},"ts":1556364270000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Domenic: interesting approach","msgtype":"m.text"},"ts":1556372862000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if I can't get some better syntax in the spec I'll probably do that","msgtype":"m.text"},"ts":1556372881000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://github.com/immersive-web/webxr/pull/609#discussion_r279159519","msgtype":"m.text"},"ts":1556389600000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"we are not the only web spec which has to worry about \"what about space?\"","msgtype":"m.text"},"ts":1556389615000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"still think non-earth-based time systems ought to have been in scope for Temporal...","msgtype":"m.text"},"ts":1556389631000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: that's rough","msgtype":"m.text"},"ts":1556390693000,"senderName":"devsnek","senderId":"devsnek@irc"}
]