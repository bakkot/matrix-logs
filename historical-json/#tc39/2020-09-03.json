[
{"content":{"body":"have we ever had a function length change in a new edition?","msgtype":"m.text"},"ts":1599169753000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: definitely","msgtype":"m.text"},"ts":1599170340000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: do we know if it has ever decremented?","msgtype":"m.text"},"ts":1599170401000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: pretty sure definitely it has","msgtype":"m.text"},"ts":1599170424000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"let me check","msgtype":"m.text"},"ts":1599170434000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: https://github.com/tc39/ecma262/pull/1131#issuecomment-374591660 had DataView.length as 1 in the spec but 3 in a number of impls, we kept it at 1. that's not exactly what you asked for tho","msgtype":"m.text"},"ts":1599170582000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(meaning, it's definitely decremented in *engines*)","msgtype":"m.text"},"ts":1599170603000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i've filed a few bugs over the years as well with incorrect length values on various methods, some were too high and some too low","msgtype":"m.text"},"ts":1599170616000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: i'm not finding any other examples post-ES6, so maybe it hasn't happened in the spec itself before","msgtype":"m.text"},"ts":1599170708000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: i'd think we should be able to change function lengths as needed tho, in either direction, modulo web compat","msgtype":"m.text"},"ts":1599170737000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Yea, I'm asking because map.get changes might want that for split upsert methods","msgtype":"m.text"},"ts":1599170988000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"blocks tho https://gc.gy/66876146.png","msgtype":"m.text"},"ts":1599171260000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: do you mean indexed access for typed arrays in particular?","msgtype":"m.text"},"ts":1599172843000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(ArrayBuffers alone are just ordinary in this regard, right?)","msgtype":"m.text"},"ts":1599172862000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"either way I agree with you wrt the audit","msgtype":"m.text"},"ts":1599172908000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"the DataView spec is evidently fine so it'd just be a matter of typed arrays in particular, which I've yet to examine precisely (but intend to)","msgtype":"m.text"},"ts":1599172989000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"bradleymeck: Map get has a length of 1, why do you envision that decrementing?","msgtype":"m.text"},"ts":1599173302000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I imagine it becoming 2, decrement was curiousity","msgtype":"m.text"},"ts":1599173630000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ah k","msgtype":"m.text"},"ts":1599173666000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it'd only become two tho if the second arg was required","msgtype":"m.text"},"ts":1599173683000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: i added arbitrary module namespaces to engine262, seems to be all working","msgtype":"m.text"},"ts":1599174080000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rkirsling: yes i mean for TAs backed by detached ABs in particular, yes","msgtype":"m.text"},"ts":1599176271000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"rkirsling: spec says detachedTypedArray[i] throws, implementations don't","msgtype":"m.text"},"ts":1599176297000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"why don't impls throw there?","msgtype":"m.text"},"ts":1599176317000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: yeah I think I've got the situation understood correctly now, just added a reply comment","msgtype":"m.text"},"ts":1599176347000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: they never did, spec added it when tc39 took it over from khronos, we never reflected the changes and now it might be too late","msgtype":"m.text"},"ts":1599176488000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"is my understanding","msgtype":"m.text"},"ts":1599176490000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"like, the same reason why there are other places where impls don't throw","msgtype":"m.text"},"ts":1599176523000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ok so there's no good reason not to throw","msgtype":"m.text"},"ts":1599176575000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it's just that it may not be web compat, or worth seeing if it is?","msgtype":"m.text"},"ts":1599176583000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah like I think it's clear enough that throwing in ArrayBuffer#byteLength won't be web compatible, and so hopefully that same understanding extends to has/get/set for typed arrays too","msgtype":"m.text"},"ts":1599176674000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(because the reasoning is the same)","msgtype":"m.text"},"ts":1599176695000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ah, there's evidence it wouldn't be?","msgtype":"m.text"},"ts":1599176705000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"edge had correct throwing","msgtype":"m.text"},"ts":1599176747000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but then edge stopped existing","msgtype":"m.text"},"ts":1599176755000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"sure but doesn't that suggest it was web compatible?","msgtype":"m.text"},"ts":1599176765000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ChakraCore doesn't though?","msgtype":"m.text"},"ts":1599176776000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: seems like maybe edge didn't have all the specced behavior, but supposing that were the case, given that edge's adoption of chromium was for in no small part for more compat, i wouldn't infer that it is web compatible from that data point","msgtype":"m.text"},"ts":1599176864000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I'm a bit confused about what Edge exactly did, because there's an amazing degree of behavioral consistency here","msgtype":"m.text"},"ts":1599176909000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: um, citation for \"for more compat\"?","msgtype":"m.text"},"ts":1599176965000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: i mean like, the implication wasn't \"edge is bad and chromium is good\", it was \"it's easier/cheaper to just adopt chromium\", which implies it's not a data point here","msgtype":"m.text"},"ts":1599176996000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"https://blogs.windows.com/windowsexperience/2018/12/06/microsoft-edge-making-the-web-better-through-more-open-source-collaboration/#a11y-skip-link-content:~:text=desktop%20to%20create%20better%20web%20compatibility","msgtype":"m.text"},"ts":1599177012000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"`a11y-skip-link-content` is a new one","msgtype":"m.text"},"ts":1599177028000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: i think it's a stretch to say that \"anything edge did differently from chromium was thus web incompatible\"","msgtype":"m.text"},"ts":1599177102000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i didn't say that","msgtype":"m.text"},"ts":1599177113000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"you said \"doesn't that suggest it was web compatible\", which i took \"that\" to mean \"edge had correct throwing\"","msgtype":"m.text"},"ts":1599177136000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ohh","msgtype":"m.text"},"ts":1599177141000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ok yeah, i was saying that *if* edge had correct throwing, that seems to imply it didn't break websites","msgtype":"m.text"},"ts":1599177155000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i don't know that they had correct throwing ofc :-)","msgtype":"m.text"},"ts":1599177168000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and i'm saying, even if it did, for all i know it still might have","msgtype":"m.text"},"ts":1599177172000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"since as a product, their public messaging called out better compat as a reason to switch engines?","msgtype":"m.text"},"ts":1599177185000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"oh I see, so Ch shipped throwing behavior, SM was going to follow suit but then aborted upon realizing the danger, and then Ch must have stepped back at some point too","msgtype":"m.text"},"ts":1599177236000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: again i think it's a stretch to infer anything about this case from that blog post","msgtype":"m.text"},"ts":1599177311000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"you are still misunderstanding what i'm saying","msgtype":"m.text"},"ts":1599177326000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1599177335000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"*you* are saying you infer web compat from edge having correct behavior","msgtype":"m.text"},"ts":1599177342000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i am saying i wouldn't infer web compat in any direction from edge's behavior","msgtype":"m.text"},"ts":1599177356000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"right, unless a bug report about a broken website were to have come in after the chromium decision was made","msgtype":"m.text"},"ts":1599177366000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but i suppose either way, new websites could now be relying on the behavior, post-chromedge","msgtype":"m.text"},"ts":1599177394000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it sounds like they were relying on it before, given ff's choice","msgtype":"m.text"},"ts":1599177406000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"this is a 4-year old thing","msgtype":"m.text"},"ts":1599177415000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i'm clearly missing context here :-) if FF had a nontheoretical concern then that seems convincing","msgtype":"m.text"},"ts":1599177488000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Tom didn't state it in this thread but Anne implied it: https://github.com/tc39/ecma262/issues/678#issuecomment-452699242","msgtype":"m.text"},"ts":1599177537000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I can probably find the Ch commit where they rolled back","msgtype":"m.text"},"ts":1599177562000,"senderName":"rkirsling","senderId":"rkirsling@irc"}
]