[
{"content":{"body":"Greetings, how does it goes, when having some issues with specification? I have several ideas,...","msgtype":"m.text"},"ts":1582334727000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"First of all, Proxy should work even for variables, and it should return deep. Now at laest in Node.js, proxy doesn't let you control access even to nested objects.","msgtype":"m.text"},"ts":1582334790000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"But I'm just here to ask how do I if I want to improve something.","msgtype":"m.text"},"ts":1582334813000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"if you want to make a change to the specification, you write up a proposal","msgtype":"m.text"},"ts":1582334855000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"see here for more details: https://github.com/tc39/ecma262/blob/master/CONTRIBUTING.md#new-feature-proposals","msgtype":"m.text"},"ts":1582334860000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"however, \"deep\" proxies are very unlikely to be picked up by the committee","msgtype":"m.text"},"ts":1582334889000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"what you should do is return new proxies","msgtype":"m.text"},"ts":1582334900000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"mnini: what do you mean \"work even for variables\"?","msgtype":"m.text"},"ts":1582336223000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"It doesn't make sense... Writting a preprocessor does bigger...","msgtype":"m.text"},"ts":1582337062000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"Evolution of language towards \"uch this is so easy that I can write it\"... I don't think it will have any negative inpact.","msgtype":"m.text"},"ts":1582337087000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"Along with long.long.objects...","msgtype":"m.text"},"ts":1582337106000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"Why it doesn't iterate by default, if only option is iteration?","msgtype":"m.text"},"ts":1582337127000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"Like I can have variable which has bindable get and set without an object.","msgtype":"m.text"},"ts":1582337164000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"Setter of object itself, not it's property","msgtype":"m.text"},"ts":1582337180000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"Invoking objects would also be pretty much SELF DESCRIBING CODE,","msgtype":"m.text"},"ts":1582337204000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"mnini: i'm really not sure what you mean. \"iteration\" is the iterator protocol, which isn't a general object thing","msgtype":"m.text"},"ts":1582337260000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Iterative... Recursive function setting up proxies is something that nobody wants to waste time with. Having default few levels deeper into value...","msgtype":"m.text"},"ts":1582337324000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"Like variable.nested.really.long.property = 0 doesn't works if everything is not an object, you must call another function etc...","msgtype":"m.text"},"ts":1582337361000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"That is reason we now need some \"realms\" or something...","msgtype":"m.text"},"ts":1582337373000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"If it binded before, now it could along with \\ placed in there work like namespace.","msgtype":"m.text"},"ts":1582337393000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"space /variable.nested/ and suddenly you can have whole object binded to native values, because dot is on odd place on the keyboard.","msgtype":"m.text"},"ts":1582337494000,"senderName":"mnini","senderId":"mnini@irc"},
{"content":{"body":"huh. I was looking at some Intl failures for fun and I think this test is wrong ðŸ¤”","msgtype":"m.text"},"ts":1582353950000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"https://test262.report/browse/intl402/Collator/missing-unicode-ext-value-defaults-to-true.js","msgtype":"m.text"},"ts":1582353951000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"this thread https://github.com/tc39/ecma402/issues/223 led to a modification under 8.h here https://tc39.es/ecma402/#sec-resolvelocale","msgtype":"m.text"},"ts":1582354020000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but if the locale has an explicit `-kn-true`, there's nothing there that specifies it to be canonicalized to just `-kn`","msgtype":"m.text"},"ts":1582354079000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it's slightly worrying that SM does pass the test though","msgtype":"m.text"},"ts":1582354101000,"senderName":"rkirsling","senderId":"rkirsling@irc"}
]