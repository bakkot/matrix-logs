[
{"content":{"body":"har har except being an anarchist as it turns out is mostly meetings","msgtype":"m.text"},"ts":1572396223000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"what's the difference between an anarchist and a bureaucrat then","msgtype":"m.text"},"ts":1572396376000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(seriously this fantastically-reported piece from 2016 is basically about meetings)","msgtype":"m.text"},"ts":1572396400000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"shu: motivation. action. interest in people over power.","msgtype":"m.text"},"ts":1572396431000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"that is such a good joke set up but I can't say what the answer would be","msgtype":"m.text"},"ts":1572396433000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"https://crimethinc.com/2016/05/13/feature-born-in-flames-died-in-plenums-the-bosnian-experiment-with-direct-democracy-2014","msgtype":"m.text"},"ts":1572396449000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"but yeah in that sense I don't think it's anarchism that devsnek was talking about lol","msgtype":"m.text"},"ts":1572396500000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"the monarchy will come back one day, you'll see","msgtype":"m.text"},"ts":1572396514000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"you'll be back, soon you'll see üé∂","msgtype":"m.text"},"ts":1572396582000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"touch√©","msgtype":"m.text"},"ts":1572396630000,"senderName":"akirose","senderId":"akirose@irc"},
{"content":{"body":"in my biased opinion it would be pretty cool if tc39 de-emphasized in-person meetings","msgtype":"m.text"},"ts":1572396720000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah, more remote with fewer in-person would be nice","msgtype":"m.text"},"ts":1572396874000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i mean more like embracing stuff like github and discourse in a normative way","msgtype":"m.text"},"ts":1572396918000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there're two axes: remote and sync. stuff like github is remote+async, which will be hard to adopt directly","msgtype":"m.text"},"ts":1572397041000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1572397046000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"remote+async would be great eventually","msgtype":"m.text"},"ts":1572397062000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i just really enjoy how engaged i can be in whatwg only through async channels","msgtype":"m.text"},"ts":1572397066000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if we can shift to more remote+sync first, then remote+async is more realistic","msgtype":"m.text"},"ts":1572397091000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"there's a bit of that, like decorators calls and stuff","msgtype":"m.text"},"ts":1572397110000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"for sure, and the other calls and how the Intl work meets separately","msgtype":"m.text"},"ts":1572397141000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"there's still more we can spin out","msgtype":"m.text"},"ts":1572397153000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"at the same time i think it'll always be nice to have local+sync, just not... every 2 months","msgtype":"m.text"},"ts":1572397188000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"\"it'll always be nice\" = i don't want it to go away","msgtype":"m.text"},"ts":1572397200000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1572397257000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"web has those meetings every once in a while","msgtype":"m.text"},"ts":1572397277000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"regular interval is also a strength","msgtype":"m.text"},"ts":1572397370000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"half as many might be just right, say","msgtype":"m.text"},"ts":1572397381000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: wait a second now, since when do all AOs return completion values?","msgtype":"m.text"},"ts":1572412441000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: since always afaik. https://tc39.es/ecma262/#sec-implicit-completion-values","msgtype":"m.text"},"ts":1572412487000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"there's also always implicit `.[[Value]]` unwrapping, but the ! and ? make that explicit. and since explicit > implicit, hence the drive to prefix every AO call.","msgtype":"m.text"},"ts":1572412541000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"huh. i had always thought that restriction was about the runtime algorithm steps","msgtype":"m.text"},"ts":1572412716000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but if an AO were more like a predicate, that implicit completion value was not there","msgtype":"m.text"},"ts":1572412736000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"some AOs are predicates, but not all of them","msgtype":"m.text"},"ts":1572412759000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"right, of course","msgtype":"m.text"},"ts":1572412775000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i think we internalized very different meanings of \"Unless it is otherwise obvious from the context\"","msgtype":"m.text"},"ts":1572412789000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1572412873000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh like, the \"is\" prefix makes it obvious to you, and i'm not differentiating that way?","msgtype":"m.text"},"ts":1572412888000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"not exactly, i thought *not* using ! or ? was the contextual hint that you were calling a predicate-like AO","msgtype":"m.text"},"ts":1572412928000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1572412937000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but given that section and i think the occurrences of ! is against my understanding","msgtype":"m.text"},"ts":1572412953000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"not using the prefix is generally for when you're checking if the completion is abrupt, generally for async/await type stuff","msgtype":"m.text"},"ts":1572412956000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i am happy to continue with yours","msgtype":"m.text"},"ts":1572412956000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"üëç","msgtype":"m.text"},"ts":1572412961000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"fwiw i'm totes on board with an overall shift to avoid implicit completion values in the common cases - just based on how it is now, i prefer the explicit prefixes","msgtype":"m.text"},"ts":1572412984000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i don't think it's very high priority","msgtype":"m.text"},"ts":1572412996000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"can hash it out some more at the next call","msgtype":"m.text"},"ts":1572413004000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1572413096000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu, ljharb: The spec doesn't say that every AO returns a completion record, only that runtime semantics algorithms always return a cr.","msgtype":"m.text"},"ts":1572440254000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Even with that restriction, it's still problematic, see https://github.com/tc39/ecma262/issues/496#issuecomment-491603203","msgtype":"m.text"},"ts":1572440533000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: every AO is a runtime semantic, to my reading","msgtype":"m.text"},"ts":1572446705000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"\"every AO is a runtime semantic\": including the ones labelled \"Static Semantics\" ?","msgtype":"m.text"},"ts":1572448053000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: indeed, that was my original understanding as well","msgtype":"m.text"},"ts":1572448087000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"jmdyck: what are your opinions here?","msgtype":"m.text"},"ts":1572448092000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: you can get some of my opinions from the linked issue, I think.","msgtype":"m.text"},"ts":1572448144000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"won't have time till later today.","msgtype":"m.text"},"ts":1572448176000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: ok, sure, that's fair. but how can i know at the callsite whether an AO is runtime or static","msgtype":"m.text"},"ts":1572455569000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: currently, you can't. Conceivably, you could with a naming convention or a syntax change.","msgtype":"m.text"},"ts":1572457305000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"to reiterate, the property i think is important, is that at the callsite - without knowing anything about the abstract operation i'm invoking - i can know whether it will not, or might, throw","msgtype":"m.text"},"ts":1572457374000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm open to any proposals that preserve that property :-)","msgtype":"m.text"},"ts":1572457390000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and presumably you'd like that property for other operations, e.g. syntax-directed","msgtype":"m.text"},"ts":1572457584000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ideally yes","msgtype":"m.text"},"ts":1572457634000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so basically you're asking for constexpr and noexcept","msgtype":"m.text"},"ts":1572457699000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1572457700000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: 'throw' only, or any abrupt completion?","msgtype":"m.text"},"ts":1572457831000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"s/throw/abrupt","msgtype":"m.text"},"ts":1572457848000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1572457860000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"and what about cases of: this invocation might throw, but if it does, you shouldn't immediately return (so '?' doesn't apply) ?","msgtype":"m.text"},"ts":1572457970000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"that's always up to the caller","msgtype":"m.text"},"ts":1572458048000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but yes that's the third state","msgtype":"m.text"},"ts":1572458056000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"!, ?, or \"inspect the completion value\"","msgtype":"m.text"},"ts":1572458063000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"theoretically any unprefixed AO rn should be inspecting the completion value","msgtype":"m.text"},"ts":1572458081000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"theoretically, i'd disagree.","msgtype":"m.text"},"ts":1572458134000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"well, it depends on which \"should\" you mean.","msgtype":"m.text"},"ts":1572458173000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"\"Any reference to a Completion Record value that is in a context that does not explicitly require a complete Completion Record value is equivalent to an explicit reference to the [[Value]] field of the Completion Record value unless the Completion Record is an abrupt completion.\"","msgtype":"m.text"},"ts":1572458197000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"i.e., not inspecting the completion value is permitted by the current conventions in the spec","msgtype":"m.text"},"ts":1572458216000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"I agree this is bad and we should prioritize fixing it and the implicit wrapping, one way or another","msgtype":"m.text"},"ts":1572458234000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"shu: another related opinion of mine is in issue 497, particularly  https://github.com/tc39/ecma262/issues/497","msgtype":"m.text"},"ts":1572458475000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: what i mean is, if it's not inspecting the completion record value, i'd want a prefix on it","msgtype":"m.text"},"ts":1572458514000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"there's tons of possible improvements/fixes we can make, for sure","msgtype":"m.text"},"ts":1572458535000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rkirsling: i actually would be 100% fine with constexpr and noexcept","msgtype":"m.text"},"ts":1572458614000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb: how do you feel about \"Return Foo(...)\" where Foo might return an abrupt completion?","msgtype":"m.text"},"ts":1572458735000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i'd still like to know it might throw","msgtype":"m.text"},"ts":1572458753000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"that's what I figured","msgtype":"m.text"},"ts":1572458761000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"so is this a goal or non-goal?: to be able to tell if an algorithm might return abruptly, simply by scanning for certain punctuation (e.g. '?')","msgtype":"m.text"},"ts":1572458883000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"the last part isn't required, it's just likely the most concise way to do it","msgtype":"m.text"},"ts":1572458971000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"a naming convention or a keyword or whatever would qualify too, i'm sure","msgtype":"m.text"},"ts":1572458991000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"personally I don't think that's necessary; in particular, I am fine with algorithms whose return values are not completion records being invoked without `?`, and with algorithms whose return values are completion records which will be explicitly consumed as such being invoked without `?`","msgtype":"m.text"},"ts":1572459016000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"i find that very confusing","msgtype":"m.text"},"ts":1572459041000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"... how so?","msgtype":"m.text"},"ts":1572459045000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"the common case is \"ReturnIfAbrupt\", ie, ?","msgtype":"m.text"},"ts":1572459058000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it's very very rare to inspect the completion value","msgtype":"m.text"},"ts":1572459067000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Not that rare, but sure, yes","msgtype":"m.text"},"ts":1572459073000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"the current scenario rewards the rare case","msgtype":"m.text"},"ts":1572459075000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i mean, we could count, but i doubt it'd be often","msgtype":"m.text"},"ts":1572459087000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"@shu you did the logo for TC39, yeah?","msgtype":"m.text"},"ts":1572459108000,"senderName":"jorydotcom","senderId":"jorydotcom@irc"},
{"content":{"body":"... I don't think \"rewards\" is really the right way to think about it?","msgtype":"m.text"},"ts":1572459110000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"jorydotcom: i did, yes","msgtype":"m.text"},"ts":1572459116000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"we are not optimizing for smallest specification size here","msgtype":"m.text"},"ts":1572459120000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"bakkot: sure, we should be optimizing for readability and correctness, not size","msgtype":"m.text"},"ts":1572459131000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1572459137000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"bakkot: why not largest specification size??","msgtype":"m.text"},"ts":1572459139000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1572459142000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"super duper, I'm co-chairing with TC53 with Peter Hoddie & wondered if we could use your design but update it for TC53?","msgtype":"m.text"},"ts":1572459155000,"senderName":"jorydotcom","senderId":"jorydotcom@irc"},
{"content":{"body":"shu: not convinced we aren't, given how rapidly its grown","msgtype":"m.text"},"ts":1572459156000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"jorydotcom: of course, it should be covered by however it's licensed, let's see...","msgtype":"m.text"},"ts":1572459195000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(I laid out my position a little more fully in this comment, and still agree with it: https://github.com/tc39/ecma262/issues/1572#issuecomment-502902552 )","msgtype":"m.text"},"ts":1572459202000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"@shu i always like to ask regardless :D","msgtype":"m.text"},"ts":1572459223000,"senderName":"jorydotcom","senderId":"jorydotcom@irc"},
{"content":{"body":"jorydotcom: appreciate it!","msgtype":"m.text"},"ts":1572459259000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"@shu it's really lovely work, thanks again for making those dif marks","msgtype":"m.text"},"ts":1572459282000,"senderName":"jorydotcom","senderId":"jorydotcom@irc"},
{"content":{"body":"jorydotcom: thanks :) i still gotta get on designing another batch of hats...","msgtype":"m.text"},"ts":1572459346000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I never did get a sticker üò¢","msgtype":"m.text"},"ts":1572459600000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: so for the goal of being able to tell \"locally\" that an algorithm can return abruptly, that would be addressed by simply declaring for each algorithm whether it can return abruptly. But that's not enough (for you), right? You'd like to be able to tell (locally) which steps in the algorithm could cause such a return.","msgtype":"m.text"},"ts":1572460490000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(\"locally\" = \"without having to examine other algorithms\")","msgtype":"m.text"},"ts":1572460574000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i'd like to completely rework our markup","msgtype":"m.text"},"ts":1572460714000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and use static analysis to tell if things throw, and error the build if they aren't explicitly unwrapped or ?/!","msgtype":"m.text"},"ts":1572460733000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"static types in the spec would be great, but are much, much more work than the above change, I think","msgtype":"m.text"},"ts":1572460873000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"we could just pause all normative changes for a year and rewrite the spec :P","msgtype":"m.text"},"ts":1572460909000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bakkot: \"the above change\" = the comment you linked to?","msgtype":"m.text"},"ts":1572460952000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"imagine if it was multiple files so you could actually see diffs on github and it wouldn't crash some editors","msgtype":"m.text"},"ts":1572460958000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jmdyck: sorry, yes. that or any similar approach involving being careful about how we write things and removing implicit conversions","msgtype":"m.text"},"ts":1572461032000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"isn't the single-file/multi-file orthogonal to static analysis?","msgtype":"m.text"},"ts":1572461039000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"devsnek: ... which editors crash on it? I feel like a text editor ought to be able to open a text file, even a large one","msgtype":"m.text"},"ts":1572461078000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"i dunno","msgtype":"m.text"},"ts":1572461086000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i use vim and it works fine","msgtype":"m.text"},"ts":1572461089000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but i've heard people complain about it","msgtype":"m.text"},"ts":1572461099000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(2.6MB isn't that big)","msgtype":"m.text"},"ts":1572461112000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i hear some editors don't use mmaping","msgtype":"m.text"},"ts":1572461138000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"self-plug re static analysis: see PR #545 and my ecmaspeak-py repo.","msgtype":"m.text"},"ts":1572461196000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah, not ideal though","msgtype":"m.text"},"ts":1572461217000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jmdyck: yeah, 545 seems great","msgtype":"m.text"},"ts":1572461228000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"tx","msgtype":"m.text"},"ts":1572461237000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(given ecmarkup support, obviously)","msgtype":"m.text"},"ts":1572461246000,"senderName":"bakkot","senderId":"bakkot@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1572461256000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"its very good","msgtype":"m.text"},"ts":1572461260000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i recently added a comment about alternatives that don't require ecmarkup support","msgtype":"m.text"},"ts":1572461284000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: yes, locally","msgtype":"m.text"},"ts":1572461293000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ecma262 is like 800 pages ish right?","msgtype":"m.text"},"ts":1572461393000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"And re 545, note that the commit/diff in that PR isn't the 'final' product, for that you have to go to https://github.com/jmdyck/ecma262/tree/op_headers2 . (I said that in a comment somewhere, but it's been buried.)","msgtype":"m.text"},"ts":1572461481000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"devsnek: what is a \"page\"","msgtype":"m.text"},"ts":1572461572000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"idk","msgtype":"m.text"},"ts":1572461586000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is it a piece of a tree about the size of my ipad","msgtype":"m.text"},"ts":1572461593000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"maybe like","msgtype":"m.text"},"ts":1572461604000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"an A4 or 8.5x11 paper","msgtype":"m.text"},"ts":1572461667000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"PDF on ecma site says 764 pages","msgtype":"m.text"},"ts":1572461687000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf","msgtype":"m.text"},"ts":1572461702000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i can make that larger or smaller by tweaking the css prior to making the pdf tho :-p","msgtype":"m.text"},"ts":1572461802000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rkirsling: i think i have one stashed somewhere, ping me to look for it before december","msgtype":"m.text"},"ts":1572463607000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: :D","msgtype":"m.text"},"ts":1572463792000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Node.js modules team just reach consensus on unflagging ESM in Node.js 13 !!!","msgtype":"m.text"},"ts":1572468550000,"senderName":"MylesBorins","senderId":"MylesBorins@irc"},
{"content":{"body":"üéâ","msgtype":"m.text"},"ts":1572468659000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"@MylesBorins really cool - congrats!","msgtype":"m.text"},"ts":1572473911000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"@MylesBorins HELL YEAH","msgtype":"m.text"},"ts":1572474139000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's so cool! congrats!","msgtype":"m.text"},"ts":1572475625000,"senderName":"chicoxyzzy","senderId":"chicoxyzzy@irc"}
]