[
{"content":{"body":"Bakkot: 2007's defn of WeekDay is missing an ')'","msgtype":"m.text"},"ts":1600481002000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"or maybe it has an extra '('","msgtype":"m.text"},"ts":1600481044000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah, changing '((' to '(' seems likely","msgtype":"m.text"},"ts":1600481095000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yup, thanks","msgtype":"m.text"},"ts":1600481105000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"pushed","msgtype":"m.text"},"ts":1600481106000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hm, you've got <dfn id=\"integral Number\">integral Number</dfn>","msgtype":"m.text"},"ts":1600481837000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ids don't normally contain space","msgtype":"m.text"},"ts":1600481851000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1600481863000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"pushed","msgtype":"m.text"},"ts":1600481881000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Two ids that exist in master but not 2007: 'mathematical integer' (with a space!) and '‚Ñù'","msgtype":"m.text"},"ts":1600482395000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"'‚Ñù' I'd caught earlier but I guess never fixed","msgtype":"m.text"},"ts":1600483026000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"though not sure if I want to define it or just make the ID exist, hmm","msgtype":"m.text"},"ts":1600483118000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I guess I just never addressed my own comments on the PR, huh","msgtype":"m.text"},"ts":1600483477000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"Numeric values without a subscript suffix refer to mathematical values.\" so I wouldn't expect any \"<sub>‚Ñù</sub>\" but there are a few","msgtype":"m.text"},"ts":1600483719000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"pushed","msgtype":"m.text"},"ts":1600484347000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"one addressing that, one addressing the comments I'd left on the PR previously","msgtype":"m.text"},"ts":1600484365000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"still no id for ‚Ñù?","msgtype":"m.text"},"ts":1600484505000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"no, I left a comment about it","msgtype":"m.text"},"ts":1600484541000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"https://github.com/tc39/ecma262/pull/2007#issuecomment-695153332","msgtype":"m.text"},"ts":1600484564000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1600484598000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"one occ of \"the mathematical value of the number of code points in ...\": delete \"the mathematical value of\" ?","msgtype":"m.text"},"ts":1600484699000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1600484764000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"eek, 160 parsing errors in emu-algs, this could take a while.","msgtype":"m.text"},"ts":1600484776000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I'd guess (hope) it's just tripping on some new notation","msgtype":"m.text"},"ts":1600484794000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"probably, but it'll still take a while.","msgtype":"m.text"},"ts":1600484817000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"well, some of should will go away if i rebase to ecmaspeak master. we'll see how that works out...","msgtype":"m.text"},"ts":1600485395000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"lots of conflicts.","msgtype":"m.text"},"ts":1600485521000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"not surprised, given how many conflicts 2007 had","msgtype":"m.text"},"ts":1600485854000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"gonna hold off on landing other nontrivial editorial stuff until 2007 lands (except your overloads-removal PR, probably) so as to avoid having to deal with that again","msgtype":"m.text"},"ts":1600485945000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ok,maybe resolved conflicts, now only 93 parse errors in emu-algs","msgtype":"m.text"},"ts":1600486228000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"80 errors ...","msgtype":"m.text"},"ts":1600488027000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"46...","msgtype":"m.text"},"ts":1600488640000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Hm. Seems like \"If _n_ is A, _n_ is B, _n_ is C, _n_ is D, or _n_ is E, ...\" could be reduced to \"if _n_ is A, B, C, D, or E, ...\"","msgtype":"m.text"},"ts":1600489240000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"or \"if _n_ is one of A, ...\"","msgtype":"m.text"},"ts":1600489254000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"8 errors...","msgtype":"m.text"},"ts":1600489443000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Bakkot: In Atomics.wait, step that starts \"If _q_\"","msgtype":"m.text"},"ts":1600489780000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"one \"else\" preceded by semicolon, other by comma.","msgtype":"m.text"},"ts":1600489806000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"do you know off the top of your head if we prefer one or the other?","msgtype":"m.text"},"ts":1600489831000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"should probably both be semicolon","msgtype":"m.text"},"ts":1600489837000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"my guess would be we use both","msgtype":"m.text"},"ts":1600489839000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1600489840000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh, grammatically, yes","msgtype":"m.text"},"ts":1600489849000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"since there's commas within those clauses","msgtype":"m.text"},"ts":1600489865000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"We also use periods, followed by \"Otherwise\"","msgtype":"m.text"},"ts":1600489911000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"though not as often","msgtype":"m.text"},"ts":1600489974000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"pushed","msgtype":"m.text"},"ts":1600490088000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"urgh \"an implementation-approximated value representing ùîΩ(&pi; / 4)\"","msgtype":"m.text"},"ts":1600490222000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah, it was real tempting to just say `ùîΩ(&pi; / 4)`, but that is technically a normative change","msgtype":"m.text"},"ts":1600490321000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but isn't it an imp-approximation to the trancendental number, rather than an imp-approximation to the Number value for the trancendental number?","msgtype":"m.text"},"ts":1600490410000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i suppose it might be both","msgtype":"m.text"},"ts":1600490450000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1600490454000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it does look like we usually specify a real there","msgtype":"m.text"},"ts":1600490468000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"well, when it's not a constant, anyway","msgtype":"m.text"},"ts":1600490524000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"will change","msgtype":"m.text"},"ts":1600490526000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(I discussed this with Michael Ficarra at the time, so might end up going the other way if he has strong feelings)","msgtype":"m.text"},"ts":1600490653000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"pushed","msgtype":"m.text"},"ts":1600490785000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"also tweaked Math.hypot to do the computation on reals instead of floats","msgtype":"m.text"},"ts":1600490800000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"finally, 0 parse errors.","msgtype":"m.text"},"ts":1600491223000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"That's all from me for tonight.","msgtype":"m.text"},"ts":1600491254000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"thanks as always!","msgtype":"m.text"},"ts":1600491324000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Can someone explain why named function expressions allow referencing itself by name?","msgtype":"m.text"},"ts":1600512110000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"From what i understand, for func expression - it creates a special scope between function's local scope and outer lexical scope. This special scope has a immutable binding for func name.","msgtype":"m.text"},"ts":1600512111000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"That means, reassigning will break -","msgtype":"m.text"},"ts":1600512111000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600512111000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"var hello = 123;","msgtype":"m.text"},"ts":1600512111000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"a = function hello() {","msgtype":"m.text"},"ts":1600512111000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"  hello = 456; // ERROR","msgtype":"m.text"},"ts":1600512111000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"  const hello = 456 // works","msgtype":"m.text"},"ts":1600512112000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"}","msgtype":"m.text"},"ts":1600512112000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"```","msgtype":"m.text"},"ts":1600512113000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"But why was this considered necessary? Because it won't have access to itself from lexical scope?","msgtype":"m.text"},"ts":1600512117000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"it's necessary so you can recurse","msgtype":"m.text"},"ts":1600531035000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`(function fact(n) { if (n <= 1) return n; return n * fact(n-1); })(5)`","msgtype":"m.text"},"ts":1600531107000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: re 2007: looks like there was a mistake in a conflict resolution","msgtype":"m.text"},"ts":1600538832000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"wrt 2151 NumericLiteralSeparator","msgtype":"m.text"},"ts":1600538879000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Scan for \"The MV of <emu-grammar>DecimalIntegerLiteral :: NonZeroDigit DecimalDigits<\"","msgtype":"m.text"},"ts":1600538920000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"is missing \"NumericLiteralSeparator?\"","msgtype":"m.text"},"ts":1600539011000,"senderName":"jmdyck","senderId":"jmdyck@irc"}
]