[
{"content":{"body":"devsnek very nice","msgtype":"m.text"},"ts":1597104480000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"devsnek you can drop the `_ref_xxxx` ones; those aren't stable anyway","msgtype":"m.text"},"ts":1597104491000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"for purposes of redirecting, specifically","msgtype":"m.text"},"ts":1597104508000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"also it'll load faster if you ship it as a string and JSON.parse it at runtime","msgtype":"m.text"},"ts":1597104530000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah I know","msgtype":"m.text"},"ts":1597104538000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this whole multipage project is layers of low hanging fruit lol","msgtype":"m.text"},"ts":1597104583000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"when github shows a commit diff, and it hides the no-diff chunks, are the \"expand\" widgets in the left column supposed to make them appear? If so, they're not working for me.","msgtype":"m.text"},"ts":1597106215000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck yes they are, but they break for large files","msgtype":"m.text"},"ts":1597106228000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"including spec.html","msgtype":"m.text"},"ts":1597106232000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hmph","msgtype":"m.text"},"ts":1597106243000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"and they break silently: they just go away rather than telling you that they're broken","msgtype":"m.text"},"ts":1597106246000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it's dumb","msgtype":"m.text"},"ts":1597106248000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that's github for ya","msgtype":"m.text"},"ts":1597106915000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Bakkot: small changes https://github.com/tc39/ecmarkup/pull/237","msgtype":"m.text"},"ts":1597116426000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek is there a reason to do that now instead of when adding multipage support in general?","msgtype":"m.text"},"ts":1597117068000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i'm not sure how to get full support done but i know that change has to be made either way","msgtype":"m.text"},"ts":1597117099000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Yeah, just seems weird to add it separately","msgtype":"m.text"},"ts":1597117117000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"condolences to mozilla folks re: today's news :(","msgtype":"m.text"},"ts":1597165980000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"have we ever seen a `class Foo { super bar = 1; }` syntax in any proposal?","msgtype":"m.text"},"ts":1597167901000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"what does that even do","msgtype":"m.text"},"ts":1597167931000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not that I recall","msgtype":"m.text"},"ts":1597167948000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"devsnek: thats a good question","msgtype":"m.text"},"ts":1597168092000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i can imagine many things personally but 1 in particular is the only thing that makes sense","msgtype":"m.text"},"ts":1597168186000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but ðŸ¤· was more curious if the space was open","msgtype":"m.text"},"ts":1597168199000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"devsnek do you know if discord is blocked in China?","msgtype":"m.text"},"ts":1597168823000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I would expect it to be, on priors","msgtype":"m.text"},"ts":1597168829000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah, wikipedia says yes","msgtype":"m.text"},"ts":1597168842000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i just generally assume everything is blocked in china","msgtype":"m.text"},"ts":1597168869000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"freenode wasn't last I looked, IIRC","msgtype":"m.text"},"ts":1597168949000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it could be at any point though","msgtype":"m.text"},"ts":1597169275000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bradleymeck: never seen the syntax; seems like it'd be invalid in a base class and would mutate a superclass, so i'm not sure what the use case would be","msgtype":"m.text"},"ts":1597170463000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: it would mutate the superclass?","msgtype":"m.text"},"ts":1597170511000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that's what it suggests to me","msgtype":"m.text"},"ts":1597170650000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I could see that for `class F { super.x = 1; }` since `super.x` has meaning","msgtype":"m.text"},"ts":1597170774000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"`super` is what imo has meaning","msgtype":"m.text"},"ts":1597171028000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"`super()` or `super.whatever` both building off of that meaning","msgtype":"m.text"},"ts":1597171036000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: what is the meaning of `super`? since it cannot be directly assigned to a variable?","msgtype":"m.text"},"ts":1597171308000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"this syntax should not exist","msgtype":"m.text"},"ts":1597171371000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm neutral to the syntax","msgtype":"m.text"},"ts":1597171385000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: it refers to the superclass. `super()` invokes the superclass constructor, `super.x()` calls the superclass prototype's `x` method, etc","msgtype":"m.text"},"ts":1597171438000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'd expect `super.x = 1` to *assign* to the superclass's `x` property, and i'd expect `super bar = 1` to define and initialize the superclass' bar property","msgtype":"m.text"},"ts":1597171469000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: The merge of 1908 undefined sec-validatesharedintegertypedarray, which has been in master for a few years.","msgtype":"m.text"},"ts":1597181969000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"is undefined a verb","msgtype":"m.text"},"ts":1597182253000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1597182350000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"past participle, technically","msgtype":"m.text"},"ts":1597182351000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"though I guess that is a subset of \"verb\"","msgtype":"m.text"},"ts":1597182357000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"defined is a verb, undefined is a stadnard construction over that","msgtype":"m.text"},"ts":1597182364000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jmdyck: the diff has `oldid=\"sec-validatesharedintegertypedarray\"` but maybe only `oldids` is valid?","msgtype":"m.text"},"ts":1597183814000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah it's oldids","msgtype":"m.text"},"ts":1597183854000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I have a note to lint this but haven't gotten to it yet :(","msgtype":"m.text"},"ts":1597183861000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"k, all fixed","msgtype":"m.text"},"ts":1597183950000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Ah, I should lint that in Bikeshed, since I'm the one who introduced it and then ecmarkup took it too.","msgtype":"m.text"},"ts":1597185633000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"my plan is to have an explicit list of the expected attributes (at least for certain tags) and error out if you have any unexpected ones","msgtype":"m.text"},"ts":1597185926000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"s/error out/warn/, which will fail the build if you pass `--strict`","msgtype":"m.text"},"ts":1597185945000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(or at least it will once I can convince michael to review https://github.com/tc39/ecmarkup/pull/235 so I can cut a release)","msgtype":"m.text"},"ts":1597185968000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"sounds like the right plan","msgtype":"m.text"},"ts":1597186520000,"senderName":"ljharb","senderId":"ljharb@irc"}
]