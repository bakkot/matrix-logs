[
{"content":{"body":"Bakkot: RegExp.prototype [ @@split ]: Alg assumes that _q_ is mathy, but AdvanceStringIndex returns Number","msgtype":"m.text"},"ts":1600820230000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"In Function.prototype.bind, _targetLen_ starts as a Number, but then is overwritten by a math-integer. It's not wrong, but a new alias would probably be better.","msgtype":"m.text"},"ts":1600820713000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Array.prototype.shift: _len_ is mathy, _k_ is Number, so `_k_ &lt; _len_` is mixed-type.","msgtype":"m.text"},"ts":1600820792000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Some places where a mathy value needs to floatified:","msgtype":"m.text"},"ts":1600820935000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"StringCreate: _length_, in PropertyDescriptor record","msgtype":"m.text"},"ts":1600820986000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"RegExpInitialize: 0, in Set() call","msgtype":"m.text"},"ts":1600821059000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"RegExp.prototype [ @@match ]: 0, in Set() call","msgtype":"m.text"},"ts":1600821095000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"RegExp.prototype [ @@match ]: _n_, in ToString() call","msgtype":"m.text"},"ts":1600821158000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"RegExp.prototype [ @@search ]: 0, in SameValue() call","msgtype":"m.text"},"ts":1600821169000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"RegExp.prototype [ @@search ]: 0, in Set() call","msgtype":"m.text"},"ts":1600821179000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"RegExp.prototype [ @@split ]: _q_, in Set() call","msgtype":"m.text"},"ts":1600821219000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"RegExp.prototype [ @@split ]: _lengthA_, in ToString() call","msgtype":"m.text"},"ts":1600821285000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Array.prototype.concat: _n_, in ToString() call","msgtype":"m.text"},"ts":1600821321000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(twice)","msgtype":"m.text"},"ts":1600821333000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Array.prototype.concat: _n_, in Set() call","msgtype":"m.text"},"ts":1600821345000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Array.prototype.filter: _to_, in ToString() call","msgtype":"m.text"},"ts":1600821374000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Array.prototype.join: _k_, in ToString() call","msgtype":"m.text"},"ts":1600821406000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Array.prototype.pop: 0, in Set() call","msgtype":"m.text"},"ts":1600821433000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Array.prototype.reduce: _k_, in ToString() call","msgtype":"m.text"},"ts":1600821459000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Array.prototype.shift: 0, in Set() call","msgtype":"m.text"},"ts":1600821477000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"(done)","msgtype":"m.text"},"ts":1600821496000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: pushed","msgtype":"m.text"},"ts":1600821832000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"AdvanceStringIndex: \"Let _length_ be the Number value for ...\" but then the only use of it is `ℝ(_length_)`","msgtype":"m.text"},"ts":1600823136000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"something something git blame history :P","msgtype":"m.text"},"ts":1600823171000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah, I'm planning to fix up AdvanceStringIndex to operate on reals more generally at some point soon","msgtype":"m.text"},"ts":1600823196000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I looked at that and wasn't sure it was a win.","msgtype":"m.text"},"ts":1600823232000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"It gets to be more of a win if the Matcher objects also operate on reals","msgtype":"m.text"},"ts":1600823278000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"which they ought to, conceptually","msgtype":"m.text"},"ts":1600823291000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so I'd be doing both at the same time","msgtype":"m.text"},"ts":1600823298000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Also in AdvanceStringIndex: \"Let _indexMV_ be the mathematical value of _index_\" but then only used once. easier to just have `ℝ(_index_)` inline.","msgtype":"m.text"},"ts":1600823415000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Bakkot: that might be the end of my analysis of 2007","msgtype":"m.text"},"ts":1600824030000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck sweet","msgtype":"m.text"},"ts":1600824082000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Though I can redo (much faster now) if/when you make significant changes.","msgtype":"m.text"},"ts":1600824086000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"thank you for the many fixes","msgtype":"m.text"},"ts":1600824089000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yw","msgtype":"m.text"},"ts":1600824098000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I'll try the change to AdvanceStringIndex and might ping you once that's up","msgtype":"m.text"},"ts":1600824114000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I'm guessing I got all the blatant ones, but there might be subtler stuff I'm missing.","msgtype":"m.text"},"ts":1600824135000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"seems decently likely that there's some lurking in prose or something, but I'm not too worried; it's much better than it was","msgtype":"m.text"},"ts":1600824196000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh, yeah, I'm not checking prose at all (other than param descriptions in preambles)","msgtype":"m.text"},"ts":1600824229000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"also, my analysis was mainly looking for inconsistencies. It's possible there are case where the typing is consistent, but sub-optimal (too much inter-conversion)","msgtype":"m.text"},"ts":1600824415000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1600824541000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"jmdyck I pushed the change to AdvanceStringIndex","msgtype":"m.text"},"ts":1600826589000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1600826605000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"callsites were evenly split between wanting a Number and wanting a real, but the implementation itself is much nicer with reals","msgtype":"m.text"},"ts":1600826607000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: no new warnings","msgtype":"m.text"},"ts":1600828102000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"great, thanks","msgtype":"m.text"},"ts":1600828111000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Decorators on private fields are a little mindbending","msgtype":"m.text"},"ts":1600872474000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Jorendorff, what about them?","msgtype":"m.text"},"ts":1600898453000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"um, ...nothing, they seem to be pretty normal after all?","msgtype":"m.text"},"ts":1600901075000,"senderName":"jorendorff","senderId":"jorendorff@irc"}
]