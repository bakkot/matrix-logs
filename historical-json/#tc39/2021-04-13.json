[
{"content":{"body":"> Error constructor for test and validation frameworks that implements standardized AssertionError specification.","msgtype":"m.text"},"ts":1618289112000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"what is this readme talking about? https://github.com/chaijs/assertion-error","msgtype":"m.text"},"ts":1618289143000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"do we have a standardized `AssertionError` specification somewhere?","msgtype":"m.text"},"ts":1618289173000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"maybe \"what node does\"? not aware of anything","msgtype":"m.text"},"ts":1618289232000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"nope, i compared the two and they are way different","msgtype":"m.text"},"ts":1618289266000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"DerekNonGeneric: https://github.com/chaijs/assertion-error/issues/1 implies it's just a thing they were hoping to standardize, that never was","msgtype":"m.text"},"ts":1618289291000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb, a standardized specification for this sounds useful, actually","msgtype":"m.text"},"ts":1618289787000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"ljharb, the one node uses is quite complex compared to this one","msgtype":"m.text"},"ts":1618289906000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"deno just copied node and wrote it in typescript","msgtype":"m.text"},"ts":1618292534000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"amp puts a `.expected` property on `Error` classes, which might mean that they should actually be using an `AssertionError` instead https://github.com/ampproject/amphtml/blob/main/spec/amp-errors.md","msgtype":"m.text"},"ts":1618292987000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"right but AssertionError isn't a thing","msgtype":"m.text"},"ts":1618293026000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"a standardization attempt from 8 years ago isn't \"a standard\"","msgtype":"m.text"},"ts":1618293039000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"seems like a fairly common pattern, but there is no ECMAScript standard for it, which could be useful (even for browsers)","msgtype":"m.text"},"ts":1618293194000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"common in which libraries?","msgtype":"m.text"},"ts":1618293483000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"not \"throwing an error when an assertion is failed\", ofc, but \"throwing something that is named and has an interface of some kind of common `AssertionError`\"?","msgtype":"m.text"},"ts":1618293510000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"node & deno are using this and chai & jest too, which even went as far as formatting node assertions errors quite nicely https://github.com/facebook/jest/blob/034cd343189db57d3b957170aa2d7f869ca4c9ee/packages/jest-circus/src/formatNodeAssertErrors.ts","msgtype":"m.text"},"ts":1618293605000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"you just said you compared them and they are way different","msgtype":"m.text"},"ts":1618293723000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the chai one is different than node & deno. the chai one is much more simplified","msgtype":"m.text"},"ts":1618293771000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"ok, but deno aside, chai has one standard, node has another, presumably other assertion libraries have their own","msgtype":"m.text"},"ts":1618293799000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so where's the common thread","msgtype":"m.text"},"ts":1618293804000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb, i think this interface `AssertionErrorDetailsDescriptor` could be the common thread https://deno.land/stdâŠ™0/node/assertion_error.ts#L351-L357","msgtype":"m.text"},"ts":1618293925000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"DerekNonGeneric: if so, you could make a proposal for it documenting all the existing uses that would be a subset of","msgtype":"m.text"},"ts":1618294035000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"sgtm","msgtype":"m.text"},"ts":1618294441000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"ljharb, got a rough draft so far, but still working on it (turned out to be more work than expected) https://github.com/DerekNonGeneric/proposal-assertion-error","msgtype":"m.text"},"ts":1618347435000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"DerekNonGeneric: is there a reason it couldn","msgtype":"m.text"},"ts":1618348409000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"DerekNonGeneric: couldn't be a normal error with a `cause` object, with those properties?","msgtype":"m.text"},"ts":1618348420000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"like in userland i mean","msgtype":"m.text"},"ts":1618348435000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"perhaps for a polyfill? would need to read up on that proposal a bit more, but that would defeat the point of standardizing `AssertionError` in the first place since you can't say that you're providing a consistent (assertion library-agnostic) API for error reporters to consume","msgtype":"m.text"},"ts":1618349868000,"senderName":"DerekNonGeneric","senderId":"DerekNonGeneric@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1618350180000,"senderName":"ljharb","senderId":"ljharb@irc"}
]