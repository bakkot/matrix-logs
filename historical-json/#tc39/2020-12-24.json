[
{"content":{"body":"\"The String type is the set of all ordered sequences of zero or more 16-bit unsigned integer values.\" (spec)","msgtype":"m.text"},"ts":1608842453000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1608842471000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Why is it important to say \"unsigned integer values\"? What makes a difference from just \"values\".","msgtype":"m.text"},"ts":1608842481000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"They're treated as integers, not as bit sequences","msgtype":"m.text"},"ts":1608842531000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Where exactly?","msgtype":"m.text"},"ts":1608842552000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"and, specifically, they're treated as unsigned integers, not two's complement signed integers or whatever","msgtype":"m.text"},"ts":1608842554000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"here, for example: https://tc39.es/ecma262/#sec-utf16encodecodepoint","msgtype":"m.text"},"ts":1608842576000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"Let cu1 be the code unit whose value is floor((cp - 0x10000) / 0x400) + 0xD800.\"","msgtype":"m.text"},"ts":1608842582000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`floor((cp - 0x10000) / 0x400) + 0xD800` produces an integer, not a bit sequence","msgtype":"m.text"},"ts":1608842595000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"OK, I thought of that.","msgtype":"m.text"},"ts":1608842629000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The second sentence is evecn more confusing. \"The String type is generally used to represent textual data in a running ECMAScript program, in which case each element in the String is treated as a UTF-16 code unit value.\"","msgtype":"m.text"},"ts":1608842763000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"https://tc39.es/ecma262/#sec-ecmascript-language-types-string-type","msgtype":"m.text"},"ts":1608842776000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"What's confusing about it?","msgtype":"m.text"},"ts":1608842824000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"UTF-16 code units are 16-bit unsigned integers, so that makes sense, I think","msgtype":"m.text"},"ts":1608842838000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Am not sure what UTF-16 code unit value is","msgtype":"m.text"},"ts":1608842846000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I mean I think I know what it is.","msgtype":"m.text"},"ts":1608842869000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Again, I'm confused why is it important to mention UTF-16 here.","msgtype":"m.text"},"ts":1608842937000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Because UTF-16 describes how to interpret these sequences of 16-bit unsigned integer values as text.","msgtype":"m.text"},"ts":1608842970000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"That's what UTF-16 does, basically","msgtype":"m.text"},"ts":1608842977000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"But I'm not sure ES dictates how will those be presented to the user.","msgtype":"m.text"},"ts":1608843064000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"That's the job of the console, or something.","msgtype":"m.text"},"ts":1608843071000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The only thing where this is relevant might again come to some of these edge-case String methods","msgtype":"m.text"},"ts":1608843118000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"It is useful to a reader to know that the String type, which is _formally_ just sequences of 16-bit unsigned integers, generally represents textual data, and that the way that the formal definition relates to the thing it represents is UTF-16","msgtype":"m.text"},"ts":1608843181000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"But it doesnt mandate that String have to represent textual data, they can represent anything. It is up to the users to interpret that data as they wish.","msgtype":"m.text"},"ts":1608843247000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"there's lots of methods which produce Strings - `toString`, most notably. The sequences of integers they produce are chosen to make sense under utf-16, not any other relationship between integers and text.","msgtype":"m.text"},"ts":1608843287000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"similarly there's lots of methods which consume strings, and the strings they consume make sense as textual data under utf-16, not under other relationships between sequences of integers and text","msgtype":"m.text"},"ts":1608843325000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"And I check now, my source code encoding is UTF-8, I'm confused what are the implications of this then.","msgtype":"m.text"},"ts":1608843327000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"And also in node, writeableStream.write uses utf-8 by default.","msgtype":"m.text"},"ts":1608843379000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"those aren't really relevant to the spec","msgtype":"m.text"},"ts":1608843401000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"As far as the spec is concerned, source text is a sequence of Unicode code points.","msgtype":"m.text"},"ts":1608843476000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"So when I write code (I think the de facto source code standard is utf-8) and when I write a string literal. I guess the IDE still converts the characters into UTF 16?","msgtype":"m.text"},"ts":1608843500000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"(gotta run but I will try to answer further questions when I get back in a few hours)","msgtype":"m.text"},"ts":1608843508000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ok, ty. I don't have my questions formulated nicely yet. I'm like poking :D","msgtype":"m.text"},"ts":1608843527000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: in the context of the theoretical specification, the js engine is converting your utf8 source text to utf16","msgtype":"m.text"},"ts":1608845730000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"as part of some mechanism not described in the spec","msgtype":"m.text"},"ts":1608845750000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(in reality engines try to use utf8 over utf16 as much as possible because it's generally half the size)","msgtype":"m.text"},"ts":1608846076000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek, how does the JS engine even know how is my source encoded?","msgtype":"m.text"},"ts":1608849548000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: depends on the engine. in V8 for example, the api is Compile(String) and you have to create a String from one of these apis https://gc.gy/2c499887-8cd2-4c40-9f30-396b63c256ea.png","msgtype":"m.text"},"ts":1608853248000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I don't understand","msgtype":"m.text"},"ts":1608853319000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1608853342000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I input UTF-8 string into JS engine","msgtype":"m.text"},"ts":1608853360000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1608853366000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"That is I convert my source code string, into sequence of bytes","msgtype":"m.text"},"ts":1608853378000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1608853385000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"using UTF-8 encoding, how does V8 know to interpret that?","msgtype":"m.text"},"ts":1608853398000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"i'm not sure what you're asking","msgtype":"m.text"},"ts":1608853411000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"how does it know that I inputed \"const\" and not somethim like \"xyz\" using some other encoding.","msgtype":"m.text"},"ts":1608853425000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"it checks if string[0] is 'c' and string[1] is 'o' and etc","msgtype":"m.text"},"ts":1608853447000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Because the JS engine sees   Byte8: 12, FA, 2F, 3C, 4D","msgtype":"m.text"},"ts":1608853468000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"did you look at the screenshot i sent","msgtype":"m.text"},"ts":1608853481000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Yes, I didnt get it","msgtype":"m.text"},"ts":1608853488000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"like you would do","msgtype":"m.text"},"ts":1608853492000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`String::NewFromUtf8(some utf8 encoded data)`","msgtype":"m.text"},"ts":1608853511000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"or `String::NewFromOneByte(some latin1 encoded data)`","msgtype":"m.text"},"ts":1608853523000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"OK, and you would get 3 strings","msgtype":"m.text"},"ts":1608853535000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"And which one would you pick?","msgtype":"m.text"},"ts":1608853540000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"what","msgtype":"m.text"},"ts":1608853542000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm confused","msgtype":"m.text"},"ts":1608853555000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"If the JS engine sees only bytes of data:  Byte8: 12, FA, 2F, 3C, 4D","msgtype":"m.text"},"ts":1608853589000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1608853593000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"how does it know with which encoding scheme to decode this into meaningful tokens.","msgtype":"m.text"},"ts":1608853607000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"because you told it","msgtype":"m.text"},"ts":1608853613000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"for example `String::NewFromUtf8([12, FA, 2F, 3C, 4D])`","msgtype":"m.text"},"ts":1608853630000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you're calling the `NewFromUtf8` api","msgtype":"m.text"},"ts":1608853636000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"which tells it the data is utf8","msgtype":"m.text"},"ts":1608853640000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"But I'm just using \"node my_source.js\"","msgtype":"m.text"},"ts":1608853650000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I'm not telling \"node mySource.js --encoding utf-8\"","msgtype":"m.text"},"ts":1608853666000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"node assumes the input is utf8","msgtype":"m.text"},"ts":1608853668000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"And if it is not?","msgtype":"m.text"},"ts":1608853676000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"it will be interpreted incorrectly","msgtype":"m.text"},"ts":1608853693000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Can I add this --encoding flag?","msgtype":"m.text"},"ts":1608853697000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"and probably throw a syntaxerror","msgtype":"m.text"},"ts":1608853699000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1608853702000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"So I can use Node only with UTF-8 encoded source code?","msgtype":"m.text"},"ts":1608853722000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"more or less","msgtype":"m.text"},"ts":1608853733000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ok, thx :)","msgtype":"m.text"},"ts":1608853740000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Now, in constructing the String from the string literal, the engine will interpret the utf-8 encoded bytes as Unicode symbols and will construct the string into memory (an array of 2byte pairs) where it will encode this Unicode symbols using utf-16?","msgtype":"m.text"},"ts":1608854138000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"a real engine will probably use utf8 unless the characters are larger than that allows","msgtype":"m.text"},"ts":1608854255000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in the spec everything is just utf16 all the time so it doesn't matter","msgtype":"m.text"},"ts":1608854274000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"In JS string is immutable, so adding \"asd\" + \"c\" creates a new array in memory, right? Where the old \"asd\" array remains","msgtype":"m.text"},"ts":1608854397000,"senderName":"croraf","senderId":"croraf@irc"}
]