[
{"content":{"body":"littledan: import await addresses one of my big concerns; but it’s vitality is one that remains.","msgtype":"m.text"},"ts":1552696642000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: Is there any version of top-level await you could imagine that would address the virality concern (regardless of other issues people have raised)?","msgtype":"m.text"},"ts":1552697234000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"yep! Maybe sugar for an AAIFE with import or import await? That makes adding TLA or import await not a breaking change (transparent) but using import await ensures all the bindings are available (desired behavior). Both sync and async static import would work with any module. (just came up with this now so i haven’t thought it through more than this comment)","msgtype":"m.text"},"ts":1552697423000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: Do you mean, dependent modules would not be blocked?","msgtype":"m.text"},"ts":1552722407000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"If so, I don't think this would meet the WebAssembly goals well, as those should wait for the module to be ready before exposing the exports","msgtype":"m.text"},"ts":1552722785000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"it seems like a weird hazard that, if you leave off the `await`, you expose yourself to the race condition that the explainer walks through the techniques for avoiding.","msgtype":"m.text"},"ts":1552722809000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"this really would be a problem when refactoring!","msgtype":"m.text"},"ts":1552722825000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: yes, i dislike that dependent modules are blocked without them opting into it","msgtype":"m.text"},"ts":1552752301000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: They are opting into it by doing `import await`, right?","msgtype":"m.text"},"ts":1552752321000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I mean, they have the choice of not using the module at all, but it's not silently foisted on them","msgtype":"m.text"},"ts":1552752336000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"yes, but modules importing *them* are not","msgtype":"m.text"},"ts":1552752341000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"OK, I think that's where we have some confusion. I'd say, if you import a module using import await, you also have to use import await","msgtype":"m.text"},"ts":1552752359000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"(otherwise there's no point to any of it)","msgtype":"m.text"},"ts":1552752365000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"right, that’s the current proposal for import await iirc","msgtype":"m.text"},"ts":1552752376000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"right, so what is it that you're against with that?","msgtype":"m.text"},"ts":1552752391000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"or, what are you in favor of?","msgtype":"m.text"},"ts":1552752396000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"so that addresses my concern of silent optin - but it preserves the concern about vitality","msgtype":"m.text"},"ts":1552752402000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"*virality","msgtype":"m.text"},"ts":1552752405000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"heh I keep making the same mistake","msgtype":"m.text"},"ts":1552752414000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"DYAC :-p","msgtype":"m.text"},"ts":1552752420000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so, do you have any ideas of what would meet your requirements, while also not encouraging races?","msgtype":"m.text"},"ts":1552752459000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"perhaps the same idea i said earlier, but the bindings start out as promises instead of undefined or in tdz?","msgtype":"m.text"},"ts":1552753265000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it seems important that i can import a module that’s not using TLA, but that starts using import await, and that it doesn’t necessarily impact me","msgtype":"m.text"},"ts":1552753341000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb littledan it seems to me that if the \"import await\" is not viral there isn't much point to it. if just the consumer needs to know if would be dead simple for package authors to introduce a single level of indirection and never have to let consumers worry about it... in which case there really isn't any value in it","msgtype":"m.text"},"ts":1552763998000,"senderName":"MylesBorins","senderId":"MylesBorins@irc"},
{"content":{"body":"Yeah, I am similarly confused. Also, it's really hard for me to imagine how you'd use a module  when you don't know whether its bindings are Promises or not. Is everyone supposed to defensively await everything?","msgtype":"m.text"},"ts":1552764348000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"ljharb: Happy to keep bouncing ideas back and forth, but I think making all the exports into Promises wouldn't really work out","msgtype":"m.text"},"ts":1552764401000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"MylesBorins: if it is viral, then everyone will have to use it basically everywhere (unless, i suppose, if it errored on a sync module) but at that point either a graph leaf will never use TLA, limiting its usefulness, or it will, forcing the entire chain above it to use import await as well.","msgtype":"m.text"},"ts":1552767327000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i suppose another alternative is that TLA modules can only be dynamically imported","msgtype":"m.text"},"ts":1552767367000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and then `await import()` at the top level is how you’d consume that in a blocking fashion, and that would be your own TLA","msgtype":"m.text"},"ts":1552767408000,"senderName":"ljharb","senderId":"ljharb@irc"}
]