[
{"content":{"body":"alert() = 1 // hey that's illegal","msgtype":"m.text"},"ts":1586743899000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"Chrome will open an alert window then ReferenceError","msgtype":"m.text"},"ts":1586743930000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"yeah, they compile it to something like `alert()[function(){throw new ReferenceError}() = 1`","msgtype":"m.text"},"ts":1586746811000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"like, in the parser","msgtype":"m.text"},"ts":1586746816000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I do not expect anyone is relying on the function actually getting invoked","msgtype":"m.text"},"ts":1586746825000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but who knows.","msgtype":"m.text"},"ts":1586746829000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"is the best way to handle IterationStatement just to make a bunch of helper ast node types like \"WhileStatement\"","msgtype":"m.text"},"ts":1586809724000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: as in, when designing your AST?","msgtype":"m.text"},"ts":1586810623000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that is the usual thing to do, yes","msgtype":"m.text"},"ts":1586810630000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1586810630000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"> TopLevelVarDeclaredNames","msgtype":"m.text"},"ts":1586813127000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah, the evils of delete","msgtype":"m.text"},"ts":1586813145000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"> If Statement is Statement : LabelledStatement, return TopLevelVarDeclaredNames of Statement.","msgtype":"m.text"},"ts":1586813151000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"isn't this circular","msgtype":"m.text"},"ts":1586813160000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"or","msgtype":"m.text"},"ts":1586813170000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"idk","msgtype":"m.text"},"ts":1586813172000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this is a very confusing part of the spec","msgtype":"m.text"},"ts":1586813181000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that looks like it shouldn't happen? *off to reread*","msgtype":"m.text"},"ts":1586813253000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it makes sense, but it doesn't specify that it needs to use the labelledstatement form of TopLevelVarDeclaredNames","msgtype":"m.text"},"ts":1586813309000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bug it looks like","msgtype":"m.text"},"ts":1586813362000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"It doesn't have to specify that it needs to use the labelledstatement form of TopLevelVarDeclaredNames: that'll happen automatically via the chain rule","msgtype":"m.text"},"ts":1586813506000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I wonder how many new rules we would have to add to get rid of the chain rule","msgtype":"m.text"},"ts":1586813647000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"probably enough to make it not worth it","msgtype":"m.text"},"ts":1586813652000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"jmdyck: but the chain rule isn't being applied when you get the the StatementItem: Statement form, i don't see how it would propagate here, the definition of the chain rule doesn't seem to state this would work if it is in an algorithm?","msgtype":"m.text"},"ts":1586813665000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"there some issue in my implementation of the var scoped declarations/names stuff :(","msgtype":"m.text"},"ts":1586813690000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if anyone here feels confidant in their understanding of how those work my new implementations are in this folder https://github.com/engine262/engine262/tree/parser/src/static-semantics","msgtype":"m.text"},"ts":1586813765000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i just think this needs to be clarified somewhere (idc where) that it uses the LabelledStatement form. Right now it does appear to be cyclic even with me rereading https://tc39.es/ecma262/#sec-algorithm-conventions-syntax-directed-operations","msgtype":"m.text"},"ts":1586813804000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"devsnek: your implementation doesn't handle labeled statements?","msgtype":"m.text"},"ts":1586813838000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"bradleymeck: the chain rule doesn't need to 'propagate here'.  It 'starts' when you need to execute \"TopLevelVarDeclaredNames of |Statement|\"","msgtype":"m.text"},"ts":1586813844000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"i haven't got that far yet","msgtype":"m.text"},"ts":1586813848000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"rn i'm stuck on var declarations not being found in VarScopedDeclarations","msgtype":"m.text"},"ts":1586813895000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jmdyck: i see","msgtype":"m.text"},"ts":1586813977000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"... there isn't an explicit TopLevelVarDeclaredNames rules for `Statement : LabelledStatement`, but the latter is a chain production, so the chain rule kicks in","msgtype":"m.text"},"ts":1586813990000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: confusing, but i understand","msgtype":"m.text"},"ts":1586814021000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"}
]