[
{"content":{"body":"regardless of the multifile discussion though, does anybody have thoughts about the styling of notes that I had mentioned?","msgtype":"m.text"},"ts":1578010846000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I can open up an issue to discuss, just not sure whether 262 is the right repo or not","msgtype":"m.text"},"ts":1578010863000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: which styling, the color contrast?","msgtype":"m.text"},"ts":1578011113000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"rkirsling: it's just css; probably easiest to open a PR and the render preview can illustrate the difference","msgtype":"m.text"},"ts":1578011138000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"like having a light orange background instead of a grey bar on the left, say, in a similar fashion to HTML / WASM specs","msgtype":"m.text"},"ts":1578011167000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah that's what I was thinking","msgtype":"m.text"},"ts":1578011183000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"cool.","msgtype":"m.text"},"ts":1578011186000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"be sure to check the print stylesheet manually too, just to make sure it's sensible","msgtype":"m.text"},"ts":1578011222000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh good call, I wouldn't've thought of it","msgtype":"m.text"},"ts":1578011268000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ljharb: should FunctionDeclarationInstantiation 28.f.i.5 be Perform instead of Call?","msgtype":"m.text"},"ts":1578011616000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: typically Perform is when the return value doesn't matter, yes (https://tc39.es/ecma262/#sec-declarative-environment-records-initializebinding-n-v has one but it's not used in https://tc39.es/ecma262/#sec-functiondeclarationinstantiation). i also see 22.e, and 27.c.i.3, and probably others","msgtype":"m.text"},"ts":1578011778000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"devsnek: want to make a PR that cleans up the side-effecty uses of Call?","msgtype":"m.text"},"ts":1578011787000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(on abstract ops only ofc)","msgtype":"m.text"},"ts":1578011796000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1578011802000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i've only ever seen it this once","msgtype":"m.text"},"ts":1578011809000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lol this comment is a riot https://github.com/tc39/ecma262/issues/875#issuecomment-292671155","msgtype":"m.text"},"ts":1578011817000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"now i'm excited for this novel","msgtype":"m.text"},"ts":1578011896000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"The Pragma Diaries","msgtype":"m.text"},"ts":1578011919000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm seeing assertion failures with that eval change","msgtype":"m.text"},"ts":1578012790000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"still trying to debug it","msgtype":"m.text"},"ts":1578012796000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: you gave thumbs-up to https://github.com/tc39/ecma262/pull/1791#discussion_r362648352, but it doesn't appear to have affected the merge","msgtype":"m.text"},"ts":1578013534000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"whoops, i may have missed it, I’ll add the fix in shortly","msgtype":"m.text"},"ts":1578013846000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i should make a shortcut for this `git -c color.ui=always diff | awk '!/\\/\\//{print}'`","msgtype":"m.text"},"ts":1578013889000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"or find a way to enable syntax highlighting in diffs","msgtype":"m.text"},"ts":1578013918000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"git diff seems to default to --color=always on my mac","msgtype":"m.text"},"ts":1578014309000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"what's the awk command for? seems to just print it all out instead of entering a scrolly view","msgtype":"m.text"},"ts":1578014329000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: it ignores comments","msgtype":"m.text"},"ts":1578014521000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ohh","msgtype":"m.text"},"ts":1578014539000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"difficult to find problematic line when it looks like this https://gc.gy/45719539.png","msgtype":"m.text"},"ts":1578014545000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1578014588000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but then i realized","msgtype":"m.text"},"ts":1578014655000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"instead of hiding lines","msgtype":"m.text"},"ts":1578014658000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"why not just syntax highlight the diff","msgtype":"m.text"},"ts":1578014665000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so now i'm going down an entirely separate rabbit hole","msgtype":"m.text"},"ts":1578014671000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1578014752000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"man this eval change is really giving me trouble","msgtype":"m.text"},"ts":1578017425000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://gc.gy/45722454.png","msgtype":"m.text"},"ts":1578017454000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i think i need to rewrite all the iterator binding initialization stuff 😢","msgtype":"m.text"},"ts":1578017860000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jmdyck: fixed, thanks for the catch https://github.com/tc39/ecma262/commit/cb73c69d861db21506c0246197fd87b723d6cdb4","msgtype":"m.text"},"ts":1578022904000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: no problem","msgtype":"m.text"},"ts":1578024738000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"uhhhh speaking of notes","msgtype":"m.text"},"ts":1578025280000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"what happened here? https://tc39.es/ecma262/#table-42","msgtype":"m.text"},"ts":1578025286000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"it not only spills but isn't horizontally scrollable","msgtype":"m.text"},"ts":1578025300000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1578025314000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"in spec.html, \"gives examples of the ExportEntry record fields\" is referencing table 42","msgtype":"m.text"},"ts":1578025409000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but somehow table 48 shows up","msgtype":"m.text"},"ts":1578025423000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"let me do a bisect","msgtype":"m.text"},"ts":1578025442000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"no, it's referencing the thing whose id is \"table-42\", which happens to currently be Table 48","msgtype":"m.text"},"ts":1578025517000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1578025525000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"then in that case, it seems like all those note-d tables should be hoisted outside of the emu-note","msgtype":"m.text"},"ts":1578025560000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"or hmm","msgtype":"m.text"},"ts":1578025617000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm not really sure. it looks *weird* to have the tables inside a note, but that one table's the only one that's \"too wide\" such that it's a problem","msgtype":"m.text"},"ts":1578025636000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah hm","msgtype":"m.text"},"ts":1578025953000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"wow, that table barely can be said to fit even if it is hoisted","msgtype":"m.text"},"ts":1578026073000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"the first column is <code> so white-space: pre, and the other columns can't be any smaller because of the header text","msgtype":"m.text"},"ts":1578026114000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1578026132000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I'm struggling to come up with a suggestion","msgtype":"m.text"},"ts":1578026149000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"make your browser window really wide :)","msgtype":"m.text"},"ts":1578026180000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1578026196000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"and print sideways?","msgtype":"m.text"},"ts":1578026212000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":":p","msgtype":"m.text"},"ts":1578026214000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hm, yeah, what does it look like in the pdf","msgtype":"m.text"},"ts":1578026261000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"lol even if i make the `<code>` font-size 50% the table stlll doesn't fit","msgtype":"m.text"},"ts":1578026335000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"In the ES2019 PDF, it *almost* fits: in the rightmost column, the rightmost character gets trimmed","msgtype":"m.text"},"ts":1578026593000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"ok sanity check","msgtype":"m.text"},"ts":1578028877000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"by step 25 of FunctionDeclarationInstantiation","msgtype":"m.text"},"ts":1578028917000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is `env` registered to the surrounding context in any way","msgtype":"m.text"},"ts":1578028946000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't think it is","msgtype":"m.text"},"ts":1578028950000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"\"registered\"?","msgtype":"m.text"},"ts":1578028997000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"like attached to the callee context","msgtype":"m.text"},"ts":1578029017000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i think argument initializers are broken rn","msgtype":"m.text"},"ts":1578029048000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`env` is set in 19.b or 20.c; that doesn't do what you're asking?","msgtype":"m.text"},"ts":1578029072000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"but it isn't registered to calleeContext right","msgtype":"m.text"},"ts":1578029092000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"imagine `(function(a, b = a) {})`","msgtype":"m.text"},"ts":1578029101000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"IteratorBindingInitialization would create `a`","msgtype":"m.text"},"ts":1578029109000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"because it gets passed `env` explicitly","msgtype":"m.text"},"ts":1578029114000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but then in `b = a`","msgtype":"m.text"},"ts":1578029124000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`env` is not attached to the context on the stack","msgtype":"m.text"},"ts":1578029135000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so you get a reference error","msgtype":"m.text"},"ts":1578029137000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: ^","msgtype":"m.text"},"ts":1578029181000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ljharb: this is some impressive house-cleaning you're doing today","msgtype":"m.text"},"ts":1578035232000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1578035232000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":":-p","msgtype":"m.text"},"ts":1578035250000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: was there recently an issue or plenary topic about built-in functions appearing to be a weird mix of strict and not strict","msgtype":"m.text"},"ts":1578086444000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i feel like there was but i can't find anything on it","msgtype":"m.text"},"ts":1578086454000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Question re:","msgtype":"m.text"},"ts":1578086494000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"> If the phrase “[lookahead ∉ set]” appears in the right-hand side of a production, it indicates that the production may not be used if the immediately following input token sequence is a member of the given set. The set can be written as a comma separated list of one or two element terminal sequences enclosed in curly brackets.","msgtype":"m.text"},"ts":1578086504000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"> For convenience, the set can also be written as a nonterminal, in which case it represents the set of all terminals to which that nonterminal could expand. If the set consists of a single terminal the phrase “[lookahead ≠ terminal]” may be used.","msgtype":"m.text"},"ts":1578086506000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"devsnek: i don't think a plenary topic, but yes an issue","msgtype":"m.text"},"ts":1578086553000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"like doing `Array.caller` or `Array.arguments`","msgtype":"m.text"},"ts":1578086564000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"The grammar includes `[lookahead ≠ \"let\" \"[\"]` in many places, but I’m unclear on what would make that valid. The quoted text seems to be saying that this should be `[lookahead ∉ { \"let\" \"[\" }]`","msgtype":"m.text"},"ts":1578086586000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"devsnek: oh hm, not sure about that part","msgtype":"m.text"},"ts":1578086589000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm not sure if that exactly was the topic","msgtype":"m.text"},"ts":1578086605000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but i'm pretty sure something weird like that","msgtype":"m.text"},"ts":1578086622000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bathos: `if (let [x] = 1)`","msgtype":"m.text"},"ts":1578086645000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1578086649000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"for","msgtype":"m.text"},"ts":1578086650000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not if","msgtype":"m.text"},"ts":1578086652000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"my rust habits are leaking in","msgtype":"m.text"},"ts":1578086657000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I understand the intended effect, I’m referring to the notation","msgtype":"m.text"},"ts":1578086677000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"devsnek: it's okay, you're just excited for Devin's proposal, right","msgtype":"m.text"},"ts":1578086690000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1578086696000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bathos: `lookahead ∉ { \"let\" \"[\" }` means lookahead cannot be one of the elements in the set","msgtype":"m.text"},"ts":1578086723000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"There’s seemingly no allowance for `[lookahead ≠ terminal-sequence]`, only the set notation seems to permit its members to be sequences of terminals / nonterminals","msgtype":"m.text"},"ts":1578086729000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"devsnek: only if there is a comma","msgtype":"m.text"},"ts":1578086743000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"set members can be sequences, as occurs in several places and is mentioned in that quoted bit. Commas separate the sequences","msgtype":"m.text"},"ts":1578086779000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"oh you mean a single-itemed set of that production","msgtype":"m.text"},"ts":1578086813000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1578086814000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(I mean, yes, it means lookahead cannot be one of the elements in the set. But that’s a set with one member)","msgtype":"m.text"},"ts":1578086815000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"`If the set consists of a single terminal the phrase “[lookahead ≠ terminal]” may be used.`","msgtype":"m.text"},"ts":1578086826000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i think this is what you're looking for then","msgtype":"m.text"},"ts":1578086840000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Right — but `let [` is two terminals.","msgtype":"m.text"},"ts":1578086867000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"It says the ‘shorthand’ is available when it’s just one.","msgtype":"m.text"},"ts":1578086894000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"I think maybe it should say ‘if the set consists of a single member’ or ‘if the set consists of a single sequence of terminals’","msgtype":"m.text"},"ts":1578086949000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"yeah the wording could be improved","msgtype":"m.text"},"ts":1578086961000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(Example of sequences in the set notation here: https://tc39.es/ecma262/#prod-ExpressionStatement)","msgtype":"m.text"},"ts":1578086977000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"thankfully it's doing what it means to, so it's really just a little editorial thing","msgtype":"m.text"},"ts":1578086981000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i would say `If the set consists of a single element the phrase “[lookahead ≠ element]” may be used.`","msgtype":"m.text"},"ts":1578087020000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the rest of the paragraph does refer to \"terminal sequence(s)\" though","msgtype":"m.text"},"ts":1578087086000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so I think it would be natural to carry that through","msgtype":"m.text"},"ts":1578087095000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(er well, there are two such paragraphs that are very similar but yeah)","msgtype":"m.text"},"ts":1578087108000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"we should just have a link to a live web chat with waldemar","msgtype":"m.text"},"ts":1578087144000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"where he explains the grammar","msgtype":"m.text"},"ts":1578087147000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"heh, I'm sure he'd love that","msgtype":"m.text"},"ts":1578087164000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but it's just a simple oversight, really","msgtype":"m.text"},"ts":1578087172000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Yeah — I think either \"element\" or \"terminal sequence\" would work. I wasn’t sure if I was missing something or if it was a typo etc.","msgtype":"m.text"},"ts":1578087174000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"another thing I noticed while looking at this","msgtype":"m.text"},"ts":1578087248000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I wonder if the font usage in https://tc39.es/ecma262/#sec-grammar-notation is really what it's meant to be","msgtype":"m.text"},"ts":1578087265000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"like","msgtype":"m.text"},"ts":1578087286000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"> Terminal symbols are shown in `fixed width` font, both in the productions of the grammars and throughout this specification whenever the text directly refers to such a terminal symbol.","msgtype":"m.text"},"ts":1578087291000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"er well hmm actually maybe it's not fixable","msgtype":"m.text"},"ts":1578087327000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Yeah, that should be something like ‘literal’ terminals. Referenced terminals use italics like nonterminals do.","msgtype":"m.text"},"ts":1578087329000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"er at least I was focused on the fixed width font being different in the paragraph vs. the production","msgtype":"m.text"},"ts":1578087364000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1578087376000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"but that's just that our <code> font and our <emu-t> font are different, but both are at least fixed width, and the latter isn't choosable in body text","msgtype":"m.text"},"ts":1578087432000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so I guess that's fine-ish","msgtype":"m.text"},"ts":1578087440000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkisling/devsnek — opened a PR for the description of the single-element shorthand: https://github.com/tc39/ecma262/pull/1828","msgtype":"m.text"},"ts":1578089699000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"shu: dunno if you saw my ping yesterday, but the changes to function arguments broke the scope a bit. i'm trying to figure out a fix but i'm not 100% sure what the intended behaviour is supposed to be","msgtype":"m.text"},"ts":1578089842000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bathos: nice","msgtype":"m.text"},"ts":1578089858000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: oh? i missed it, will look in a bit","msgtype":"m.text"},"ts":1578090044000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: very quick example `(function(a, b = a) {})()`, `a` is created in `env`, but `env` is not attached to the current context, so in `b = a`, looking up `a` is a reference error","msgtype":"m.text"},"ts":1578090093000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: isn't that example okay because env is passed in explicitly to IteratorBindingInitialization?","msgtype":"m.text"},"ts":1578091861000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: it creates the bindings just fine","msgtype":"m.text"},"ts":1578091886000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but the expression on the right hand side of an initializer","msgtype":"m.text"},"ts":1578091894000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"can not see the environment","msgtype":"m.text"},"ts":1578091898000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah, indeed that seems like a bug yes","msgtype":"m.text"},"ts":1578091952000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"good catch","msgtype":"m.text"},"ts":1578092016000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"step 2 for FDI needs to set both the LexicalEnvironment and the VariableEnvironment","msgtype":"m.text"},"ts":1578092042000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"like `calleeContext.LexicalEnvironment = env` after step 19?","msgtype":"m.text"},"ts":1578092112000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well [[LexicalEnvironment]]","msgtype":"m.text"},"ts":1578092131000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"or however the spec notates it","msgtype":"m.text"},"ts":1578092134000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i think it's one of those non-slot slots","msgtype":"m.text"},"ts":1578092254000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so it'd just be \"Set calleeContext's LexicalEnvironment to env\"","msgtype":"m.text"},"ts":1578092286000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"seems to work in engine262","msgtype":"m.text"},"ts":1578092291000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this whole section of the spec is very confusing","msgtype":"m.text"},"ts":1578092326000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"`(function(a = eval('var c = 1')) { return c })()` should this return 1 or throw an error","msgtype":"m.text"},"ts":1578092370000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i thought the extra environment was to separate it so it should throw but maybe i have the wrong idea","msgtype":"m.text"},"ts":1578092441000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that should return 1","msgtype":"m.text"},"ts":1578092481000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"from outer to inner, for a function with parameter expressions, the envs are:","msgtype":"m.text"},"ts":1578092577000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"1. FunctionEnv (holds vars introduced by direct eval in parameter expressions) -> 2. DeclarativeEnv (params, \"arguments\", etc) -> 3. DeclarativeEnv (body vars) -> 4. DeclarativeEnv (body lexicals)","msgtype":"m.text"},"ts":1578092656000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"during parameter evaluation, 1 is the context's VariableEnvironment and 2 is the context's LexicalEnvironment","msgtype":"m.text"},"ts":1578092675000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"during body evaluation, 3 is the VarEnv and 4 is the LexEnv","msgtype":"m.text"},"ts":1578092685000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"at least that's what it's supposed to be","msgtype":"m.text"},"ts":1578092692000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1578092697000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shall i prepare a PR or do you have one handy?","msgtype":"m.text"},"ts":1578092759000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"you probably should","msgtype":"m.text"},"ts":1578092768000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1578092848000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it's kind of weird how often `NOTE:`s are inlined into algs","msgtype":"m.text"},"ts":1578092865000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"seems like probably more than necessary","msgtype":"m.text"},"ts":1578092876000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"yeah, ecmarkup feature request","msgtype":"m.text"},"ts":1578092879000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"they at least shouldn't end up renumbering the alg steps","msgtype":"m.text"},"ts":1578092895000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"is there an existing one?","msgtype":"m.text"},"ts":1578092938000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i'm still getting weird errors in engine262 and i'm not sure if they're spec bugs or engine262 bugs lol","msgtype":"m.text"},"ts":1578092943000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://gc.gy/45797934.png","msgtype":"m.text"},"ts":1578092944000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: your second example should error","msgtype":"m.text"},"ts":1578093029000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"though that error doesn't make sense","msgtype":"m.text"},"ts":1578093036000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that is a redeclaration error","msgtype":"m.text"},"ts":1578093040000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"maybe I should help out with ecmarkup stuff","msgtype":"m.text"},"ts":1578093047000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"so many things that could be done","msgtype":"m.text"},"ts":1578093053000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: it's a runtime reference error","msgtype":"m.text"},"ts":1578093057000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"should it be a syntax error","msgtype":"m.text"},"ts":1578093065000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the parameter 'a' is like a lexical binding, and the direct eval 'a' is trying to declare in the VarEnv, which is outer of the lexical env that contains the parameter 'a'","msgtype":"m.text"},"ts":1578093077000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so when the direct eval runs it should be a SyntaxError","msgtype":"m.text"},"ts":1578093083000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1578093088000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: is that re-declaration check added in annex b","msgtype":"m.text"},"ts":1578093149000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: no, that's just a regular redeclaration check afaik","msgtype":"m.text"},"ts":1578093206000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it's the same semantics redeclaration wise as `let a; { var a; }`","msgtype":"m.text"},"ts":1578093222000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i'm trying to see if my impl of EvalDeclarationInstantiation diverges","msgtype":"m.text"},"ts":1578093234000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there is only one place where a var can be declared \"over\" an already declared lexical binding","msgtype":"m.text"},"ts":1578093259000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i think...","msgtype":"m.text"},"ts":1578093262000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"which is the weird annex b catch block semantics","msgtype":"m.text"},"ts":1578093271000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"where you can have a var with the same name as the lexical catch binding","msgtype":"m.text"},"ts":1578093277000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"`let a; eval('var a')` throws a syntax error as expected","msgtype":"m.text"},"ts":1578093474000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"on function entry, there is a single environment that is both the VarEnv and the LexEnv","msgtype":"m.text"},"ts":1578093672000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and then once you hit sloppy step with parameter expressions, you make a new env, set that as the LexEnv but leave the VarEnv alone","msgtype":"m.text"},"ts":1578093703000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"is that what you're doing?","msgtype":"m.text"},"ts":1578093714000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i added a step after 19 that sets the VariableEnvironment and the LexicalEnvironment to env","msgtype":"m.text"},"ts":1578093740000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"should it just be the LexicalEnvironment","msgtype":"m.text"},"ts":1578093750000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah, sorry, not both, just LexicalEnv","msgtype":"m.text"},"ts":1578093767000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"let me push the PR and you can see the diff, it's small","msgtype":"m.text"},"ts":1578093782000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ey it works now","msgtype":"m.text"},"ts":1578093830000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":":+1:","msgtype":"m.text"},"ts":1578093965000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i assume it should also throw in strict mode right","msgtype":"m.text"},"ts":1578093988000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"actually","msgtype":"m.text"},"ts":1578094056000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"no it does not","msgtype":"m.text"},"ts":1578094060000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"strict mode direct evals have their own var envs, vars cannot escape","msgtype":"m.text"},"ts":1578094068000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i think test262 needs to flag some tests as strict only in that case","msgtype":"m.text"},"ts":1578094086000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah, i updated test262 for this, did i miss some?","msgtype":"m.text"},"ts":1578094109000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"uh language/expressions/arrow-function/eval-var-scope-syntax-err.js","msgtype":"m.text"},"ts":1578094151000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"language/expressions/async-generator/eval-var-scope-syntax-err.js","msgtype":"m.text"},"ts":1578094157000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i think these are all generated","msgtype":"m.text"},"ts":1578094161000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the description says \"sloppy only\"","msgtype":"m.text"},"ts":1578094189000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1578094195000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"should not run in strict mode","msgtype":"m.text"},"ts":1578094198000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there's a flag for that?","msgtype":"m.text"},"ts":1578094204000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yes by default all tests run in strict and sloppy mode","msgtype":"m.text"},"ts":1578094217000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"wat","msgtype":"m.text"},"ts":1578094223000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1578094225000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"there are two flags","msgtype":"m.text"},"ts":1578094263000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"onlyStrict and noStrict","msgtype":"m.text"},"ts":1578094266000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"shu: how were you visualizing an inline note appearing without using a list item numeral?","msgtype":"m.text"},"ts":1578094904000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i assume like in the html spec","msgtype":"m.text"},"ts":1578094957000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"do they have the full note styling injected into the steps?","msgtype":"m.text"},"ts":1578094980000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"rkirsling: i have not thought too much about it, maybe a differently colored box with the same indent as the step, but without a numeral?","msgtype":"m.text"},"ts":1578094987000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"right fair enough","msgtype":"m.text"},"ts":1578094996000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"https://gc.gy/45799992.png","msgtype":"m.text"},"ts":1578095001000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1578095008000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"we could get fancy like give notes their own separate ordinal","msgtype":"m.text"},"ts":1578095027000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i propose footnotes","msgtype":"m.text"},"ts":1578095045000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well I would leave that part for after https://github.com/tc39/ecma262/issues/1825 I guess, but for now, I might just address the cases where either (1) there's a NOTE tacked onto the end of a line or (2) the final step is a NOTE that applies to the whole alg","msgtype":"m.text"},"ts":1578095061000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(/s)","msgtype":"m.text"},"ts":1578095063000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i think i like them inline actually","msgtype":"m.text"},"ts":1578095063000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah i was kidding, footnotes would be terrible","msgtype":"m.text"},"ts":1578095075000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"having to jump to the bottom of an 800 page document","msgtype":"m.text"},"ts":1578095082000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"'cause those are the only two cases that I find problematic","msgtype":"m.text"},"ts":1578095090000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"\"for footnotes, please purchase Volume: Footnotes\"","msgtype":"m.text"},"ts":1578095109000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1578095115000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"\"if Ecma were an academic publishing org\"","msgtype":"m.text"},"ts":1578095135000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"can we just copy everything the wasm spec does","msgtype":"m.text"},"ts":1578095161000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"visually i mean","msgtype":"m.text"},"ts":1578095165000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"writing our documentation in mathjax would suck","msgtype":"m.text"},"ts":1578095170000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like, use tex fonts?","msgtype":"m.text"},"ts":1578095175000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"wasm is real purty","msgtype":"m.text"},"ts":1578095184000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: yes","msgtype":"m.text"},"ts":1578095190000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but yeah mathjax requires a multipage spec","msgtype":"m.text"},"ts":1578095195000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"otherwise it's \"brb gonna render 1200 pages of TeX real quick and get back to you\"","msgtype":"m.text"},"ts":1578095223000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"i have a fun \"knuth\" theme for wikipedia","msgtype":"m.text"},"ts":1578095291000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://gc.gy/45800345.png","msgtype":"m.text"},"ts":1578095351000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"no we are the people's spec","msgtype":"m.text"},"ts":1578095361000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"none of them snooty tex type here","msgtype":"m.text"},"ts":1578095366000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"https://gc.gy/45800413.png","msgtype":"m.text"},"ts":1578095415000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1578095519000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"shu: actually I think there is truth to that though","msgtype":"m.text"},"ts":1578095533000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"if we (along with most web specs) don't get by with normal web rendering then it seems a bit like blatant non-dogfooding","msgtype":"m.text"},"ts":1578095628000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"mathml would be a different story","msgtype":"m.text"},"ts":1578095654000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hmm, there are a total of only four notes that bother me","msgtype":"m.text"},"ts":1578095728000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"*inline notes","msgtype":"m.text"},"ts":1578095738000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"three are on the same line as a normal alg step, one (well, maybe two) is a final inline note that should be non-inline","msgtype":"m.text"},"ts":1578095781000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"but I still hesitate slightly because step 14 at the end of https://tc39.es/ecma262/#sec-runtime-semantics-caseblockevaluation is tricky","msgtype":"m.text"},"ts":1578095824000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"well nah I suppose that can just be raised","msgtype":"m.text"},"ts":1578095854000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"these are effectively line comments after all","msgtype":"m.text"},"ts":1578095863000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"that note is terrifying","msgtype":"m.text"},"ts":1578095894000,"senderName":"devsnek","senderId":"devsnek@irc"}
]