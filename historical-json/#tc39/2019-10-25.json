[
{"content":{"body":"Who are the 262 editors now? Or is that a secret until the October minutes are published? It's kind of weird to be getting reviews and comments from people without knowing which of them is an editor.","msgtype":"m.text"},"ts":1571970163000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: it's just me","msgtype":"m.text"},"ts":1571970444000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"jmdyck: the next meeting will confirm some potential candidates","msgtype":"m.text"},"ts":1571970458000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"not even zenparsing now?","msgtype":"m.text"},"ts":1571970463000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"he stepped down prior to the last meeting","msgtype":"m.text"},"ts":1571970472000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"jmdyck: but either way i'd say, the only time \"editor status\" should matter is in settling a lack of consensus","msgtype":"m.text"},"ts":1571970489000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and at this point anything in that category will probably be something i get agreement on from all the potential editors as well, to avoid future churn","msgtype":"m.text"},"ts":1571970512000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah, well, there's some lack of consensus on the Lexical Environment / Environment Record stuff.","msgtype":"m.text"},"ts":1571970648000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1571970663000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"hopefully next week we can take some time to look at it","msgtype":"m.text"},"ts":1571970677000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"there's no rush :-)","msgtype":"m.text"},"ts":1571970680000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(but thanks for being patient, i know they've been open awhile)","msgtype":"m.text"},"ts":1571970688000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"next week sounds fine.","msgtype":"m.text"},"ts":1571970812000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I'm not in a particular rush either, although resolving merge conflicts is a bit of a pain. (But I wrote a script to make it easier.)","msgtype":"m.text"},"ts":1571970886000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"fair","msgtype":"m.text"},"ts":1571970949000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Personally, I think #1697 is a better solution than #1477. And with syg's objection to 1477, I'm not sure if I'd be happy if 1477 were accepted.","msgtype":"m.text"},"ts":1571971517000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: thank you for your work on both. i am positive on 1697 (unlike awb)","msgtype":"m.text"},"ts":1571975024000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"jmdyck: my thinking is that outside of a few places where scoping has static semantics (like redeclaration checks), everything bindings related in ecma262 is done at runtime, and Environment is a fine name for the spec structure that implements bindings","msgtype":"m.text"},"ts":1571975155000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(the sleight of hand, as with the rest of the spec, is of course that static lexical scoping is reconstructible, but it's not specced that way)","msgtype":"m.text"},"ts":1571975190000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"https://usercontent.irccloud-cdn.com/file/onAtEZDj/Screenshot_20191025-125630.jpg","msgtype":"m.text"},"ts":1572033415000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"eshost on android is mysterious","msgtype":"m.text"},"ts":1572033427000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"especially loving that fatal success from jsc","msgtype":"m.text"},"ts":1572033441000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"has anyone ever been bothered that Reflect.construct can't pass an existing this value","msgtype":"m.text"},"ts":1572045788000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i guess the MOP can't really do that either","msgtype":"m.text"},"ts":1572045870000,"senderName":"devsnek","senderId":"devsnek@irc"}
]