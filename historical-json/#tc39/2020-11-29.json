[
{"content":{"body":"PerformPromiseAllSettled has a step which goes up to `aa`","msgtype":"m.text"},"ts":1606616832000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I'm not sure I could have told you that `aa` was the thing that came after `z`","msgtype":"m.text"},"ts":1606616845000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: see https://html.spec.whatwg.org/multipage/grouping-content.html#attr-ol-type","msgtype":"m.text"},"ts":1606618619000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah, makes sense","msgtype":"m.text"},"ts":1606618654000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"jmdyck: also, re: https://github.com/tc39/ecma262/issues/1672","msgtype":"m.text"},"ts":1606618842000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I agree with your reading that this change was likely unintentional, but looking into it, it seems all engines accept `/\\u0000/u` as a regexp matching \"\\0\"","msgtype":"m.text"},"ts":1606618878000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\\u0000 is derived from RegExpUnicodeEscapeSequence but only in the absence of the `u` flag","msgtype":"m.text"},"ts":1606618913000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so it seems - unless I'm missing something, which is quite likely because this part of the spec is terrible - that engines have implemented the spec as written rather than as intended","msgtype":"m.text"},"ts":1606618946000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"actually, wait","msgtype":"m.text"},"ts":1606618974000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"no that is false","msgtype":"m.text"},"ts":1606618978000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it's derived by `\\uHexNonSurrogate`","msgtype":"m.text"},"ts":1606618994000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(ee, 15 months ago. gonna take a while to page in.)","msgtype":"m.text"},"ts":1606619088000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yup, sorry about that","msgtype":"m.text"},"ts":1606619094000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"had a free hour so I'm trying to clean up some of the older outstanding issues","msgtype":"m.text"},"ts":1606619110000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"you can ignore me though, I misread RegExpUnicodeEscapeSequence","msgtype":"m.text"},"ts":1606619129000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"a better thing to look at is IdentityEscape; all engines reject /\\z/u, which means that are indeed interpreting `AtomEscape[U, N] :: CharacterEscape[~U, ?N]` as if the latter were `?U` rather than `~U` - otherwise they'd allow `\\z`, as it's permitted by `CharacterEscape` when given `~U`","msgtype":"m.text"},"ts":1606619273000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"anyway, you want to make the one-character PR, or shall I?","msgtype":"m.text"},"ts":1606619621000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I'll do it.","msgtype":"m.text"},"ts":1606619651000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1606619657000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Normative or Editorial? (I labelled #1672 as Normative, but now I'm not sure.)","msgtype":"m.text"},"ts":1606619867000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"if all major engines behave as if it's '?', then changing it to '?' seems editorial","msgtype":"m.text"},"ts":1606619915000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I could go either way. Editorial, I guess, since it contradicts the claim in Annex B (that it does not change `+U` syntax) and hence is contradictory as written.","msgtype":"m.text"},"ts":1606619963000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1606619972000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"wah, github offline?","msgtype":"m.text"},"ts":1606620415000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"seems up to me?","msgtype":"m.text"},"ts":1606620457000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah, back now","msgtype":"m.text"},"ts":1606620459000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"hm, but I'm not getting the usual prompt to make PR","msgtype":"m.text"},"ts":1606620521000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I now have 14 open PRs against ecma262. That might be a personal max.","msgtype":"m.text"},"ts":1606622152000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"16% of open PRs! Though that's actually less than I'd expect; you also have 21% of total commits to the spec","msgtype":"m.text"},"ts":1606622622000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(though I guess that's not a fair comparison; your PRs contain more commits-to-spec than average)","msgtype":"m.text"},"ts":1606622647000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Hopefully we'll get some of those closed soon; I've pinged the other editors about a couple","msgtype":"m.text"},"ts":1606622671000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"tx","msgtype":"m.text"},"ts":1606622680000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"we've actually been doing alright with PRs overall; there were over a hundred earlier this year","msgtype":"m.text"},"ts":1606622807000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"some of the should be pretty easy.","msgtype":"m.text"},"ts":1606622808000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"still, I was hoping we'd get that number down faster","msgtype":"m.text"},"ts":1606622820000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1606622822000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"s/the/them/","msgtype":"m.text"},"ts":1606622822000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Hm, can github show you a graph of open PRs for the repo over time? I'm not seeing it","msgtype":"m.text"},"ts":1606622940000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"Don't think so; this is just from memory (I try to pay attention to the number)","msgtype":"m.text"},"ts":1606622980000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Looks like they can, but only for fancy accounts.","msgtype":"m.text"},"ts":1606623578000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1606623624000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"jmdyck: re https://github.com/tc39/ecma262/pull/2018, I believe that's just blocked on naming of \"CodePointToString\", and I think all the editors are OK with \"UTF16EncodeCodePoint\"","msgtype":"m.text"},"ts":1606623744000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I can confirm with the other editors if you like; this is just from memory and the discussion in the thread there. but I'm pretty sure.","msgtype":"m.text"},"ts":1606623856000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I guess, with the thumbs-ups, everyone is covered.","msgtype":"m.text"},"ts":1606624006000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"finally got around to https://github.com/tc39/ecmarkup/pull/270","msgtype":"m.text"},"ts":1606631707000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I should probably prioritize minor quality-of-life stuff like this higher","msgtype":"m.text"},"ts":1606631745000,"senderName":"Bakkot","senderId":"Bakkot@irc"}
]