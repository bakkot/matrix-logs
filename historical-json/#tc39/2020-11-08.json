[
{"content":{"body":"FYI repo for the extension proposal in the next meeting is available now","msgtype":"m.text"},"ts":1604801607000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"Hi, is this a good place to discuss something suspicious in the ES spec?","msgtype":"m.text"},"ts":1604848382000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"(both FF and Chrome seems not to be conforming to something I'm checking in it right now)","msgtype":"m.text"},"ts":1604848426000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: sure","msgtype":"m.text"},"ts":1604850172000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Cool. OK, I'm checking https://tc39.es/ecma262/#sec-typedarray for a specific case:","msgtype":"m.text"},"ts":1604850210000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"const z = {}; z.length = 5;  new Int8Array(z);","msgtype":"m.text"},"ts":1604850244000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"This reaches 6.iv.4 where it assumes it is an array-like object. First of all this note is kind of suspicious and strange.","msgtype":"m.text"},"ts":1604850358000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"What would it mean to assume something here, when it is not necessarily true. The assumption is kind of irrelevant.","msgtype":"m.text"},"ts":1604850517000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"But, OK, this is not my main issue. 6.iv.4.b is entered, that is https://tc39.es/ecma262/#sec-initializetypedarrayfromarraylike with the second argument of my \"z\" object.","msgtype":"m.text"},"ts":1604850568000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"did anyone consider for the anonymous name change that `class extends class X {}` went from having an inherited X name to having an empty name","msgtype":"m.text"},"ts":1604850574000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Now my main issue here is, that it seems that O['0'] till O['4'] should be set to \"undefined\" in the bullet 5 loop of https://tc39.es/ecma262/#sec-initializetypedarrayfromarraylike","msgtype":"m.text"},"ts":1604850706000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Hmmm, I guess https://tc39.es/ecma262/#sec-integer-indexed-exotic-objects-set-p-v-receiver is used as a [[Set]]","msgtype":"m.text"},"ts":1604850865000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I'm not sure what your question is","msgtype":"m.text"},"ts":1604850880000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but by the way that note is not saying that it knows the object is array-like, it's saying from that point forward the algorithm will treat the object as though it is an array like object","msgtype":"m.text"},"ts":1604850958000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek, but that Note is not an assert.","msgtype":"m.text"},"ts":1604851016000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"right, because it is not known that the object is array like","msgtype":"m.text"},"ts":1604851042000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"And I don't think that is true.","msgtype":"m.text"},"ts":1604851055000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"it doesn't matter if the object is array-like or not","msgtype":"m.text"},"ts":1604851069000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Then why the note?","msgtype":"m.text"},"ts":1604851076000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"the point is that the algorithm will try treat it as though it js","msgtype":"m.text"},"ts":1604851080000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it is*","msgtype":"m.text"},"ts":1604851084000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"This seems meaningless: \"The algorithm will treat something as X, even though something might not be X\"","msgtype":"m.text"},"ts":1604851125000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"it's just helping explain the logic of the constructor","msgtype":"m.text"},"ts":1604851139000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it checks for typed arrays, then iterables, and if those checks fail it falls back to array-like","msgtype":"m.text"},"ts":1604851157000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Very strange, but OK.","msgtype":"m.text"},"ts":1604851223000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"what are you trying to do with your object","msgtype":"m.text"},"ts":1604851301000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if you just want a typed array of some length you can do new WhateverArray(length)","msgtype":"m.text"},"ts":1604851325000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"No, I'm checking a potential edge case bug in the spec","msgtype":"m.text"},"ts":1604851383000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"If you can check my thought process for my code example: const z = {}; z.length = 5;  new Int8Array(z);","msgtype":"m.text"},"ts":1604851421000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"6.iv.4.b is entered, right?","msgtype":"m.text"},"ts":1604851438000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"*6.b.iv.4.b","msgtype":"m.text"},"ts":1604851527000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"\"O\" is the thing constructed in 6.b.i, and \"firstArgument\" iz my object \"z\".","msgtype":"m.text"},"ts":1604851575000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"With this we end up in https://tc39.es/ecma262/#sec-initializetypedarrayfromarraylike","msgtype":"m.text"},"ts":1604851618000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1604851715000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bullet 2. there is 5, and the loop at 5. is entered.","msgtype":"m.text"},"ts":1604851879000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1604851891000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"In each iteration kValue is extracted there from my object \"z\", which is always undefined","msgtype":"m.text"},"ts":1604851945000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1604851952000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"And a set of this \"undefined\" is done on O at keys \"0\", \"1\", \"2\", \"3\" and \"4\"","msgtype":"m.text"},"ts":1604851991000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1604852019000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Now here I made a wrong assumption first that O is an ordinary object, but I guess its [[Set]] is defined by https://tc39.es/ecma262/#sec-integerindexedobjectcreate","msgtype":"m.text"},"ts":1604852057000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"that sounds right","msgtype":"m.text"},"ts":1604852098000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"through https://tc39.es/ecma262/#sec-typedarray 6.b.i and https://tc39.es/ecma262/#sec-allocatetypedarray 2.","msgtype":"m.text"},"ts":1604852102000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"That is, the [[Set]] in https://tc39.es/ecma262/#sec-integer-indexed-exotic-objects-set-p-v-receiver has to be applied with key \"0\" and value \"undefined\"","msgtype":"m.text"},"ts":1604852179000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The key has been stringified in https://tc39.es/ecma262/#sec-initializetypedarrayfromarraylike 5.a","msgtype":"m.text"},"ts":1604852218000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The value is Undefined","msgtype":"m.text"},"ts":1604852229000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1604852232000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you could probably go on engine262.js.org and set a breakpoint in the debugger and step through this","msgtype":"m.text"},"ts":1604852277000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"OK, ill try. Ok, so in https://tc39.es/ecma262/#sec-integer-indexed-exotic-objects-set-p-v-receiver 2.a give \"numericIndex\" as an integer 0 I guess. And https://tc39.es/ecma262/#sec-integerindexedelementset with O, 0 and undefined is called.","msgtype":"m.text"},"ts":1604852396000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Now here it might be a bug, that I saw.","msgtype":"m.text"},"ts":1604852431000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"In 3. of https://tc39.es/ecma262/#sec-integerindexedelementset \"numValue\" is set to NaN and now I have to go in debugger :D","msgtype":"m.text"},"ts":1604852708000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I don't know how to use https://engine262.js.org/#code=MYewdgzgLgBAXjAvDA3gXwNzwHQBsCmYA5lABZIwCsWMY%2BA7jAJJhQAcAggE5cCGAngAo4ASgxA%3D&mode=script&features= as a debugger","msgtype":"m.text"},"ts":1604852803000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Where is https://tc39.es/ecma262/#sec-integerindexedelementset in this engine262","msgtype":"m.text"},"ts":1604852985000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"OK, found it.","msgtype":"m.text"},"ts":1604853130000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"OK, I see. NaN is converted to 0 and that's it.","msgtype":"m.text"},"ts":1604853706000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"This engine262.js.org doesnt output the result of the script, this is an error in it?","msgtype":"m.text"},"ts":1604856161000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I love the rubberducking here. I nerd about the typedarray specs and I really enjoying following the chat","msgtype":"m.text"},"ts":1604861139000,"senderName":"leobalter","senderId":"leobalter@irc"},
{"content":{"body":"What is really funny is that the spec defines basically every object to be array-like","msgtype":"m.text"},"ts":1604862737000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"This must return an integer and not throw to be array-like: Return ℝ(? ToLength(? Get(obj, \"length\"))) https://tc39.es/ecma262/#sec-lengthofarraylike","msgtype":"m.text"},"ts":1604862807000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"And if the object doesnt have the length property defined, ToLength(undefined) is 0, and all is good.","msgtype":"m.text"},"ts":1604862835000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Only some really weird edge-case objects might be non-array-like.","msgtype":"m.text"},"ts":1604862949000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: yes, that's generally true","msgtype":"m.text"},"ts":1604869531000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"croraf \"X is assumed to be array-like\" doesn't mean \"X is definitely array-like\", it means \"the following steps are designed so that the thing they do makes sense when X is an array-like, and not necessarily otherwise\"","msgtype":"m.text"},"ts":1604872538000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"makes sense\" is obviously not an objective concept in general, but it's just a note for humans who probably have some idea of what it means in the context of any particular algorithm","msgtype":"m.text"},"ts":1604872600000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"It would be better if the spec immediately threw an error if it is not array like, and have a clean case","msgtype":"m.text"},"ts":1604873523000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Bakkot,","msgtype":"m.text"},"ts":1604873525000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: you could argue that for new things that accept arraylikes, but the web almost certainly relies on the existing behavior.","msgtype":"m.text"},"ts":1604873580000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"well yes, it is in the spec now so it is already over","msgtype":"m.text"},"ts":1604873652000,"senderName":"croraf","senderId":"croraf@irc"}
]