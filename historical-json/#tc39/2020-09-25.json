[
{"content":{"body":"i really didn't like ron's meta property idea but now its growing on me","msgtype":"m.text"},"ts":1600992473000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"could have `debugger.log` and `debugger.break`","msgtype":"m.text"},"ts":1600992480000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"also helps shu's separation case","msgtype":"m.text"},"ts":1600992511000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"phew","msgtype":"m.text"},"ts":1600993424000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I think https://github.com/tc39/ecma262/pull/2007 is ready","msgtype":"m.text"},"ts":1600993429000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I need to actually look at all the changes, but I did all the changes I was planning to do","msgtype":"m.text"},"ts":1600993466000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that's very exciting","msgtype":"m.text"},"ts":1600993755000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is it really","msgtype":"m.text"},"ts":1600993998000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"gonna be a doozy to review","msgtype":"m.text"},"ts":1600994012000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"right after i catch up on all the paperwork i've not done because of tc39","msgtype":"m.text"},"ts":1600994026000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: jmdyck ran his type checker, which is almost certainly more thorough at that particular task than a human can be (it certainly found a lot of issues michael and I had overlooked, now fixed), so you can focus the review on style and correctness and so on without worrying to much about ensuring the types line up","msgtype":"m.text"},"ts":1600995213000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"excellent","msgtype":"m.text"},"ts":1600995383000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Bakkot: String.prototype.indexOf: last step: extra right paren","msgtype":"m.text"},"ts":1600999465000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"thanks, pushed","msgtype":"m.text"},"ts":1600999534000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: my static analysis gives no new complaints","msgtype":"m.text"},"ts":1601000868000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"I will also be moving these changes into engine262","msgtype":"m.text"},"ts":1601004899000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"extra layer of verification","msgtype":"m.text"},"ts":1601004906000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I won't do that until after its merged though","msgtype":"m.text"},"ts":1601004929000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"haxjs: saw you post on the delegates channel. From what i am reading, v8 behavior is wrong according to the spec.","msgtype":"m.text"},"ts":1601006057000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"It clearly has those if [[done]] is false checks","msgtype":"m.text"},"ts":1601006057000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"yes V8 is definitely wrong because it even inconsistent on `[a, b, c, ...d] = values` and  `[a, b, c, d, e] = values`. Chakra and XS at least consistent.","msgtype":"m.text"},"ts":1601006153000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"my only question is whether there is any issue in spec, because three engines behave wrong (as i understand)","msgtype":"m.text"},"ts":1601006241000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"From my understanding, destructuring for both assignment and binding looks correct. It should be empty array, because it always checks cached done value.","msgtype":"m.text"},"ts":1601006510000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"(not sure if i am reading something wrong here)","msgtype":"m.text"},"ts":1601006510000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"I agree.","msgtype":"m.text"},"ts":1601006665000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"if you do `done: i === 3` then v8 just goes on forever","msgtype":"m.text"},"ts":1601008058000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah looking at the code in v8, it just doesn't take into account done returning false and then returning true again","msgtype":"m.text"},"ts":1601008424000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"So, it doesn't store the equivalent of [[done]] ? Or simply doesn't use it?","msgtype":"m.text"},"ts":1601008489000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"https://gc.gy/68713509.png","msgtype":"m.text"},"ts":1601008511000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"my reading is","msgtype":"m.text"},"ts":1601008514000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it jumps to the done point before it can save the result","msgtype":"m.text"},"ts":1601008532000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"might be a one line fix","msgtype":"m.text"},"ts":1601008581000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if the one line fix doesn't work i might just rewrite this from scratch","msgtype":"m.text"},"ts":1601008787000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"how can so many engines mess this up","msgtype":"m.text"},"ts":1601009060000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://gc.gy/68714071.png","msgtype":"m.text"},"ts":1601009074000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"needs a test262 test, clearly","msgtype":"m.text"},"ts":1601009387000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh the bug is not what i thought","msgtype":"m.text"},"ts":1601009502000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the bug is that the done register isn't checked in the spread case","msgtype":"m.text"},"ts":1601009512000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1601009514000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"woo https://gc.gy/68714661.png","msgtype":"m.text"},"ts":1601009660000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"So, it works in some version of v8?","msgtype":"m.text"},"ts":1601009874000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"it works in my local checkout of v8","msgtype":"m.text"},"ts":1601009894000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i think","msgtype":"m.text"},"ts":1601009920000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"need to run the test suite","msgtype":"m.text"},"ts":1601009923000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah seems fixed","msgtype":"m.text"},"ts":1601010092000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"related question - if iterator is finished, should destructuring assign undefined to rest of the lhs elements?","msgtype":"m.text"},"ts":1601010255000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"Ex - `[a, b] = [] `","msgtype":"m.text"},"ts":1601010256000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1601010283000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Any difference between assignment and binding for this?","msgtype":"m.text"},"ts":1601010285000,"senderName":"bendtherules","senderId":"bendtherules@irc"},
{"content":{"body":"i don't believe so","msgtype":"m.text"},"ts":1601010321000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i wish `git-cl upload` would stop overwriting the author field of the commit","msgtype":"m.text"},"ts":1601010343000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://chromium-review.googlesource.com/c/v8/v8/+/2430488","msgtype":"m.text"},"ts":1601010584000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: u mean this bug is already fixed in v8 master ?","msgtype":"m.text"},"ts":1601024459000,"senderName":"haxjs","senderId":"haxjs@irc"},
{"content":{"body":"haxjs: no","msgtype":"m.text"},"ts":1601046435000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"buy it will be soon","msgtype":"m.text"},"ts":1601046463000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but*","msgtype":"m.text"},"ts":1601046482000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: oh nice catch, we weren't checking for `.done` correctly in rest?","msgtype":"m.text"},"ts":1601050186000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it wasn't being checked at all","msgtype":"m.text"},"ts":1601050202000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"much less correctly :P","msgtype":"m.text"},"ts":1601050206000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"wa","msgtype":"m.text"},"ts":1601050217000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"wha*","msgtype":"m.text"},"ts":1601050218000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"it was ilooping?","msgtype":"m.text"},"ts":1601050221000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"https://gc.gy/68755250.png","msgtype":"m.text"},"ts":1601050252000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"once an iterator returns `done: true`, the implementation has to remember that forever","msgtype":"m.text"},"ts":1601050287000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it can't call next again","msgtype":"m.text"},"ts":1601050295000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah, it wasn't caching it per the [[Done]] slot in the spec","msgtype":"m.text"},"ts":1601050313000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1601050322000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"👀","msgtype":"m.text"},"ts":1601050322000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"cool beans, thanks for the fix","msgtype":"m.text"},"ts":1601050334000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"mfw graph verifier is angry","msgtype":"m.text"},"ts":1601050404000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"time to go back to JumpIfToBooleanTrue","msgtype":"m.text"},"ts":1601050410000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if i have AssignmentExpression `,`?","msgtype":"m.text"},"ts":1601054355000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and i want to make that whole thing optional","msgtype":"m.text"},"ts":1601054361000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i have to make it its own named production right?","msgtype":"m.text"},"ts":1601054368000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not sure I understand the question, but probably yes","msgtype":"m.text"},"ts":1601054415000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`?` can make exactly one nonterminal on the RHS optional","msgtype":"m.text"},"ts":1601054435000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(unless a solitary comma is also valid)","msgtype":"m.text"},"ts":1601054440000,"senderName":"jmdyck","senderId":"jmdyck@irc"},
{"content":{"body":"yeah definitely don't want a solitary comma","msgtype":"m.text"},"ts":1601054452000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if you have a sequence which you want all or none, you need a new production for that sequence","msgtype":"m.text"},"ts":1601054455000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1601054466000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"alternatively i could just get rid of the optional comma","msgtype":"m.text"},"ts":1601054514000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"import calls don't have that","msgtype":"m.text"},"ts":1601054516000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"they should, and i think/hope import assertions adds it","msgtype":"m.text"},"ts":1601057315000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i think object rest destructuring doesn't have an optional trailing comma either, but it also should","msgtype":"m.text"},"ts":1601057375000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"haxjs: it's fixed in v8 now","msgtype":"m.text"},"ts":1601064821000,"senderName":"devsnek","senderId":"devsnek@irc"}
]