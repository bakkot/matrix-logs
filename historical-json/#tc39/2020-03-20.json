[
{"content":{"body":"devsnek: I think they do not currently inhibit the ability for a host to do application/package level configuration so I have no objections","msgtype":"m.text"},"ts":1584663813000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I think we should be careful about what we consider problematic and allow things even if only a specific subset of hosts would use them realistically","msgtype":"m.text"},"ts":1584663849000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I do think there will be synchronization / verbosity problems if we don't limit them to some central coordination system; but, for me just a simple registry like the MIME registry would be more than enough","msgtype":"m.text"},"ts":1584663971000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: they seem like a massive footgun","msgtype":"m.text"},"ts":1584663996000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and nothing else","msgtype":"m.text"},"ts":1584664003000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"all the examples are specifying details about the module","msgtype":"m.text"},"ts":1584664029000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"not the import","msgtype":"m.text"},"ts":1584664031000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: in the readme yea, but i don't see how that prevents other mechanisms like you described or conflicts with them","msgtype":"m.text"},"ts":1584664438000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"to me the real conflicts come from things like customized revivers, which might need to be categorized differently","msgtype":"m.text"},"ts":1584664457000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"this seems useful for whatever query parameters are used for","msgtype":"m.text"},"ts":1584664758000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and nothing else","msgtype":"m.text"},"ts":1584664764000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"honestly that's not a bad test","msgtype":"m.text"},"ts":1584664832000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1584664856000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"how do you assert the MIME via query params?","msgtype":"m.text"},"ts":1584664868000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"thats controlled via the server not the client","msgtype":"m.text"},"ts":1584664877000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"this lets the client add an assert","msgtype":"m.text"},"ts":1584664886000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1584664896000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1584664902000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if you wouldn't put it in a query parameter","msgtype":"m.text"},"ts":1584664908000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you shouldn't put it in an attribute","msgtype":"m.text"},"ts":1584664914000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't understand, attributes are client local / not synced with the server","msgtype":"m.text"},"ts":1584664936000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the whole point is they aren't the same","msgtype":"m.text"},"ts":1584664947000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"its adding an integration point that doesn't exist currently for source on the client to apply some kind of data to be used locally only","msgtype":"m.text"},"ts":1584665018000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"query params are for integrating with the fetch/remote","msgtype":"m.text"},"ts":1584665034000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"grumbles about this not being technically true in node","msgtype":"m.emote"},"ts":1584665055000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: basically nothing specific to a module should be in an attribute","msgtype":"m.text"},"ts":1584665444000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I just don't see an answer to why thats the case","msgtype":"m.text"},"ts":1584665465000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"type is project wide","msgtype":"m.text"},"ts":1584665469000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hash is project wide","msgtype":"m.text"},"ts":1584665477000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"mocking is project wide","msgtype":"m.text"},"ts":1584665484000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I honestly have no idea what you would put in an attribute","msgtype":"m.text"},"ts":1584665505000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"mocking is definitely project wide and gets replaced multiple times in test suites","msgtype":"m.text"},"ts":1584665512000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"type can be defined project wide, but isn't necessarily only able to be defined there","msgtype":"m.text"},"ts":1584665546000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"hash is the same, except for cycles","msgtype":"m.text"},"ts":1584665556000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yeah but anywhere else is a footgun","msgtype":"m.text"},"ts":1584665559000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: why?","msgtype":"m.text"},"ts":1584665565000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"don't specify type somewhere and your code doesn't run","msgtype":"m.text"},"ts":1584665570000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"very good experience","msgtype":"m.text"},"ts":1584665577000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"forget to specify hash somewhere and maybe you have a security problem","msgtype":"m.text"},"ts":1584665597000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: those are host level concerns though","msgtype":"m.text"},"ts":1584665646000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i doubt node would enforce the need for a type attribute / I wouldn't want them to","msgtype":"m.text"},"ts":1584665661000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but if one is supplied, it does the check","msgtype":"m.text"},"ts":1584665674000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if the best that can be said is \"people won't use it anyway\"","msgtype":"m.text"},"ts":1584665704000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"why bother adding it","msgtype":"m.text"},"ts":1584665707000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't see how thats a net negative, its just another layer of ways to verify things","msgtype":"m.text"},"ts":1584665709000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"people will use it / linters may add it, but it being *Required* is up to the host","msgtype":"m.text"},"ts":1584665740000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it seems to be completely net negative to me","msgtype":"m.text"},"ts":1584665765000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"how so? it adds a way for people to opt-in to a form of verification they cannot currently do","msgtype":"m.text"},"ts":1584665787000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that doesn't seem to take away anything","msgtype":"m.text"},"ts":1584665809000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I mean people can't call numbers either","msgtype":"m.text"},"ts":1584665909000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"that doesn't mean we need to add it","msgtype":"m.text"},"ts":1584665920000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"any time you would want to use this it seems like the actual correct thing would be a project wide config","msgtype":"m.text"},"ts":1584665982000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"maybe if your app is a single file this makes sense","msgtype":"m.text"},"ts":1584665999000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but like...","msgtype":"m.text"},"ts":1584666001000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"idk even then","msgtype":"m.text"},"ts":1584666014000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"[[Call]] on numbers doesn't verify things / idk how that relates","msgtype":"m.text"},"ts":1584666029000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"this actively does something that might be appealing. the ability to make assertions about what type is being evaluated when loading a module","msgtype":"m.text"},"ts":1584666075000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: I think it's inherently incorrect for that assertion to occur at the import site","msgtype":"m.text"},"ts":1584666111000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"honestly node's policy mechanism might be aided by a similar constraint so that you could state a app can load arbitrary files, but only JSON","msgtype":"m.text"},"ts":1584666124000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that assertion should be specified somewhere that blankets all import sites","msgtype":"m.text"},"ts":1584666148000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: I think there isn't a real reason that having it at the import site is shown to be problematic so far","msgtype":"m.text"},"ts":1584666154000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i don't disagree, but i don't see how at import site is harmful","msgtype":"m.text"},"ts":1584666170000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"just because there are multiple ways of doing something doesn't mean we can/should define 1 way as the only way. I don't see a direct conflict of these assertions, if you have conflicts of import site and app config it just means it 100% will fail to load","msgtype":"m.text"},"ts":1584666257000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"which seems correct","msgtype":"m.text"},"ts":1584666269000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it would be good to see how having it at an import site does cause problems. omission is the current state and most people agree that having no mechanism for these asserts isn't a great path forward","msgtype":"m.text"},"ts":1584666358000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"having an out of band mechanism doesn't seem to have any clear problems co-existing with an in band mechanism so far","msgtype":"m.text"},"ts":1584666426000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"why are we making something where you can do it incorrectly","msgtype":"m.text"},"ts":1584666523000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is my question","msgtype":"m.text"},"ts":1584666529000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"obviously type fails loudly but not everything does","msgtype":"m.text"},"ts":1584666588000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"for example missing a hash at an import","msgtype":"m.text"},"ts":1584666655000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"because convenience and UX. even with app configuration you could do it wrong there","msgtype":"m.text"},"ts":1584666692000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it's just weird to me that people want to specify things inherently bound to the module in the completely wrong place","msgtype":"m.text"},"ts":1584666695000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"idk I think it's better UX to not let people make these mistakes","msgtype":"m.text"},"ts":1584666751000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"to be fair, doing it all in 1 place like node policies does slow down boot time","msgtype":"m.text"},"ts":1584666752000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the entire premise is that not having this info is bad","msgtype":"m.text"},"ts":1584666759000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it isn't like thats a wonderful solution either","msgtype":"m.text"},"ts":1584666762000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so let's reduce the places where you can be missing this info","msgtype":"m.text"},"ts":1584666770000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you mean loading the policy file takes time right?","msgtype":"m.text"},"ts":1584666816000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: loading it and the unused entries being loaded in particular","msgtype":"m.text"},"ts":1584666936000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"medium CLI is 100-200ms added boot time in Node","msgtype":"m.text"},"ts":1584666948000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that seems reasonable to me tbh","msgtype":"m.text"},"ts":1584666965000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"cause you load all the possible values","msgtype":"m.text"},"ts":1584666967000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"100-200ms is totally insane for web","msgtype":"m.text"},"ts":1584666976000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"and iot","msgtype":"m.text"},"ts":1584666979000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"well they don't use a separate file","msgtype":"m.text"},"ts":1584666987000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1584666997000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"they want it in-band yea... via module attributes.","msgtype":"m.text"},"ts":1584667014000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"they're not bound to node's way of loading that data","msgtype":"m.text"},"ts":1584667018000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah module attributes would be fine if humans couldn't interact with them lol","msgtype":"m.text"},"ts":1584667049000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but they can","msgtype":"m.text"},"ts":1584667052000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: i've actively tried to think of ways we could load it faster","msgtype":"m.text"},"ts":1584667058000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"they aren't just build output","msgtype":"m.text"},"ts":1584667065000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: there really isn't too much that can be done","msgtype":"m.text"},"ts":1584667068000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if you do the verification at runtime, you gotta pay the cost","msgtype":"m.text"},"ts":1584667082000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1584667090000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"unused stuff is most of the cost","msgtype":"m.text"},"ts":1584667092000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the web has an entire thing for remapping imports","msgtype":"m.text"},"ts":1584667111000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1584667134000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"for them it would be adding additional props to json","msgtype":"m.text"},"ts":1584667142000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"which isn't slow","msgtype":"m.text"},"ts":1584667146000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"at least compared to having the json in the first place","msgtype":"m.text"},"ts":1584667162000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"if you list each json file that could be loaded?","msgtype":"m.text"},"ts":1584667163000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"thats slow cause you have to list them all","msgtype":"m.text"},"ts":1584667170000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"you do that already","msgtype":"m.text"},"ts":1584667173000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you don't in import maps","msgtype":"m.text"},"ts":1584667180000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the thing maps imports","msgtype":"m.text"},"ts":1584667182000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"are you saying you think there will be more attributes than mapped imports?","msgtype":"m.text"},"ts":1584667205000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it does namespaced mapping, it doesn't have 1 entry per resource","msgtype":"m.text"},"ts":1584667207000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yes, since a mapping covers multiple resources","msgtype":"m.text"},"ts":1584667220000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"can*","msgtype":"m.text"},"ts":1584667223000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"ugh this is annoying","msgtype":"m.text"},"ts":1584667242000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"https://wicg.github.io/import-maps/#import-map-scopes","msgtype":"m.text"},"ts":1584667266000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i think it makes perfect sense that you'd take a perf hit for this","msgtype":"m.text"},"ts":1584667267000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah I know how import maps work","msgtype":"m.text"},"ts":1584667276000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the perf hit can be done as needed with in-band","msgtype":"m.text"},"ts":1584667357000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"rather than all at once, which saves a lot of time if you have unused stuff","msgtype":"m.text"},"ts":1584667375000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it shouldn't matter where the data is","msgtype":"m.text"},"ts":1584667380000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it does though","msgtype":"m.text"},"ts":1584667385000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"even with my making things increasingly lazy and only parsing SRI on access to a resource in node, you still have to resolve the resource paths at startup","msgtype":"m.text"},"ts":1584667418000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i can see how it would if you have a dynamic import somewhere breaking the graph into pieces","msgtype":"m.text"},"ts":1584667421000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah i think that's kind of inherent to this problem though","msgtype":"m.text"},"ts":1584667458000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"my point is that you need to map these attributes to every import location","msgtype":"m.text"},"ts":1584667470000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"with in-band you don't have to resolve the paths since it is just w/e the import site is","msgtype":"m.text"},"ts":1584667484000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but you don't guarantee the data exists at every import site","msgtype":"m.text"},"ts":1584667495000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in terms of security that seems like a net loss to me","msgtype":"m.text"},"ts":1584667504000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"sure, same with lots of things. use CSP or w/e to enforce that all sites must have the security attributes","msgtype":"m.text"},"ts":1584667523000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"like yay its faster but we don't have the feature we set out to have","msgtype":"m.text"},"ts":1584667524000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you can just set a config that you must use the feature","msgtype":"m.text"},"ts":1584667535000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"then while in dev it is optional","msgtype":"m.text"},"ts":1584667543000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"you shouldn't need eslint to write correct code","msgtype":"m.text"},"ts":1584667552000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"good code maybe","msgtype":"m.text"},"ts":1584667555000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"linters/bundlers/formatters/etc. can add them","msgtype":"m.text"},"ts":1584667556000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but not correct code","msgtype":"m.text"},"ts":1584667557000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it would be correct without the attribute","msgtype":"m.text"},"ts":1584667566000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it wouldn't","msgtype":"m.text"},"ts":1584667574000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1584667580000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"you set a flag to enforce the attribute being used","msgtype":"m.text"},"ts":1584667592000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"with missing `type`, the graph is invalid","msgtype":"m.text"},"ts":1584667594000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"with missing `hash`, the graph is unsafe, and should be invalid because of that","msgtype":"m.text"},"ts":1584667606000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in a certain host that wants to ensure it is used, that seems reasonable","msgtype":"m.text"},"ts":1584667614000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"we're not talking about hosts that don't want to use it though","msgtype":"m.text"},"ts":1584667638000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"these are all things that you are treating as necessary rather than opt-in","msgtype":"m.text"},"ts":1584667640000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"we should design the feature for people who will use it","msgtype":"m.text"},"ts":1584667646000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"are you saying we should standardize an app config?","msgtype":"m.text"},"ts":1584667672000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1584667685000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"moreover i'm saying the current direction seems net negative","msgtype":"m.text"},"ts":1584667698000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'd love to get more people thinking about alternatives but as soon as you say \"not in band\" they stop listening","msgtype":"m.text"},"ts":1584667719000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i dont saee anything you stated as removing value","msgtype":"m.text"},"ts":1584667725000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i'm in the not-in-band camp","msgtype":"m.text"},"ts":1584667738000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but i don't see anything concrete to find problems with","msgtype":"m.text"},"ts":1584667747000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i think its inherently bad that you can end up with out of sync config while actively trying to use it","msgtype":"m.text"},"ts":1584667778000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i see problems with not-in-band, the champions of attributes want different compromises than I do","msgtype":"m.text"},"ts":1584667782000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"thats fine","msgtype":"m.text"},"ts":1584667784000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"like to me that seems to invalidate the point","msgtype":"m.text"},"ts":1584667793000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you aren't configuring the type of the target with type=","msgtype":"m.text"},"ts":1584667811000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the point of this is to enforce a behaviour but you just kick the can down the road","msgtype":"m.text"},"ts":1584667817000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you are performing an assertion","msgtype":"m.text"},"ts":1584667821000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"now you need assertions that you're performing assertions","msgtype":"m.text"},"ts":1584667833000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"via eslint or whatever","msgtype":"m.text"},"ts":1584667836000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you literally just move the problem","msgtype":"m.text"},"ts":1584667840000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"no, out of band is not a solution for these performance problems","msgtype":"m.text"},"ts":1584667842000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i am heavily in the oob solution camp","msgtype":"m.text"},"ts":1584667865000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but I see serious problems with it being the only way","msgtype":"m.text"},"ts":1584667877000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i don't understand how it fulfills the requirements","msgtype":"m.text"},"ts":1584667918000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i would still encourage all my teams to use oob, but it does not work as a solution for all situations","msgtype":"m.text"},"ts":1584667925000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"which requirements?","msgtype":"m.text"},"ts":1584667928000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the reason this exists is to add verification where verification is missing","msgtype":"m.text"},"ts":1584667946000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1584667950000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"in a way that is reasonable given platform constraints","msgtype":"m.text"},"ts":1584667973000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1584667974000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"web has a perf constraint","msgtype":"m.text"},"ts":1584667984000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"but then you have a problem","msgtype":"m.text"},"ts":1584667988000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you have an ability to add verification to the attributes","msgtype":"m.text"},"ts":1584668000000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but now you have to verify those exist","msgtype":"m.text"},"ts":1584668005000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you move the problem without solving it","msgtype":"m.text"},"ts":1584668013000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i guess you can say you make eslint solve it","msgtype":"m.text"},"ts":1584668030000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you solved the problem, but you have to do ahead of time verification still","msgtype":"m.text"},"ts":1584668040000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"instead of verifying the type= of resources","msgtype":"m.text"},"ts":1584668064000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"you now verify that all imports have type=","msgtype":"m.text"},"ts":1584668073000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"different","msgtype":"m.text"},"ts":1584668076000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if somehow attributes were invisible to humans","msgtype":"m.text"},"ts":1584668077000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"it would be fine","msgtype":"m.text"},"ts":1584668081000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"idk how that would work","msgtype":"m.text"},"ts":1584668110000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1584668113000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so, visible is fine","msgtype":"m.text"},"ts":1584668121000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so basically we're saying","msgtype":"m.text"},"ts":1584668125000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"here's a feature","msgtype":"m.text"},"ts":1584668127000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"don't ever actually use it","msgtype":"m.text"},"ts":1584668132000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"leave it to babel output","msgtype":"m.text"},"ts":1584668137000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you should use it, when you want it","msgtype":"m.text"},"ts":1584668139000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"no you as a human should not use it","msgtype":"m.text"},"ts":1584668148000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"your tooling should emit it","msgtype":"m.text"},"ts":1584668156000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i don't agree with that statement","msgtype":"m.text"},"ts":1584668165000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"you don't have to use it, but use it if you need it","msgtype":"m.text"},"ts":1584668176000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"actually humans manually putting it in assisted by eslint seems usable","msgtype":"m.text"},"ts":1584668184000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"import(x, {type:json}) is still useful","msgtype":"m.text"},"ts":1584668187000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i mean i wouldn't agree with that workflow","msgtype":"m.text"},"ts":1584668190000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"dynamic imports seem fine","msgtype":"m.text"},"ts":1584668223000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"but in a certain context","msgtype":"m.text"},"ts":1584668260000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"you're importing x and you have no idea what it is but you know it should be json","msgtype":"m.text"},"ts":1584668271000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"honestly that still has the multiple import location problem","msgtype":"m.text"},"ts":1584668333000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"It asserts whatever loads won't mutate crap","msgtype":"m.text"},"ts":1584668400000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yeah it seems useful in very specific contexts","msgtype":"m.text"},"ts":1584668450000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"where dynamic import is not being used to split the graph for lazy loading but to load something given to your application that you don't know","msgtype":"m.text"},"ts":1584668470000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like i said it technically still has the multiple import location problem but its unlikely you'd hit it","msgtype":"m.text"},"ts":1584668494000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"If 2 callsites differ you might also be able to assert at least one will fail","msgtype":"m.text"},"ts":1584668505000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"if js had standard resolve behaviour it could assert that attributes were consistent","msgtype":"m.text"},"ts":1584668540000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Hell even for static urls you are just asking the host to not let it mutate crap","msgtype":"m.text"},"ts":1584668580000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Sites get pwned","msgtype":"m.text"},"ts":1584668591000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"It happens","msgtype":"m.text"},"ts":1584668597000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"with static urls you can specify it once in a project config","msgtype":"m.text"},"ts":1584668655000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"and sleep safe knowing you didn't forget one","msgtype":"m.text"},"ts":1584668662000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Perf cost","msgtype":"m.text"},"ts":1584668692000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"how long does it take to verify a hash though","msgtype":"m.text"},"ts":1584668703000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Hash, no significant time . Loading all the paths... 10k entries is 300ms even  super lazy","msgtype":"m.text"},"ts":1584668782000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"And that's the total path count for a small CLI in node thanks to dynamic specifiers if you limit it to app root","msgtype":"m.text"},"ts":1584668859000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"10k entries lol","msgtype":"m.text"},"ts":1584668876000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Like 280 get used","msgtype":"m.text"},"ts":1584668879000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"is that just npm being npm","msgtype":"m.text"},"ts":1584668880000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Yes and no","msgtype":"m.text"},"ts":1584668892000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"well at least with imports you know exactly what is and isn't being loaded","msgtype":"m.text"},"ts":1584668920000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Total traversables statically is around 1-2k","msgtype":"m.text"},"ts":1584668930000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"assuming you're not randomly `import()`ing absolute urls","msgtype":"m.text"},"ts":1584668941000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"People do import non-static values","msgtype":"m.text"},"ts":1584668971000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"right but usually they're just globbed","msgtype":"m.text"},"ts":1584668989000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Globbed?","msgtype":"m.text"},"ts":1584669002000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"webpack will expand all possible importable things based on a static root in the import","msgtype":"m.text"},"ts":1584669019000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like `import('./assets/' + x)`","msgtype":"m.text"},"ts":1584669028000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"will make webpack check everything in `./assets`","msgtype":"m.text"},"ts":1584669037000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Yup, both need tooling to aid this","msgtype":"m.text"},"ts":1584669084000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i should do a study of what % of sites have those webpack dynamic import maps","msgtype":"m.text"},"ts":1584669089000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i see them a lot","msgtype":"m.text"},"ts":1584669091000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"hmmmm","msgtype":"m.text"},"ts":1584669455000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"apparently `temporal dead zone` doesn't actually appear in the spec but the abbreviation `TDZ` is used without explanation in this algorithm alone: https://tc39.es/ecma262/#sec-runtime-semantics-forin-div-ofheadevaluation-tdznames-expr-iterationkind","msgtype":"m.text"},"ts":1584669488000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Yup","msgtype":"m.text"},"ts":1584669544000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"We don't really have a non normative terms area","msgtype":"m.text"},"ts":1584669588000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"seems like it's been that way since ES2015 too, which is kind of shocking","msgtype":"m.text"},"ts":1584669589000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"We have few notes and virtually no examples","msgtype":"m.text"},"ts":1584669621000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"People have been reluctant to add non-normative text / had push back","msgtype":"m.text"},"ts":1584669690000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I'm shocked that I can't find an issue either","msgtype":"m.text"},"ts":1584669807000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"I don't care how we resolve that but it's not a good look :-/","msgtype":"m.text"},"ts":1584669819000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"Is anyone around that can wants to chat about import.meta real quick? devsnek MylesBorins or anyone with familiarity enough to discuss a specific step in the algorithm? https://tc39.es/proposal-import-meta/#sec-meta-properties-runtime-semantics-evaluation Step 4: If importMeta is undefined.","msgtype":"m.text"},"ts":1584720435000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"For the purpose of testing, is there a way to contrive that state?","msgtype":"m.text"},"ts":1584720511000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron: no","msgtype":"m.text"},"ts":1584721020000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"at least not from js","msgtype":"m.text"},"ts":1584721038000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"when host hooks are available via realms or whatever it should be possible though","msgtype":"m.text"},"ts":1584721682000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"does the spec need to be updated? [[Meta]] vs [[ImportMeta]]","msgtype":"m.text"},"ts":1584722034000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: fixed in stage 4 pr","msgtype":"m.text"},"ts":1584722108000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"bradleymeck: are realms not going to allow a custom global proxy? wouldn't that be needed for mocking browser environment.","msgtype":"m.text"},"ts":1584731943000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"realms/compartments","msgtype":"m.text"},"ts":1584731960000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"whatever the overall api is called","msgtype":"m.text"},"ts":1584731983000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"they do but its complicated","msgtype":"m.text"},"ts":1584732050000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"realms ~= new set of intrinsics / global","msgtype":"m.text"},"ts":1584732064000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"compartments ~= host hooks / potentially global proxy / definitely global lexical scope","msgtype":"m.text"},"ts":1584732089000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so one is really just making a fresh env w/o host customization","msgtype":"m.text"},"ts":1584732107000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the other is all the host customization you might need","msgtype":"m.text"},"ts":1584732115000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"and then some people want to define Agents eventually","msgtype":"m.text"},"ts":1584732132000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"those are separate address spaces","msgtype":"m.text"},"ts":1584732139000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"yeah I just meant like","msgtype":"m.text"},"ts":1584732169000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"overall the realm+compartment api","msgtype":"m.text"},"ts":1584732180000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"seems like global proxy would be needed for stuff like jsdom","msgtype":"m.text"},"ts":1584732197000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I wonder if we will ever have an agent api","msgtype":"m.text"},"ts":1584732349000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I guess that would conflict with web workers and worker_threads","msgtype":"m.text"},"ts":1584732400000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"conflict? duplicate, sure","msgtype":"m.text"},"ts":1584733353000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it would be cool though","msgtype":"m.text"},"ts":1584733493000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is this correct? https://github.com/colorjs/javascript-yellow","msgtype":"m.text"},"ts":1584734784000,"senderName":"theskillwithin","senderId":"theskillwithin@irc"},
{"content":{"body":"probably","msgtype":"m.text"},"ts":1584734898000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"theskillwithin: the JS logo is a community thing, unaffiliated with TC39","msgtype":"m.text"},"ts":1584735467000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"theskillwithin: https://github.com/voodootikigod/logo.js/ is the repo","msgtype":"m.text"},"ts":1584735497000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"perhaps you could contribute your package to that larger collection","msgtype":"m.text"},"ts":1584735523000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"not my package just found it on google","msgtype":"m.text"},"ts":1584735627000,"senderName":"theskillwithin","senderId":"theskillwithin@irc"},
{"content":{"body":"ah, i'm not sure what you mean by \"correct\" then","msgtype":"m.text"},"ts":1584735662000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i just want to use the javascript color associated with javascript to theme https://d4dnjdsd285hx.cloudfront.net/","msgtype":"m.text"},"ts":1584735790000,"senderName":"theskillwithin","senderId":"theskillwithin@irc"},
{"content":{"body":"\"javascript\" itself isn't even official","msgtype":"m.text"},"ts":1584735933000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"we make ECMAScript here","msgtype":"m.text"},"ts":1584735956000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"\"javascript\" is trademarked to oracle","msgtype":"m.text"},"ts":1584736088000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"always call it JS if you can avoid the long name","msgtype":"m.text"},"ts":1584736195000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"wow did not know that","msgtype":"m.text"},"ts":1584736691000,"senderName":"theskillwithin","senderId":"theskillwithin@irc"},
{"content":{"body":"i thought u lost ur tademark very easily if it was common lingo","msgtype":"m.text"},"ts":1584736713000,"senderName":"theskillwithin","senderId":"theskillwithin@irc"},
{"content":{"body":"IANAL but i believe as long as it is defended it won't be lost","msgtype":"m.text"},"ts":1584736854000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"2018 it was","msgtype":"m.text"},"ts":1584736870000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"also law varies per area of the world","msgtype":"m.text"},"ts":1584736893000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"oracle is known for issuing takedowns on the mac app store for things with \"javascript\" in the name","msgtype":"m.text"},"ts":1584737792000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well, known to issue","msgtype":"m.text"},"ts":1584737837000,"senderName":"devsnek","senderId":"devsnek@irc"}
]