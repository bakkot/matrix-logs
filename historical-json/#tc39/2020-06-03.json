[
{"content":{"body":"its not possible to export * from something and then replace one of those exports with your own is it","msgtype":"m.text"},"ts":1591192588000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"like `export * from 'fs'; export function readFile() {}`","msgtype":"m.text"},"ts":1591192619000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: sure you can","msgtype":"m.text"},"ts":1591193364000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://tc39.es/ecma262/#sec-getexportednames step 9.c.i.1","msgtype":"m.text"},"ts":1591193459000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"oh interesting","msgtype":"m.text"},"ts":1591193552000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i thought all collisions were errors","msgtype":"m.text"},"ts":1591193566000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"laughs nervously at ever thinking i've learned all of `export *`","msgtype":"m.emote"},"ts":1591193858000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"this came up in our APM example loader we did a few years ago (... this ESM stuff has taken too long)","msgtype":"m.text"},"ts":1591193924000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i still wish we had been able to add `default` back to `export *`","msgtype":"m.text"},"ts":1591195641000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"just couldn't get consensus","msgtype":"m.text"},"ts":1591195657000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Maybe time for `export default from ''`?","msgtype":"m.text"},"ts":1591197868000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"jridgewell: that won't help","msgtype":"m.text"},"ts":1591197974000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"jridgewell: cause you still need to know that '' has a default","msgtype":"m.text"},"ts":1591197984000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"`export { default } from ''` already works","msgtype":"m.text"},"ts":1591197988000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"jridgewell: https://github.com/tc39/proposal-export-default-from","msgtype":"m.text"},"ts":1591198043000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I think that requires people to understand that `default` is just a named export","msgtype":"m.text"},"ts":1591198063000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"It's easier for me to think about it as separate","msgtype":"m.text"},"ts":1591198074000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"Especially because it's teated separately in `export * from ''`","msgtype":"m.text"},"ts":1591198109000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"i'd like that proposal to go forward, fwiw. default is special, it's not *just* a named export - it's just unfortunately implemented as one","msgtype":"m.text"},"ts":1591198153000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i don't think it should be considered special","msgtype":"m.text"},"ts":1591198376000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"cause if you named an export \"default\" it would be really weird if it was a different thing","msgtype":"m.text"},"ts":1591198398000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it's conceptually special, regardless of what's observable","msgtype":"m.text"},"ts":1591198514000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"special because of the a syntax or something else?","msgtype":"m.text"},"ts":1591198808000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i usually describe it to folks as: a default export is what a module *is*, a named export is something a module *has*","msgtype":"m.text"},"ts":1591198960000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I've always looked at it like the difference between `module.exports = …` vs `exports.foo = …`","msgtype":"m.text"},"ts":1591199087000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"i think thats a hard thing to think personally","msgtype":"m.text"},"ts":1591199089000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"jridgewell: well you can kinda see how the `default` gets really gross if you think of it that way","msgtype":"m.text"},"ts":1591199111000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"at least in node's issue tracker trying to do things like make __esModule interop work","msgtype":"m.text"},"ts":1591199132000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"In commonjs, yes it will. In our system, we don't have to mutate default to get similar behavior","msgtype":"m.text"},"ts":1591199147000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"can you clarify that","msgtype":"m.text"},"ts":1591199172000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Sorry, I thought you were talking about mutating the `module.exports = function foo() {}`","msgtype":"m.emote"},"ts":1591199276000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"bradleymeck: CJS only has a default export.","msgtype":"m.text"},"ts":1591199281000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"^ that wasn't supposed to be a `/me`...","msgtype":"m.text"},"ts":1591199289000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"ljharb we have argued about that before","msgtype":"m.text"},"ts":1591199297000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"`exports.foo` is people trying to shoehorn named exports into a module system without them.","msgtype":"m.text"},"ts":1591199297000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Then doing a `foo.bar = other`, so that you can `const { bar } = require('')`","msgtype":"m.text"},"ts":1591199313000,"senderName":"jridgewell","senderId":"jridgewell@irc"},
{"content":{"body":"ljharb CJS has a different notion of exports than ES modules; I don't think \"CJS only has a default export\" is really a meaningful claim","msgtype":"m.text"},"ts":1591199324000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"default export\" is a concept which makes sense in the context of ES modules, not CJS modules","msgtype":"m.text"},"ts":1591199343000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i mean, CJS only exports a single value","msgtype":"m.text"},"ts":1591199345000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but sure, fair","msgtype":"m.text"},"ts":1591199350000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah, that claim I can agree with","msgtype":"m.text"},"ts":1591199364000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(also the concept of default exports in ESM was added for the purposes of matching CJS, iirc)","msgtype":"m.text"},"ts":1591199389000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah, that was the original sin","msgtype":"m.text"},"ts":1591199414000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that is certainly one take","msgtype":"m.text"},"ts":1591199422000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"bradleymeck: what would you think about `export get function whatever() {}`","msgtype":"m.text"},"ts":1591207156000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so you could wrap live bindings","msgtype":"m.text"},"ts":1591207160000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ew","msgtype":"m.text"},"ts":1591207173000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"we talked about it previously","msgtype":"m.text"},"ts":1591207180000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i have no strong feelings but replacing it gets weird, would it always call that identifier if accessed or would that be a \"non-configurable\" export?","msgtype":"m.text"},"ts":1591207232000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"right now fn decls can be replaced","msgtype":"m.text"},"ts":1591207239000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that would expose a new ability tho","msgtype":"m.text"},"ts":1591207253000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"currently you can't replace a live binding as a *response* to someone importing it","msgtype":"m.text"},"ts":1591207267000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"iow with a getter it seems like you'd be able to count imports","msgtype":"m.text"},"ts":1591207295000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"not imports, accesses","msgtype":"m.text"},"ts":1591207326000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"ah ok so `import { whatever }` wouldn't trigger it, but referencing `whatever` would","msgtype":"m.text"},"ts":1591207351000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ok so then that seems even worse :-)","msgtype":"m.text"},"ts":1591207356000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"you can't do that on variables now","msgtype":"m.text"},"ts":1591207366000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i think any useful abstraction here, not just `export get`, would have that","msgtype":"m.text"},"ts":1591207367000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"or you would have to be aware of changes within the module you're wrapping","msgtype":"m.text"},"ts":1591207409000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Object.observe lol","msgtype":"m.text"},"ts":1591207419000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"yeah that's terrible","msgtype":"m.text"},"ts":1591207799000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"local references should not cause side effects","msgtype":"m.text"},"ts":1591207809000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"strongly affirmed","msgtype":"m.text"},"ts":1591207811000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"those reasons are also applyable for falsy evaluation of document.all. 1. it's increasing engine maintaining cost; 2. security problems happened for this behavior","msgtype":"m.text"},"ts":1591207875000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"IMO if we can remove this big feature from the language, we should also remove document.all == false","msgtype":"m.text"},"ts":1591207908000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"jackworks: i think to change anything about document.all you'd have to prove it was web compatible to do so","msgtype":"m.text"},"ts":1591207952000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it's even smaller and won't break much sites as restring subclass ability","msgtype":"m.text"},"ts":1591207966000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"yeah, we can collect a list of classic sites that using document.all == false and no longer maintaining, then only let document.all == false on those sites","msgtype":"m.text"},"ts":1591208022000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"jackworks: browsers have refused to do that in the past","msgtype":"m.text"},"ts":1591208045000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but you could certainly ask :-)","msgtype":"m.text"},"ts":1591208063000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"is there a good reason for that? 🤔","msgtype":"m.text"},"ts":1591208078000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"I have to say I think [[IsHTMLDDA]] is poisoning the spec text","msgtype":"m.text"},"ts":1591208170000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"priority of constituencies","msgtype":"m.text"},"ts":1591208178000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"(https://www.w3.org/TR/html-design-principles/#priority-of-constituencies)","msgtype":"m.text"},"ts":1591208202000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"^ that. the spec text can be as ugly as it needs to be to ensure things work properly for users","msgtype":"m.text"},"ts":1591208205000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"we couldn't get rid of it but we *could* give it a passive-aggressive name :p","msgtype":"m.text"},"ts":1591208225000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"hence IsHTMLDDA","msgtype":"m.text"},"ts":1591208237000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"MISTAKESWEREMADEDDA","msgtype":"m.text"},"ts":1591208262000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"can leave this [[IsHTMLDDA]] extension in the HTML spec since only HTML is using it. and only exact 1 object has this internal slot","msgtype":"m.text"},"ts":1591208265000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"jackworks: the reason it was added to the JS spec is to remove the willful violation from HTML","msgtype":"m.text"},"ts":1591208285000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah it used to be in the html spec","msgtype":"m.text"},"ts":1591208296000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jackworks: we can't remove the slot from JS without HTML having to restore the willful violation in equality semantics","msgtype":"m.text"},"ts":1591208297000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"> you'd have to prove it was web compatible to do so; Yes, it should be proved to be safe, but how? I can't access telemetry data from Chrome or Firefox afterall.","msgtype":"m.text"},"ts":1591208381000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"you'd have to make the case to one or more browsers to ship counters","msgtype":"m.text"},"ts":1591208402000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"[[IsHTML_document.all]] lol","msgtype":"m.text"},"ts":1591208483000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"that's what we have already yes","msgtype":"m.text"},"ts":1591208493000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"jackworks yeah there is zero chance removing document.all would be web-compat","msgtype":"m.text"},"ts":1591208643000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and shipping the list of sites where it would work would bloat browsers by at least megabytes, probably more","msgtype":"m.text"},"ts":1591208658000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"jackworks you could ask Chrome or Firefox to explore it","msgtype":"m.text"},"ts":1591208690000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"> there is zero chance removing ... would be web-compat \\n yes, and this argument also works for the builtin subclass restriction","msgtype":"m.text"},"ts":1591208751000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"jackworks: except there's tons of sites that use document.all from the olden days","msgtype":"m.text"},"ts":1591208786000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"jackworks I don't think that's actually true","msgtype":"m.text"},"ts":1591208797000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"there's unlikely to be many, or even any, that have shipped subclassing in the last 5 years","msgtype":"m.text"},"ts":1591208800000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it is an emperical question","msgtype":"m.text"},"ts":1591208801000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"you can make a custom build of a browser that does not have built-in subclassing, and see what breaks, and do the same for document.all","msgtype":"m.text"},"ts":1591208814000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(less than 5; `class` hasn't been web compatible for all 5 years)","msgtype":"m.text"},"ts":1591208821000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"and it is my strong belief that far more websites will beak in the latter case","msgtype":"m.text"},"ts":1591208823000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"don't break the space jam movie website","msgtype":"m.text"},"ts":1591208836000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"jackworks: we are actively crawling the sites like those in https://www.chromestatus.com/metrics/feature/timeline/popularity and via http-archive audits to trap any actual usage of species","msgtype":"m.text"},"ts":1591208946000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"and removing it doesn't actually break things / things are using @@species in ways that break the actual usage of it","msgtype":"m.text"},"ts":1591208986000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":" `class` hasn't been web compatible for all 5 years \\n This can convince me, thanks @ljharb , but I'm still feeling not good in the inconsistency of treating delete IsHTMLDDA or subclassing builtins","msgtype":"m.text"},"ts":1591208994000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"so thats why it doesn't appear to be so breaking","msgtype":"m.text"},"ts":1591208999000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"we can't remove every terrible thing, alas","msgtype":"m.text"},"ts":1591209019000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but if we investigate and discover we can, great","msgtype":"m.text"},"ts":1591209028000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"document.all is something like 20% of all sites https://www.chromestatus.com/metrics/feature/timeline/popularity/83 vs Array[@@species] which is at 0.006%","msgtype":"m.text"},"ts":1591209064000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"that's surprising me, why over 25% sites are using document.all?","msgtype":"m.text"},"ts":1591209100000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"who knows","msgtype":"m.text"},"ts":1591209106000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i'd bet more than 25% of all sites have barely been touched in 20 years","msgtype":"m.text"},"ts":1591209136000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"is it hiding in a popular library like mootools 🤔","msgtype":"m.text"},"ts":1591209152000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"i'm sure it's hiding in old versions of many popular libraries","msgtype":"m.text"},"ts":1591209165000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i used it in the mid-2000s as part of browser detection code","msgtype":"m.text"},"ts":1591209176000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: yea but even then if they are accessed this year does it matter?","msgtype":"m.text"},"ts":1591209212000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"my passive aggression comment wasn't completely a joke btw","msgtype":"m.text"},"ts":1591209228000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"bradleymeck: yes","msgtype":"m.text"},"ts":1591209248000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"if we wanted to *justify* the thing's existence we'd've called it MasqueradesAsUndefined or something","msgtype":"m.text"},"ts":1591209257000,"senderName":"rkirsling","senderId":"rkirsling@irc"},
{"content":{"body":"curious, I thought most of the users are accessing modern sites like youtube twitter etc so the usage won't be too high","msgtype":"m.text"},"ts":1591209336000,"senderName":"jackworks","senderId":"jackworks@irc"},
{"content":{"body":"jackworks: iirc it's not about usage, it's about sites","msgtype":"m.text"},"ts":1591209446000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"or maybe both, i'm not sure how browsers analyze the data","msgtype":"m.text"},"ts":1591209458000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"chrome web stats is page loads","msgtype":"m.text"},"ts":1591209664000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"so more popular ones are counted more heavily","msgtype":"m.text"},"ts":1591209669000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah ok, gtk","msgtype":"m.text"},"ts":1591209728000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"> if we investigate and discover we can, great \\n that make sense 🎉","msgtype":"m.text"},"ts":1591209822000,"senderName":"jackworks","senderId":"jackworks@irc"}
]