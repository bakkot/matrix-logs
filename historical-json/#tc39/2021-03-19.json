[
{"content":{"body":"Bakkot, Random thought. There's no mechanism to reference the current \"returned\" expression in the do expression, right? const a = do { 1; 2; console.log(output 2); 3; 4; } I'm not asking for it. Has this come up?","msgtype":"m.text"},"ts":1616113769000,"senderName":"Sirisian|Work","senderId":"Sirisian|Work@irc"},
{"content":{"body":"Correct, and no, it hasn't come up","msgtype":"m.text"},"ts":1616113788000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Sirisian|Work: there is no \"current\" until the last thing happens tho - and console.logging it would cause the \"returned\" value to be `undefined`","msgtype":"m.text"},"ts":1616126138000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Oh right. Didn't consider that.","msgtype":"m.text"},"ts":1616172148000,"senderName":"Sirisian|Work","senderId":"Sirisian|Work@irc"},
{"content":{"body":"Sirisian|Work: you could nest do expressions for what you want, i think","msgtype":"m.text"},"ts":1616172215000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"Was thinking of stuff like for (let i = 0; i < 5; ++i) i; examples btw. Mind was wandering thinking of \"what else does this allow\".","msgtype":"m.text"},"ts":1616172240000,"senderName":"Sirisian|Work","senderId":"Sirisian|Work@irc"}
]